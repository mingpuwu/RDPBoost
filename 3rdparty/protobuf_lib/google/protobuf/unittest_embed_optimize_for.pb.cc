// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/unittest_embed_optimize_for.proto
// Protobuf C++ Version: 5.29.0-dev

#include "google/protobuf/unittest_embed_optimize_for.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf_unittest {

inline constexpr TestEmbedOptimizedForSize::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_message_{},
        optional_message_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestEmbedOptimizedForSize::TestEmbedOptimizedForSize(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestEmbedOptimizedForSizeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEmbedOptimizedForSizeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEmbedOptimizedForSizeDefaultTypeInternal() {}
  union {
    TestEmbedOptimizedForSize _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEmbedOptimizedForSizeDefaultTypeInternal _TestEmbedOptimizedForSize_default_instance_;
}  // namespace protobuf_unittest
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto = nullptr;
const ::uint32_t
    TableStruct_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmbedOptimizedForSize, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmbedOptimizedForSize, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmbedOptimizedForSize, _impl_.optional_message_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmbedOptimizedForSize, _impl_.repeated_message_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::protobuf_unittest::TestEmbedOptimizedForSize)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf_unittest::_TestEmbedOptimizedForSize_default_instance_._instance,
};
const char descriptor_table_protodef_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n1google/protobuf/unittest_embed_optimiz"
    "e_for.proto\022\021protobuf_unittest\032+google/p"
    "rotobuf/unittest_optimize_for.proto\"\241\001\n\031"
    "TestEmbedOptimizedForSize\022A\n\020optional_me"
    "ssage\030\001 \001(\0132\'.protobuf_unittest.TestOpti"
    "mizedForSize\022A\n\020repeated_message\030\002 \003(\0132\'"
    ".protobuf_unittest.TestOptimizedForSizeB"
    "\002H\001"
};
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2funittest_5foptimize_5ffor_2eproto,
};
static ::absl::once_flag descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto = {
    false,
    false,
    283,
    descriptor_table_protodef_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto,
    "google/protobuf/unittest_embed_optimize_for.proto",
    &descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_once,
    descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto::offsets,
    file_level_enum_descriptors_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto,
};
namespace protobuf_unittest {
// ===================================================================

class TestEmbedOptimizedForSize::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestEmbedOptimizedForSize>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestEmbedOptimizedForSize, _impl_._has_bits_);
};

void TestEmbedOptimizedForSize::clear_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_message_ != nullptr) _impl_.optional_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TestEmbedOptimizedForSize::clear_repeated_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_message_.Clear();
}
TestEmbedOptimizedForSize::TestEmbedOptimizedForSize(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEmbedOptimizedForSize)
}
inline PROTOBUF_NDEBUG_INLINE TestEmbedOptimizedForSize::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf_unittest::TestEmbedOptimizedForSize& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repeated_message_{visibility, arena, from.repeated_message_} {}

TestEmbedOptimizedForSize::TestEmbedOptimizedForSize(
    ::google::protobuf::Arena* arena,
    const TestEmbedOptimizedForSize& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestEmbedOptimizedForSize* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optional_message_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestOptimizedForSize>(
                              arena, *from._impl_.optional_message_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmbedOptimizedForSize)
}
inline PROTOBUF_NDEBUG_INLINE TestEmbedOptimizedForSize::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repeated_message_{visibility, arena} {}

inline void TestEmbedOptimizedForSize::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.optional_message_ = {};
}
TestEmbedOptimizedForSize::~TestEmbedOptimizedForSize() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmbedOptimizedForSize)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestEmbedOptimizedForSize::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.optional_message_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestEmbedOptimizedForSize::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestEmbedOptimizedForSize_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            TestEmbedOptimizedForSize::IsInitializedImpl,
            &TestEmbedOptimizedForSize::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestEmbedOptimizedForSize>(),
            ::google::protobuf::Message::GetNewImpl<TestEmbedOptimizedForSize>(),
            ::google::protobuf::Message::GetClearImpl<TestEmbedOptimizedForSize>(), &TestEmbedOptimizedForSize::ByteSizeLong,
                &TestEmbedOptimizedForSize::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestEmbedOptimizedForSize, _impl_._cached_size_),
            false,
        },
        &TestEmbedOptimizedForSize::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestEmbedOptimizedForSize::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> TestEmbedOptimizedForSize::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestEmbedOptimizedForSize, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestEmbedOptimizedForSize>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TestEmbedOptimizedForSize, _impl_.repeated_message_)}},
    // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestEmbedOptimizedForSize, _impl_.optional_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
    {PROTOBUF_FIELD_OFFSET(TestEmbedOptimizedForSize, _impl_.optional_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
    {PROTOBUF_FIELD_OFFSET(TestEmbedOptimizedForSize, _impl_.repeated_message_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestOptimizedForSize>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestOptimizedForSize>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TestEmbedOptimizedForSize::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmbedOptimizedForSize)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_message_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_message_ != nullptr);
    _impl_.optional_message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestEmbedOptimizedForSize::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestEmbedOptimizedForSize& this_ = static_cast<const TestEmbedOptimizedForSize&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestEmbedOptimizedForSize::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestEmbedOptimizedForSize& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmbedOptimizedForSize)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.optional_message_, this_._impl_.optional_message_->GetCachedSize(), target,
                stream);
          }

          // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_repeated_message_size());
               i < n; i++) {
            const auto& repfield = this_._internal_repeated_message().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmbedOptimizedForSize)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestEmbedOptimizedForSize::ByteSizeLong(const MessageLite& base) {
          const TestEmbedOptimizedForSize& this_ = static_cast<const TestEmbedOptimizedForSize&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestEmbedOptimizedForSize::ByteSizeLong() const {
          const TestEmbedOptimizedForSize& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmbedOptimizedForSize)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
             {
              total_size += 1UL * this_._internal_repeated_message_size();
              for (const auto& msg : this_._internal_repeated_message()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_message_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestEmbedOptimizedForSize::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestEmbedOptimizedForSize*>(&to_msg);
  auto& from = static_cast<const TestEmbedOptimizedForSize&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmbedOptimizedForSize)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_message()->MergeFrom(
      from._internal_repeated_message());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.optional_message_ != nullptr);
    if (_this->_impl_.optional_message_ == nullptr) {
      _this->_impl_.optional_message_ =
          ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestOptimizedForSize>(arena, *from._impl_.optional_message_);
    } else {
      _this->_impl_.optional_message_->MergeFrom(*from._impl_.optional_message_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestEmbedOptimizedForSize::CopyFrom(const TestEmbedOptimizedForSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmbedOptimizedForSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEmbedOptimizedForSize::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const TestEmbedOptimizedForSize&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_repeated_message()))
    return false;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.optional_message_->IsInitialized()) return false;
  }
  return true;
}

void TestEmbedOptimizedForSize::InternalSwap(TestEmbedOptimizedForSize* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_message_.InternalSwap(&other->_impl_.repeated_message_);
  swap(_impl_.optional_message_, other->_impl_.optional_message_);
}

::google::protobuf::Metadata TestEmbedOptimizedForSize::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
