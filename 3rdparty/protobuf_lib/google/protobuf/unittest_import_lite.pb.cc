// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/unittest_import_lite.proto
// Protobuf C++ Version: 5.29.0-dev

#include "google/protobuf/unittest_import_lite.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf_unittest_import {

inline constexpr ImportMessageLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        d_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ImportMessageLite::ImportMessageLite(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImportMessageLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImportMessageLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImportMessageLiteDefaultTypeInternal() {}
  union {
    ImportMessageLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImportMessageLiteDefaultTypeInternal _ImportMessageLite_default_instance_;
}  // namespace protobuf_unittest_import
namespace protobuf_unittest_import {
PROTOBUF_CONSTINIT const uint32_t ImportEnumLite_internal_data_[] = {
    196615u, 0u, };
bool ImportEnumLite_IsValid(int value) {
  return 7 <= value && value <= 9;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    ImportEnumLite_strings[3] = {};

static const char ImportEnumLite_names[] = {
    "IMPORT_LITE_BAR"
    "IMPORT_LITE_BAZ"
    "IMPORT_LITE_FOO"
};

static const ::google::protobuf::internal::EnumEntry ImportEnumLite_entries[] =
    {
        {{&ImportEnumLite_names[0], 15}, 8},
        {{&ImportEnumLite_names[15], 15}, 9},
        {{&ImportEnumLite_names[30], 15}, 7},
};

static const int ImportEnumLite_entries_by_number[] = {
    2,  // 7 -> IMPORT_LITE_FOO
    0,  // 8 -> IMPORT_LITE_BAR
    1,  // 9 -> IMPORT_LITE_BAZ
};

const std::string& ImportEnumLite_Name(ImportEnumLite value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          ImportEnumLite_entries, ImportEnumLite_entries_by_number,
          3, ImportEnumLite_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      ImportEnumLite_entries, ImportEnumLite_entries_by_number, 3,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : ImportEnumLite_strings[idx].get();
}

bool ImportEnumLite_Parse(absl::string_view name, ImportEnumLite* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      ImportEnumLite_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<ImportEnumLite>(int_value);
  }
  return success;
}
// ===================================================================

class ImportMessageLite::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ImportMessageLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImportMessageLite, _impl_._has_bits_);
};

ImportMessageLite::ImportMessageLite(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest_import.ImportMessageLite)
}
ImportMessageLite::ImportMessageLite(
    ::google::protobuf::Arena* arena, const ImportMessageLite& from)
    : ImportMessageLite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ImportMessageLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ImportMessageLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.d_ = {};
}
ImportMessageLite::~ImportMessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest_import.ImportMessageLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void ImportMessageLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataLite<43>
    ImportMessageLite::_class_data_ = {
        {
            &_ImportMessageLite_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ImportMessageLite::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::MessageLite::GetDeleteImpl<ImportMessageLite>(),
            ::google::protobuf::MessageLite::GetNewImpl<ImportMessageLite>(),
            ::google::protobuf::MessageLite::GetClearImpl<ImportMessageLite>(), &ImportMessageLite::ByteSizeLong,
                &ImportMessageLite::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ImportMessageLite, _impl_._cached_size_),
            true,
        },
        "protobuf_unittest_import.ImportMessageLite",
};
const ::google::protobuf::MessageLite::ClassData* ImportMessageLite::GetClassData() const {
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ImportMessageLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImportMessageLite, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest_import::ImportMessageLite>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 d = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ImportMessageLite, _impl_.d_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 d = 1;
    {PROTOBUF_FIELD_OFFSET(ImportMessageLite, _impl_.d_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ImportMessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest_import.ImportMessageLite)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.d_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ImportMessageLite::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ImportMessageLite& this_ = static_cast<const ImportMessageLite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ImportMessageLite::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ImportMessageLite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest_import.ImportMessageLite)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // int32 d = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_d(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target = stream->WriteRaw(
                this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
                static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest_import.ImportMessageLite)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ImportMessageLite::ByteSizeLong(const MessageLite& base) {
          const ImportMessageLite& this_ = static_cast<const ImportMessageLite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ImportMessageLite::ByteSizeLong() const {
          const ImportMessageLite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest_import.ImportMessageLite)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 d = 1;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_d());
            }
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
          }
          this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
          return total_size;
        }

void ImportMessageLite::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImportMessageLite*>(&to_msg);
  auto& from = static_cast<const ImportMessageLite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest_import.ImportMessageLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.d_ = from._impl_.d_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ImportMessageLite::CopyFrom(const ImportMessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest_import.ImportMessageLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImportMessageLite::InternalSwap(ImportMessageLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.d_, other->_impl_.d_);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest_import
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
