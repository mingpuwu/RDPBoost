// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/map_lite_unittest.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5flite_5funittest_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5flite_5funittest_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_field_lite.h"
#include "google/protobuf/generated_enum_util.h"
#include "google/protobuf/unittest_lite.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fmap_5flite_5funittest_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto {
  static const ::uint32_t offsets[];
};
namespace protobuf_unittest {
class ForeignMessageArenaLite;
struct ForeignMessageArenaLiteDefaultTypeInternal;
extern ForeignMessageArenaLiteDefaultTypeInternal _ForeignMessageArenaLite_default_instance_;
class TestArenaMapLite;
struct TestArenaMapLiteDefaultTypeInternal;
extern TestArenaMapLiteDefaultTypeInternal _TestArenaMapLite_default_instance_;
class TestEnumMapLite;
struct TestEnumMapLiteDefaultTypeInternal;
extern TestEnumMapLiteDefaultTypeInternal _TestEnumMapLite_default_instance_;
class TestEnumMapPlusExtraLite;
struct TestEnumMapPlusExtraLiteDefaultTypeInternal;
extern TestEnumMapPlusExtraLiteDefaultTypeInternal _TestEnumMapPlusExtraLite_default_instance_;
class TestMapLite;
struct TestMapLiteDefaultTypeInternal;
extern TestMapLiteDefaultTypeInternal _TestMapLite_default_instance_;
class TestMessageMapLite;
struct TestMessageMapLiteDefaultTypeInternal;
extern TestMessageMapLiteDefaultTypeInternal _TestMessageMapLite_default_instance_;
class TestRequiredLite;
struct TestRequiredLiteDefaultTypeInternal;
extern TestRequiredLiteDefaultTypeInternal _TestRequiredLite_default_instance_;
class TestRequiredMessageMapLite;
struct TestRequiredMessageMapLiteDefaultTypeInternal;
extern TestRequiredMessageMapLiteDefaultTypeInternal _TestRequiredMessageMapLite_default_instance_;
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf_unittest {
enum Proto2MapEnumLite : int {
  PROTO2_MAP_ENUM_FOO_LITE = 0,
  PROTO2_MAP_ENUM_BAR_LITE = 1,
  PROTO2_MAP_ENUM_BAZ_LITE = 2,
};

bool Proto2MapEnumLite_IsValid(int value);
extern const uint32_t Proto2MapEnumLite_internal_data_[];
constexpr Proto2MapEnumLite Proto2MapEnumLite_MIN = static_cast<Proto2MapEnumLite>(0);
constexpr Proto2MapEnumLite Proto2MapEnumLite_MAX = static_cast<Proto2MapEnumLite>(2);
constexpr int Proto2MapEnumLite_ARRAYSIZE = 2 + 1;
const std::string& Proto2MapEnumLite_Name(Proto2MapEnumLite value);
template <typename T>
const std::string& Proto2MapEnumLite_Name(T value) {
  static_assert(std::is_same<T, Proto2MapEnumLite>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Proto2MapEnumLite_Name().");
  return Proto2MapEnumLite_Name(static_cast<Proto2MapEnumLite>(value));
}
bool Proto2MapEnumLite_Parse(absl::string_view name, Proto2MapEnumLite* value);
enum Proto2MapEnumPlusExtraLite : int {
  E_PROTO2_MAP_ENUM_FOO_LITE = 0,
  E_PROTO2_MAP_ENUM_BAR_LITE = 1,
  E_PROTO2_MAP_ENUM_BAZ_LITE = 2,
  E_PROTO2_MAP_ENUM_EXTRA_LITE = 3,
};

bool Proto2MapEnumPlusExtraLite_IsValid(int value);
extern const uint32_t Proto2MapEnumPlusExtraLite_internal_data_[];
constexpr Proto2MapEnumPlusExtraLite Proto2MapEnumPlusExtraLite_MIN = static_cast<Proto2MapEnumPlusExtraLite>(0);
constexpr Proto2MapEnumPlusExtraLite Proto2MapEnumPlusExtraLite_MAX = static_cast<Proto2MapEnumPlusExtraLite>(3);
constexpr int Proto2MapEnumPlusExtraLite_ARRAYSIZE = 3 + 1;
const std::string& Proto2MapEnumPlusExtraLite_Name(Proto2MapEnumPlusExtraLite value);
template <typename T>
const std::string& Proto2MapEnumPlusExtraLite_Name(T value) {
  static_assert(std::is_same<T, Proto2MapEnumPlusExtraLite>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Proto2MapEnumPlusExtraLite_Name().");
  return Proto2MapEnumPlusExtraLite_Name(static_cast<Proto2MapEnumPlusExtraLite>(value));
}
bool Proto2MapEnumPlusExtraLite_Parse(absl::string_view name, Proto2MapEnumPlusExtraLite* value);
enum MapEnumLite : int {
  MAP_ENUM_FOO_LITE = 0,
  MAP_ENUM_BAR_LITE = 1,
  MAP_ENUM_BAZ_LITE = 2,
};

bool MapEnumLite_IsValid(int value);
extern const uint32_t MapEnumLite_internal_data_[];
constexpr MapEnumLite MapEnumLite_MIN = static_cast<MapEnumLite>(0);
constexpr MapEnumLite MapEnumLite_MAX = static_cast<MapEnumLite>(2);
constexpr int MapEnumLite_ARRAYSIZE = 2 + 1;
const std::string& MapEnumLite_Name(MapEnumLite value);
template <typename T>
const std::string& MapEnumLite_Name(T value) {
  static_assert(std::is_same<T, MapEnumLite>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MapEnumLite_Name().");
  return MapEnumLite_Name(static_cast<MapEnumLite>(value));
}
bool MapEnumLite_Parse(absl::string_view name, MapEnumLite* value);

// ===================================================================


// -------------------------------------------------------------------

class TestRequiredLite final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestRequiredLite) */ {
 public:
  inline TestRequiredLite() : TestRequiredLite(nullptr) {}
  ~TestRequiredLite() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredLite(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredLite(const TestRequiredLite& from) : TestRequiredLite(nullptr, from) {}
  inline TestRequiredLite(TestRequiredLite&& from) noexcept
      : TestRequiredLite(nullptr, std::move(from)) {}
  inline TestRequiredLite& operator=(const TestRequiredLite& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredLite& operator=(TestRequiredLite&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TestRequiredLite& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredLite* internal_default_instance() {
    return reinterpret_cast<const TestRequiredLite*>(
        &_TestRequiredLite_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(TestRequiredLite& a, TestRequiredLite& b) { a.Swap(&b); }
  inline void Swap(TestRequiredLite* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredLite* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredLite* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::MessageLite::DefaultConstruct<TestRequiredLite>(arena);
  }
  void CopyFrom(const TestRequiredLite& from);
  void MergeFrom(const TestRequiredLite& from) { TestRequiredLite::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredLite* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestRequiredLite"; }

 protected:
  explicit TestRequiredLite(::google::protobuf::Arena* arena);
  TestRequiredLite(::google::protobuf::Arena* arena, const TestRequiredLite& from);
  TestRequiredLite(::google::protobuf::Arena* arena, TestRequiredLite&& from) noexcept
      : TestRequiredLite(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::MessageLite::ClassDataLite<35> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
    kCFieldNumber = 3,
  };
  // int32 a = 1 [features = {
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // int32 b = 2 [features = {
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // int32 c = 3 [features = {
  bool has_c() const;
  void clear_c() ;
  ::int32_t c() const;
  void set_c(::int32_t value);

  private:
  ::int32_t _internal_c() const;
  void _internal_set_c(::int32_t value);

  public:
  static const int kSingleFieldNumber = 1000;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::protobuf_unittest::TestAllExtensionsLite, ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestRequiredLite >, 11,
      false>
      single;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRequiredLite)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredLite_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredLite& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    ::int32_t b_;
    ::int32_t c_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto;
};
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

class ForeignMessageArenaLite final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:protobuf_unittest.ForeignMessageArenaLite) */ {
 public:
  inline ForeignMessageArenaLite() : ForeignMessageArenaLite(nullptr) {}
  ~ForeignMessageArenaLite() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ForeignMessageArenaLite(
      ::google::protobuf::internal::ConstantInitialized);

  inline ForeignMessageArenaLite(const ForeignMessageArenaLite& from) : ForeignMessageArenaLite(nullptr, from) {}
  inline ForeignMessageArenaLite(ForeignMessageArenaLite&& from) noexcept
      : ForeignMessageArenaLite(nullptr, std::move(from)) {}
  inline ForeignMessageArenaLite& operator=(const ForeignMessageArenaLite& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForeignMessageArenaLite& operator=(ForeignMessageArenaLite&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const ForeignMessageArenaLite& default_instance() {
    return *internal_default_instance();
  }
  static inline const ForeignMessageArenaLite* internal_default_instance() {
    return reinterpret_cast<const ForeignMessageArenaLite*>(
        &_ForeignMessageArenaLite_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(ForeignMessageArenaLite& a, ForeignMessageArenaLite& b) { a.Swap(&b); }
  inline void Swap(ForeignMessageArenaLite* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForeignMessageArenaLite* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForeignMessageArenaLite* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::MessageLite::DefaultConstruct<ForeignMessageArenaLite>(arena);
  }
  void CopyFrom(const ForeignMessageArenaLite& from);
  void MergeFrom(const ForeignMessageArenaLite& from) { ForeignMessageArenaLite::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ForeignMessageArenaLite* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.ForeignMessageArenaLite"; }

 protected:
  explicit ForeignMessageArenaLite(::google::protobuf::Arena* arena);
  ForeignMessageArenaLite(::google::protobuf::Arena* arena, const ForeignMessageArenaLite& from);
  ForeignMessageArenaLite(::google::protobuf::Arena* arena, ForeignMessageArenaLite&& from) noexcept
      : ForeignMessageArenaLite(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::MessageLite::ClassDataLite<42> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCFieldNumber = 1,
  };
  // int32 c = 1;
  bool has_c() const;
  void clear_c() ;
  ::int32_t c() const;
  void set_c(::int32_t value);

  private:
  ::int32_t _internal_c() const;
  void _internal_set_c(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.ForeignMessageArenaLite)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ForeignMessageArenaLite_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ForeignMessageArenaLite& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t c_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto;
};
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

class TestEnumMapPlusExtraLite final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestEnumMapPlusExtraLite) */ {
 public:
  inline TestEnumMapPlusExtraLite() : TestEnumMapPlusExtraLite(nullptr) {}
  ~TestEnumMapPlusExtraLite() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestEnumMapPlusExtraLite(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestEnumMapPlusExtraLite(const TestEnumMapPlusExtraLite& from) : TestEnumMapPlusExtraLite(nullptr, from) {}
  inline TestEnumMapPlusExtraLite(TestEnumMapPlusExtraLite&& from) noexcept
      : TestEnumMapPlusExtraLite(nullptr, std::move(from)) {}
  inline TestEnumMapPlusExtraLite& operator=(const TestEnumMapPlusExtraLite& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEnumMapPlusExtraLite& operator=(TestEnumMapPlusExtraLite&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TestEnumMapPlusExtraLite& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestEnumMapPlusExtraLite* internal_default_instance() {
    return reinterpret_cast<const TestEnumMapPlusExtraLite*>(
        &_TestEnumMapPlusExtraLite_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(TestEnumMapPlusExtraLite& a, TestEnumMapPlusExtraLite& b) { a.Swap(&b); }
  inline void Swap(TestEnumMapPlusExtraLite* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEnumMapPlusExtraLite* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestEnumMapPlusExtraLite* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::MessageLite::DefaultConstruct<TestEnumMapPlusExtraLite>(arena);
  }
  void CopyFrom(const TestEnumMapPlusExtraLite& from);
  void MergeFrom(const TestEnumMapPlusExtraLite& from) { TestEnumMapPlusExtraLite::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestEnumMapPlusExtraLite* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestEnumMapPlusExtraLite"; }

 protected:
  explicit TestEnumMapPlusExtraLite(::google::protobuf::Arena* arena);
  TestEnumMapPlusExtraLite(::google::protobuf::Arena* arena, const TestEnumMapPlusExtraLite& from);
  TestEnumMapPlusExtraLite(::google::protobuf::Arena* arena, TestEnumMapPlusExtraLite&& from) noexcept
      : TestEnumMapPlusExtraLite(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::MessageLite::ClassDataLite<43> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKnownMapFieldFieldNumber = 101,
    kUnknownMapFieldFieldNumber = 102,
  };
  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> known_map_field = 101;
  int known_map_field_size() const;
  private:
  int _internal_known_map_field_size() const;

  public:
  void clear_known_map_field() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>& known_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>* mutable_known_map_field();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>& _internal_known_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>* _internal_mutable_known_map_field();

  public:
  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> unknown_map_field = 102;
  int unknown_map_field_size() const;
  private:
  int _internal_unknown_map_field_size() const;

  public:
  void clear_unknown_map_field() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>& unknown_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>* mutable_unknown_map_field();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>& _internal_unknown_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>* _internal_mutable_unknown_map_field();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestEnumMapPlusExtraLite)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 4,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestEnumMapPlusExtraLite_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestEnumMapPlusExtraLite& from_msg);
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite> known_map_field_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite> unknown_map_field_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestEnumMapLite final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestEnumMapLite) */ {
 public:
  inline TestEnumMapLite() : TestEnumMapLite(nullptr) {}
  ~TestEnumMapLite() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestEnumMapLite(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestEnumMapLite(const TestEnumMapLite& from) : TestEnumMapLite(nullptr, from) {}
  inline TestEnumMapLite(TestEnumMapLite&& from) noexcept
      : TestEnumMapLite(nullptr, std::move(from)) {}
  inline TestEnumMapLite& operator=(const TestEnumMapLite& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEnumMapLite& operator=(TestEnumMapLite&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TestEnumMapLite& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestEnumMapLite* internal_default_instance() {
    return reinterpret_cast<const TestEnumMapLite*>(
        &_TestEnumMapLite_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(TestEnumMapLite& a, TestEnumMapLite& b) { a.Swap(&b); }
  inline void Swap(TestEnumMapLite* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEnumMapLite* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestEnumMapLite* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::MessageLite::DefaultConstruct<TestEnumMapLite>(arena);
  }
  void CopyFrom(const TestEnumMapLite& from);
  void MergeFrom(const TestEnumMapLite& from) { TestEnumMapLite::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestEnumMapLite* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestEnumMapLite"; }

 protected:
  explicit TestEnumMapLite(::google::protobuf::Arena* arena);
  TestEnumMapLite(::google::protobuf::Arena* arena, const TestEnumMapLite& from);
  TestEnumMapLite(::google::protobuf::Arena* arena, TestEnumMapLite&& from) noexcept
      : TestEnumMapLite(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::MessageLite::ClassDataLite<34> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKnownMapFieldFieldNumber = 101,
    kUnknownMapFieldFieldNumber = 102,
  };
  // map<int32, .protobuf_unittest.Proto2MapEnumLite> known_map_field = 101;
  int known_map_field_size() const;
  private:
  int _internal_known_map_field_size() const;

  public:
  void clear_known_map_field() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>& known_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>* mutable_known_map_field();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>& _internal_known_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>* _internal_mutable_known_map_field();

  public:
  // map<int32, .protobuf_unittest.Proto2MapEnumLite> unknown_map_field = 102;
  int unknown_map_field_size() const;
  private:
  int _internal_unknown_map_field_size() const;

  public:
  void clear_unknown_map_field() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>& unknown_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>* mutable_unknown_map_field();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>& _internal_unknown_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>* _internal_mutable_unknown_map_field();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestEnumMapLite)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 4,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestEnumMapLite_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestEnumMapLite& from_msg);
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::Proto2MapEnumLite> known_map_field_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::Proto2MapEnumLite> unknown_map_field_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto;
};
// -------------------------------------------------------------------

// -------------------------------------------------------------------

class TestRequiredMessageMapLite final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestRequiredMessageMapLite) */ {
 public:
  inline TestRequiredMessageMapLite() : TestRequiredMessageMapLite(nullptr) {}
  ~TestRequiredMessageMapLite() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredMessageMapLite(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredMessageMapLite(const TestRequiredMessageMapLite& from) : TestRequiredMessageMapLite(nullptr, from) {}
  inline TestRequiredMessageMapLite(TestRequiredMessageMapLite&& from) noexcept
      : TestRequiredMessageMapLite(nullptr, std::move(from)) {}
  inline TestRequiredMessageMapLite& operator=(const TestRequiredMessageMapLite& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredMessageMapLite& operator=(TestRequiredMessageMapLite&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TestRequiredMessageMapLite& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredMessageMapLite* internal_default_instance() {
    return reinterpret_cast<const TestRequiredMessageMapLite*>(
        &_TestRequiredMessageMapLite_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(TestRequiredMessageMapLite& a, TestRequiredMessageMapLite& b) { a.Swap(&b); }
  inline void Swap(TestRequiredMessageMapLite* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredMessageMapLite* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredMessageMapLite* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::MessageLite::DefaultConstruct<TestRequiredMessageMapLite>(arena);
  }
  void CopyFrom(const TestRequiredMessageMapLite& from);
  void MergeFrom(const TestRequiredMessageMapLite& from) { TestRequiredMessageMapLite::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredMessageMapLite* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestRequiredMessageMapLite"; }

 protected:
  explicit TestRequiredMessageMapLite(::google::protobuf::Arena* arena);
  TestRequiredMessageMapLite(::google::protobuf::Arena* arena, const TestRequiredMessageMapLite& from);
  TestRequiredMessageMapLite(::google::protobuf::Arena* arena, TestRequiredMessageMapLite&& from) noexcept
      : TestRequiredMessageMapLite(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::MessageLite::ClassDataLite<45> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMapFieldFieldNumber = 1,
  };
  // map<int32, .protobuf_unittest.TestRequiredLite> map_field = 1;
  int map_field_size() const;
  private:
  int _internal_map_field_size() const;

  public:
  void clear_map_field() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>& map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>* mutable_map_field();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>& _internal_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>* _internal_mutable_map_field();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRequiredMessageMapLite)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredMessageMapLite_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredMessageMapLite& from_msg);
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::TestRequiredLite> map_field_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto;
};
// -------------------------------------------------------------------

// -------------------------------------------------------------------

class TestMapLite final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMapLite) */ {
 public:
  inline TestMapLite() : TestMapLite(nullptr) {}
  ~TestMapLite() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMapLite(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMapLite(const TestMapLite& from) : TestMapLite(nullptr, from) {}
  inline TestMapLite(TestMapLite&& from) noexcept
      : TestMapLite(nullptr, std::move(from)) {}
  inline TestMapLite& operator=(const TestMapLite& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMapLite& operator=(TestMapLite&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TestMapLite& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMapLite* internal_default_instance() {
    return reinterpret_cast<const TestMapLite*>(
        &_TestMapLite_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(TestMapLite& a, TestMapLite& b) { a.Swap(&b); }
  inline void Swap(TestMapLite* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMapLite* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMapLite* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::MessageLite::DefaultConstruct<TestMapLite>(arena);
  }
  void CopyFrom(const TestMapLite& from);
  void MergeFrom(const TestMapLite& from) { TestMapLite::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMapLite* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestMapLite"; }

 protected:
  explicit TestMapLite(::google::protobuf::Arena* arena);
  TestMapLite(::google::protobuf::Arena* arena, const TestMapLite& from);
  TestMapLite(::google::protobuf::Arena* arena, TestMapLite&& from) noexcept
      : TestMapLite(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::MessageLite::ClassDataLite<30> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMapInt32Int32FieldNumber = 1,
    kMapInt64Int64FieldNumber = 2,
    kMapUint32Uint32FieldNumber = 3,
    kMapUint64Uint64FieldNumber = 4,
    kMapSint32Sint32FieldNumber = 5,
    kMapSint64Sint64FieldNumber = 6,
    kMapFixed32Fixed32FieldNumber = 7,
    kMapFixed64Fixed64FieldNumber = 8,
    kMapSfixed32Sfixed32FieldNumber = 9,
    kMapSfixed64Sfixed64FieldNumber = 10,
    kMapInt32FloatFieldNumber = 11,
    kMapInt32DoubleFieldNumber = 12,
    kMapBoolBoolFieldNumber = 13,
    kMapStringStringFieldNumber = 14,
    kMapInt32BytesFieldNumber = 15,
    kMapInt32EnumFieldNumber = 16,
    kMapInt32ForeignMessageFieldNumber = 17,
    kTeboringFieldNumber = 18,
  };
  // map<int32, int32> map_int32_int32 = 1;
  int map_int32_int32_size() const;
  private:
  int _internal_map_int32_int32_size() const;

  public:
  void clear_map_int32_int32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_int32_int32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_int32_int32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_int32_int32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_int32_int32();

  public:
  // map<int64, int64> map_int64_int64 = 2;
  int map_int64_int64_size() const;
  private:
  int _internal_map_int64_int64_size() const;

  public:
  void clear_map_int64_int64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_int64_int64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_int64_int64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_int64_int64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_int64_int64();

  public:
  // map<uint32, uint32> map_uint32_uint32 = 3;
  int map_uint32_uint32_size() const;
  private:
  int _internal_map_uint32_uint32_size() const;

  public:
  void clear_map_uint32_uint32() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& map_uint32_uint32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_map_uint32_uint32();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_map_uint32_uint32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_map_uint32_uint32();

  public:
  // map<uint64, uint64> map_uint64_uint64 = 4;
  int map_uint64_uint64_size() const;
  private:
  int _internal_map_uint64_uint64_size() const;

  public:
  void clear_map_uint64_uint64() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& map_uint64_uint64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_map_uint64_uint64();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_map_uint64_uint64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_map_uint64_uint64();

  public:
  // map<sint32, sint32> map_sint32_sint32 = 5;
  int map_sint32_sint32_size() const;
  private:
  int _internal_map_sint32_sint32_size() const;

  public:
  void clear_map_sint32_sint32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_sint32_sint32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_sint32_sint32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_sint32_sint32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_sint32_sint32();

  public:
  // map<sint64, sint64> map_sint64_sint64 = 6;
  int map_sint64_sint64_size() const;
  private:
  int _internal_map_sint64_sint64_size() const;

  public:
  void clear_map_sint64_sint64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_sint64_sint64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_sint64_sint64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_sint64_sint64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_sint64_sint64();

  public:
  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  int map_fixed32_fixed32_size() const;
  private:
  int _internal_map_fixed32_fixed32_size() const;

  public:
  void clear_map_fixed32_fixed32() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& map_fixed32_fixed32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_map_fixed32_fixed32();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_map_fixed32_fixed32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_map_fixed32_fixed32();

  public:
  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  int map_fixed64_fixed64_size() const;
  private:
  int _internal_map_fixed64_fixed64_size() const;

  public:
  void clear_map_fixed64_fixed64() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& map_fixed64_fixed64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_map_fixed64_fixed64();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_map_fixed64_fixed64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_map_fixed64_fixed64();

  public:
  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  int map_sfixed32_sfixed32_size() const;
  private:
  int _internal_map_sfixed32_sfixed32_size() const;

  public:
  void clear_map_sfixed32_sfixed32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_sfixed32_sfixed32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_sfixed32_sfixed32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_sfixed32_sfixed32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_sfixed32_sfixed32();

  public:
  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  int map_sfixed64_sfixed64_size() const;
  private:
  int _internal_map_sfixed64_sfixed64_size() const;

  public:
  void clear_map_sfixed64_sfixed64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_sfixed64_sfixed64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_sfixed64_sfixed64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_sfixed64_sfixed64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_sfixed64_sfixed64();

  public:
  // map<int32, float> map_int32_float = 11;
  int map_int32_float_size() const;
  private:
  int _internal_map_int32_float_size() const;

  public:
  void clear_map_int32_float() ;
  const ::google::protobuf::Map<::int32_t, float>& map_int32_float() const;
  ::google::protobuf::Map<::int32_t, float>* mutable_map_int32_float();

  private:
  const ::google::protobuf::Map<::int32_t, float>& _internal_map_int32_float() const;
  ::google::protobuf::Map<::int32_t, float>* _internal_mutable_map_int32_float();

  public:
  // map<int32, double> map_int32_double = 12;
  int map_int32_double_size() const;
  private:
  int _internal_map_int32_double_size() const;

  public:
  void clear_map_int32_double() ;
  const ::google::protobuf::Map<::int32_t, double>& map_int32_double() const;
  ::google::protobuf::Map<::int32_t, double>* mutable_map_int32_double();

  private:
  const ::google::protobuf::Map<::int32_t, double>& _internal_map_int32_double() const;
  ::google::protobuf::Map<::int32_t, double>* _internal_mutable_map_int32_double();

  public:
  // map<bool, bool> map_bool_bool = 13;
  int map_bool_bool_size() const;
  private:
  int _internal_map_bool_bool_size() const;

  public:
  void clear_map_bool_bool() ;
  const ::google::protobuf::Map<bool, bool>& map_bool_bool() const;
  ::google::protobuf::Map<bool, bool>* mutable_map_bool_bool();

  private:
  const ::google::protobuf::Map<bool, bool>& _internal_map_bool_bool() const;
  ::google::protobuf::Map<bool, bool>* _internal_mutable_map_bool_bool();

  public:
  // map<string, string> map_string_string = 14;
  int map_string_string_size() const;
  private:
  int _internal_map_string_string_size() const;

  public:
  void clear_map_string_string() ;
  const ::google::protobuf::Map<std::string, std::string>& map_string_string() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_map_string_string();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_map_string_string() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_map_string_string();

  public:
  // map<int32, bytes> map_int32_bytes = 15;
  int map_int32_bytes_size() const;
  private:
  int _internal_map_int32_bytes_size() const;

  public:
  void clear_map_int32_bytes() ;
  const ::google::protobuf::Map<::int32_t, std::string>& map_int32_bytes() const;
  ::google::protobuf::Map<::int32_t, std::string>* mutable_map_int32_bytes();

  private:
  const ::google::protobuf::Map<::int32_t, std::string>& _internal_map_int32_bytes() const;
  ::google::protobuf::Map<::int32_t, std::string>* _internal_mutable_map_int32_bytes();

  public:
  // map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
  int map_int32_enum_size() const;
  private:
  int _internal_map_int32_enum_size() const;

  public:
  void clear_map_int32_enum() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>& map_int32_enum() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>* mutable_map_int32_enum();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>& _internal_map_int32_enum() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>* _internal_mutable_map_int32_enum();

  public:
  // map<int32, .protobuf_unittest.ForeignMessageLite> map_int32_foreign_message = 17;
  int map_int32_foreign_message_size() const;
  private:
  int _internal_map_int32_foreign_message_size() const;

  public:
  void clear_map_int32_foreign_message() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>& map_int32_foreign_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>* mutable_map_int32_foreign_message();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>& _internal_map_int32_foreign_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>* _internal_mutable_map_int32_foreign_message();

  public:
  // map<int32, int32> teboring = 18;
  int teboring_size() const;
  private:
  int _internal_teboring_size() const;

  public:
  void clear_teboring() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& teboring() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_teboring();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_teboring() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_teboring();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMapLite)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 18, 20,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMapLite_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMapLite& from_msg);
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::int32_t> map_int32_int32_;
    ::google::protobuf::internal::MapFieldLite<::int64_t, ::int64_t> map_int64_int64_;
    ::google::protobuf::internal::MapFieldLite<::uint32_t, ::uint32_t> map_uint32_uint32_;
    ::google::protobuf::internal::MapFieldLite<::uint64_t, ::uint64_t> map_uint64_uint64_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::int32_t> map_sint32_sint32_;
    ::google::protobuf::internal::MapFieldLite<::int64_t, ::int64_t> map_sint64_sint64_;
    ::google::protobuf::internal::MapFieldLite<::uint32_t, ::uint32_t> map_fixed32_fixed32_;
    ::google::protobuf::internal::MapFieldLite<::uint64_t, ::uint64_t> map_fixed64_fixed64_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::int32_t> map_sfixed32_sfixed32_;
    ::google::protobuf::internal::MapFieldLite<::int64_t, ::int64_t> map_sfixed64_sfixed64_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, float> map_int32_float_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, double> map_int32_double_;
    ::google::protobuf::internal::MapFieldLite<bool, bool> map_bool_bool_;
    ::google::protobuf::internal::MapFieldLite<std::string, std::string> map_string_string_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, std::string> map_int32_bytes_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::MapEnumLite> map_int32_enum_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::ForeignMessageLite> map_int32_foreign_message_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::int32_t> teboring_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMapLite final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestArenaMapLite) */ {
 public:
  inline TestArenaMapLite() : TestArenaMapLite(nullptr) {}
  ~TestArenaMapLite() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMapLite(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestArenaMapLite(const TestArenaMapLite& from) : TestArenaMapLite(nullptr, from) {}
  inline TestArenaMapLite(TestArenaMapLite&& from) noexcept
      : TestArenaMapLite(nullptr, std::move(from)) {}
  inline TestArenaMapLite& operator=(const TestArenaMapLite& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestArenaMapLite& operator=(TestArenaMapLite&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TestArenaMapLite& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestArenaMapLite* internal_default_instance() {
    return reinterpret_cast<const TestArenaMapLite*>(
        &_TestArenaMapLite_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(TestArenaMapLite& a, TestArenaMapLite& b) { a.Swap(&b); }
  inline void Swap(TestArenaMapLite* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestArenaMapLite* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestArenaMapLite* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::MessageLite::DefaultConstruct<TestArenaMapLite>(arena);
  }
  void CopyFrom(const TestArenaMapLite& from);
  void MergeFrom(const TestArenaMapLite& from) { TestArenaMapLite::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestArenaMapLite* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestArenaMapLite"; }

 protected:
  explicit TestArenaMapLite(::google::protobuf::Arena* arena);
  TestArenaMapLite(::google::protobuf::Arena* arena, const TestArenaMapLite& from);
  TestArenaMapLite(::google::protobuf::Arena* arena, TestArenaMapLite&& from) noexcept
      : TestArenaMapLite(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::MessageLite::ClassDataLite<35> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMapInt32Int32FieldNumber = 1,
    kMapInt64Int64FieldNumber = 2,
    kMapUint32Uint32FieldNumber = 3,
    kMapUint64Uint64FieldNumber = 4,
    kMapSint32Sint32FieldNumber = 5,
    kMapSint64Sint64FieldNumber = 6,
    kMapFixed32Fixed32FieldNumber = 7,
    kMapFixed64Fixed64FieldNumber = 8,
    kMapSfixed32Sfixed32FieldNumber = 9,
    kMapSfixed64Sfixed64FieldNumber = 10,
    kMapInt32FloatFieldNumber = 11,
    kMapInt32DoubleFieldNumber = 12,
    kMapBoolBoolFieldNumber = 13,
    kMapStringStringFieldNumber = 14,
    kMapInt32BytesFieldNumber = 15,
    kMapInt32EnumFieldNumber = 16,
    kMapInt32ForeignMessageFieldNumber = 17,
  };
  // map<int32, int32> map_int32_int32 = 1;
  int map_int32_int32_size() const;
  private:
  int _internal_map_int32_int32_size() const;

  public:
  void clear_map_int32_int32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_int32_int32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_int32_int32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_int32_int32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_int32_int32();

  public:
  // map<int64, int64> map_int64_int64 = 2;
  int map_int64_int64_size() const;
  private:
  int _internal_map_int64_int64_size() const;

  public:
  void clear_map_int64_int64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_int64_int64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_int64_int64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_int64_int64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_int64_int64();

  public:
  // map<uint32, uint32> map_uint32_uint32 = 3;
  int map_uint32_uint32_size() const;
  private:
  int _internal_map_uint32_uint32_size() const;

  public:
  void clear_map_uint32_uint32() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& map_uint32_uint32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_map_uint32_uint32();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_map_uint32_uint32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_map_uint32_uint32();

  public:
  // map<uint64, uint64> map_uint64_uint64 = 4;
  int map_uint64_uint64_size() const;
  private:
  int _internal_map_uint64_uint64_size() const;

  public:
  void clear_map_uint64_uint64() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& map_uint64_uint64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_map_uint64_uint64();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_map_uint64_uint64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_map_uint64_uint64();

  public:
  // map<sint32, sint32> map_sint32_sint32 = 5;
  int map_sint32_sint32_size() const;
  private:
  int _internal_map_sint32_sint32_size() const;

  public:
  void clear_map_sint32_sint32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_sint32_sint32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_sint32_sint32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_sint32_sint32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_sint32_sint32();

  public:
  // map<sint64, sint64> map_sint64_sint64 = 6;
  int map_sint64_sint64_size() const;
  private:
  int _internal_map_sint64_sint64_size() const;

  public:
  void clear_map_sint64_sint64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_sint64_sint64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_sint64_sint64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_sint64_sint64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_sint64_sint64();

  public:
  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  int map_fixed32_fixed32_size() const;
  private:
  int _internal_map_fixed32_fixed32_size() const;

  public:
  void clear_map_fixed32_fixed32() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& map_fixed32_fixed32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_map_fixed32_fixed32();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_map_fixed32_fixed32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_map_fixed32_fixed32();

  public:
  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  int map_fixed64_fixed64_size() const;
  private:
  int _internal_map_fixed64_fixed64_size() const;

  public:
  void clear_map_fixed64_fixed64() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& map_fixed64_fixed64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_map_fixed64_fixed64();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_map_fixed64_fixed64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_map_fixed64_fixed64();

  public:
  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  int map_sfixed32_sfixed32_size() const;
  private:
  int _internal_map_sfixed32_sfixed32_size() const;

  public:
  void clear_map_sfixed32_sfixed32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_sfixed32_sfixed32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_sfixed32_sfixed32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_sfixed32_sfixed32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_sfixed32_sfixed32();

  public:
  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  int map_sfixed64_sfixed64_size() const;
  private:
  int _internal_map_sfixed64_sfixed64_size() const;

  public:
  void clear_map_sfixed64_sfixed64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_sfixed64_sfixed64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_sfixed64_sfixed64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_sfixed64_sfixed64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_sfixed64_sfixed64();

  public:
  // map<int32, float> map_int32_float = 11;
  int map_int32_float_size() const;
  private:
  int _internal_map_int32_float_size() const;

  public:
  void clear_map_int32_float() ;
  const ::google::protobuf::Map<::int32_t, float>& map_int32_float() const;
  ::google::protobuf::Map<::int32_t, float>* mutable_map_int32_float();

  private:
  const ::google::protobuf::Map<::int32_t, float>& _internal_map_int32_float() const;
  ::google::protobuf::Map<::int32_t, float>* _internal_mutable_map_int32_float();

  public:
  // map<int32, double> map_int32_double = 12;
  int map_int32_double_size() const;
  private:
  int _internal_map_int32_double_size() const;

  public:
  void clear_map_int32_double() ;
  const ::google::protobuf::Map<::int32_t, double>& map_int32_double() const;
  ::google::protobuf::Map<::int32_t, double>* mutable_map_int32_double();

  private:
  const ::google::protobuf::Map<::int32_t, double>& _internal_map_int32_double() const;
  ::google::protobuf::Map<::int32_t, double>* _internal_mutable_map_int32_double();

  public:
  // map<bool, bool> map_bool_bool = 13;
  int map_bool_bool_size() const;
  private:
  int _internal_map_bool_bool_size() const;

  public:
  void clear_map_bool_bool() ;
  const ::google::protobuf::Map<bool, bool>& map_bool_bool() const;
  ::google::protobuf::Map<bool, bool>* mutable_map_bool_bool();

  private:
  const ::google::protobuf::Map<bool, bool>& _internal_map_bool_bool() const;
  ::google::protobuf::Map<bool, bool>* _internal_mutable_map_bool_bool();

  public:
  // map<string, string> map_string_string = 14;
  int map_string_string_size() const;
  private:
  int _internal_map_string_string_size() const;

  public:
  void clear_map_string_string() ;
  const ::google::protobuf::Map<std::string, std::string>& map_string_string() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_map_string_string();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_map_string_string() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_map_string_string();

  public:
  // map<int32, bytes> map_int32_bytes = 15;
  int map_int32_bytes_size() const;
  private:
  int _internal_map_int32_bytes_size() const;

  public:
  void clear_map_int32_bytes() ;
  const ::google::protobuf::Map<::int32_t, std::string>& map_int32_bytes() const;
  ::google::protobuf::Map<::int32_t, std::string>* mutable_map_int32_bytes();

  private:
  const ::google::protobuf::Map<::int32_t, std::string>& _internal_map_int32_bytes() const;
  ::google::protobuf::Map<::int32_t, std::string>* _internal_mutable_map_int32_bytes();

  public:
  // map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
  int map_int32_enum_size() const;
  private:
  int _internal_map_int32_enum_size() const;

  public:
  void clear_map_int32_enum() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>& map_int32_enum() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>* mutable_map_int32_enum();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>& _internal_map_int32_enum() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>* _internal_mutable_map_int32_enum();

  public:
  // map<int32, .protobuf_unittest.ForeignMessageArenaLite> map_int32_foreign_message = 17;
  int map_int32_foreign_message_size() const;
  private:
  int _internal_map_int32_foreign_message_size() const;

  public:
  void clear_map_int32_foreign_message() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>& map_int32_foreign_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>* mutable_map_int32_foreign_message();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>& _internal_map_int32_foreign_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>* _internal_mutable_map_int32_foreign_message();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestArenaMapLite)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 17, 19,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestArenaMapLite_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestArenaMapLite& from_msg);
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::int32_t> map_int32_int32_;
    ::google::protobuf::internal::MapFieldLite<::int64_t, ::int64_t> map_int64_int64_;
    ::google::protobuf::internal::MapFieldLite<::uint32_t, ::uint32_t> map_uint32_uint32_;
    ::google::protobuf::internal::MapFieldLite<::uint64_t, ::uint64_t> map_uint64_uint64_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::int32_t> map_sint32_sint32_;
    ::google::protobuf::internal::MapFieldLite<::int64_t, ::int64_t> map_sint64_sint64_;
    ::google::protobuf::internal::MapFieldLite<::uint32_t, ::uint32_t> map_fixed32_fixed32_;
    ::google::protobuf::internal::MapFieldLite<::uint64_t, ::uint64_t> map_fixed64_fixed64_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::int32_t> map_sfixed32_sfixed32_;
    ::google::protobuf::internal::MapFieldLite<::int64_t, ::int64_t> map_sfixed64_sfixed64_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, float> map_int32_float_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, double> map_int32_double_;
    ::google::protobuf::internal::MapFieldLite<bool, bool> map_bool_bool_;
    ::google::protobuf::internal::MapFieldLite<std::string, std::string> map_string_string_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, std::string> map_int32_bytes_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::MapEnumLite> map_int32_enum_;
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite> map_int32_foreign_message_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMessageMapLite final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageMapLite) */ {
 public:
  inline TestMessageMapLite() : TestMessageMapLite(nullptr) {}
  ~TestMessageMapLite() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageMapLite(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMessageMapLite(const TestMessageMapLite& from) : TestMessageMapLite(nullptr, from) {}
  inline TestMessageMapLite(TestMessageMapLite&& from) noexcept
      : TestMessageMapLite(nullptr, std::move(from)) {}
  inline TestMessageMapLite& operator=(const TestMessageMapLite& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageMapLite& operator=(TestMessageMapLite&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TestMessageMapLite& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageMapLite* internal_default_instance() {
    return reinterpret_cast<const TestMessageMapLite*>(
        &_TestMessageMapLite_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(TestMessageMapLite& a, TestMessageMapLite& b) { a.Swap(&b); }
  inline void Swap(TestMessageMapLite* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageMapLite* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageMapLite* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::MessageLite::DefaultConstruct<TestMessageMapLite>(arena);
  }
  void CopyFrom(const TestMessageMapLite& from);
  void MergeFrom(const TestMessageMapLite& from) { TestMessageMapLite::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageMapLite* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestMessageMapLite"; }

 protected:
  explicit TestMessageMapLite(::google::protobuf::Arena* arena);
  TestMessageMapLite(::google::protobuf::Arena* arena, const TestMessageMapLite& from);
  TestMessageMapLite(::google::protobuf::Arena* arena, TestMessageMapLite&& from) noexcept
      : TestMessageMapLite(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::MessageLite::ClassDataLite<37> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMapInt32MessageFieldNumber = 1,
  };
  // map<int32, .protobuf_unittest.TestAllTypesLite> map_int32_message = 1;
  int map_int32_message_size() const;
  private:
  int _internal_map_int32_message_size() const;

  public:
  void clear_map_int32_message() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>& map_int32_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>* mutable_map_int32_message();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>& _internal_map_int32_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>* _internal_mutable_map_int32_message();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageMapLite)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMessageMapLite_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMessageMapLite& from_msg);
    ::google::protobuf::internal::MapFieldLite<::int32_t, ::protobuf_unittest::TestAllTypesLite> map_int32_message_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5flite_5funittest_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestMapLite

// map<int32, int32> map_int32_int32 = 1;
inline int TestMapLite::_internal_map_int32_int32_size() const {
  return _internal_map_int32_int32().size();
}
inline int TestMapLite::map_int32_int32_size() const {
  return _internal_map_int32_int32_size();
}
inline void TestMapLite::clear_map_int32_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_int32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMapLite::_internal_map_int32_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_int32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMapLite::map_int32_int32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_int32_int32)
  return _internal_map_int32_int32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMapLite::_internal_mutable_map_int32_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_int32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMapLite::mutable_map_int32_int32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_int32_int32)
  return _internal_mutable_map_int32_int32();
}

// map<int64, int64> map_int64_int64 = 2;
inline int TestMapLite::_internal_map_int64_int64_size() const {
  return _internal_map_int64_int64().size();
}
inline int TestMapLite::map_int64_int64_size() const {
  return _internal_map_int64_int64_size();
}
inline void TestMapLite::clear_map_int64_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int64_int64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMapLite::_internal_map_int64_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int64_int64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMapLite::map_int64_int64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_int64_int64)
  return _internal_map_int64_int64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMapLite::_internal_mutable_map_int64_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int64_int64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMapLite::mutable_map_int64_int64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_int64_int64)
  return _internal_mutable_map_int64_int64();
}

// map<uint32, uint32> map_uint32_uint32 = 3;
inline int TestMapLite::_internal_map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32().size();
}
inline int TestMapLite::map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32_size();
}
inline void TestMapLite::clear_map_uint32_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_uint32_uint32_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestMapLite::_internal_map_uint32_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_uint32_uint32_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestMapLite::map_uint32_uint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_uint32_uint32)
  return _internal_map_uint32_uint32();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestMapLite::_internal_mutable_map_uint32_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_uint32_uint32_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestMapLite::mutable_map_uint32_uint32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_uint32_uint32)
  return _internal_mutable_map_uint32_uint32();
}

// map<uint64, uint64> map_uint64_uint64 = 4;
inline int TestMapLite::_internal_map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64().size();
}
inline int TestMapLite::map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64_size();
}
inline void TestMapLite::clear_map_uint64_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_uint64_uint64_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestMapLite::_internal_map_uint64_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_uint64_uint64_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestMapLite::map_uint64_uint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_uint64_uint64)
  return _internal_map_uint64_uint64();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestMapLite::_internal_mutable_map_uint64_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_uint64_uint64_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestMapLite::mutable_map_uint64_uint64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_uint64_uint64)
  return _internal_mutable_map_uint64_uint64();
}

// map<sint32, sint32> map_sint32_sint32 = 5;
inline int TestMapLite::_internal_map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32().size();
}
inline int TestMapLite::map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32_size();
}
inline void TestMapLite::clear_map_sint32_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_sint32_sint32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMapLite::_internal_map_sint32_sint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_sint32_sint32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMapLite::map_sint32_sint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_sint32_sint32)
  return _internal_map_sint32_sint32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMapLite::_internal_mutable_map_sint32_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_sint32_sint32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMapLite::mutable_map_sint32_sint32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_sint32_sint32)
  return _internal_mutable_map_sint32_sint32();
}

// map<sint64, sint64> map_sint64_sint64 = 6;
inline int TestMapLite::_internal_map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64().size();
}
inline int TestMapLite::map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64_size();
}
inline void TestMapLite::clear_map_sint64_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_sint64_sint64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMapLite::_internal_map_sint64_sint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_sint64_sint64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMapLite::map_sint64_sint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_sint64_sint64)
  return _internal_map_sint64_sint64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMapLite::_internal_mutable_map_sint64_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_sint64_sint64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMapLite::mutable_map_sint64_sint64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_sint64_sint64)
  return _internal_mutable_map_sint64_sint64();
}

// map<fixed32, fixed32> map_fixed32_fixed32 = 7;
inline int TestMapLite::_internal_map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32().size();
}
inline int TestMapLite::map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32_size();
}
inline void TestMapLite::clear_map_fixed32_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_fixed32_fixed32_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestMapLite::_internal_map_fixed32_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_fixed32_fixed32_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestMapLite::map_fixed32_fixed32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_fixed32_fixed32)
  return _internal_map_fixed32_fixed32();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestMapLite::_internal_mutable_map_fixed32_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_fixed32_fixed32_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestMapLite::mutable_map_fixed32_fixed32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_fixed32_fixed32)
  return _internal_mutable_map_fixed32_fixed32();
}

// map<fixed64, fixed64> map_fixed64_fixed64 = 8;
inline int TestMapLite::_internal_map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64().size();
}
inline int TestMapLite::map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64_size();
}
inline void TestMapLite::clear_map_fixed64_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_fixed64_fixed64_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestMapLite::_internal_map_fixed64_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_fixed64_fixed64_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestMapLite::map_fixed64_fixed64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_fixed64_fixed64)
  return _internal_map_fixed64_fixed64();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestMapLite::_internal_mutable_map_fixed64_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_fixed64_fixed64_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestMapLite::mutable_map_fixed64_fixed64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_fixed64_fixed64)
  return _internal_mutable_map_fixed64_fixed64();
}

// map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
inline int TestMapLite::_internal_map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32().size();
}
inline int TestMapLite::map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32_size();
}
inline void TestMapLite::clear_map_sfixed32_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_sfixed32_sfixed32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMapLite::_internal_map_sfixed32_sfixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_sfixed32_sfixed32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMapLite::map_sfixed32_sfixed32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_sfixed32_sfixed32)
  return _internal_map_sfixed32_sfixed32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMapLite::_internal_mutable_map_sfixed32_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_sfixed32_sfixed32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMapLite::mutable_map_sfixed32_sfixed32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_sfixed32_sfixed32)
  return _internal_mutable_map_sfixed32_sfixed32();
}

// map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
inline int TestMapLite::_internal_map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64().size();
}
inline int TestMapLite::map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64_size();
}
inline void TestMapLite::clear_map_sfixed64_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_sfixed64_sfixed64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMapLite::_internal_map_sfixed64_sfixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_sfixed64_sfixed64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMapLite::map_sfixed64_sfixed64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_sfixed64_sfixed64)
  return _internal_map_sfixed64_sfixed64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMapLite::_internal_mutable_map_sfixed64_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_sfixed64_sfixed64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMapLite::mutable_map_sfixed64_sfixed64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_sfixed64_sfixed64)
  return _internal_mutable_map_sfixed64_sfixed64();
}

// map<int32, float> map_int32_float = 11;
inline int TestMapLite::_internal_map_int32_float_size() const {
  return _internal_map_int32_float().size();
}
inline int TestMapLite::map_int32_float_size() const {
  return _internal_map_int32_float_size();
}
inline void TestMapLite::clear_map_int32_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_float_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, float>& TestMapLite::_internal_map_int32_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_float_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, float>& TestMapLite::map_int32_float() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_int32_float)
  return _internal_map_int32_float();
}
inline ::google::protobuf::Map<::int32_t, float>* TestMapLite::_internal_mutable_map_int32_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_float_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, float>* TestMapLite::mutable_map_int32_float() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_int32_float)
  return _internal_mutable_map_int32_float();
}

// map<int32, double> map_int32_double = 12;
inline int TestMapLite::_internal_map_int32_double_size() const {
  return _internal_map_int32_double().size();
}
inline int TestMapLite::map_int32_double_size() const {
  return _internal_map_int32_double_size();
}
inline void TestMapLite::clear_map_int32_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_double_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, double>& TestMapLite::_internal_map_int32_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_double_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, double>& TestMapLite::map_int32_double() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_int32_double)
  return _internal_map_int32_double();
}
inline ::google::protobuf::Map<::int32_t, double>* TestMapLite::_internal_mutable_map_int32_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_double_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, double>* TestMapLite::mutable_map_int32_double() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_int32_double)
  return _internal_mutable_map_int32_double();
}

// map<bool, bool> map_bool_bool = 13;
inline int TestMapLite::_internal_map_bool_bool_size() const {
  return _internal_map_bool_bool().size();
}
inline int TestMapLite::map_bool_bool_size() const {
  return _internal_map_bool_bool_size();
}
inline void TestMapLite::clear_map_bool_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_bool_bool_.Clear();
}
inline const ::google::protobuf::Map<bool, bool>& TestMapLite::_internal_map_bool_bool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_bool_bool_.GetMap();
}
inline const ::google::protobuf::Map<bool, bool>& TestMapLite::map_bool_bool() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_bool_bool)
  return _internal_map_bool_bool();
}
inline ::google::protobuf::Map<bool, bool>* TestMapLite::_internal_mutable_map_bool_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_bool_bool_.MutableMap();
}
inline ::google::protobuf::Map<bool, bool>* TestMapLite::mutable_map_bool_bool() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_bool_bool)
  return _internal_mutable_map_bool_bool();
}

// map<string, string> map_string_string = 14;
inline int TestMapLite::_internal_map_string_string_size() const {
  return _internal_map_string_string().size();
}
inline int TestMapLite::map_string_string_size() const {
  return _internal_map_string_string_size();
}
inline void TestMapLite::clear_map_string_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_string_string_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestMapLite::_internal_map_string_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_string_string_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestMapLite::map_string_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_string_string)
  return _internal_map_string_string();
}
inline ::google::protobuf::Map<std::string, std::string>* TestMapLite::_internal_mutable_map_string_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_string_string_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TestMapLite::mutable_map_string_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_string_string)
  return _internal_mutable_map_string_string();
}

// map<int32, bytes> map_int32_bytes = 15;
inline int TestMapLite::_internal_map_int32_bytes_size() const {
  return _internal_map_int32_bytes().size();
}
inline int TestMapLite::map_int32_bytes_size() const {
  return _internal_map_int32_bytes_size();
}
inline void TestMapLite::clear_map_int32_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_bytes_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, std::string>& TestMapLite::_internal_map_int32_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_bytes_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, std::string>& TestMapLite::map_int32_bytes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_int32_bytes)
  return _internal_map_int32_bytes();
}
inline ::google::protobuf::Map<::int32_t, std::string>* TestMapLite::_internal_mutable_map_int32_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_bytes_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, std::string>* TestMapLite::mutable_map_int32_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_int32_bytes)
  return _internal_mutable_map_int32_bytes();
}

// map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
inline int TestMapLite::_internal_map_int32_enum_size() const {
  return _internal_map_int32_enum().size();
}
inline int TestMapLite::map_int32_enum_size() const {
  return _internal_map_int32_enum_size();
}
inline void TestMapLite::clear_map_int32_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_enum_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>& TestMapLite::_internal_map_int32_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_enum_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>& TestMapLite::map_int32_enum() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_int32_enum)
  return _internal_map_int32_enum();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>* TestMapLite::_internal_mutable_map_int32_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_enum_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>* TestMapLite::mutable_map_int32_enum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_int32_enum)
  return _internal_mutable_map_int32_enum();
}

// map<int32, .protobuf_unittest.ForeignMessageLite> map_int32_foreign_message = 17;
inline int TestMapLite::_internal_map_int32_foreign_message_size() const {
  return _internal_map_int32_foreign_message().size();
}
inline int TestMapLite::map_int32_foreign_message_size() const {
  return _internal_map_int32_foreign_message_size();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>& TestMapLite::_internal_map_int32_foreign_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_foreign_message_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>& TestMapLite::map_int32_foreign_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.map_int32_foreign_message)
  return _internal_map_int32_foreign_message();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>* TestMapLite::_internal_mutable_map_int32_foreign_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_foreign_message_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>* TestMapLite::mutable_map_int32_foreign_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.map_int32_foreign_message)
  return _internal_mutable_map_int32_foreign_message();
}

// map<int32, int32> teboring = 18;
inline int TestMapLite::_internal_teboring_size() const {
  return _internal_teboring().size();
}
inline int TestMapLite::teboring_size() const {
  return _internal_teboring_size();
}
inline void TestMapLite::clear_teboring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teboring_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMapLite::_internal_teboring() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teboring_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMapLite::teboring() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapLite.teboring)
  return _internal_teboring();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMapLite::_internal_mutable_teboring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.teboring_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMapLite::mutable_teboring() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapLite.teboring)
  return _internal_mutable_teboring();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestArenaMapLite

// map<int32, int32> map_int32_int32 = 1;
inline int TestArenaMapLite::_internal_map_int32_int32_size() const {
  return _internal_map_int32_int32().size();
}
inline int TestArenaMapLite::map_int32_int32_size() const {
  return _internal_map_int32_int32_size();
}
inline void TestArenaMapLite::clear_map_int32_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_int32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMapLite::_internal_map_int32_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_int32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMapLite::map_int32_int32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_int32_int32)
  return _internal_map_int32_int32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMapLite::_internal_mutable_map_int32_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_int32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMapLite::mutable_map_int32_int32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_int32_int32)
  return _internal_mutable_map_int32_int32();
}

// map<int64, int64> map_int64_int64 = 2;
inline int TestArenaMapLite::_internal_map_int64_int64_size() const {
  return _internal_map_int64_int64().size();
}
inline int TestArenaMapLite::map_int64_int64_size() const {
  return _internal_map_int64_int64_size();
}
inline void TestArenaMapLite::clear_map_int64_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int64_int64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMapLite::_internal_map_int64_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int64_int64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMapLite::map_int64_int64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_int64_int64)
  return _internal_map_int64_int64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMapLite::_internal_mutable_map_int64_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int64_int64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMapLite::mutable_map_int64_int64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_int64_int64)
  return _internal_mutable_map_int64_int64();
}

// map<uint32, uint32> map_uint32_uint32 = 3;
inline int TestArenaMapLite::_internal_map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32().size();
}
inline int TestArenaMapLite::map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32_size();
}
inline void TestArenaMapLite::clear_map_uint32_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_uint32_uint32_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestArenaMapLite::_internal_map_uint32_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_uint32_uint32_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestArenaMapLite::map_uint32_uint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_uint32_uint32)
  return _internal_map_uint32_uint32();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestArenaMapLite::_internal_mutable_map_uint32_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_uint32_uint32_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestArenaMapLite::mutable_map_uint32_uint32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_uint32_uint32)
  return _internal_mutable_map_uint32_uint32();
}

// map<uint64, uint64> map_uint64_uint64 = 4;
inline int TestArenaMapLite::_internal_map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64().size();
}
inline int TestArenaMapLite::map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64_size();
}
inline void TestArenaMapLite::clear_map_uint64_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_uint64_uint64_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestArenaMapLite::_internal_map_uint64_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_uint64_uint64_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestArenaMapLite::map_uint64_uint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_uint64_uint64)
  return _internal_map_uint64_uint64();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestArenaMapLite::_internal_mutable_map_uint64_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_uint64_uint64_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestArenaMapLite::mutable_map_uint64_uint64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_uint64_uint64)
  return _internal_mutable_map_uint64_uint64();
}

// map<sint32, sint32> map_sint32_sint32 = 5;
inline int TestArenaMapLite::_internal_map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32().size();
}
inline int TestArenaMapLite::map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32_size();
}
inline void TestArenaMapLite::clear_map_sint32_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_sint32_sint32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMapLite::_internal_map_sint32_sint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_sint32_sint32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMapLite::map_sint32_sint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_sint32_sint32)
  return _internal_map_sint32_sint32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMapLite::_internal_mutable_map_sint32_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_sint32_sint32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMapLite::mutable_map_sint32_sint32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_sint32_sint32)
  return _internal_mutable_map_sint32_sint32();
}

// map<sint64, sint64> map_sint64_sint64 = 6;
inline int TestArenaMapLite::_internal_map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64().size();
}
inline int TestArenaMapLite::map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64_size();
}
inline void TestArenaMapLite::clear_map_sint64_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_sint64_sint64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMapLite::_internal_map_sint64_sint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_sint64_sint64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMapLite::map_sint64_sint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_sint64_sint64)
  return _internal_map_sint64_sint64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMapLite::_internal_mutable_map_sint64_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_sint64_sint64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMapLite::mutable_map_sint64_sint64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_sint64_sint64)
  return _internal_mutable_map_sint64_sint64();
}

// map<fixed32, fixed32> map_fixed32_fixed32 = 7;
inline int TestArenaMapLite::_internal_map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32().size();
}
inline int TestArenaMapLite::map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32_size();
}
inline void TestArenaMapLite::clear_map_fixed32_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_fixed32_fixed32_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestArenaMapLite::_internal_map_fixed32_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_fixed32_fixed32_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestArenaMapLite::map_fixed32_fixed32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_fixed32_fixed32)
  return _internal_map_fixed32_fixed32();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestArenaMapLite::_internal_mutable_map_fixed32_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_fixed32_fixed32_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestArenaMapLite::mutable_map_fixed32_fixed32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_fixed32_fixed32)
  return _internal_mutable_map_fixed32_fixed32();
}

// map<fixed64, fixed64> map_fixed64_fixed64 = 8;
inline int TestArenaMapLite::_internal_map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64().size();
}
inline int TestArenaMapLite::map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64_size();
}
inline void TestArenaMapLite::clear_map_fixed64_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_fixed64_fixed64_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestArenaMapLite::_internal_map_fixed64_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_fixed64_fixed64_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestArenaMapLite::map_fixed64_fixed64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_fixed64_fixed64)
  return _internal_map_fixed64_fixed64();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestArenaMapLite::_internal_mutable_map_fixed64_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_fixed64_fixed64_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestArenaMapLite::mutable_map_fixed64_fixed64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_fixed64_fixed64)
  return _internal_mutable_map_fixed64_fixed64();
}

// map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
inline int TestArenaMapLite::_internal_map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32().size();
}
inline int TestArenaMapLite::map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32_size();
}
inline void TestArenaMapLite::clear_map_sfixed32_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_sfixed32_sfixed32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMapLite::_internal_map_sfixed32_sfixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_sfixed32_sfixed32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMapLite::map_sfixed32_sfixed32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_sfixed32_sfixed32)
  return _internal_map_sfixed32_sfixed32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMapLite::_internal_mutable_map_sfixed32_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_sfixed32_sfixed32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMapLite::mutable_map_sfixed32_sfixed32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_sfixed32_sfixed32)
  return _internal_mutable_map_sfixed32_sfixed32();
}

// map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
inline int TestArenaMapLite::_internal_map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64().size();
}
inline int TestArenaMapLite::map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64_size();
}
inline void TestArenaMapLite::clear_map_sfixed64_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_sfixed64_sfixed64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMapLite::_internal_map_sfixed64_sfixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_sfixed64_sfixed64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMapLite::map_sfixed64_sfixed64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_sfixed64_sfixed64)
  return _internal_map_sfixed64_sfixed64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMapLite::_internal_mutable_map_sfixed64_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_sfixed64_sfixed64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMapLite::mutable_map_sfixed64_sfixed64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_sfixed64_sfixed64)
  return _internal_mutable_map_sfixed64_sfixed64();
}

// map<int32, float> map_int32_float = 11;
inline int TestArenaMapLite::_internal_map_int32_float_size() const {
  return _internal_map_int32_float().size();
}
inline int TestArenaMapLite::map_int32_float_size() const {
  return _internal_map_int32_float_size();
}
inline void TestArenaMapLite::clear_map_int32_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_float_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, float>& TestArenaMapLite::_internal_map_int32_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_float_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, float>& TestArenaMapLite::map_int32_float() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_int32_float)
  return _internal_map_int32_float();
}
inline ::google::protobuf::Map<::int32_t, float>* TestArenaMapLite::_internal_mutable_map_int32_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_float_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, float>* TestArenaMapLite::mutable_map_int32_float() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_int32_float)
  return _internal_mutable_map_int32_float();
}

// map<int32, double> map_int32_double = 12;
inline int TestArenaMapLite::_internal_map_int32_double_size() const {
  return _internal_map_int32_double().size();
}
inline int TestArenaMapLite::map_int32_double_size() const {
  return _internal_map_int32_double_size();
}
inline void TestArenaMapLite::clear_map_int32_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_double_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, double>& TestArenaMapLite::_internal_map_int32_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_double_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, double>& TestArenaMapLite::map_int32_double() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_int32_double)
  return _internal_map_int32_double();
}
inline ::google::protobuf::Map<::int32_t, double>* TestArenaMapLite::_internal_mutable_map_int32_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_double_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, double>* TestArenaMapLite::mutable_map_int32_double() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_int32_double)
  return _internal_mutable_map_int32_double();
}

// map<bool, bool> map_bool_bool = 13;
inline int TestArenaMapLite::_internal_map_bool_bool_size() const {
  return _internal_map_bool_bool().size();
}
inline int TestArenaMapLite::map_bool_bool_size() const {
  return _internal_map_bool_bool_size();
}
inline void TestArenaMapLite::clear_map_bool_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_bool_bool_.Clear();
}
inline const ::google::protobuf::Map<bool, bool>& TestArenaMapLite::_internal_map_bool_bool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_bool_bool_.GetMap();
}
inline const ::google::protobuf::Map<bool, bool>& TestArenaMapLite::map_bool_bool() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_bool_bool)
  return _internal_map_bool_bool();
}
inline ::google::protobuf::Map<bool, bool>* TestArenaMapLite::_internal_mutable_map_bool_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_bool_bool_.MutableMap();
}
inline ::google::protobuf::Map<bool, bool>* TestArenaMapLite::mutable_map_bool_bool() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_bool_bool)
  return _internal_mutable_map_bool_bool();
}

// map<string, string> map_string_string = 14;
inline int TestArenaMapLite::_internal_map_string_string_size() const {
  return _internal_map_string_string().size();
}
inline int TestArenaMapLite::map_string_string_size() const {
  return _internal_map_string_string_size();
}
inline void TestArenaMapLite::clear_map_string_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_string_string_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestArenaMapLite::_internal_map_string_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_string_string_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestArenaMapLite::map_string_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_string_string)
  return _internal_map_string_string();
}
inline ::google::protobuf::Map<std::string, std::string>* TestArenaMapLite::_internal_mutable_map_string_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_string_string_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TestArenaMapLite::mutable_map_string_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_string_string)
  return _internal_mutable_map_string_string();
}

// map<int32, bytes> map_int32_bytes = 15;
inline int TestArenaMapLite::_internal_map_int32_bytes_size() const {
  return _internal_map_int32_bytes().size();
}
inline int TestArenaMapLite::map_int32_bytes_size() const {
  return _internal_map_int32_bytes_size();
}
inline void TestArenaMapLite::clear_map_int32_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_bytes_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, std::string>& TestArenaMapLite::_internal_map_int32_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_bytes_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, std::string>& TestArenaMapLite::map_int32_bytes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_int32_bytes)
  return _internal_map_int32_bytes();
}
inline ::google::protobuf::Map<::int32_t, std::string>* TestArenaMapLite::_internal_mutable_map_int32_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_bytes_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, std::string>* TestArenaMapLite::mutable_map_int32_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_int32_bytes)
  return _internal_mutable_map_int32_bytes();
}

// map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
inline int TestArenaMapLite::_internal_map_int32_enum_size() const {
  return _internal_map_int32_enum().size();
}
inline int TestArenaMapLite::map_int32_enum_size() const {
  return _internal_map_int32_enum_size();
}
inline void TestArenaMapLite::clear_map_int32_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_enum_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>& TestArenaMapLite::_internal_map_int32_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_enum_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>& TestArenaMapLite::map_int32_enum() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_int32_enum)
  return _internal_map_int32_enum();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>* TestArenaMapLite::_internal_mutable_map_int32_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_enum_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>* TestArenaMapLite::mutable_map_int32_enum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_int32_enum)
  return _internal_mutable_map_int32_enum();
}

// map<int32, .protobuf_unittest.ForeignMessageArenaLite> map_int32_foreign_message = 17;
inline int TestArenaMapLite::_internal_map_int32_foreign_message_size() const {
  return _internal_map_int32_foreign_message().size();
}
inline int TestArenaMapLite::map_int32_foreign_message_size() const {
  return _internal_map_int32_foreign_message_size();
}
inline void TestArenaMapLite::clear_map_int32_foreign_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_int32_foreign_message_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>& TestArenaMapLite::_internal_map_int32_foreign_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_foreign_message_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>& TestArenaMapLite::map_int32_foreign_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMapLite.map_int32_foreign_message)
  return _internal_map_int32_foreign_message();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>* TestArenaMapLite::_internal_mutable_map_int32_foreign_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_foreign_message_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>* TestArenaMapLite::mutable_map_int32_foreign_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMapLite.map_int32_foreign_message)
  return _internal_mutable_map_int32_foreign_message();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestRequiredMessageMapLite

// map<int32, .protobuf_unittest.TestRequiredLite> map_field = 1;
inline int TestRequiredMessageMapLite::_internal_map_field_size() const {
  return _internal_map_field().size();
}
inline int TestRequiredMessageMapLite::map_field_size() const {
  return _internal_map_field_size();
}
inline void TestRequiredMessageMapLite::clear_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_field_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>& TestRequiredMessageMapLite::_internal_map_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_field_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>& TestRequiredMessageMapLite::map_field() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestRequiredMessageMapLite.map_field)
  return _internal_map_field();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>* TestRequiredMessageMapLite::_internal_mutable_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_field_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>* TestRequiredMessageMapLite::mutable_map_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestRequiredMessageMapLite.map_field)
  return _internal_mutable_map_field();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestEnumMapLite

// map<int32, .protobuf_unittest.Proto2MapEnumLite> known_map_field = 101;
inline int TestEnumMapLite::_internal_known_map_field_size() const {
  return _internal_known_map_field().size();
}
inline int TestEnumMapLite::known_map_field_size() const {
  return _internal_known_map_field_size();
}
inline void TestEnumMapLite::clear_known_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.known_map_field_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>& TestEnumMapLite::_internal_known_map_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.known_map_field_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>& TestEnumMapLite::known_map_field() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMapLite.known_map_field)
  return _internal_known_map_field();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>* TestEnumMapLite::_internal_mutable_known_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.known_map_field_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>* TestEnumMapLite::mutable_known_map_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMapLite.known_map_field)
  return _internal_mutable_known_map_field();
}

// map<int32, .protobuf_unittest.Proto2MapEnumLite> unknown_map_field = 102;
inline int TestEnumMapLite::_internal_unknown_map_field_size() const {
  return _internal_unknown_map_field().size();
}
inline int TestEnumMapLite::unknown_map_field_size() const {
  return _internal_unknown_map_field_size();
}
inline void TestEnumMapLite::clear_unknown_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unknown_map_field_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>& TestEnumMapLite::_internal_unknown_map_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unknown_map_field_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>& TestEnumMapLite::unknown_map_field() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMapLite.unknown_map_field)
  return _internal_unknown_map_field();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>* TestEnumMapLite::_internal_mutable_unknown_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.unknown_map_field_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>* TestEnumMapLite::mutable_unknown_map_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMapLite.unknown_map_field)
  return _internal_mutable_unknown_map_field();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestEnumMapPlusExtraLite

// map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> known_map_field = 101;
inline int TestEnumMapPlusExtraLite::_internal_known_map_field_size() const {
  return _internal_known_map_field().size();
}
inline int TestEnumMapPlusExtraLite::known_map_field_size() const {
  return _internal_known_map_field_size();
}
inline void TestEnumMapPlusExtraLite::clear_known_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.known_map_field_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>& TestEnumMapPlusExtraLite::_internal_known_map_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.known_map_field_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>& TestEnumMapPlusExtraLite::known_map_field() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMapPlusExtraLite.known_map_field)
  return _internal_known_map_field();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>* TestEnumMapPlusExtraLite::_internal_mutable_known_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.known_map_field_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>* TestEnumMapPlusExtraLite::mutable_known_map_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMapPlusExtraLite.known_map_field)
  return _internal_mutable_known_map_field();
}

// map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> unknown_map_field = 102;
inline int TestEnumMapPlusExtraLite::_internal_unknown_map_field_size() const {
  return _internal_unknown_map_field().size();
}
inline int TestEnumMapPlusExtraLite::unknown_map_field_size() const {
  return _internal_unknown_map_field_size();
}
inline void TestEnumMapPlusExtraLite::clear_unknown_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unknown_map_field_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>& TestEnumMapPlusExtraLite::_internal_unknown_map_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unknown_map_field_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>& TestEnumMapPlusExtraLite::unknown_map_field() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMapPlusExtraLite.unknown_map_field)
  return _internal_unknown_map_field();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>* TestEnumMapPlusExtraLite::_internal_mutable_unknown_map_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.unknown_map_field_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>* TestEnumMapPlusExtraLite::mutable_unknown_map_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMapPlusExtraLite.unknown_map_field)
  return _internal_mutable_unknown_map_field();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestMessageMapLite

// map<int32, .protobuf_unittest.TestAllTypesLite> map_int32_message = 1;
inline int TestMessageMapLite::_internal_map_int32_message_size() const {
  return _internal_map_int32_message().size();
}
inline int TestMessageMapLite::map_int32_message_size() const {
  return _internal_map_int32_message_size();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>& TestMessageMapLite::_internal_map_int32_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_int32_message_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>& TestMessageMapLite::map_int32_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMessageMapLite.map_int32_message)
  return _internal_map_int32_message();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>* TestMessageMapLite::_internal_mutable_map_int32_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_int32_message_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>* TestMessageMapLite::mutable_map_int32_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMessageMapLite.map_int32_message)
  return _internal_mutable_map_int32_message();
}

// -------------------------------------------------------------------

// TestRequiredLite

// int32 a = 1 [features = {
inline bool TestRequiredLite::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestRequiredLite::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestRequiredLite::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredLite.a)
  return _internal_a();
}
inline void TestRequiredLite::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequiredLite.a)
}
inline ::int32_t TestRequiredLite::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestRequiredLite::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// int32 b = 2 [features = {
inline bool TestRequiredLite::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestRequiredLite::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestRequiredLite::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredLite.b)
  return _internal_b();
}
inline void TestRequiredLite::set_b(::int32_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequiredLite.b)
}
inline ::int32_t TestRequiredLite::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void TestRequiredLite::_internal_set_b(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// int32 c = 3 [features = {
inline bool TestRequiredLite::has_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestRequiredLite::clear_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestRequiredLite::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRequiredLite.c)
  return _internal_c();
}
inline void TestRequiredLite::set_c(::int32_t value) {
  _internal_set_c(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRequiredLite.c)
}
inline ::int32_t TestRequiredLite::_internal_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_;
}
inline void TestRequiredLite::_internal_set_c(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = value;
}

// -------------------------------------------------------------------

// ForeignMessageArenaLite

// int32 c = 1;
inline bool ForeignMessageArenaLite::has_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ForeignMessageArenaLite::clear_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t ForeignMessageArenaLite::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ForeignMessageArenaLite.c)
  return _internal_c();
}
inline void ForeignMessageArenaLite::set_c(::int32_t value) {
  _internal_set_c(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.ForeignMessageArenaLite.c)
}
inline ::int32_t ForeignMessageArenaLite::_internal_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_;
}
inline void ForeignMessageArenaLite::_internal_set_c(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::protobuf_unittest::Proto2MapEnumLite> : std::true_type {};
template <>
struct is_proto_enum<::protobuf_unittest::Proto2MapEnumPlusExtraLite> : std::true_type {};
template <>
struct is_proto_enum<::protobuf_unittest::MapEnumLite> : std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5flite_5funittest_2eproto_2epb_2eh
