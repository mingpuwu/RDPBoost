// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/unittest_proto3_arena.proto
// Protobuf C++ Version: 5.29.0-dev

#include "google/protobuf/unittest_proto3_arena.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace proto3_arena_unittest {

inline constexpr TestUnpackedTypes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : repeated_int32_{},
        repeated_int64_{},
        repeated_uint32_{},
        repeated_uint64_{},
        repeated_sint32_{},
        repeated_sint64_{},
        repeated_fixed32_{},
        repeated_fixed64_{},
        repeated_sfixed32_{},
        repeated_sfixed64_{},
        repeated_float_{},
        repeated_double_{},
        repeated_bool_{},
        repeated_nested_enum_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestUnpackedTypes::TestUnpackedTypes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestUnpackedTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestUnpackedTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestUnpackedTypesDefaultTypeInternal() {}
  union {
    TestUnpackedTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestUnpackedTypesDefaultTypeInternal _TestUnpackedTypes_default_instance_;

inline constexpr TestPickleNestedMessage_NestedMessage_NestedNestedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cc_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessage_NestedNestedMessage::TestPickleNestedMessage_NestedMessage_NestedNestedMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal() {}
  union {
    TestPickleNestedMessage_NestedMessage_NestedNestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal _TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_;

inline constexpr TestPickleNestedMessage_NestedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bb_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessage::TestPickleNestedMessage_NestedMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestPickleNestedMessage_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPickleNestedMessage_NestedMessageDefaultTypeInternal() {}
  union {
    TestPickleNestedMessage_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPickleNestedMessage_NestedMessageDefaultTypeInternal _TestPickleNestedMessage_NestedMessage_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TestPickleNestedMessage::TestPickleNestedMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TestPickleNestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPickleNestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPickleNestedMessageDefaultTypeInternal() {}
  union {
    TestPickleNestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPickleNestedMessageDefaultTypeInternal _TestPickleNestedMessage_default_instance_;

inline constexpr TestPackedTypes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : packed_int32_{},
        _packed_int32_cached_byte_size_{0},
        packed_int64_{},
        _packed_int64_cached_byte_size_{0},
        packed_uint32_{},
        _packed_uint32_cached_byte_size_{0},
        packed_uint64_{},
        _packed_uint64_cached_byte_size_{0},
        packed_sint32_{},
        _packed_sint32_cached_byte_size_{0},
        packed_sint64_{},
        _packed_sint64_cached_byte_size_{0},
        packed_fixed32_{},
        packed_fixed64_{},
        packed_sfixed32_{},
        packed_sfixed64_{},
        packed_float_{},
        packed_double_{},
        packed_bool_{},
        packed_enum_{},
        _packed_enum_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestPackedTypes::TestPackedTypes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestPackedTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPackedTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPackedTypesDefaultTypeInternal() {}
  union {
    TestPackedTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPackedTypesDefaultTypeInternal _TestPackedTypes_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TestEmptyMessage::TestEmptyMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TestEmptyMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEmptyMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEmptyMessageDefaultTypeInternal() {}
  union {
    TestEmptyMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEmptyMessageDefaultTypeInternal _TestEmptyMessage_default_instance_;

inline constexpr TestAllTypes_NestedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bb_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestAllTypes_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypes_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypes_NestedMessageDefaultTypeInternal() {}
  union {
    TestAllTypes_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypes_NestedMessageDefaultTypeInternal _TestAllTypes_NestedMessage_default_instance_;

inline constexpr ForeignMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : c_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ForeignMessage::ForeignMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ForeignMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForeignMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForeignMessageDefaultTypeInternal() {}
  union {
    ForeignMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForeignMessageDefaultTypeInternal _ForeignMessage_default_instance_;

inline constexpr TestAllTypes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_int32_{},
        _repeated_int32_cached_byte_size_{0},
        repeated_int64_{},
        _repeated_int64_cached_byte_size_{0},
        repeated_uint32_{},
        _repeated_uint32_cached_byte_size_{0},
        repeated_uint64_{},
        _repeated_uint64_cached_byte_size_{0},
        repeated_sint32_{},
        _repeated_sint32_cached_byte_size_{0},
        repeated_sint64_{},
        _repeated_sint64_cached_byte_size_{0},
        repeated_fixed32_{},
        repeated_fixed64_{},
        repeated_sfixed32_{},
        repeated_sfixed64_{},
        repeated_float_{},
        repeated_double_{},
        repeated_bool_{},
        repeated_string_{},
        repeated_bytes_{},
        repeated_nested_message_{},
        repeated_foreign_message_{},
        repeated_import_message_{},
        repeated_nested_enum_{},
        _repeated_nested_enum_cached_byte_size_{0},
        repeated_foreign_enum_{},
        _repeated_foreign_enum_cached_byte_size_{0},
        repeated_string_piece_{},
        repeated_cord_{},
        repeated_lazy_message_{},
        optional_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_string_piece_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_cord_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proto3_optional_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proto3_optional_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_nested_message_{nullptr},
        optional_foreign_message_{nullptr},
        optional_import_message_{nullptr},
        optional_public_import_message_{nullptr},
        optional_lazy_message_{nullptr},
        optional_unverified_lazy_message_{nullptr},
        optional_lazy_import_message_{nullptr},
        optional_int64_{::int64_t{0}},
        optional_int32_{0},
        optional_uint32_{0u},
        optional_uint64_{::uint64_t{0u}},
        optional_sint64_{::int64_t{0}},
        optional_sint32_{0},
        optional_fixed32_{0u},
        optional_fixed64_{::uint64_t{0u}},
        optional_sfixed64_{::int64_t{0}},
        optional_sfixed32_{0},
        optional_float_{0},
        optional_double_{0},
        optional_nested_enum_{static_cast< ::proto3_arena_unittest::TestAllTypes_NestedEnum >(0)},
        optional_foreign_enum_{static_cast< ::proto3_arena_unittest::ForeignEnum >(0)},
        optional_bool_{false},
        proto3_optional_bool_{false},
        proto3_optional_int32_{0},
        proto3_optional_int64_{::int64_t{0}},
        proto3_optional_uint64_{::uint64_t{0u}},
        proto3_optional_uint32_{0u},
        proto3_optional_sint32_{0},
        proto3_optional_sint64_{::int64_t{0}},
        proto3_optional_fixed64_{::uint64_t{0u}},
        proto3_optional_fixed32_{0u},
        proto3_optional_sfixed32_{0},
        proto3_optional_sfixed64_{::int64_t{0}},
        proto3_optional_double_{0},
        proto3_optional_float_{0},
        oneof_field_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypes::TestAllTypes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestAllTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypesDefaultTypeInternal() {}
  union {
    TestAllTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypesDefaultTypeInternal _TestAllTypes_default_instance_;

inline constexpr NestedTestAllTypes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_child_{},
        child_{nullptr},
        payload_{nullptr},
        lazy_payload_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NestedTestAllTypes::NestedTestAllTypes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NestedTestAllTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NestedTestAllTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NestedTestAllTypesDefaultTypeInternal() {}
  union {
    NestedTestAllTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NestedTestAllTypesDefaultTypeInternal _NestedTestAllTypes_default_instance_;
}  // namespace proto3_arena_unittest
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto = nullptr;
const ::uint32_t
    TableStruct_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes_NestedMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes_NestedMessage, _impl_.bb_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_int32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_int64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_uint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_uint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_sint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_sint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_fixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_fixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_sfixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_sfixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_float_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_double_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_bool_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_string_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_bytes_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_nested_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_foreign_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_import_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_nested_enum_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_foreign_enum_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_string_piece_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_cord_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_public_import_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_lazy_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_unverified_lazy_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.optional_lazy_import_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_int32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_int64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_uint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_uint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_sint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_sint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_fixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_fixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_sfixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_sfixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_float_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_double_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_bool_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_string_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_bytes_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_int32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_int64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_uint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_uint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_sint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_sint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_fixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_fixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_sfixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_sfixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_float_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_double_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_bool_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_string_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.proto3_optional_bytes_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_nested_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_foreign_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_import_message_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_nested_enum_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_foreign_enum_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_string_piece_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_cord_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.repeated_lazy_message_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_.oneof_field_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        4,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        5,
        6,
        7,
        8,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        10,
        11,
        13,
        12,
        14,
        15,
        17,
        16,
        18,
        19,
        21,
        20,
        9,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_int32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_int64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_uint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_uint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_sint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_sint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_fixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_fixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_sfixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_sfixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_float_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_double_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_bool_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPackedTypes, _impl_.packed_enum_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_int32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_int64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_uint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_uint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_sint32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_sint64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_fixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_fixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_sfixed32_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_sfixed64_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_float_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_double_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_bool_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestUnpackedTypes, _impl_.repeated_nested_enum_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::NestedTestAllTypes, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::NestedTestAllTypes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::NestedTestAllTypes, _impl_.child_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::NestedTestAllTypes, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::NestedTestAllTypes, _impl_.repeated_child_),
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::NestedTestAllTypes, _impl_.lazy_payload_),
        0,
        1,
        ~0u,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::ForeignMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::ForeignMessage, _impl_.c_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestEmptyMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_.cc_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPickleNestedMessage_NestedMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPickleNestedMessage_NestedMessage, _impl_.bb_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestPickleNestedMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::proto3_arena_unittest::TestAllTypes_NestedMessage)},
        {9, 86, -1, sizeof(::proto3_arena_unittest::TestAllTypes)},
        {154, -1, -1, sizeof(::proto3_arena_unittest::TestPackedTypes)},
        {176, -1, -1, sizeof(::proto3_arena_unittest::TestUnpackedTypes)},
        {198, 210, -1, sizeof(::proto3_arena_unittest::NestedTestAllTypes)},
        {214, -1, -1, sizeof(::proto3_arena_unittest::ForeignMessage)},
        {223, -1, -1, sizeof(::proto3_arena_unittest::TestEmptyMessage)},
        {231, -1, -1, sizeof(::proto3_arena_unittest::TestPickleNestedMessage_NestedMessage_NestedNestedMessage)},
        {240, -1, -1, sizeof(::proto3_arena_unittest::TestPickleNestedMessage_NestedMessage)},
        {249, -1, -1, sizeof(::proto3_arena_unittest::TestPickleNestedMessage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::proto3_arena_unittest::_TestAllTypes_NestedMessage_default_instance_._instance,
    &::proto3_arena_unittest::_TestAllTypes_default_instance_._instance,
    &::proto3_arena_unittest::_TestPackedTypes_default_instance_._instance,
    &::proto3_arena_unittest::_TestUnpackedTypes_default_instance_._instance,
    &::proto3_arena_unittest::_NestedTestAllTypes_default_instance_._instance,
    &::proto3_arena_unittest::_ForeignMessage_default_instance_._instance,
    &::proto3_arena_unittest::_TestEmptyMessage_default_instance_._instance,
    &::proto3_arena_unittest::_TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_._instance,
    &::proto3_arena_unittest::_TestPickleNestedMessage_NestedMessage_default_instance_._instance,
    &::proto3_arena_unittest::_TestPickleNestedMessage_default_instance_._instance,
};
const char descriptor_table_protodef_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n+google/protobuf/unittest_proto3_arena."
    "proto\022\025proto3_arena_unittest\032%google/pro"
    "tobuf/unittest_import.proto\"\351\031\n\014TestAllT"
    "ypes\022\026\n\016optional_int32\030\001 \001(\005\022\026\n\016optional"
    "_int64\030\002 \001(\003\022\027\n\017optional_uint32\030\003 \001(\r\022\027\n"
    "\017optional_uint64\030\004 \001(\004\022\027\n\017optional_sint3"
    "2\030\005 \001(\021\022\027\n\017optional_sint64\030\006 \001(\022\022\030\n\020opti"
    "onal_fixed32\030\007 \001(\007\022\030\n\020optional_fixed64\030\010"
    " \001(\006\022\031\n\021optional_sfixed32\030\t \001(\017\022\031\n\021optio"
    "nal_sfixed64\030\n \001(\020\022\026\n\016optional_float\030\013 \001"
    "(\002\022\027\n\017optional_double\030\014 \001(\001\022\025\n\roptional_"
    "bool\030\r \001(\010\022\027\n\017optional_string\030\016 \001(\t\022\026\n\016o"
    "ptional_bytes\030\017 \001(\014\022R\n\027optional_nested_m"
    "essage\030\022 \001(\01321.proto3_arena_unittest.Tes"
    "tAllTypes.NestedMessage\022G\n\030optional_fore"
    "ign_message\030\023 \001(\0132%.proto3_arena_unittes"
    "t.ForeignMessage\022H\n\027optional_import_mess"
    "age\030\024 \001(\0132\'.protobuf_unittest_import.Imp"
    "ortMessage\022L\n\024optional_nested_enum\030\025 \001(\016"
    "2..proto3_arena_unittest.TestAllTypes.Ne"
    "stedEnum\022A\n\025optional_foreign_enum\030\026 \001(\0162"
    "\".proto3_arena_unittest.ForeignEnum\022!\n\025o"
    "ptional_string_piece\030\030 \001(\tB\002\010\002\022\031\n\roption"
    "al_cord\030\031 \001(\tB\002\010\001\022U\n\036optional_public_imp"
    "ort_message\030\032 \001(\0132-.protobuf_unittest_im"
    "port.PublicImportMessage\022T\n\025optional_laz"
    "y_message\030\033 \001(\01321.proto3_arena_unittest."
    "TestAllTypes.NestedMessageB\002(\001\022_\n option"
    "al_unverified_lazy_message\030\034 \001(\01321.proto"
    "3_arena_unittest.TestAllTypes.NestedMess"
    "ageB\002x\001\022Q\n\034optional_lazy_import_message\030"
    "s \001(\0132\'.protobuf_unittest_import.ImportM"
    "essageB\002(\001\022\026\n\016repeated_int32\030\037 \003(\005\022\026\n\016re"
    "peated_int64\030  \003(\003\022\027\n\017repeated_uint32\030! "
    "\003(\r\022\027\n\017repeated_uint64\030\" \003(\004\022\027\n\017repeated"
    "_sint32\030# \003(\021\022\027\n\017repeated_sint64\030$ \003(\022\022\030"
    "\n\020repeated_fixed32\030% \003(\007\022\030\n\020repeated_fix"
    "ed64\030& \003(\006\022\031\n\021repeated_sfixed32\030\' \003(\017\022\031\n"
    "\021repeated_sfixed64\030( \003(\020\022\026\n\016repeated_flo"
    "at\030) \003(\002\022\027\n\017repeated_double\030* \003(\001\022\025\n\rrep"
    "eated_bool\030+ \003(\010\022\027\n\017repeated_string\030, \003("
    "\t\022\026\n\016repeated_bytes\030- \003(\014\022\"\n\025proto3_opti"
    "onal_int32\030t \001(\005H\001\210\001\001\022\"\n\025proto3_optional"
    "_int64\030u \001(\003H\002\210\001\001\022#\n\026proto3_optional_uin"
    "t32\030v \001(\rH\003\210\001\001\022#\n\026proto3_optional_uint64"
    "\030w \001(\004H\004\210\001\001\022#\n\026proto3_optional_sint32\030x "
    "\001(\021H\005\210\001\001\022#\n\026proto3_optional_sint64\030y \001(\022"
    "H\006\210\001\001\022$\n\027proto3_optional_fixed32\030z \001(\007H\007"
    "\210\001\001\022$\n\027proto3_optional_fixed64\030{ \001(\006H\010\210\001"
    "\001\022%\n\030proto3_optional_sfixed32\030| \001(\017H\t\210\001\001"
    "\022%\n\030proto3_optional_sfixed64\030} \001(\020H\n\210\001\001\022"
    "\"\n\025proto3_optional_float\030~ \001(\002H\013\210\001\001\022#\n\026p"
    "roto3_optional_double\030\177 \001(\001H\014\210\001\001\022\"\n\024prot"
    "o3_optional_bool\030\200\001 \001(\010H\r\210\001\001\022$\n\026proto3_o"
    "ptional_string\030\201\001 \001(\tH\016\210\001\001\022#\n\025proto3_opt"
    "ional_bytes\030\202\001 \001(\014H\017\210\001\001\022R\n\027repeated_nest"
    "ed_message\0300 \003(\01321.proto3_arena_unittest"
    ".TestAllTypes.NestedMessage\022G\n\030repeated_"
    "foreign_message\0301 \003(\0132%.proto3_arena_uni"
    "ttest.ForeignMessage\022H\n\027repeated_import_"
    "message\0302 \003(\0132\'.protobuf_unittest_import"
    ".ImportMessage\022L\n\024repeated_nested_enum\0303"
    " \003(\0162..proto3_arena_unittest.TestAllType"
    "s.NestedEnum\022A\n\025repeated_foreign_enum\0304 "
    "\003(\0162\".proto3_arena_unittest.ForeignEnum\022"
    "!\n\025repeated_string_piece\0306 \003(\tB\002\010\002\022\031\n\rre"
    "peated_cord\0307 \003(\tB\002\010\001\022P\n\025repeated_lazy_m"
    "essage\0309 \003(\01321.proto3_arena_unittest.Tes"
    "tAllTypes.NestedMessage\022\026\n\014oneof_uint32\030"
    "o \001(\rH\000\022Q\n\024oneof_nested_message\030p \001(\01321."
    "proto3_arena_unittest.TestAllTypes.Neste"
    "dMessageH\000\022\026\n\014oneof_string\030q \001(\tH\000\022\025\n\013on"
    "eof_bytes\030r \001(\014H\000\032\033\n\rNestedMessage\022\n\n\002bb"
    "\030\001 \001(\005\"C\n\nNestedEnum\022\010\n\004ZERO\020\000\022\007\n\003FOO\020\001\022"
    "\007\n\003BAR\020\002\022\007\n\003BAZ\020\003\022\020\n\003NEG\020\377\377\377\377\377\377\377\377\377\001B\r\n\013o"
    "neof_fieldB\030\n\026_proto3_optional_int32B\030\n\026"
    "_proto3_optional_int64B\031\n\027_proto3_option"
    "al_uint32B\031\n\027_proto3_optional_uint64B\031\n\027"
    "_proto3_optional_sint32B\031\n\027_proto3_optio"
    "nal_sint64B\032\n\030_proto3_optional_fixed32B\032"
    "\n\030_proto3_optional_fixed64B\033\n\031_proto3_op"
    "tional_sfixed32B\033\n\031_proto3_optional_sfix"
    "ed64B\030\n\026_proto3_optional_floatB\031\n\027_proto"
    "3_optional_doubleB\027\n\025_proto3_optional_bo"
    "olB\031\n\027_proto3_optional_stringB\030\n\026_proto3"
    "_optional_bytes\"\256\003\n\017TestPackedTypes\022\030\n\014p"
    "acked_int32\030Z \003(\005B\002\020\001\022\030\n\014packed_int64\030[ "
    "\003(\003B\002\020\001\022\031\n\rpacked_uint32\030\\ \003(\rB\002\020\001\022\031\n\rpa"
    "cked_uint64\030] \003(\004B\002\020\001\022\031\n\rpacked_sint32\030^"
    " \003(\021B\002\020\001\022\031\n\rpacked_sint64\030_ \003(\022B\002\020\001\022\032\n\016p"
    "acked_fixed32\030` \003(\007B\002\020\001\022\032\n\016packed_fixed6"
    "4\030a \003(\006B\002\020\001\022\033\n\017packed_sfixed32\030b \003(\017B\002\020\001"
    "\022\033\n\017packed_sfixed64\030c \003(\020B\002\020\001\022\030\n\014packed_"
    "float\030d \003(\002B\002\020\001\022\031\n\rpacked_double\030e \003(\001B\002"
    "\020\001\022\027\n\013packed_bool\030f \003(\010B\002\020\001\022;\n\013packed_en"
    "um\030g \003(\0162\".proto3_arena_unittest.Foreign"
    "EnumB\002\020\001\"\337\003\n\021TestUnpackedTypes\022\032\n\016repeat"
    "ed_int32\030\001 \003(\005B\002\020\000\022\032\n\016repeated_int64\030\002 \003"
    "(\003B\002\020\000\022\033\n\017repeated_uint32\030\003 \003(\rB\002\020\000\022\033\n\017r"
    "epeated_uint64\030\004 \003(\004B\002\020\000\022\033\n\017repeated_sin"
    "t32\030\005 \003(\021B\002\020\000\022\033\n\017repeated_sint64\030\006 \003(\022B\002"
    "\020\000\022\034\n\020repeated_fixed32\030\007 \003(\007B\002\020\000\022\034\n\020repe"
    "ated_fixed64\030\010 \003(\006B\002\020\000\022\035\n\021repeated_sfixe"
    "d32\030\t \003(\017B\002\020\000\022\035\n\021repeated_sfixed64\030\n \003(\020"
    "B\002\020\000\022\032\n\016repeated_float\030\013 \003(\002B\002\020\000\022\033\n\017repe"
    "ated_double\030\014 \003(\001B\002\020\000\022\031\n\rrepeated_bool\030\r"
    " \003(\010B\002\020\000\022P\n\024repeated_nested_enum\030\016 \003(\0162."
    ".proto3_arena_unittest.TestAllTypes.Nest"
    "edEnumB\002\020\000\"\206\002\n\022NestedTestAllTypes\0228\n\005chi"
    "ld\030\001 \001(\0132).proto3_arena_unittest.NestedT"
    "estAllTypes\0224\n\007payload\030\002 \001(\0132#.proto3_ar"
    "ena_unittest.TestAllTypes\022A\n\016repeated_ch"
    "ild\030\003 \003(\0132).proto3_arena_unittest.Nested"
    "TestAllTypes\022=\n\014lazy_payload\030\004 \001(\0132#.pro"
    "to3_arena_unittest.TestAllTypesB\002(\001\"\033\n\016F"
    "oreignMessage\022\t\n\001c\030\001 \001(\005\"\022\n\020TestEmptyMes"
    "sage\"Y\n\027TestPickleNestedMessage\032>\n\rNeste"
    "dMessage\022\n\n\002bb\030\001 \001(\005\032!\n\023NestedNestedMess"
    "age\022\n\n\002cc\030\001 \001(\005*g\n\013ForeignEnum\022\020\n\014FOREIG"
    "N_ZERO\020\000\022\017\n\013FOREIGN_FOO\020\004\022\017\n\013FOREIGN_BAR"
    "\020\005\022\017\n\013FOREIGN_BAZ\020\006\022\023\n\rFOREIGN_LARGE\020\300\304\007"
    "B\003\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2funittest_5fimport_2eproto,
};
static ::absl::once_flag descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto = {
    false,
    false,
    4853,
    descriptor_table_protodef_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
    "google/protobuf/unittest_proto3_arena.proto",
    &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto_once,
    descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto_deps,
    1,
    10,
    schemas,
    file_default_instances,
    TableStruct_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto::offsets,
    file_level_enum_descriptors_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
};
namespace proto3_arena_unittest {
const ::google::protobuf::EnumDescriptor* TestAllTypes_NestedEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TestAllTypes_NestedEnum_internal_data_[] = {
    393215u, 0u, };
bool TestAllTypes_NestedEnum_IsValid(int value) {
  return -1 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestAllTypes_NestedEnum TestAllTypes::ZERO;
constexpr TestAllTypes_NestedEnum TestAllTypes::FOO;
constexpr TestAllTypes_NestedEnum TestAllTypes::BAR;
constexpr TestAllTypes_NestedEnum TestAllTypes::BAZ;
constexpr TestAllTypes_NestedEnum TestAllTypes::NEG;
constexpr TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MIN;
constexpr TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MAX;
constexpr int TestAllTypes::NestedEnum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ForeignEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ForeignEnum_internal_data_[] = {
    65536u, 65568u, 56u, 123456u, };
bool ForeignEnum_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, ForeignEnum_internal_data_);
}
// ===================================================================

class TestAllTypes_NestedMessage::_Internal {
 public:
};

TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.TestAllTypes.NestedMessage)
}
TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(
    ::google::protobuf::Arena* arena, const TestAllTypes_NestedMessage& from)
    : TestAllTypes_NestedMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypes_NestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestAllTypes_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bb_ = {};
}
TestAllTypes_NestedMessage::~TestAllTypes_NestedMessage() {
  // @@protoc_insertion_point(destructor:proto3_arena_unittest.TestAllTypes.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllTypes_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestAllTypes_NestedMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestAllTypes_NestedMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestAllTypes_NestedMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestAllTypes_NestedMessage>(),
            ::google::protobuf::Message::GetNewImpl<TestAllTypes_NestedMessage>(),
            ::google::protobuf::Message::GetClearImpl<TestAllTypes_NestedMessage>(), &TestAllTypes_NestedMessage::ByteSizeLong,
                &TestAllTypes_NestedMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_._cached_size_),
            false,
        },
        &TestAllTypes_NestedMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestAllTypes_NestedMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestAllTypes_NestedMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes_NestedMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 bb = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes_NestedMessage, _impl_.bb_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_.bb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_.bb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TestAllTypes_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_arena_unittest.TestAllTypes.NestedMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bb_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestAllTypes_NestedMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestAllTypes_NestedMessage& this_ = static_cast<const TestAllTypes_NestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestAllTypes_NestedMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestAllTypes_NestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:proto3_arena_unittest.TestAllTypes.NestedMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 bb = 1;
          if (this_._internal_bb() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_bb(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:proto3_arena_unittest.TestAllTypes.NestedMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestAllTypes_NestedMessage::ByteSizeLong(const MessageLite& base) {
          const TestAllTypes_NestedMessage& this_ = static_cast<const TestAllTypes_NestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestAllTypes_NestedMessage::ByteSizeLong() const {
          const TestAllTypes_NestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:proto3_arena_unittest.TestAllTypes.NestedMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 bb = 1;
            if (this_._internal_bb() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_bb());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestAllTypes_NestedMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestAllTypes_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestAllTypes_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto3_arena_unittest.TestAllTypes.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bb() != 0) {
    _this->_impl_.bb_ = from._impl_.bb_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllTypes_NestedMessage::CopyFrom(const TestAllTypes_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_arena_unittest.TestAllTypes.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestAllTypes_NestedMessage::InternalSwap(TestAllTypes_NestedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.bb_, other->_impl_.bb_);
}

::google::protobuf::Metadata TestAllTypes_NestedMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestAllTypes::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestAllTypes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::proto3_arena_unittest::TestAllTypes, _impl_._oneof_case_);
};

void TestAllTypes::clear_optional_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_import_message_ != nullptr) _impl_.optional_import_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TestAllTypes::clear_optional_public_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_public_import_message_ != nullptr) _impl_.optional_public_import_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TestAllTypes::clear_optional_lazy_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_lazy_import_message_ != nullptr) _impl_.optional_lazy_import_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void TestAllTypes::clear_repeated_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_import_message_.Clear();
}
void TestAllTypes::set_allocated_oneof_nested_message(::proto3_arena_unittest::TestAllTypes_NestedMessage* oneof_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_oneof_field();
  if (oneof_nested_message) {
    ::google::protobuf::Arena* submessage_arena = oneof_nested_message->GetArena();
    if (message_arena != submessage_arena) {
      oneof_nested_message = ::google::protobuf::internal::GetOwnedMessage(message_arena, oneof_nested_message, submessage_arena);
    }
    set_has_oneof_nested_message();
    _impl_.oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:proto3_arena_unittest.TestAllTypes.oneof_nested_message)
}
TestAllTypes::TestAllTypes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.TestAllTypes)
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::proto3_arena_unittest::TestAllTypes& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repeated_int32_{visibility, arena, from.repeated_int32_},
        _repeated_int32_cached_byte_size_{0},
        repeated_int64_{visibility, arena, from.repeated_int64_},
        _repeated_int64_cached_byte_size_{0},
        repeated_uint32_{visibility, arena, from.repeated_uint32_},
        _repeated_uint32_cached_byte_size_{0},
        repeated_uint64_{visibility, arena, from.repeated_uint64_},
        _repeated_uint64_cached_byte_size_{0},
        repeated_sint32_{visibility, arena, from.repeated_sint32_},
        _repeated_sint32_cached_byte_size_{0},
        repeated_sint64_{visibility, arena, from.repeated_sint64_},
        _repeated_sint64_cached_byte_size_{0},
        repeated_fixed32_{visibility, arena, from.repeated_fixed32_},
        repeated_fixed64_{visibility, arena, from.repeated_fixed64_},
        repeated_sfixed32_{visibility, arena, from.repeated_sfixed32_},
        repeated_sfixed64_{visibility, arena, from.repeated_sfixed64_},
        repeated_float_{visibility, arena, from.repeated_float_},
        repeated_double_{visibility, arena, from.repeated_double_},
        repeated_bool_{visibility, arena, from.repeated_bool_},
        repeated_string_{visibility, arena, from.repeated_string_},
        repeated_bytes_{visibility, arena, from.repeated_bytes_},
        repeated_nested_message_{visibility, arena, from.repeated_nested_message_},
        repeated_foreign_message_{visibility, arena, from.repeated_foreign_message_},
        repeated_import_message_{visibility, arena, from.repeated_import_message_},
        repeated_nested_enum_{visibility, arena, from.repeated_nested_enum_},
        _repeated_nested_enum_cached_byte_size_{0},
        repeated_foreign_enum_{visibility, arena, from.repeated_foreign_enum_},
        _repeated_foreign_enum_cached_byte_size_{0},
        repeated_string_piece_{visibility, arena, from.repeated_string_piece_},
        repeated_cord_{visibility, arena, from.repeated_cord_},
        repeated_lazy_message_{visibility, arena, from.repeated_lazy_message_},
        optional_string_(arena, from.optional_string_),
        optional_bytes_(arena, from.optional_bytes_),
        optional_string_piece_(arena, from.optional_string_piece_),
        optional_cord_(arena, from.optional_cord_),
        proto3_optional_string_(arena, from.proto3_optional_string_),
        proto3_optional_bytes_(arena, from.proto3_optional_bytes_),
        oneof_field_{},
        _oneof_case_{from._oneof_case_[0]} {}

TestAllTypes::TestAllTypes(
    ::google::protobuf::Arena* arena,
    const TestAllTypes& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestAllTypes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optional_nested_message_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes_NestedMessage>(
                              arena, *from._impl_.optional_nested_message_)
                        : nullptr;
  _impl_.optional_foreign_message_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::ForeignMessage>(
                              arena, *from._impl_.optional_foreign_message_)
                        : nullptr;
  _impl_.optional_import_message_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest_import::ImportMessage>(
                              arena, *from._impl_.optional_import_message_)
                        : nullptr;
  _impl_.optional_public_import_message_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest_import::PublicImportMessage>(
                              arena, *from._impl_.optional_public_import_message_)
                        : nullptr;
  _impl_.optional_lazy_message_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes_NestedMessage>(
                              arena, *from._impl_.optional_lazy_message_)
                        : nullptr;
  _impl_.optional_unverified_lazy_message_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes_NestedMessage>(
                              arena, *from._impl_.optional_unverified_lazy_message_)
                        : nullptr;
  _impl_.optional_lazy_import_message_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest_import::ImportMessage>(
                              arena, *from._impl_.optional_lazy_import_message_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_int64_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, optional_int64_),
           offsetof(Impl_, proto3_optional_float_) -
               offsetof(Impl_, optional_int64_) +
               sizeof(Impl_::proto3_optional_float_));
  switch (oneof_field_case()) {
    case ONEOF_FIELD_NOT_SET:
      break;
      case kOneofUint32:
        _impl_.oneof_field_.oneof_uint32_ = from._impl_.oneof_field_.oneof_uint32_;
        break;
      case kOneofNestedMessage:
        _impl_.oneof_field_.oneof_nested_message_ = ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes_NestedMessage>(arena, *from._impl_.oneof_field_.oneof_nested_message_);
        break;
      case kOneofString:
        new (&_impl_.oneof_field_.oneof_string_) decltype(_impl_.oneof_field_.oneof_string_){arena, from._impl_.oneof_field_.oneof_string_};
        break;
      case kOneofBytes:
        new (&_impl_.oneof_field_.oneof_bytes_) decltype(_impl_.oneof_field_.oneof_bytes_){arena, from._impl_.oneof_field_.oneof_bytes_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:proto3_arena_unittest.TestAllTypes)
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repeated_int32_{visibility, arena},
        _repeated_int32_cached_byte_size_{0},
        repeated_int64_{visibility, arena},
        _repeated_int64_cached_byte_size_{0},
        repeated_uint32_{visibility, arena},
        _repeated_uint32_cached_byte_size_{0},
        repeated_uint64_{visibility, arena},
        _repeated_uint64_cached_byte_size_{0},
        repeated_sint32_{visibility, arena},
        _repeated_sint32_cached_byte_size_{0},
        repeated_sint64_{visibility, arena},
        _repeated_sint64_cached_byte_size_{0},
        repeated_fixed32_{visibility, arena},
        repeated_fixed64_{visibility, arena},
        repeated_sfixed32_{visibility, arena},
        repeated_sfixed64_{visibility, arena},
        repeated_float_{visibility, arena},
        repeated_double_{visibility, arena},
        repeated_bool_{visibility, arena},
        repeated_string_{visibility, arena},
        repeated_bytes_{visibility, arena},
        repeated_nested_message_{visibility, arena},
        repeated_foreign_message_{visibility, arena},
        repeated_import_message_{visibility, arena},
        repeated_nested_enum_{visibility, arena},
        _repeated_nested_enum_cached_byte_size_{0},
        repeated_foreign_enum_{visibility, arena},
        _repeated_foreign_enum_cached_byte_size_{0},
        repeated_string_piece_{visibility, arena},
        repeated_cord_{visibility, arena},
        repeated_lazy_message_{visibility, arena},
        optional_string_(arena),
        optional_bytes_(arena),
        optional_string_piece_(arena),
        optional_cord_(arena),
        proto3_optional_string_(arena),
        proto3_optional_bytes_(arena),
        oneof_field_{},
        _oneof_case_{} {}

inline void TestAllTypes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_nested_message_),
           0,
           offsetof(Impl_, proto3_optional_float_) -
               offsetof(Impl_, optional_nested_message_) +
               sizeof(Impl_::proto3_optional_float_));
}
TestAllTypes::~TestAllTypes() {
  // @@protoc_insertion_point(destructor:proto3_arena_unittest.TestAllTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllTypes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.optional_string_.Destroy();
  _impl_.optional_bytes_.Destroy();
  _impl_.optional_string_piece_.Destroy();
  _impl_.optional_cord_.Destroy();
  _impl_.proto3_optional_string_.Destroy();
  _impl_.proto3_optional_bytes_.Destroy();
  delete _impl_.optional_nested_message_;
  delete _impl_.optional_foreign_message_;
  delete _impl_.optional_import_message_;
  delete _impl_.optional_public_import_message_;
  delete _impl_.optional_lazy_message_;
  delete _impl_.optional_unverified_lazy_message_;
  delete _impl_.optional_lazy_import_message_;
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  _impl_.~Impl_();
}

void TestAllTypes::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:proto3_arena_unittest.TestAllTypes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.oneof_field_.oneof_nested_message_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.oneof_field_.oneof_nested_message_);
      }
      break;
    }
    case kOneofString: {
      _impl_.oneof_field_.oneof_string_.Destroy();
      break;
    }
    case kOneofBytes: {
      _impl_.oneof_field_.oneof_bytes_.Destroy();
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestAllTypes::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestAllTypes_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestAllTypes::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestAllTypes>(),
            ::google::protobuf::Message::GetNewImpl<TestAllTypes>(),
            ::google::protobuf::Message::GetClearImpl<TestAllTypes>(), &TestAllTypes::ByteSizeLong,
                &TestAllTypes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_._cached_size_),
            false,
        },
        &TestAllTypes::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestAllTypes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 68, 12, 239, 19> TestAllTypes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_._has_bits_),
    0, // no _extensions_
    130, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    809598976,  // skipmap
    offsetof(decltype(_table_), field_entries),
    68,  // num_field_entries
    12,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 optional_int32 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes, _impl_.optional_int32_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int32_)}},
    // int64 optional_int64 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestAllTypes, _impl_.optional_int64_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int64_)}},
    // uint32 optional_uint32 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes, _impl_.optional_uint32_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint32_)}},
    // uint64 optional_uint64 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestAllTypes, _impl_.optional_uint64_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint64_)}},
    // sint32 optional_sint32 = 5;
    {::_pbi::TcParser::FastZ32S1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint32_)}},
    // sint64 optional_sint64 = 6;
    {::_pbi::TcParser::FastZ64S1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint64_)}},
    // fixed32 optional_fixed32 = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed32_)}},
    // fixed64 optional_fixed64 = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed64_)}},
    // sfixed32 optional_sfixed32 = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed32_)}},
    // sfixed64 optional_sfixed64 = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed64_)}},
    // float optional_float = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_float_)}},
    // double optional_double = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_double_)}},
    // bool optional_bool = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestAllTypes, _impl_.optional_bool_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bool_)}},
    // string optional_string = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_)}},
    // bytes optional_bytes = 15;
    {::_pbi::TcParser::FastBS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bytes_)}},
    // repeated int64 repeated_int64 = 32;
    {::_pbi::TcParser::FastV64P2,
     {642, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int64_)}},
    // repeated uint32 repeated_uint32 = 33;
    {::_pbi::TcParser::FastV32P2,
     {650, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint32_)}},
    // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 2, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_message_)}},
    // .proto3_arena_unittest.ForeignMessage optional_foreign_message = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 3, 1, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_message_)}},
    // .protobuf_unittest_import.ImportMessage optional_import_message = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 4, 2, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_import_message_)}},
    // .proto3_arena_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_enum_)}},
    // .proto3_arena_unittest.ForeignEnum optional_foreign_enum = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_enum_)}},
    // repeated sfixed32 repeated_sfixed32 = 39;
    {::_pbi::TcParser::FastF32P2,
     {698, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed32_)}},
    // repeated sfixed64 repeated_sfixed64 = 40;
    {::_pbi::TcParser::FastF64P2,
     {706, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed64_)}},
    // string optional_cord = 25 [ctype = CORD];
    {::_pbi::TcParser::FastUcS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_cord_)}},
    // .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 5, 3, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_public_import_message_)}},
    // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
    {::_pbi::TcParser::FastMtS2,
     {474, 6, 4, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_lazy_message_)}},
    // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
    {::_pbi::TcParser::FastMtS2,
     {482, 7, 5, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_unverified_lazy_message_)}},
    // repeated bytes repeated_bytes = 45;
    {::_pbi::TcParser::FastBR2,
     {746, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bytes_)}},
    // optional float proto3_optional_float = 126;
    {::_pbi::TcParser::FastF32S2,
     {2037, 21, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_float_)}},
    // repeated int32 repeated_int32 = 31;
    {::_pbi::TcParser::FastV32P2,
     {506, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int32_)}},
  }}, {{
    33, 0, 7,
    24576, 27, 65168, 41, 65535, 48, 65535, 48, 16383, 48, 0, 50,
    65532, 66,
    65535, 65535
  }}, {{
    // int32 optional_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 optional_int64 = 2;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 optional_uint32 = 3;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 optional_uint64 = 4;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // sint32 optional_sint32 = 5;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint64 optional_sint64 = 6;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // fixed32 optional_fixed32 = 7;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed32)},
    // fixed64 optional_fixed64 = 8;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed64)},
    // sfixed32 optional_sfixed32 = 9;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSFixed32)},
    // sfixed64 optional_sfixed64 = 10;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSFixed64)},
    // float optional_float = 11;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_float_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // double optional_double = 12;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_double_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool optional_bool = 13;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bool_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string optional_string = 14;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes optional_bytes = 15;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_message_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto3_arena_unittest.ForeignMessage optional_foreign_message = 19;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_message_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .protobuf_unittest_import.ImportMessage optional_import_message = 20;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_import_message_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto3_arena_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_enum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .proto3_arena_unittest.ForeignEnum optional_foreign_enum = 22;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_enum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string optional_string_piece = 24 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_piece_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string optional_cord = 25 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_cord_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_public_import_message_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_lazy_message_), _Internal::kHasBitsOffset + 6, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_unverified_lazy_message_), _Internal::kHasBitsOffset + 7, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 repeated_int32 = 31;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int64 repeated_int64 = 32;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated uint32 repeated_uint32 = 33;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint64 repeated_uint64 = 34;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated sint32 repeated_sint32 = 35;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sint32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt32)},
    // repeated sint64 repeated_sint64 = 36;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sint64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt64)},
    // repeated fixed32 repeated_fixed32 = 37;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_fixed32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed32)},
    // repeated fixed64 repeated_fixed64 = 38;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_fixed64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed64)},
    // repeated sfixed32 repeated_sfixed32 = 39;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed32)},
    // repeated sfixed64 repeated_sfixed64 = 40;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed64)},
    // repeated float repeated_float = 41;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_float_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated double repeated_double = 42;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_double_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated bool repeated_bool = 43;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bool_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // repeated string repeated_string = 44;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_string_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated bytes repeated_bytes = 45;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bytes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .proto3_arena_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_nested_message_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .proto3_arena_unittest.ForeignMessage repeated_foreign_message = 49;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_foreign_message_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_import_message_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .proto3_arena_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_nested_enum_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .proto3_arena_unittest.ForeignEnum repeated_foreign_enum = 52;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_foreign_enum_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_string_piece_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string repeated_cord = 55 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_cord_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .proto3_arena_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_lazy_message_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 oneof_uint32 = 111;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_uint32_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .proto3_arena_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_nested_message_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oneof_string = 113;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes oneof_bytes = 114;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // .protobuf_unittest_import.ImportMessage optional_lazy_import_message = 115 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_lazy_import_message_), _Internal::kHasBitsOffset + 8, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 proto3_optional_int32 = 116;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_int32_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 proto3_optional_int64 = 117;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_int64_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 proto3_optional_uint32 = 118;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_uint32_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 proto3_optional_uint64 = 119;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_uint64_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional sint32 proto3_optional_sint32 = 120;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_sint32_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint64 proto3_optional_sint64 = 121;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_sint64_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt64)},
    // optional fixed32 proto3_optional_fixed32 = 122;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_fixed32_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 proto3_optional_fixed64 = 123;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_fixed64_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional sfixed32 proto3_optional_sfixed32 = 124;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_sfixed32_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // optional sfixed64 proto3_optional_sfixed64 = 125;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_sfixed64_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed64)},
    // optional float proto3_optional_float = 126;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_float_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional double proto3_optional_double = 127;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_double_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool proto3_optional_bool = 128;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_bool_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string proto3_optional_string = 129;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bytes proto3_optional_bytes = 130;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_bytes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::ForeignMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::ImportMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::PublicImportMessage>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::ForeignMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::ImportMessage>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::ImportMessage>()},
  }}, {{
    "\42\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\25\15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\25\15\0\0\0\14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\26\0\0\0\0"
    "proto3_arena_unittest.TestAllTypes"
    "optional_string"
    "optional_string_piece"
    "optional_cord"
    "repeated_string"
    "repeated_string_piece"
    "repeated_cord"
    "oneof_string"
    "proto3_optional_string"
  }},
};

PROTOBUF_NOINLINE void TestAllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_arena_unittest.TestAllTypes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_int32_.Clear();
  _impl_.repeated_int64_.Clear();
  _impl_.repeated_uint32_.Clear();
  _impl_.repeated_uint64_.Clear();
  _impl_.repeated_sint32_.Clear();
  _impl_.repeated_sint64_.Clear();
  _impl_.repeated_fixed32_.Clear();
  _impl_.repeated_fixed64_.Clear();
  _impl_.repeated_sfixed32_.Clear();
  _impl_.repeated_sfixed64_.Clear();
  _impl_.repeated_float_.Clear();
  _impl_.repeated_double_.Clear();
  _impl_.repeated_bool_.Clear();
  _impl_.repeated_string_.Clear();
  _impl_.repeated_bytes_.Clear();
  _impl_.repeated_nested_message_.Clear();
  _impl_.repeated_foreign_message_.Clear();
  _impl_.repeated_import_message_.Clear();
  _impl_.repeated_nested_enum_.Clear();
  _impl_.repeated_foreign_enum_.Clear();
  _impl_.repeated_string_piece_.Clear();
  _impl_.repeated_cord_.Clear();
  _impl_.repeated_lazy_message_.Clear();
  _impl_.optional_string_.ClearToEmpty();
  _impl_.optional_bytes_.ClearToEmpty();
  _impl_.optional_string_piece_.ClearToEmpty();
  _impl_.optional_cord_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.proto3_optional_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.proto3_optional_bytes_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optional_nested_message_ != nullptr);
      _impl_.optional_nested_message_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.optional_foreign_message_ != nullptr);
      _impl_.optional_foreign_message_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.optional_import_message_ != nullptr);
      _impl_.optional_import_message_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.optional_public_import_message_ != nullptr);
      _impl_.optional_public_import_message_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.optional_lazy_message_ != nullptr);
      _impl_.optional_lazy_message_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.optional_unverified_lazy_message_ != nullptr);
      _impl_.optional_unverified_lazy_message_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.optional_lazy_import_message_ != nullptr);
    _impl_.optional_lazy_import_message_->Clear();
  }
  ::memset(&_impl_.optional_int64_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.optional_bool_) -
      reinterpret_cast<char*>(&_impl_.optional_int64_)) + sizeof(_impl_.optional_bool_));
  if (cached_has_bits & 0x0000fe00u) {
    ::memset(&_impl_.proto3_optional_bool_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.proto3_optional_sint64_) -
        reinterpret_cast<char*>(&_impl_.proto3_optional_bool_)) + sizeof(_impl_.proto3_optional_sint64_));
  }
  if (cached_has_bits & 0x003f0000u) {
    ::memset(&_impl_.proto3_optional_fixed64_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.proto3_optional_float_) -
        reinterpret_cast<char*>(&_impl_.proto3_optional_fixed64_)) + sizeof(_impl_.proto3_optional_float_));
  }
  clear_oneof_field();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestAllTypes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestAllTypes& this_ = static_cast<const TestAllTypes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestAllTypes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestAllTypes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:proto3_arena_unittest.TestAllTypes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 optional_int32 = 1;
          if (this_._internal_optional_int32() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_optional_int32(), target);
          }

          // int64 optional_int64 = 2;
          if (this_._internal_optional_int64() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_optional_int64(), target);
          }

          // uint32 optional_uint32 = 3;
          if (this_._internal_optional_uint32() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_optional_uint32(), target);
          }

          // uint64 optional_uint64 = 4;
          if (this_._internal_optional_uint64() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_optional_uint64(), target);
          }

          // sint32 optional_sint32 = 5;
          if (this_._internal_optional_sint32() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                5, this_._internal_optional_sint32(), target);
          }

          // sint64 optional_sint64 = 6;
          if (this_._internal_optional_sint64() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
                6, this_._internal_optional_sint64(), target);
          }

          // fixed32 optional_fixed32 = 7;
          if (this_._internal_optional_fixed32() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
                7, this_._internal_optional_fixed32(), target);
          }

          // fixed64 optional_fixed64 = 8;
          if (this_._internal_optional_fixed64() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
                8, this_._internal_optional_fixed64(), target);
          }

          // sfixed32 optional_sfixed32 = 9;
          if (this_._internal_optional_sfixed32() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
                9, this_._internal_optional_sfixed32(), target);
          }

          // sfixed64 optional_sfixed64 = 10;
          if (this_._internal_optional_sfixed64() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
                10, this_._internal_optional_sfixed64(), target);
          }

          // float optional_float = 11;
          if (::absl::bit_cast<::uint32_t>(this_._internal_optional_float()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_optional_float(), target);
          }

          // double optional_double = 12;
          if (::absl::bit_cast<::uint64_t>(this_._internal_optional_double()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                12, this_._internal_optional_double(), target);
          }

          // bool optional_bool = 13;
          if (this_._internal_optional_bool() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_optional_bool(), target);
          }

          // string optional_string = 14;
          if (!this_._internal_optional_string().empty()) {
            const std::string& _s = this_._internal_optional_string();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto3_arena_unittest.TestAllTypes.optional_string");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // bytes optional_bytes = 15;
          if (!this_._internal_optional_bytes().empty()) {
            const std::string& _s = this_._internal_optional_bytes();
            target = stream->WriteBytesMaybeAliased(15, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.optional_nested_message_, this_._impl_.optional_nested_message_->GetCachedSize(), target,
                stream);
          }

          // .proto3_arena_unittest.ForeignMessage optional_foreign_message = 19;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                19, *this_._impl_.optional_foreign_message_, this_._impl_.optional_foreign_message_->GetCachedSize(), target,
                stream);
          }

          // .protobuf_unittest_import.ImportMessage optional_import_message = 20;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                20, *this_._impl_.optional_import_message_, this_._impl_.optional_import_message_->GetCachedSize(), target,
                stream);
          }

          // .proto3_arena_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
          if (this_._internal_optional_nested_enum() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                21, this_._internal_optional_nested_enum(), target);
          }

          // .proto3_arena_unittest.ForeignEnum optional_foreign_enum = 22;
          if (this_._internal_optional_foreign_enum() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                22, this_._internal_optional_foreign_enum(), target);
          }

          // string optional_string_piece = 24 [ctype = STRING_PIECE];
          if (!this_._internal_optional_string_piece().empty()) {
            const std::string& _s = this_._internal_optional_string_piece();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto3_arena_unittest.TestAllTypes.optional_string_piece");
            target = stream->WriteStringMaybeAliased(24, _s, target);
          }

          // string optional_cord = 25 [ctype = CORD];
          if (!this_._internal_optional_cord().empty()) {
            const std::string& _s = this_._internal_optional_cord();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto3_arena_unittest.TestAllTypes.optional_cord");
            target = stream->WriteStringMaybeAliased(25, _s, target);
          }

          // .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                26, *this_._impl_.optional_public_import_message_, this_._impl_.optional_public_import_message_->GetCachedSize(), target,
                stream);
          }

          // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                27, *this_._impl_.optional_lazy_message_, this_._impl_.optional_lazy_message_->GetCachedSize(), target,
                stream);
          }

          // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                28, *this_._impl_.optional_unverified_lazy_message_, this_._impl_.optional_unverified_lazy_message_->GetCachedSize(), target,
                stream);
          }

          // repeated int32 repeated_int32 = 31;
          {
            int byte_size = this_._impl_._repeated_int32_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  31, this_._internal_repeated_int32(), byte_size, target);
            }
          }

          // repeated int64 repeated_int64 = 32;
          {
            int byte_size = this_._impl_._repeated_int64_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  32, this_._internal_repeated_int64(), byte_size, target);
            }
          }

          // repeated uint32 repeated_uint32 = 33;
          {
            int byte_size = this_._impl_._repeated_uint32_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  33, this_._internal_repeated_uint32(), byte_size, target);
            }
          }

          // repeated uint64 repeated_uint64 = 34;
          {
            int byte_size = this_._impl_._repeated_uint64_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  34, this_._internal_repeated_uint64(), byte_size, target);
            }
          }

          // repeated sint32 repeated_sint32 = 35;
          {
            int byte_size = this_._impl_._repeated_sint32_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteSInt32Packed(
                  35, this_._internal_repeated_sint32(), byte_size, target);
            }
          }

          // repeated sint64 repeated_sint64 = 36;
          {
            int byte_size = this_._impl_._repeated_sint64_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteSInt64Packed(
                  36, this_._internal_repeated_sint64(), byte_size, target);
            }
          }

          // repeated fixed32 repeated_fixed32 = 37;
          if (this_._internal_repeated_fixed32_size() > 0) {
            target = stream->WriteFixedPacked(37, this_._internal_repeated_fixed32(), target);
          }

          // repeated fixed64 repeated_fixed64 = 38;
          if (this_._internal_repeated_fixed64_size() > 0) {
            target = stream->WriteFixedPacked(38, this_._internal_repeated_fixed64(), target);
          }

          // repeated sfixed32 repeated_sfixed32 = 39;
          if (this_._internal_repeated_sfixed32_size() > 0) {
            target = stream->WriteFixedPacked(39, this_._internal_repeated_sfixed32(), target);
          }

          // repeated sfixed64 repeated_sfixed64 = 40;
          if (this_._internal_repeated_sfixed64_size() > 0) {
            target = stream->WriteFixedPacked(40, this_._internal_repeated_sfixed64(), target);
          }

          // repeated float repeated_float = 41;
          if (this_._internal_repeated_float_size() > 0) {
            target = stream->WriteFixedPacked(41, this_._internal_repeated_float(), target);
          }

          // repeated double repeated_double = 42;
          if (this_._internal_repeated_double_size() > 0) {
            target = stream->WriteFixedPacked(42, this_._internal_repeated_double(), target);
          }

          // repeated bool repeated_bool = 43;
          if (this_._internal_repeated_bool_size() > 0) {
            target = stream->WriteFixedPacked(43, this_._internal_repeated_bool(), target);
          }

          // repeated string repeated_string = 44;
          for (int i = 0, n = this_._internal_repeated_string_size(); i < n; ++i) {
            const auto& s = this_._internal_repeated_string().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto3_arena_unittest.TestAllTypes.repeated_string");
            target = stream->WriteString(44, s, target);
          }

          // repeated bytes repeated_bytes = 45;
          for (int i = 0, n = this_._internal_repeated_bytes_size(); i < n; ++i) {
            const auto& s = this_._internal_repeated_bytes().Get(i);
            target = stream->WriteBytes(45, s, target);
          }

          // repeated .proto3_arena_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_repeated_nested_message_size());
               i < n; i++) {
            const auto& repfield = this_._internal_repeated_nested_message().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    48, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .proto3_arena_unittest.ForeignMessage repeated_foreign_message = 49;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_repeated_foreign_message_size());
               i < n; i++) {
            const auto& repfield = this_._internal_repeated_foreign_message().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    49, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_repeated_import_message_size());
               i < n; i++) {
            const auto& repfield = this_._internal_repeated_import_message().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    50, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .proto3_arena_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
          {
            std::size_t byte_size =
                                              this_._impl_._repeated_nested_enum_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  51, this_._internal_repeated_nested_enum(), byte_size, target);
            }
          }

          // repeated .proto3_arena_unittest.ForeignEnum repeated_foreign_enum = 52;
          {
            std::size_t byte_size =
                                              this_._impl_._repeated_foreign_enum_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  52, this_._internal_repeated_foreign_enum(), byte_size, target);
            }
          }

          // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
          for (int i = 0, n = this_._internal_repeated_string_piece_size(); i < n; ++i) {
            const auto& s = this_._internal_repeated_string_piece().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto3_arena_unittest.TestAllTypes.repeated_string_piece");
            target = stream->WriteString(54, s, target);
          }

          // repeated string repeated_cord = 55 [ctype = CORD];
          for (int i = 0, n = this_._internal_repeated_cord_size(); i < n; ++i) {
            const auto& s = this_._internal_repeated_cord().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto3_arena_unittest.TestAllTypes.repeated_cord");
            target = stream->WriteString(55, s, target);
          }

          // repeated .proto3_arena_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_repeated_lazy_message_size());
               i < n; i++) {
            const auto& repfield = this_._internal_repeated_lazy_message().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    57, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          switch (this_.oneof_field_case()) {
            case kOneofUint32: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                  111, this_._internal_oneof_uint32(), target);
              break;
            }
            case kOneofNestedMessage: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  112, *this_._impl_.oneof_field_.oneof_nested_message_, this_._impl_.oneof_field_.oneof_nested_message_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kOneofString: {
              const std::string& _s = this_._internal_oneof_string();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto3_arena_unittest.TestAllTypes.oneof_string");
              target = stream->WriteStringMaybeAliased(113, _s, target);
              break;
            }
            case kOneofBytes: {
              const std::string& _s = this_._internal_oneof_bytes();
              target = stream->WriteBytesMaybeAliased(114, _s, target);
              break;
            }
            default:
              break;
          }
          // .protobuf_unittest_import.ImportMessage optional_lazy_import_message = 115 [lazy = true];
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                115, *this_._impl_.optional_lazy_import_message_, this_._impl_.optional_lazy_import_message_->GetCachedSize(), target,
                stream);
          }

          // optional int32 proto3_optional_int32 = 116;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                116, this_._internal_proto3_optional_int32(), target);
          }

          // optional int64 proto3_optional_int64 = 117;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                117, this_._internal_proto3_optional_int64(), target);
          }

          // optional uint32 proto3_optional_uint32 = 118;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                118, this_._internal_proto3_optional_uint32(), target);
          }

          // optional uint64 proto3_optional_uint64 = 119;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                119, this_._internal_proto3_optional_uint64(), target);
          }

          // optional sint32 proto3_optional_sint32 = 120;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                120, this_._internal_proto3_optional_sint32(), target);
          }

          // optional sint64 proto3_optional_sint64 = 121;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
                121, this_._internal_proto3_optional_sint64(), target);
          }

          // optional fixed32 proto3_optional_fixed32 = 122;
          if (cached_has_bits & 0x00020000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
                122, this_._internal_proto3_optional_fixed32(), target);
          }

          // optional fixed64 proto3_optional_fixed64 = 123;
          if (cached_has_bits & 0x00010000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
                123, this_._internal_proto3_optional_fixed64(), target);
          }

          // optional sfixed32 proto3_optional_sfixed32 = 124;
          if (cached_has_bits & 0x00040000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
                124, this_._internal_proto3_optional_sfixed32(), target);
          }

          // optional sfixed64 proto3_optional_sfixed64 = 125;
          if (cached_has_bits & 0x00080000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
                125, this_._internal_proto3_optional_sfixed64(), target);
          }

          // optional float proto3_optional_float = 126;
          if (cached_has_bits & 0x00200000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                126, this_._internal_proto3_optional_float(), target);
          }

          // optional double proto3_optional_double = 127;
          if (cached_has_bits & 0x00100000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                127, this_._internal_proto3_optional_double(), target);
          }

          // optional bool proto3_optional_bool = 128;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                128, this_._internal_proto3_optional_bool(), target);
          }

          // optional string proto3_optional_string = 129;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_proto3_optional_string();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto3_arena_unittest.TestAllTypes.proto3_optional_string");
            target = stream->WriteStringMaybeAliased(129, _s, target);
          }

          // optional bytes proto3_optional_bytes = 130;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_proto3_optional_bytes();
            target = stream->WriteBytesMaybeAliased(130, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:proto3_arena_unittest.TestAllTypes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestAllTypes::ByteSizeLong(const MessageLite& base) {
          const TestAllTypes& this_ = static_cast<const TestAllTypes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestAllTypes::ByteSizeLong() const {
          const TestAllTypes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:proto3_arena_unittest.TestAllTypes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 repeated_int32 = 31;
             {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_repeated_int32(), 2,
                      this_._impl_._repeated_int32_cached_byte_size_);
            }
            // repeated int64 repeated_int64 = 32;
             {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_repeated_int64(), 2,
                      this_._impl_._repeated_int64_cached_byte_size_);
            }
            // repeated uint32 repeated_uint32 = 33;
             {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_repeated_uint32(), 2,
                      this_._impl_._repeated_uint32_cached_byte_size_);
            }
            // repeated uint64 repeated_uint64 = 34;
             {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_repeated_uint64(), 2,
                      this_._impl_._repeated_uint64_cached_byte_size_);
            }
            // repeated sint32 repeated_sint32 = 35;
             {
              total_size +=
                  ::_pbi::WireFormatLite::SInt32SizeWithPackedTagSize(
                      this_._internal_repeated_sint32(), 2,
                      this_._impl_._repeated_sint32_cached_byte_size_);
            }
            // repeated sint64 repeated_sint64 = 36;
             {
              total_size +=
                  ::_pbi::WireFormatLite::SInt64SizeWithPackedTagSize(
                      this_._internal_repeated_sint64(), 2,
                      this_._impl_._repeated_sint64_cached_byte_size_);
            }
            // repeated fixed32 repeated_fixed32 = 37;
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_repeated_fixed32_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated fixed64 repeated_fixed64 = 38;
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_repeated_fixed64_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated sfixed32 repeated_sfixed32 = 39;
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_repeated_sfixed32_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated sfixed64 repeated_sfixed64 = 40;
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_repeated_sfixed64_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated float repeated_float = 41;
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_repeated_float_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated double repeated_double = 42;
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_repeated_double_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated bool repeated_bool = 43;
             {
              std::size_t data_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_bool_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated string repeated_string = 44;
             {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_repeated_string().size());
              for (int i = 0, n = this_._internal_repeated_string().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_repeated_string().Get(i));
              }
            }
            // repeated bytes repeated_bytes = 45;
             {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_repeated_bytes().size());
              for (int i = 0, n = this_._internal_repeated_bytes().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_repeated_bytes().Get(i));
              }
            }
            // repeated .proto3_arena_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
             {
              total_size += 2UL * this_._internal_repeated_nested_message_size();
              for (const auto& msg : this_._internal_repeated_nested_message()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .proto3_arena_unittest.ForeignMessage repeated_foreign_message = 49;
             {
              total_size += 2UL * this_._internal_repeated_foreign_message_size();
              for (const auto& msg : this_._internal_repeated_foreign_message()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
             {
              total_size += 2UL * this_._internal_repeated_import_message_size();
              for (const auto& msg : this_._internal_repeated_import_message()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .proto3_arena_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
             {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_repeated_nested_enum(), 2, this_._impl_._repeated_nested_enum_cached_byte_size_);
            }
            // repeated .proto3_arena_unittest.ForeignEnum repeated_foreign_enum = 52;
             {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_repeated_foreign_enum(), 2, this_._impl_._repeated_foreign_enum_cached_byte_size_);
            }
            // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
             {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_repeated_string_piece().size());
              for (int i = 0, n = this_._internal_repeated_string_piece().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_repeated_string_piece().Get(i));
              }
            }
            // repeated string repeated_cord = 55 [ctype = CORD];
             {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_repeated_cord().size());
              for (int i = 0, n = this_._internal_repeated_cord().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_repeated_cord().Get(i));
              }
            }
            // repeated .proto3_arena_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57;
             {
              total_size += 2UL * this_._internal_repeated_lazy_message_size();
              for (const auto& msg : this_._internal_repeated_lazy_message()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string optional_string = 14;
            if (!this_._internal_optional_string().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_optional_string());
            }
            // bytes optional_bytes = 15;
            if (!this_._internal_optional_bytes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_optional_bytes());
            }
            // string optional_string_piece = 24 [ctype = STRING_PIECE];
            if (!this_._internal_optional_string_piece().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_optional_string_piece());
            }
            // string optional_cord = 25 [ctype = CORD];
            if (!this_._internal_optional_cord().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_optional_cord());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string proto3_optional_string = 129;
            if (cached_has_bits & 0x00000001u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proto3_optional_string());
            }
            // optional bytes proto3_optional_bytes = 130;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_proto3_optional_bytes());
            }
            // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_nested_message_);
            }
            // .proto3_arena_unittest.ForeignMessage optional_foreign_message = 19;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_foreign_message_);
            }
            // .protobuf_unittest_import.ImportMessage optional_import_message = 20;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_import_message_);
            }
            // .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_public_import_message_);
            }
            // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_lazy_message_);
            }
            // .proto3_arena_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_unverified_lazy_message_);
            }
          }
           {
            // .protobuf_unittest_import.ImportMessage optional_lazy_import_message = 115 [lazy = true];
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_lazy_import_message_);
            }
          }
           {
            // int64 optional_int64 = 2;
            if (this_._internal_optional_int64() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_optional_int64());
            }
            // int32 optional_int32 = 1;
            if (this_._internal_optional_int32() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_optional_int32());
            }
            // uint32 optional_uint32 = 3;
            if (this_._internal_optional_uint32() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_optional_uint32());
            }
            // uint64 optional_uint64 = 4;
            if (this_._internal_optional_uint64() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_optional_uint64());
            }
            // sint64 optional_sint64 = 6;
            if (this_._internal_optional_sint64() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
                  this_._internal_optional_sint64());
            }
            // sint32 optional_sint32 = 5;
            if (this_._internal_optional_sint32() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_optional_sint32());
            }
            // fixed32 optional_fixed32 = 7;
            if (this_._internal_optional_fixed32() != 0) {
              total_size += 5;
            }
            // fixed64 optional_fixed64 = 8;
            if (this_._internal_optional_fixed64() != 0) {
              total_size += 9;
            }
            // sfixed64 optional_sfixed64 = 10;
            if (this_._internal_optional_sfixed64() != 0) {
              total_size += 9;
            }
            // sfixed32 optional_sfixed32 = 9;
            if (this_._internal_optional_sfixed32() != 0) {
              total_size += 5;
            }
            // float optional_float = 11;
            if (::absl::bit_cast<::uint32_t>(this_._internal_optional_float()) != 0) {
              total_size += 5;
            }
            // double optional_double = 12;
            if (::absl::bit_cast<::uint64_t>(this_._internal_optional_double()) != 0) {
              total_size += 9;
            }
            // .proto3_arena_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
            if (this_._internal_optional_nested_enum() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_optional_nested_enum());
            }
            // .proto3_arena_unittest.ForeignEnum optional_foreign_enum = 22;
            if (this_._internal_optional_foreign_enum() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_optional_foreign_enum());
            }
            // bool optional_bool = 13;
            if (this_._internal_optional_bool() != 0) {
              total_size += 2;
            }
          }
          if (cached_has_bits & 0x0000fe00u) {
            // optional bool proto3_optional_bool = 128;
            if (cached_has_bits & 0x00000200u) {
              total_size += 3;
            }
            // optional int32 proto3_optional_int32 = 116;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_proto3_optional_int32());
            }
            // optional int64 proto3_optional_int64 = 117;
            if (cached_has_bits & 0x00000800u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_proto3_optional_int64());
            }
            // optional uint64 proto3_optional_uint64 = 119;
            if (cached_has_bits & 0x00001000u) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                              this_._internal_proto3_optional_uint64());
            }
            // optional uint32 proto3_optional_uint32 = 118;
            if (cached_has_bits & 0x00002000u) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_proto3_optional_uint32());
            }
            // optional sint32 proto3_optional_sint32 = 120;
            if (cached_has_bits & 0x00004000u) {
              total_size += 2 + ::_pbi::WireFormatLite::SInt32Size(
                                              this_._internal_proto3_optional_sint32());
            }
            // optional sint64 proto3_optional_sint64 = 121;
            if (cached_has_bits & 0x00008000u) {
              total_size += 2 + ::_pbi::WireFormatLite::SInt64Size(
                                              this_._internal_proto3_optional_sint64());
            }
          }
          if (cached_has_bits & 0x003f0000u) {
            // optional fixed64 proto3_optional_fixed64 = 123;
            if (cached_has_bits & 0x00010000u) {
              total_size += 10;
            }
            // optional fixed32 proto3_optional_fixed32 = 122;
            if (cached_has_bits & 0x00020000u) {
              total_size += 6;
            }
            // optional sfixed32 proto3_optional_sfixed32 = 124;
            if (cached_has_bits & 0x00040000u) {
              total_size += 6;
            }
            // optional sfixed64 proto3_optional_sfixed64 = 125;
            if (cached_has_bits & 0x00080000u) {
              total_size += 10;
            }
            // optional double proto3_optional_double = 127;
            if (cached_has_bits & 0x00100000u) {
              total_size += 10;
            }
            // optional float proto3_optional_float = 126;
            if (cached_has_bits & 0x00200000u) {
              total_size += 6;
            }
          }
          switch (this_.oneof_field_case()) {
            // uint32 oneof_uint32 = 111;
            case kOneofUint32: {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_oneof_uint32());
              break;
            }
            // .proto3_arena_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
            case kOneofNestedMessage: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.oneof_field_.oneof_nested_message_);
              break;
            }
            // string oneof_string = 113;
            case kOneofString: {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_oneof_string());
              break;
            }
            // bytes oneof_bytes = 114;
            case kOneofBytes: {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_oneof_bytes());
              break;
            }
            case ONEOF_FIELD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestAllTypes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestAllTypes*>(&to_msg);
  auto& from = static_cast<const TestAllTypes&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:proto3_arena_unittest.TestAllTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_mutable_repeated_int64()->MergeFrom(from._internal_repeated_int64());
  _this->_internal_mutable_repeated_uint32()->MergeFrom(from._internal_repeated_uint32());
  _this->_internal_mutable_repeated_uint64()->MergeFrom(from._internal_repeated_uint64());
  _this->_internal_mutable_repeated_sint32()->MergeFrom(from._internal_repeated_sint32());
  _this->_internal_mutable_repeated_sint64()->MergeFrom(from._internal_repeated_sint64());
  _this->_internal_mutable_repeated_fixed32()->MergeFrom(from._internal_repeated_fixed32());
  _this->_internal_mutable_repeated_fixed64()->MergeFrom(from._internal_repeated_fixed64());
  _this->_internal_mutable_repeated_sfixed32()->MergeFrom(from._internal_repeated_sfixed32());
  _this->_internal_mutable_repeated_sfixed64()->MergeFrom(from._internal_repeated_sfixed64());
  _this->_internal_mutable_repeated_float()->MergeFrom(from._internal_repeated_float());
  _this->_internal_mutable_repeated_double()->MergeFrom(from._internal_repeated_double());
  _this->_internal_mutable_repeated_bool()->MergeFrom(from._internal_repeated_bool());
  _this->_internal_mutable_repeated_string()->MergeFrom(from._internal_repeated_string());
  _this->_internal_mutable_repeated_bytes()->MergeFrom(from._internal_repeated_bytes());
  _this->_internal_mutable_repeated_nested_message()->MergeFrom(
      from._internal_repeated_nested_message());
  _this->_internal_mutable_repeated_foreign_message()->MergeFrom(
      from._internal_repeated_foreign_message());
  _this->_internal_mutable_repeated_import_message()->MergeFrom(
      from._internal_repeated_import_message());
  _this->_internal_mutable_repeated_nested_enum()->MergeFrom(from._internal_repeated_nested_enum());
  _this->_internal_mutable_repeated_foreign_enum()->MergeFrom(from._internal_repeated_foreign_enum());
  _this->_internal_mutable_repeated_string_piece()->MergeFrom(from._internal_repeated_string_piece());
  _this->_internal_mutable_repeated_cord()->MergeFrom(from._internal_repeated_cord());
  _this->_internal_mutable_repeated_lazy_message()->MergeFrom(
      from._internal_repeated_lazy_message());
  if (!from._internal_optional_string().empty()) {
    _this->_internal_set_optional_string(from._internal_optional_string());
  }
  if (!from._internal_optional_bytes().empty()) {
    _this->_internal_set_optional_bytes(from._internal_optional_bytes());
  }
  if (!from._internal_optional_string_piece().empty()) {
    _this->_internal_set_optional_string_piece(from._internal_optional_string_piece());
  }
  if (!from._internal_optional_cord().empty()) {
    _this->_internal_set_optional_cord(from._internal_optional_cord());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_proto3_optional_string(from._internal_proto3_optional_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_proto3_optional_bytes(from._internal_proto3_optional_bytes());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.optional_nested_message_ != nullptr);
      if (_this->_impl_.optional_nested_message_ == nullptr) {
        _this->_impl_.optional_nested_message_ =
            ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes_NestedMessage>(arena, *from._impl_.optional_nested_message_);
      } else {
        _this->_impl_.optional_nested_message_->MergeFrom(*from._impl_.optional_nested_message_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.optional_foreign_message_ != nullptr);
      if (_this->_impl_.optional_foreign_message_ == nullptr) {
        _this->_impl_.optional_foreign_message_ =
            ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::ForeignMessage>(arena, *from._impl_.optional_foreign_message_);
      } else {
        _this->_impl_.optional_foreign_message_->MergeFrom(*from._impl_.optional_foreign_message_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.optional_import_message_ != nullptr);
      if (_this->_impl_.optional_import_message_ == nullptr) {
        _this->_impl_.optional_import_message_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest_import::ImportMessage>(arena, *from._impl_.optional_import_message_);
      } else {
        _this->_impl_.optional_import_message_->MergeFrom(*from._impl_.optional_import_message_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.optional_public_import_message_ != nullptr);
      if (_this->_impl_.optional_public_import_message_ == nullptr) {
        _this->_impl_.optional_public_import_message_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest_import::PublicImportMessage>(arena, *from._impl_.optional_public_import_message_);
      } else {
        _this->_impl_.optional_public_import_message_->MergeFrom(*from._impl_.optional_public_import_message_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.optional_lazy_message_ != nullptr);
      if (_this->_impl_.optional_lazy_message_ == nullptr) {
        _this->_impl_.optional_lazy_message_ =
            ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes_NestedMessage>(arena, *from._impl_.optional_lazy_message_);
      } else {
        _this->_impl_.optional_lazy_message_->MergeFrom(*from._impl_.optional_lazy_message_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.optional_unverified_lazy_message_ != nullptr);
      if (_this->_impl_.optional_unverified_lazy_message_ == nullptr) {
        _this->_impl_.optional_unverified_lazy_message_ =
            ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes_NestedMessage>(arena, *from._impl_.optional_unverified_lazy_message_);
      } else {
        _this->_impl_.optional_unverified_lazy_message_->MergeFrom(*from._impl_.optional_unverified_lazy_message_);
      }
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(from._impl_.optional_lazy_import_message_ != nullptr);
    if (_this->_impl_.optional_lazy_import_message_ == nullptr) {
      _this->_impl_.optional_lazy_import_message_ =
          ::google::protobuf::Message::CopyConstruct<::protobuf_unittest_import::ImportMessage>(arena, *from._impl_.optional_lazy_import_message_);
    } else {
      _this->_impl_.optional_lazy_import_message_->MergeFrom(*from._impl_.optional_lazy_import_message_);
    }
  }
  if (from._internal_optional_int64() != 0) {
    _this->_impl_.optional_int64_ = from._impl_.optional_int64_;
  }
  if (from._internal_optional_int32() != 0) {
    _this->_impl_.optional_int32_ = from._impl_.optional_int32_;
  }
  if (from._internal_optional_uint32() != 0) {
    _this->_impl_.optional_uint32_ = from._impl_.optional_uint32_;
  }
  if (from._internal_optional_uint64() != 0) {
    _this->_impl_.optional_uint64_ = from._impl_.optional_uint64_;
  }
  if (from._internal_optional_sint64() != 0) {
    _this->_impl_.optional_sint64_ = from._impl_.optional_sint64_;
  }
  if (from._internal_optional_sint32() != 0) {
    _this->_impl_.optional_sint32_ = from._impl_.optional_sint32_;
  }
  if (from._internal_optional_fixed32() != 0) {
    _this->_impl_.optional_fixed32_ = from._impl_.optional_fixed32_;
  }
  if (from._internal_optional_fixed64() != 0) {
    _this->_impl_.optional_fixed64_ = from._impl_.optional_fixed64_;
  }
  if (from._internal_optional_sfixed64() != 0) {
    _this->_impl_.optional_sfixed64_ = from._impl_.optional_sfixed64_;
  }
  if (from._internal_optional_sfixed32() != 0) {
    _this->_impl_.optional_sfixed32_ = from._impl_.optional_sfixed32_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_optional_float()) != 0) {
    _this->_impl_.optional_float_ = from._impl_.optional_float_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_optional_double()) != 0) {
    _this->_impl_.optional_double_ = from._impl_.optional_double_;
  }
  if (from._internal_optional_nested_enum() != 0) {
    _this->_impl_.optional_nested_enum_ = from._impl_.optional_nested_enum_;
  }
  if (from._internal_optional_foreign_enum() != 0) {
    _this->_impl_.optional_foreign_enum_ = from._impl_.optional_foreign_enum_;
  }
  if (from._internal_optional_bool() != 0) {
    _this->_impl_.optional_bool_ = from._impl_.optional_bool_;
  }
  if (cached_has_bits & 0x0000fe00u) {
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.proto3_optional_bool_ = from._impl_.proto3_optional_bool_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.proto3_optional_int32_ = from._impl_.proto3_optional_int32_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.proto3_optional_int64_ = from._impl_.proto3_optional_int64_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.proto3_optional_uint64_ = from._impl_.proto3_optional_uint64_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.proto3_optional_uint32_ = from._impl_.proto3_optional_uint32_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.proto3_optional_sint32_ = from._impl_.proto3_optional_sint32_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.proto3_optional_sint64_ = from._impl_.proto3_optional_sint64_;
    }
  }
  if (cached_has_bits & 0x003f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.proto3_optional_fixed64_ = from._impl_.proto3_optional_fixed64_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.proto3_optional_fixed32_ = from._impl_.proto3_optional_fixed32_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.proto3_optional_sfixed32_ = from._impl_.proto3_optional_sfixed32_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.proto3_optional_sfixed64_ = from._impl_.proto3_optional_sfixed64_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.proto3_optional_double_ = from._impl_.proto3_optional_double_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.proto3_optional_float_ = from._impl_.proto3_optional_float_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_oneof_field();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kOneofUint32: {
        _this->_impl_.oneof_field_.oneof_uint32_ = from._impl_.oneof_field_.oneof_uint32_;
        break;
      }
      case kOneofNestedMessage: {
        if (oneof_needs_init) {
          _this->_impl_.oneof_field_.oneof_nested_message_ =
              ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes_NestedMessage>(arena, *from._impl_.oneof_field_.oneof_nested_message_);
        } else {
          _this->_impl_.oneof_field_.oneof_nested_message_->MergeFrom(from._internal_oneof_nested_message());
        }
        break;
      }
      case kOneofString: {
        if (oneof_needs_init) {
          _this->_impl_.oneof_field_.oneof_string_.InitDefault();
        }
        _this->_impl_.oneof_field_.oneof_string_.Set(from._internal_oneof_string(), arena);
        break;
      }
      case kOneofBytes: {
        if (oneof_needs_init) {
          _this->_impl_.oneof_field_.oneof_bytes_.InitDefault();
        }
        _this->_impl_.oneof_field_.oneof_bytes_.Set(from._internal_oneof_bytes(), arena);
        break;
      }
      case ONEOF_FIELD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllTypes::CopyFrom(const TestAllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_arena_unittest.TestAllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestAllTypes::InternalSwap(TestAllTypes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
  _impl_.repeated_int64_.InternalSwap(&other->_impl_.repeated_int64_);
  _impl_.repeated_uint32_.InternalSwap(&other->_impl_.repeated_uint32_);
  _impl_.repeated_uint64_.InternalSwap(&other->_impl_.repeated_uint64_);
  _impl_.repeated_sint32_.InternalSwap(&other->_impl_.repeated_sint32_);
  _impl_.repeated_sint64_.InternalSwap(&other->_impl_.repeated_sint64_);
  _impl_.repeated_fixed32_.InternalSwap(&other->_impl_.repeated_fixed32_);
  _impl_.repeated_fixed64_.InternalSwap(&other->_impl_.repeated_fixed64_);
  _impl_.repeated_sfixed32_.InternalSwap(&other->_impl_.repeated_sfixed32_);
  _impl_.repeated_sfixed64_.InternalSwap(&other->_impl_.repeated_sfixed64_);
  _impl_.repeated_float_.InternalSwap(&other->_impl_.repeated_float_);
  _impl_.repeated_double_.InternalSwap(&other->_impl_.repeated_double_);
  _impl_.repeated_bool_.InternalSwap(&other->_impl_.repeated_bool_);
  _impl_.repeated_string_.InternalSwap(&other->_impl_.repeated_string_);
  _impl_.repeated_bytes_.InternalSwap(&other->_impl_.repeated_bytes_);
  _impl_.repeated_nested_message_.InternalSwap(&other->_impl_.repeated_nested_message_);
  _impl_.repeated_foreign_message_.InternalSwap(&other->_impl_.repeated_foreign_message_);
  _impl_.repeated_import_message_.InternalSwap(&other->_impl_.repeated_import_message_);
  _impl_.repeated_nested_enum_.InternalSwap(&other->_impl_.repeated_nested_enum_);
  _impl_.repeated_foreign_enum_.InternalSwap(&other->_impl_.repeated_foreign_enum_);
  _impl_.repeated_string_piece_.InternalSwap(&other->_impl_.repeated_string_piece_);
  _impl_.repeated_cord_.InternalSwap(&other->_impl_.repeated_cord_);
  _impl_.repeated_lazy_message_.InternalSwap(&other->_impl_.repeated_lazy_message_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_, &other->_impl_.optional_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_bytes_, &other->_impl_.optional_bytes_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_piece_, &other->_impl_.optional_string_piece_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_cord_, &other->_impl_.optional_cord_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proto3_optional_string_, &other->_impl_.proto3_optional_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proto3_optional_bytes_, &other->_impl_.proto3_optional_bytes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.proto3_optional_float_)
      + sizeof(TestAllTypes::_impl_.proto3_optional_float_)
      - PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_nested_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_nested_message_));
  swap(_impl_.oneof_field_, other->_impl_.oneof_field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TestAllTypes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestPackedTypes::_Internal {
 public:
};

TestPackedTypes::TestPackedTypes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.TestPackedTypes)
}
inline PROTOBUF_NDEBUG_INLINE TestPackedTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::proto3_arena_unittest::TestPackedTypes& from_msg)
      : packed_int32_{visibility, arena, from.packed_int32_},
        _packed_int32_cached_byte_size_{0},
        packed_int64_{visibility, arena, from.packed_int64_},
        _packed_int64_cached_byte_size_{0},
        packed_uint32_{visibility, arena, from.packed_uint32_},
        _packed_uint32_cached_byte_size_{0},
        packed_uint64_{visibility, arena, from.packed_uint64_},
        _packed_uint64_cached_byte_size_{0},
        packed_sint32_{visibility, arena, from.packed_sint32_},
        _packed_sint32_cached_byte_size_{0},
        packed_sint64_{visibility, arena, from.packed_sint64_},
        _packed_sint64_cached_byte_size_{0},
        packed_fixed32_{visibility, arena, from.packed_fixed32_},
        packed_fixed64_{visibility, arena, from.packed_fixed64_},
        packed_sfixed32_{visibility, arena, from.packed_sfixed32_},
        packed_sfixed64_{visibility, arena, from.packed_sfixed64_},
        packed_float_{visibility, arena, from.packed_float_},
        packed_double_{visibility, arena, from.packed_double_},
        packed_bool_{visibility, arena, from.packed_bool_},
        packed_enum_{visibility, arena, from.packed_enum_},
        _packed_enum_cached_byte_size_{0},
        _cached_size_{0} {}

TestPackedTypes::TestPackedTypes(
    ::google::protobuf::Arena* arena,
    const TestPackedTypes& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestPackedTypes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:proto3_arena_unittest.TestPackedTypes)
}
inline PROTOBUF_NDEBUG_INLINE TestPackedTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : packed_int32_{visibility, arena},
        _packed_int32_cached_byte_size_{0},
        packed_int64_{visibility, arena},
        _packed_int64_cached_byte_size_{0},
        packed_uint32_{visibility, arena},
        _packed_uint32_cached_byte_size_{0},
        packed_uint64_{visibility, arena},
        _packed_uint64_cached_byte_size_{0},
        packed_sint32_{visibility, arena},
        _packed_sint32_cached_byte_size_{0},
        packed_sint64_{visibility, arena},
        _packed_sint64_cached_byte_size_{0},
        packed_fixed32_{visibility, arena},
        packed_fixed64_{visibility, arena},
        packed_sfixed32_{visibility, arena},
        packed_sfixed64_{visibility, arena},
        packed_float_{visibility, arena},
        packed_double_{visibility, arena},
        packed_bool_{visibility, arena},
        packed_enum_{visibility, arena},
        _packed_enum_cached_byte_size_{0},
        _cached_size_{0} {}

inline void TestPackedTypes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestPackedTypes::~TestPackedTypes() {
  // @@protoc_insertion_point(destructor:proto3_arena_unittest.TestPackedTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestPackedTypes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestPackedTypes::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestPackedTypes_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestPackedTypes::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestPackedTypes>(),
            ::google::protobuf::Message::GetNewImpl<TestPackedTypes>(),
            ::google::protobuf::Message::GetClearImpl<TestPackedTypes>(), &TestPackedTypes::ByteSizeLong,
                &TestPackedTypes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_._cached_size_),
            false,
        },
        &TestPackedTypes::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestPackedTypes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 0, 7> TestPackedTypes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    103, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestPackedTypes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated fixed32 packed_fixed32 = 96 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1666, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_fixed32_)}},
    // repeated fixed64 packed_fixed64 = 97 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1674, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_fixed64_)}},
    // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1682, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sfixed32_)}},
    // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1690, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sfixed64_)}},
    // repeated float packed_float = 100 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1698, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_float_)}},
    // repeated double packed_double = 101 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1706, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_double_)}},
    // repeated bool packed_bool = 102 [packed = true];
    {::_pbi::TcParser::FastV8P2,
     {1714, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_bool_)}},
    // repeated .proto3_arena_unittest.ForeignEnum packed_enum = 103 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {1722, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_enum_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 packed_int32 = 90 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {1490, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_int32_)}},
    // repeated int64 packed_int64 = 91 [packed = true];
    {::_pbi::TcParser::FastV64P2,
     {1498, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_int64_)}},
    // repeated uint32 packed_uint32 = 92 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {1506, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_uint32_)}},
    // repeated uint64 packed_uint64 = 93 [packed = true];
    {::_pbi::TcParser::FastV64P2,
     {1514, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_uint64_)}},
    // repeated sint32 packed_sint32 = 94 [packed = true];
    {::_pbi::TcParser::FastZ32P2,
     {1522, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sint32_)}},
    // repeated sint64 packed_sint64 = 95 [packed = true];
    {::_pbi::TcParser::FastZ64P2,
     {1530, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sint64_)}},
  }}, {{
    90, 0, 1,
    49152, 0,
    65535, 65535
  }}, {{
    // repeated int32 packed_int32 = 90 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int64 packed_int64 = 91 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_int64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated uint32 packed_uint32 = 92 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_uint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint64 packed_uint64 = 93 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_uint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated sint32 packed_sint32 = 94 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt32)},
    // repeated sint64 packed_sint64 = 95 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt64)},
    // repeated fixed32 packed_fixed32 = 96 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_fixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed32)},
    // repeated fixed64 packed_fixed64 = 97 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_fixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed64)},
    // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sfixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed32)},
    // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sfixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed64)},
    // repeated float packed_float = 100 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_float_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated double packed_double = 101 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_double_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated bool packed_bool = 102 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_bool_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // repeated .proto3_arena_unittest.ForeignEnum packed_enum = 103 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_enum_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TestPackedTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_arena_unittest.TestPackedTypes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.packed_int32_.Clear();
  _impl_.packed_int64_.Clear();
  _impl_.packed_uint32_.Clear();
  _impl_.packed_uint64_.Clear();
  _impl_.packed_sint32_.Clear();
  _impl_.packed_sint64_.Clear();
  _impl_.packed_fixed32_.Clear();
  _impl_.packed_fixed64_.Clear();
  _impl_.packed_sfixed32_.Clear();
  _impl_.packed_sfixed64_.Clear();
  _impl_.packed_float_.Clear();
  _impl_.packed_double_.Clear();
  _impl_.packed_bool_.Clear();
  _impl_.packed_enum_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestPackedTypes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestPackedTypes& this_ = static_cast<const TestPackedTypes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestPackedTypes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestPackedTypes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:proto3_arena_unittest.TestPackedTypes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int32 packed_int32 = 90 [packed = true];
          {
            int byte_size = this_._impl_._packed_int32_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  90, this_._internal_packed_int32(), byte_size, target);
            }
          }

          // repeated int64 packed_int64 = 91 [packed = true];
          {
            int byte_size = this_._impl_._packed_int64_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  91, this_._internal_packed_int64(), byte_size, target);
            }
          }

          // repeated uint32 packed_uint32 = 92 [packed = true];
          {
            int byte_size = this_._impl_._packed_uint32_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  92, this_._internal_packed_uint32(), byte_size, target);
            }
          }

          // repeated uint64 packed_uint64 = 93 [packed = true];
          {
            int byte_size = this_._impl_._packed_uint64_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  93, this_._internal_packed_uint64(), byte_size, target);
            }
          }

          // repeated sint32 packed_sint32 = 94 [packed = true];
          {
            int byte_size = this_._impl_._packed_sint32_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteSInt32Packed(
                  94, this_._internal_packed_sint32(), byte_size, target);
            }
          }

          // repeated sint64 packed_sint64 = 95 [packed = true];
          {
            int byte_size = this_._impl_._packed_sint64_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteSInt64Packed(
                  95, this_._internal_packed_sint64(), byte_size, target);
            }
          }

          // repeated fixed32 packed_fixed32 = 96 [packed = true];
          if (this_._internal_packed_fixed32_size() > 0) {
            target = stream->WriteFixedPacked(96, this_._internal_packed_fixed32(), target);
          }

          // repeated fixed64 packed_fixed64 = 97 [packed = true];
          if (this_._internal_packed_fixed64_size() > 0) {
            target = stream->WriteFixedPacked(97, this_._internal_packed_fixed64(), target);
          }

          // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
          if (this_._internal_packed_sfixed32_size() > 0) {
            target = stream->WriteFixedPacked(98, this_._internal_packed_sfixed32(), target);
          }

          // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
          if (this_._internal_packed_sfixed64_size() > 0) {
            target = stream->WriteFixedPacked(99, this_._internal_packed_sfixed64(), target);
          }

          // repeated float packed_float = 100 [packed = true];
          if (this_._internal_packed_float_size() > 0) {
            target = stream->WriteFixedPacked(100, this_._internal_packed_float(), target);
          }

          // repeated double packed_double = 101 [packed = true];
          if (this_._internal_packed_double_size() > 0) {
            target = stream->WriteFixedPacked(101, this_._internal_packed_double(), target);
          }

          // repeated bool packed_bool = 102 [packed = true];
          if (this_._internal_packed_bool_size() > 0) {
            target = stream->WriteFixedPacked(102, this_._internal_packed_bool(), target);
          }

          // repeated .proto3_arena_unittest.ForeignEnum packed_enum = 103 [packed = true];
          {
            std::size_t byte_size =
                                              this_._impl_._packed_enum_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  103, this_._internal_packed_enum(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:proto3_arena_unittest.TestPackedTypes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestPackedTypes::ByteSizeLong(const MessageLite& base) {
          const TestPackedTypes& this_ = static_cast<const TestPackedTypes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestPackedTypes::ByteSizeLong() const {
          const TestPackedTypes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:proto3_arena_unittest.TestPackedTypes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 packed_int32 = 90 [packed = true];
             {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_packed_int32(), 2,
                      this_._impl_._packed_int32_cached_byte_size_);
            }
            // repeated int64 packed_int64 = 91 [packed = true];
             {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_packed_int64(), 2,
                      this_._impl_._packed_int64_cached_byte_size_);
            }
            // repeated uint32 packed_uint32 = 92 [packed = true];
             {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_packed_uint32(), 2,
                      this_._impl_._packed_uint32_cached_byte_size_);
            }
            // repeated uint64 packed_uint64 = 93 [packed = true];
             {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_packed_uint64(), 2,
                      this_._impl_._packed_uint64_cached_byte_size_);
            }
            // repeated sint32 packed_sint32 = 94 [packed = true];
             {
              total_size +=
                  ::_pbi::WireFormatLite::SInt32SizeWithPackedTagSize(
                      this_._internal_packed_sint32(), 2,
                      this_._impl_._packed_sint32_cached_byte_size_);
            }
            // repeated sint64 packed_sint64 = 95 [packed = true];
             {
              total_size +=
                  ::_pbi::WireFormatLite::SInt64SizeWithPackedTagSize(
                      this_._internal_packed_sint64(), 2,
                      this_._impl_._packed_sint64_cached_byte_size_);
            }
            // repeated fixed32 packed_fixed32 = 96 [packed = true];
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_packed_fixed32_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated fixed64 packed_fixed64 = 97 [packed = true];
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_packed_fixed64_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_packed_sfixed32_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_packed_sfixed64_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated float packed_float = 100 [packed = true];
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_packed_float_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated double packed_double = 101 [packed = true];
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_packed_double_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated bool packed_bool = 102 [packed = true];
             {
              std::size_t data_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_packed_bool_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 2 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated .proto3_arena_unittest.ForeignEnum packed_enum = 103 [packed = true];
             {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_packed_enum(), 2, this_._impl_._packed_enum_cached_byte_size_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestPackedTypes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestPackedTypes*>(&to_msg);
  auto& from = static_cast<const TestPackedTypes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto3_arena_unittest.TestPackedTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_packed_int32()->MergeFrom(from._internal_packed_int32());
  _this->_internal_mutable_packed_int64()->MergeFrom(from._internal_packed_int64());
  _this->_internal_mutable_packed_uint32()->MergeFrom(from._internal_packed_uint32());
  _this->_internal_mutable_packed_uint64()->MergeFrom(from._internal_packed_uint64());
  _this->_internal_mutable_packed_sint32()->MergeFrom(from._internal_packed_sint32());
  _this->_internal_mutable_packed_sint64()->MergeFrom(from._internal_packed_sint64());
  _this->_internal_mutable_packed_fixed32()->MergeFrom(from._internal_packed_fixed32());
  _this->_internal_mutable_packed_fixed64()->MergeFrom(from._internal_packed_fixed64());
  _this->_internal_mutable_packed_sfixed32()->MergeFrom(from._internal_packed_sfixed32());
  _this->_internal_mutable_packed_sfixed64()->MergeFrom(from._internal_packed_sfixed64());
  _this->_internal_mutable_packed_float()->MergeFrom(from._internal_packed_float());
  _this->_internal_mutable_packed_double()->MergeFrom(from._internal_packed_double());
  _this->_internal_mutable_packed_bool()->MergeFrom(from._internal_packed_bool());
  _this->_internal_mutable_packed_enum()->MergeFrom(from._internal_packed_enum());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPackedTypes::CopyFrom(const TestPackedTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_arena_unittest.TestPackedTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestPackedTypes::InternalSwap(TestPackedTypes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.packed_int32_.InternalSwap(&other->_impl_.packed_int32_);
  _impl_.packed_int64_.InternalSwap(&other->_impl_.packed_int64_);
  _impl_.packed_uint32_.InternalSwap(&other->_impl_.packed_uint32_);
  _impl_.packed_uint64_.InternalSwap(&other->_impl_.packed_uint64_);
  _impl_.packed_sint32_.InternalSwap(&other->_impl_.packed_sint32_);
  _impl_.packed_sint64_.InternalSwap(&other->_impl_.packed_sint64_);
  _impl_.packed_fixed32_.InternalSwap(&other->_impl_.packed_fixed32_);
  _impl_.packed_fixed64_.InternalSwap(&other->_impl_.packed_fixed64_);
  _impl_.packed_sfixed32_.InternalSwap(&other->_impl_.packed_sfixed32_);
  _impl_.packed_sfixed64_.InternalSwap(&other->_impl_.packed_sfixed64_);
  _impl_.packed_float_.InternalSwap(&other->_impl_.packed_float_);
  _impl_.packed_double_.InternalSwap(&other->_impl_.packed_double_);
  _impl_.packed_bool_.InternalSwap(&other->_impl_.packed_bool_);
  _impl_.packed_enum_.InternalSwap(&other->_impl_.packed_enum_);
}

::google::protobuf::Metadata TestPackedTypes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestUnpackedTypes::_Internal {
 public:
};

TestUnpackedTypes::TestUnpackedTypes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.TestUnpackedTypes)
}
inline PROTOBUF_NDEBUG_INLINE TestUnpackedTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::proto3_arena_unittest::TestUnpackedTypes& from_msg)
      : repeated_int32_{visibility, arena, from.repeated_int32_},
        repeated_int64_{visibility, arena, from.repeated_int64_},
        repeated_uint32_{visibility, arena, from.repeated_uint32_},
        repeated_uint64_{visibility, arena, from.repeated_uint64_},
        repeated_sint32_{visibility, arena, from.repeated_sint32_},
        repeated_sint64_{visibility, arena, from.repeated_sint64_},
        repeated_fixed32_{visibility, arena, from.repeated_fixed32_},
        repeated_fixed64_{visibility, arena, from.repeated_fixed64_},
        repeated_sfixed32_{visibility, arena, from.repeated_sfixed32_},
        repeated_sfixed64_{visibility, arena, from.repeated_sfixed64_},
        repeated_float_{visibility, arena, from.repeated_float_},
        repeated_double_{visibility, arena, from.repeated_double_},
        repeated_bool_{visibility, arena, from.repeated_bool_},
        repeated_nested_enum_{visibility, arena, from.repeated_nested_enum_},
        _cached_size_{0} {}

TestUnpackedTypes::TestUnpackedTypes(
    ::google::protobuf::Arena* arena,
    const TestUnpackedTypes& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestUnpackedTypes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:proto3_arena_unittest.TestUnpackedTypes)
}
inline PROTOBUF_NDEBUG_INLINE TestUnpackedTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : repeated_int32_{visibility, arena},
        repeated_int64_{visibility, arena},
        repeated_uint32_{visibility, arena},
        repeated_uint64_{visibility, arena},
        repeated_sint32_{visibility, arena},
        repeated_sint64_{visibility, arena},
        repeated_fixed32_{visibility, arena},
        repeated_fixed64_{visibility, arena},
        repeated_sfixed32_{visibility, arena},
        repeated_sfixed64_{visibility, arena},
        repeated_float_{visibility, arena},
        repeated_double_{visibility, arena},
        repeated_bool_{visibility, arena},
        repeated_nested_enum_{visibility, arena},
        _cached_size_{0} {}

inline void TestUnpackedTypes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestUnpackedTypes::~TestUnpackedTypes() {
  // @@protoc_insertion_point(destructor:proto3_arena_unittest.TestUnpackedTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestUnpackedTypes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestUnpackedTypes::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestUnpackedTypes_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestUnpackedTypes::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestUnpackedTypes>(),
            ::google::protobuf::Message::GetNewImpl<TestUnpackedTypes>(),
            ::google::protobuf::Message::GetClearImpl<TestUnpackedTypes>(), &TestUnpackedTypes::ByteSizeLong,
                &TestUnpackedTypes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_._cached_size_),
            false,
        },
        &TestUnpackedTypes::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestUnpackedTypes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 0, 2> TestUnpackedTypes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestUnpackedTypes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 repeated_int32 = 1 [packed = false];
    {::_pbi::TcParser::FastV32R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_int32_)}},
    // repeated int64 repeated_int64 = 2 [packed = false];
    {::_pbi::TcParser::FastV64R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_int64_)}},
    // repeated uint32 repeated_uint32 = 3 [packed = false];
    {::_pbi::TcParser::FastV32R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_uint32_)}},
    // repeated uint64 repeated_uint64 = 4 [packed = false];
    {::_pbi::TcParser::FastV64R1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_uint64_)}},
    // repeated sint32 repeated_sint32 = 5 [packed = false];
    {::_pbi::TcParser::FastZ32R1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_sint32_)}},
    // repeated sint64 repeated_sint64 = 6 [packed = false];
    {::_pbi::TcParser::FastZ64R1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_sint64_)}},
    // repeated fixed32 repeated_fixed32 = 7 [packed = false];
    {::_pbi::TcParser::FastF32R1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_fixed32_)}},
    // repeated fixed64 repeated_fixed64 = 8 [packed = false];
    {::_pbi::TcParser::FastF64R1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_fixed64_)}},
    // repeated sfixed32 repeated_sfixed32 = 9 [packed = false];
    {::_pbi::TcParser::FastF32R1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_sfixed32_)}},
    // repeated sfixed64 repeated_sfixed64 = 10 [packed = false];
    {::_pbi::TcParser::FastF64R1,
     {81, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_sfixed64_)}},
    // repeated float repeated_float = 11 [packed = false];
    {::_pbi::TcParser::FastF32R1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_float_)}},
    // repeated double repeated_double = 12 [packed = false];
    {::_pbi::TcParser::FastF64R1,
     {97, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_double_)}},
    // repeated bool repeated_bool = 13 [packed = false];
    {::_pbi::TcParser::FastV8R1,
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_bool_)}},
    // repeated .proto3_arena_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 14 [packed = false];
    {::_pbi::TcParser::FastV32R1,
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_nested_enum_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 repeated_int32 = 1 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int64 repeated_int64 = 2 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_int64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated uint32 repeated_uint32 = 3 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_uint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint64 repeated_uint64 = 4 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_uint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
    // repeated sint32 repeated_sint32 = 5 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_sint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSInt32)},
    // repeated sint64 repeated_sint64 = 6 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_sint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSInt64)},
    // repeated fixed32 repeated_fixed32 = 7 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_fixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
    // repeated fixed64 repeated_fixed64 = 8 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_fixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
    // repeated sfixed32 repeated_sfixed32 = 9 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_sfixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSFixed32)},
    // repeated sfixed64 repeated_sfixed64 = 10 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_sfixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSFixed64)},
    // repeated float repeated_float = 11 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_float_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated double repeated_double = 12 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_double_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated bool repeated_bool = 13 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_bool_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
    // repeated .proto3_arena_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 14 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.repeated_nested_enum_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TestUnpackedTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_arena_unittest.TestUnpackedTypes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_int32_.Clear();
  _impl_.repeated_int64_.Clear();
  _impl_.repeated_uint32_.Clear();
  _impl_.repeated_uint64_.Clear();
  _impl_.repeated_sint32_.Clear();
  _impl_.repeated_sint64_.Clear();
  _impl_.repeated_fixed32_.Clear();
  _impl_.repeated_fixed64_.Clear();
  _impl_.repeated_sfixed32_.Clear();
  _impl_.repeated_sfixed64_.Clear();
  _impl_.repeated_float_.Clear();
  _impl_.repeated_double_.Clear();
  _impl_.repeated_bool_.Clear();
  _impl_.repeated_nested_enum_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestUnpackedTypes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestUnpackedTypes& this_ = static_cast<const TestUnpackedTypes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestUnpackedTypes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestUnpackedTypes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:proto3_arena_unittest.TestUnpackedTypes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int32 repeated_int32 = 1 [packed = false];
          for (int i = 0, n = this_._internal_repeated_int32_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                1, this_._internal_repeated_int32().Get(i), target);
          }

          // repeated int64 repeated_int64 = 2 [packed = false];
          for (int i = 0, n = this_._internal_repeated_int64_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                2, this_._internal_repeated_int64().Get(i), target);
          }

          // repeated uint32 repeated_uint32 = 3 [packed = false];
          for (int i = 0, n = this_._internal_repeated_uint32_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_repeated_uint32().Get(i), target);
          }

          // repeated uint64 repeated_uint64 = 4 [packed = false];
          for (int i = 0, n = this_._internal_repeated_uint64_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_repeated_uint64().Get(i), target);
          }

          // repeated sint32 repeated_sint32 = 5 [packed = false];
          for (int i = 0, n = this_._internal_repeated_sint32_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                5, this_._internal_repeated_sint32().Get(i), target);
          }

          // repeated sint64 repeated_sint64 = 6 [packed = false];
          for (int i = 0, n = this_._internal_repeated_sint64_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
                6, this_._internal_repeated_sint64().Get(i), target);
          }

          // repeated fixed32 repeated_fixed32 = 7 [packed = false];
          for (int i = 0, n = this_._internal_repeated_fixed32_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
                7, this_._internal_repeated_fixed32().Get(i), target);
          }

          // repeated fixed64 repeated_fixed64 = 8 [packed = false];
          for (int i = 0, n = this_._internal_repeated_fixed64_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
                8, this_._internal_repeated_fixed64().Get(i), target);
          }

          // repeated sfixed32 repeated_sfixed32 = 9 [packed = false];
          for (int i = 0, n = this_._internal_repeated_sfixed32_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
                9, this_._internal_repeated_sfixed32().Get(i), target);
          }

          // repeated sfixed64 repeated_sfixed64 = 10 [packed = false];
          for (int i = 0, n = this_._internal_repeated_sfixed64_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
                10, this_._internal_repeated_sfixed64().Get(i), target);
          }

          // repeated float repeated_float = 11 [packed = false];
          for (int i = 0, n = this_._internal_repeated_float_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_repeated_float().Get(i), target);
          }

          // repeated double repeated_double = 12 [packed = false];
          for (int i = 0, n = this_._internal_repeated_double_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                12, this_._internal_repeated_double().Get(i), target);
          }

          // repeated bool repeated_bool = 13 [packed = false];
          for (int i = 0, n = this_._internal_repeated_bool_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_repeated_bool().Get(i), target);
          }

          // repeated .proto3_arena_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 14 [packed = false];
          for (int i = 0, n = this_._internal_repeated_nested_enum_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                14, static_cast<::proto3_arena_unittest::TestAllTypes_NestedEnum>(this_._internal_repeated_nested_enum().Get(i)),
                target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:proto3_arena_unittest.TestUnpackedTypes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestUnpackedTypes::ByteSizeLong(const MessageLite& base) {
          const TestUnpackedTypes& this_ = static_cast<const TestUnpackedTypes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestUnpackedTypes::ByteSizeLong() const {
          const TestUnpackedTypes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:proto3_arena_unittest.TestUnpackedTypes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 repeated_int32 = 1 [packed = false];
             {
              std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
                  this_._internal_repeated_int32());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_int32_size());
              total_size += tag_size + data_size;
            }
            // repeated int64 repeated_int64 = 2 [packed = false];
             {
              std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
                  this_._internal_repeated_int64());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_int64_size());
              total_size += tag_size + data_size;
            }
            // repeated uint32 repeated_uint32 = 3 [packed = false];
             {
              std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
                  this_._internal_repeated_uint32());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_uint32_size());
              total_size += tag_size + data_size;
            }
            // repeated uint64 repeated_uint64 = 4 [packed = false];
             {
              std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
                  this_._internal_repeated_uint64());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_uint64_size());
              total_size += tag_size + data_size;
            }
            // repeated sint32 repeated_sint32 = 5 [packed = false];
             {
              std::size_t data_size = ::_pbi::WireFormatLite::SInt32Size(
                  this_._internal_repeated_sint32());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_sint32_size());
              total_size += tag_size + data_size;
            }
            // repeated sint64 repeated_sint64 = 6 [packed = false];
             {
              std::size_t data_size = ::_pbi::WireFormatLite::SInt64Size(
                  this_._internal_repeated_sint64());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_sint64_size());
              total_size += tag_size + data_size;
            }
            // repeated fixed32 repeated_fixed32 = 7 [packed = false];
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_repeated_fixed32_size());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_fixed32_size());
              total_size += tag_size + data_size;
            }
            // repeated fixed64 repeated_fixed64 = 8 [packed = false];
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_repeated_fixed64_size());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_fixed64_size());
              total_size += tag_size + data_size;
            }
            // repeated sfixed32 repeated_sfixed32 = 9 [packed = false];
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_repeated_sfixed32_size());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_sfixed32_size());
              total_size += tag_size + data_size;
            }
            // repeated sfixed64 repeated_sfixed64 = 10 [packed = false];
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_repeated_sfixed64_size());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_sfixed64_size());
              total_size += tag_size + data_size;
            }
            // repeated float repeated_float = 11 [packed = false];
             {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_repeated_float_size());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_float_size());
              total_size += tag_size + data_size;
            }
            // repeated double repeated_double = 12 [packed = false];
             {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_repeated_double_size());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_double_size());
              total_size += tag_size + data_size;
            }
            // repeated bool repeated_bool = 13 [packed = false];
             {
              std::size_t data_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_bool_size());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_bool_size());
              total_size += tag_size + data_size;
            }
            // repeated .proto3_arena_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 14 [packed = false];
             {
              std::size_t data_size =
                  ::_pbi::WireFormatLite::EnumSize(this_._internal_repeated_nested_enum());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_repeated_nested_enum_size());
              total_size += data_size + tag_size;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestUnpackedTypes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestUnpackedTypes*>(&to_msg);
  auto& from = static_cast<const TestUnpackedTypes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto3_arena_unittest.TestUnpackedTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_mutable_repeated_int64()->MergeFrom(from._internal_repeated_int64());
  _this->_internal_mutable_repeated_uint32()->MergeFrom(from._internal_repeated_uint32());
  _this->_internal_mutable_repeated_uint64()->MergeFrom(from._internal_repeated_uint64());
  _this->_internal_mutable_repeated_sint32()->MergeFrom(from._internal_repeated_sint32());
  _this->_internal_mutable_repeated_sint64()->MergeFrom(from._internal_repeated_sint64());
  _this->_internal_mutable_repeated_fixed32()->MergeFrom(from._internal_repeated_fixed32());
  _this->_internal_mutable_repeated_fixed64()->MergeFrom(from._internal_repeated_fixed64());
  _this->_internal_mutable_repeated_sfixed32()->MergeFrom(from._internal_repeated_sfixed32());
  _this->_internal_mutable_repeated_sfixed64()->MergeFrom(from._internal_repeated_sfixed64());
  _this->_internal_mutable_repeated_float()->MergeFrom(from._internal_repeated_float());
  _this->_internal_mutable_repeated_double()->MergeFrom(from._internal_repeated_double());
  _this->_internal_mutable_repeated_bool()->MergeFrom(from._internal_repeated_bool());
  _this->_internal_mutable_repeated_nested_enum()->MergeFrom(from._internal_repeated_nested_enum());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestUnpackedTypes::CopyFrom(const TestUnpackedTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_arena_unittest.TestUnpackedTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestUnpackedTypes::InternalSwap(TestUnpackedTypes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
  _impl_.repeated_int64_.InternalSwap(&other->_impl_.repeated_int64_);
  _impl_.repeated_uint32_.InternalSwap(&other->_impl_.repeated_uint32_);
  _impl_.repeated_uint64_.InternalSwap(&other->_impl_.repeated_uint64_);
  _impl_.repeated_sint32_.InternalSwap(&other->_impl_.repeated_sint32_);
  _impl_.repeated_sint64_.InternalSwap(&other->_impl_.repeated_sint64_);
  _impl_.repeated_fixed32_.InternalSwap(&other->_impl_.repeated_fixed32_);
  _impl_.repeated_fixed64_.InternalSwap(&other->_impl_.repeated_fixed64_);
  _impl_.repeated_sfixed32_.InternalSwap(&other->_impl_.repeated_sfixed32_);
  _impl_.repeated_sfixed64_.InternalSwap(&other->_impl_.repeated_sfixed64_);
  _impl_.repeated_float_.InternalSwap(&other->_impl_.repeated_float_);
  _impl_.repeated_double_.InternalSwap(&other->_impl_.repeated_double_);
  _impl_.repeated_bool_.InternalSwap(&other->_impl_.repeated_bool_);
  _impl_.repeated_nested_enum_.InternalSwap(&other->_impl_.repeated_nested_enum_);
}

::google::protobuf::Metadata TestUnpackedTypes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NestedTestAllTypes::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NestedTestAllTypes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_._has_bits_);
};

NestedTestAllTypes::NestedTestAllTypes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.NestedTestAllTypes)
}
inline PROTOBUF_NDEBUG_INLINE NestedTestAllTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::proto3_arena_unittest::NestedTestAllTypes& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repeated_child_{visibility, arena, from.repeated_child_} {}

NestedTestAllTypes::NestedTestAllTypes(
    ::google::protobuf::Arena* arena,
    const NestedTestAllTypes& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NestedTestAllTypes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.child_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::NestedTestAllTypes>(
                              arena, *from._impl_.child_)
                        : nullptr;
  _impl_.payload_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes>(
                              arena, *from._impl_.payload_)
                        : nullptr;
  _impl_.lazy_payload_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes>(
                              arena, *from._impl_.lazy_payload_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:proto3_arena_unittest.NestedTestAllTypes)
}
inline PROTOBUF_NDEBUG_INLINE NestedTestAllTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repeated_child_{visibility, arena} {}

inline void NestedTestAllTypes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, child_),
           0,
           offsetof(Impl_, lazy_payload_) -
               offsetof(Impl_, child_) +
               sizeof(Impl_::lazy_payload_));
}
NestedTestAllTypes::~NestedTestAllTypes() {
  // @@protoc_insertion_point(destructor:proto3_arena_unittest.NestedTestAllTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NestedTestAllTypes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.child_;
  delete _impl_.payload_;
  delete _impl_.lazy_payload_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    NestedTestAllTypes::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_NestedTestAllTypes_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &NestedTestAllTypes::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<NestedTestAllTypes>(),
            ::google::protobuf::Message::GetNewImpl<NestedTestAllTypes>(),
            ::google::protobuf::Message::GetClearImpl<NestedTestAllTypes>(), &NestedTestAllTypes::ByteSizeLong,
                &NestedTestAllTypes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_._cached_size_),
            false,
        },
        &NestedTestAllTypes::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* NestedTestAllTypes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> NestedTestAllTypes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::NestedTestAllTypes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .proto3_arena_unittest.TestAllTypes lazy_payload = 4 [lazy = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 3, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.lazy_payload_)}},
    // .proto3_arena_unittest.NestedTestAllTypes child = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.child_)}},
    // .proto3_arena_unittest.TestAllTypes payload = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.payload_)}},
    // repeated .proto3_arena_unittest.NestedTestAllTypes repeated_child = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.repeated_child_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .proto3_arena_unittest.NestedTestAllTypes child = 1;
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.child_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto3_arena_unittest.TestAllTypes payload = 2;
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.payload_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .proto3_arena_unittest.NestedTestAllTypes repeated_child = 3;
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.repeated_child_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto3_arena_unittest.TestAllTypes lazy_payload = 4 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.lazy_payload_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::NestedTestAllTypes>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::NestedTestAllTypes>()},
    {::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestAllTypes>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NestedTestAllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_arena_unittest.NestedTestAllTypes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_child_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.child_ != nullptr);
      _impl_.child_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payload_ != nullptr);
      _impl_.payload_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.lazy_payload_ != nullptr);
      _impl_.lazy_payload_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NestedTestAllTypes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NestedTestAllTypes& this_ = static_cast<const NestedTestAllTypes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NestedTestAllTypes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NestedTestAllTypes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:proto3_arena_unittest.NestedTestAllTypes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .proto3_arena_unittest.NestedTestAllTypes child = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.child_, this_._impl_.child_->GetCachedSize(), target,
                stream);
          }

          // .proto3_arena_unittest.TestAllTypes payload = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.payload_, this_._impl_.payload_->GetCachedSize(), target,
                stream);
          }

          // repeated .proto3_arena_unittest.NestedTestAllTypes repeated_child = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_repeated_child_size());
               i < n; i++) {
            const auto& repfield = this_._internal_repeated_child().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .proto3_arena_unittest.TestAllTypes lazy_payload = 4 [lazy = true];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.lazy_payload_, this_._impl_.lazy_payload_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:proto3_arena_unittest.NestedTestAllTypes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NestedTestAllTypes::ByteSizeLong(const MessageLite& base) {
          const NestedTestAllTypes& this_ = static_cast<const NestedTestAllTypes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NestedTestAllTypes::ByteSizeLong() const {
          const NestedTestAllTypes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:proto3_arena_unittest.NestedTestAllTypes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .proto3_arena_unittest.NestedTestAllTypes repeated_child = 3;
             {
              total_size += 1UL * this_._internal_repeated_child_size();
              for (const auto& msg : this_._internal_repeated_child()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .proto3_arena_unittest.NestedTestAllTypes child = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.child_);
            }
            // .proto3_arena_unittest.TestAllTypes payload = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_);
            }
            // .proto3_arena_unittest.TestAllTypes lazy_payload = 4 [lazy = true];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lazy_payload_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NestedTestAllTypes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NestedTestAllTypes*>(&to_msg);
  auto& from = static_cast<const NestedTestAllTypes&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:proto3_arena_unittest.NestedTestAllTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_child()->MergeFrom(
      from._internal_repeated_child());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.child_ != nullptr);
      if (_this->_impl_.child_ == nullptr) {
        _this->_impl_.child_ =
            ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::NestedTestAllTypes>(arena, *from._impl_.child_);
      } else {
        _this->_impl_.child_->MergeFrom(*from._impl_.child_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.payload_ != nullptr);
      if (_this->_impl_.payload_ == nullptr) {
        _this->_impl_.payload_ =
            ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes>(arena, *from._impl_.payload_);
      } else {
        _this->_impl_.payload_->MergeFrom(*from._impl_.payload_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.lazy_payload_ != nullptr);
      if (_this->_impl_.lazy_payload_ == nullptr) {
        _this->_impl_.lazy_payload_ =
            ::google::protobuf::Message::CopyConstruct<::proto3_arena_unittest::TestAllTypes>(arena, *from._impl_.lazy_payload_);
      } else {
        _this->_impl_.lazy_payload_->MergeFrom(*from._impl_.lazy_payload_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NestedTestAllTypes::CopyFrom(const NestedTestAllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_arena_unittest.NestedTestAllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NestedTestAllTypes::InternalSwap(NestedTestAllTypes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_child_.InternalSwap(&other->_impl_.repeated_child_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.lazy_payload_)
      + sizeof(NestedTestAllTypes::_impl_.lazy_payload_)
      - PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.child_)>(
          reinterpret_cast<char*>(&_impl_.child_),
          reinterpret_cast<char*>(&other->_impl_.child_));
}

::google::protobuf::Metadata NestedTestAllTypes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ForeignMessage::_Internal {
 public:
};

ForeignMessage::ForeignMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.ForeignMessage)
}
ForeignMessage::ForeignMessage(
    ::google::protobuf::Arena* arena, const ForeignMessage& from)
    : ForeignMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ForeignMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ForeignMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.c_ = {};
}
ForeignMessage::~ForeignMessage() {
  // @@protoc_insertion_point(destructor:proto3_arena_unittest.ForeignMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ForeignMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ForeignMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ForeignMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ForeignMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ForeignMessage>(),
            ::google::protobuf::Message::GetNewImpl<ForeignMessage>(),
            ::google::protobuf::Message::GetClearImpl<ForeignMessage>(), &ForeignMessage::ByteSizeLong,
                &ForeignMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_._cached_size_),
            false,
        },
        &ForeignMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ForeignMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ForeignMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::ForeignMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 c = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ForeignMessage, _impl_.c_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 c = 1;
    {PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.c_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ForeignMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_arena_unittest.ForeignMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ForeignMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ForeignMessage& this_ = static_cast<const ForeignMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ForeignMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ForeignMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:proto3_arena_unittest.ForeignMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 c = 1;
          if (this_._internal_c() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_c(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:proto3_arena_unittest.ForeignMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ForeignMessage::ByteSizeLong(const MessageLite& base) {
          const ForeignMessage& this_ = static_cast<const ForeignMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ForeignMessage::ByteSizeLong() const {
          const ForeignMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:proto3_arena_unittest.ForeignMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 c = 1;
            if (this_._internal_c() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_c());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ForeignMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ForeignMessage*>(&to_msg);
  auto& from = static_cast<const ForeignMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto3_arena_unittest.ForeignMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_c() != 0) {
    _this->_impl_.c_ = from._impl_.c_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ForeignMessage::CopyFrom(const ForeignMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_arena_unittest.ForeignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ForeignMessage::InternalSwap(ForeignMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.c_, other->_impl_.c_);
}

::google::protobuf::Metadata ForeignMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestEmptyMessage::_Internal {
 public:
};

TestEmptyMessage::TestEmptyMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.TestEmptyMessage)
}
TestEmptyMessage::TestEmptyMessage(
    ::google::protobuf::Arena* arena,
    const TestEmptyMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestEmptyMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:proto3_arena_unittest.TestEmptyMessage)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestEmptyMessage::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_TestEmptyMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestEmptyMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<TestEmptyMessage>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<TestEmptyMessage>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<TestEmptyMessage>(), &TestEmptyMessage::ByteSizeLong,
                &TestEmptyMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestEmptyMessage, _impl_._cached_size_),
            false,
        },
        &TestEmptyMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestEmptyMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestEmptyMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestEmptyMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata TestEmptyMessage::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_Internal {
 public:
};

TestPickleNestedMessage_NestedMessage_NestedNestedMessage::TestPickleNestedMessage_NestedMessage_NestedNestedMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
}
TestPickleNestedMessage_NestedMessage_NestedNestedMessage::TestPickleNestedMessage_NestedMessage_NestedNestedMessage(
    ::google::protobuf::Arena* arena, const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from)
    : TestPickleNestedMessage_NestedMessage_NestedNestedMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestPickleNestedMessage_NestedMessage_NestedNestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cc_ = {};
}
TestPickleNestedMessage_NestedMessage_NestedNestedMessage::~TestPickleNestedMessage_NestedMessage_NestedNestedMessage() {
  // @@protoc_insertion_point(destructor:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestPickleNestedMessage_NestedMessage_NestedNestedMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestPickleNestedMessage_NestedMessage_NestedNestedMessage>(),
            ::google::protobuf::Message::GetNewImpl<TestPickleNestedMessage_NestedMessage_NestedNestedMessage>(),
            ::google::protobuf::Message::GetClearImpl<TestPickleNestedMessage_NestedMessage_NestedNestedMessage>(), &TestPickleNestedMessage_NestedMessage_NestedNestedMessage::ByteSizeLong,
                &TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_._cached_size_),
            false,
        },
        &TestPickleNestedMessage_NestedMessage_NestedNestedMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestPickleNestedMessage_NestedMessage_NestedNestedMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestPickleNestedMessage_NestedMessage_NestedNestedMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 cc = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_.cc_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_.cc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 cc = 1;
    {PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_.cc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cc_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& this_ = static_cast<const TestPickleNestedMessage_NestedMessage_NestedNestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 cc = 1;
          if (this_._internal_cc() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_cc(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestPickleNestedMessage_NestedMessage_NestedNestedMessage::ByteSizeLong(const MessageLite& base) {
          const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& this_ = static_cast<const TestPickleNestedMessage_NestedMessage_NestedNestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestPickleNestedMessage_NestedMessage_NestedNestedMessage::ByteSizeLong() const {
          const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 cc = 1;
            if (this_._internal_cc() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_cc());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestPickleNestedMessage_NestedMessage_NestedNestedMessage*>(&to_msg);
  auto& from = static_cast<const TestPickleNestedMessage_NestedMessage_NestedNestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cc() != 0) {
    _this->_impl_.cc_ = from._impl_.cc_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::CopyFrom(const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::InternalSwap(TestPickleNestedMessage_NestedMessage_NestedNestedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.cc_, other->_impl_.cc_);
}

::google::protobuf::Metadata TestPickleNestedMessage_NestedMessage_NestedNestedMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestPickleNestedMessage_NestedMessage::_Internal {
 public:
};

TestPickleNestedMessage_NestedMessage::TestPickleNestedMessage_NestedMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage)
}
TestPickleNestedMessage_NestedMessage::TestPickleNestedMessage_NestedMessage(
    ::google::protobuf::Arena* arena, const TestPickleNestedMessage_NestedMessage& from)
    : TestPickleNestedMessage_NestedMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestPickleNestedMessage_NestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestPickleNestedMessage_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bb_ = {};
}
TestPickleNestedMessage_NestedMessage::~TestPickleNestedMessage_NestedMessage() {
  // @@protoc_insertion_point(destructor:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestPickleNestedMessage_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestPickleNestedMessage_NestedMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestPickleNestedMessage_NestedMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestPickleNestedMessage_NestedMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestPickleNestedMessage_NestedMessage>(),
            ::google::protobuf::Message::GetNewImpl<TestPickleNestedMessage_NestedMessage>(),
            ::google::protobuf::Message::GetClearImpl<TestPickleNestedMessage_NestedMessage>(), &TestPickleNestedMessage_NestedMessage::ByteSizeLong,
                &TestPickleNestedMessage_NestedMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage, _impl_._cached_size_),
            false,
        },
        &TestPickleNestedMessage_NestedMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestPickleNestedMessage_NestedMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestPickleNestedMessage_NestedMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestPickleNestedMessage_NestedMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 bb = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestPickleNestedMessage_NestedMessage, _impl_.bb_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage, _impl_.bb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage, _impl_.bb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TestPickleNestedMessage_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bb_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestPickleNestedMessage_NestedMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestPickleNestedMessage_NestedMessage& this_ = static_cast<const TestPickleNestedMessage_NestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestPickleNestedMessage_NestedMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestPickleNestedMessage_NestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 bb = 1;
          if (this_._internal_bb() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_bb(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestPickleNestedMessage_NestedMessage::ByteSizeLong(const MessageLite& base) {
          const TestPickleNestedMessage_NestedMessage& this_ = static_cast<const TestPickleNestedMessage_NestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestPickleNestedMessage_NestedMessage::ByteSizeLong() const {
          const TestPickleNestedMessage_NestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 bb = 1;
            if (this_._internal_bb() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_bb());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestPickleNestedMessage_NestedMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestPickleNestedMessage_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestPickleNestedMessage_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bb() != 0) {
    _this->_impl_.bb_ = from._impl_.bb_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPickleNestedMessage_NestedMessage::CopyFrom(const TestPickleNestedMessage_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_arena_unittest.TestPickleNestedMessage.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestPickleNestedMessage_NestedMessage::InternalSwap(TestPickleNestedMessage_NestedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.bb_, other->_impl_.bb_);
}

::google::protobuf::Metadata TestPickleNestedMessage_NestedMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestPickleNestedMessage::_Internal {
 public:
};

TestPickleNestedMessage::TestPickleNestedMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:proto3_arena_unittest.TestPickleNestedMessage)
}
TestPickleNestedMessage::TestPickleNestedMessage(
    ::google::protobuf::Arena* arena,
    const TestPickleNestedMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestPickleNestedMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:proto3_arena_unittest.TestPickleNestedMessage)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestPickleNestedMessage::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_TestPickleNestedMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestPickleNestedMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<TestPickleNestedMessage>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<TestPickleNestedMessage>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<TestPickleNestedMessage>(), &TestPickleNestedMessage::ByteSizeLong,
                &TestPickleNestedMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage, _impl_._cached_size_),
            false,
        },
        &TestPickleNestedMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestPickleNestedMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestPickleNestedMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::proto3_arena_unittest::TestPickleNestedMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata TestPickleNestedMessage::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto3_arena_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fproto3_5farena_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
