// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/unittest_proto3_optional.proto
// Protobuf C++ Version: 5.29.0-dev

#include "google/protobuf/unittest_proto3_optional.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf_unittest {

inline constexpr TestProto3OptionalMessage_NestedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : s_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestProto3OptionalMessage_NestedMessage::TestProto3OptionalMessage_NestedMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestProto3OptionalMessage_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestProto3OptionalMessage_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestProto3OptionalMessage_NestedMessageDefaultTypeInternal() {}
  union {
    TestProto3OptionalMessage_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestProto3OptionalMessage_NestedMessageDefaultTypeInternal _TestProto3OptionalMessage_NestedMessage_default_instance_;

inline constexpr TestProto3Optional_NestedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bb_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestProto3Optional_NestedMessage::TestProto3Optional_NestedMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestProto3Optional_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestProto3Optional_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestProto3Optional_NestedMessageDefaultTypeInternal() {}
  union {
    TestProto3Optional_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestProto3Optional_NestedMessageDefaultTypeInternal _TestProto3Optional_NestedMessage_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Proto3OptionalExtensions::Proto3OptionalExtensions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Proto3OptionalExtensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3OptionalExtensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3OptionalExtensionsDefaultTypeInternal() {}
  union {
    Proto3OptionalExtensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3OptionalExtensionsDefaultTypeInternal _Proto3OptionalExtensions_default_instance_;

inline constexpr TestProto3OptionalMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        nested_message_{nullptr},
        optional_nested_message_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestProto3OptionalMessage::TestProto3OptionalMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestProto3OptionalMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestProto3OptionalMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestProto3OptionalMessageDefaultTypeInternal() {}
  union {
    TestProto3OptionalMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestProto3OptionalMessageDefaultTypeInternal _TestProto3OptionalMessage_default_instance_;

inline constexpr TestProto3Optional::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        optional_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_cord_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_nested_message_{nullptr},
        lazy_nested_message_{nullptr},
        optional_int64_{::int64_t{0}},
        optional_int32_{0},
        optional_uint32_{0u},
        optional_uint64_{::uint64_t{0u}},
        optional_sint64_{::int64_t{0}},
        optional_sint32_{0},
        optional_fixed32_{0u},
        optional_fixed64_{::uint64_t{0u}},
        optional_sfixed64_{::int64_t{0}},
        optional_sfixed32_{0},
        optional_float_{0},
        optional_double_{0},
        optional_bool_{false},
        optional_nested_enum_{static_cast< ::protobuf_unittest::TestProto3Optional_NestedEnum >(0)},
        singular_int64_{::int64_t{0}},
        singular_int32_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestProto3Optional::TestProto3Optional(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestProto3OptionalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestProto3OptionalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestProto3OptionalDefaultTypeInternal() {}
  union {
    TestProto3Optional _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestProto3OptionalDefaultTypeInternal _TestProto3Optional_default_instance_;
}  // namespace protobuf_unittest
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto = nullptr;
const ::uint32_t
    TableStruct_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional_NestedMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional_NestedMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional_NestedMessage, _impl_.bb_),
        0,
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_int32_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_int64_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_uint32_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_uint64_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_sint32_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_sint64_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_fixed32_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_fixed64_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_sfixed32_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_sfixed64_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_float_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_double_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_bool_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_string_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_bytes_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_cord_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_nested_message_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.lazy_nested_message_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.optional_nested_enum_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.singular_int32_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3Optional, _impl_.singular_int64_),
        6,
        5,
        7,
        8,
        10,
        9,
        11,
        12,
        14,
        13,
        15,
        16,
        17,
        0,
        1,
        2,
        3,
        4,
        18,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3OptionalMessage_NestedMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3OptionalMessage_NestedMessage, _impl_.s_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3OptionalMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3OptionalMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3OptionalMessage, _impl_.nested_message_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestProto3OptionalMessage, _impl_.optional_nested_message_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Proto3OptionalExtensions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::protobuf_unittest::TestProto3Optional_NestedMessage)},
        {10, 39, -1, sizeof(::protobuf_unittest::TestProto3Optional)},
        {60, -1, -1, sizeof(::protobuf_unittest::TestProto3OptionalMessage_NestedMessage)},
        {69, 79, -1, sizeof(::protobuf_unittest::TestProto3OptionalMessage)},
        {81, -1, -1, sizeof(::protobuf_unittest::Proto3OptionalExtensions)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf_unittest::_TestProto3Optional_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestProto3Optional_default_instance_._instance,
    &::protobuf_unittest::_TestProto3OptionalMessage_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestProto3OptionalMessage_default_instance_._instance,
    &::protobuf_unittest::_Proto3OptionalExtensions_default_instance_._instance,
};
const char descriptor_table_protodef_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n.google/protobuf/unittest_proto3_option"
    "al.proto\022\021protobuf_unittest\032 google/prot"
    "obuf/descriptor.proto\"\261\n\n\022TestProto3Opti"
    "onal\022\033\n\016optional_int32\030\001 \001(\005H\000\210\001\001\022\033\n\016opt"
    "ional_int64\030\002 \001(\003H\001\210\001\001\022\034\n\017optional_uint3"
    "2\030\003 \001(\rH\002\210\001\001\022\034\n\017optional_uint64\030\004 \001(\004H\003\210"
    "\001\001\022\034\n\017optional_sint32\030\005 \001(\021H\004\210\001\001\022\034\n\017opti"
    "onal_sint64\030\006 \001(\022H\005\210\001\001\022\035\n\020optional_fixed"
    "32\030\007 \001(\007H\006\210\001\001\022\035\n\020optional_fixed64\030\010 \001(\006H"
    "\007\210\001\001\022\036\n\021optional_sfixed32\030\t \001(\017H\010\210\001\001\022\036\n\021"
    "optional_sfixed64\030\n \001(\020H\t\210\001\001\022\033\n\016optional"
    "_float\030\013 \001(\002H\n\210\001\001\022\034\n\017optional_double\030\014 \001"
    "(\001H\013\210\001\001\022\032\n\roptional_bool\030\r \001(\010H\014\210\001\001\022\034\n\017o"
    "ptional_string\030\016 \001(\tH\r\210\001\001\022\033\n\016optional_by"
    "tes\030\017 \001(\014H\016\210\001\001\022\036\n\roptional_cord\030\020 \001(\tB\002\010"
    "\001H\017\210\001\001\022Y\n\027optional_nested_message\030\022 \001(\0132"
    "3.protobuf_unittest.TestProto3Optional.N"
    "estedMessageH\020\210\001\001\022Y\n\023lazy_nested_message"
    "\030\023 \001(\01323.protobuf_unittest.TestProto3Opt"
    "ional.NestedMessageB\002(\001H\021\210\001\001\022S\n\024optional"
    "_nested_enum\030\025 \001(\01620.protobuf_unittest.T"
    "estProto3Optional.NestedEnumH\022\210\001\001\022\026\n\016sin"
    "gular_int32\030\026 \001(\005\022\026\n\016singular_int64\030\027 \001("
    "\003\032\'\n\rNestedMessage\022\017\n\002bb\030\001 \001(\005H\000\210\001\001B\005\n\003_"
    "bb\"J\n\nNestedEnum\022\017\n\013UNSPECIFIED\020\000\022\007\n\003FOO"
    "\020\001\022\007\n\003BAR\020\002\022\007\n\003BAZ\020\003\022\020\n\003NEG\020\377\377\377\377\377\377\377\377\377\001B\021"
    "\n\017_optional_int32B\021\n\017_optional_int64B\022\n\020"
    "_optional_uint32B\022\n\020_optional_uint64B\022\n\020"
    "_optional_sint32B\022\n\020_optional_sint64B\023\n\021"
    "_optional_fixed32B\023\n\021_optional_fixed64B\024"
    "\n\022_optional_sfixed32B\024\n\022_optional_sfixed"
    "64B\021\n\017_optional_floatB\022\n\020_optional_doubl"
    "eB\020\n\016_optional_boolB\022\n\020_optional_stringB"
    "\021\n\017_optional_bytesB\020\n\016_optional_cordB\032\n\030"
    "_optional_nested_messageB\026\n\024_lazy_nested"
    "_messageB\027\n\025_optional_nested_enum\"\211\002\n\031Te"
    "stProto3OptionalMessage\022R\n\016nested_messag"
    "e\030\001 \001(\0132:.protobuf_unittest.TestProto3Op"
    "tionalMessage.NestedMessage\022`\n\027optional_"
    "nested_message\030\002 \001(\0132:.protobuf_unittest"
    ".TestProto3OptionalMessage.NestedMessage"
    "H\000\210\001\001\032\032\n\rNestedMessage\022\t\n\001s\030\001 \001(\tB\032\n\030_op"
    "tional_nested_message\"\251\001\n\030Proto3Optional"
    "Extensions2<\n\017ext_no_optional\022\037.google.p"
    "rotobuf.MessageOptions\030\210\315\331\251\001 \001(\0052A\n\021ext_"
    "with_optional\022\037.google.protobuf.MessageO"
    "ptions\030\211\315\331\251\001 \001(\005\210\001\001:\014\300\350\314\315\n\010\310\350\314\315\n\020B8\n!com"
    ".google.protobuf.testing.protoP\001\252\002\020Proto"
    "bufUnittestb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto = {
    false,
    false,
    1939,
    descriptor_table_protodef_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto,
    "google/protobuf/unittest_proto3_optional.proto",
    &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto_once,
    descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto_deps,
    1,
    5,
    schemas,
    file_default_instances,
    TableStruct_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto::offsets,
    file_level_enum_descriptors_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto,
};
namespace protobuf_unittest {
const ::google::protobuf::EnumDescriptor* TestProto3Optional_NestedEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TestProto3Optional_NestedEnum_internal_data_[] = {
    393215u, 0u, };
bool TestProto3Optional_NestedEnum_IsValid(int value) {
  return -1 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestProto3Optional_NestedEnum TestProto3Optional::UNSPECIFIED;
constexpr TestProto3Optional_NestedEnum TestProto3Optional::FOO;
constexpr TestProto3Optional_NestedEnum TestProto3Optional::BAR;
constexpr TestProto3Optional_NestedEnum TestProto3Optional::BAZ;
constexpr TestProto3Optional_NestedEnum TestProto3Optional::NEG;
constexpr TestProto3Optional_NestedEnum TestProto3Optional::NestedEnum_MIN;
constexpr TestProto3Optional_NestedEnum TestProto3Optional::NestedEnum_MAX;
constexpr int TestProto3Optional::NestedEnum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class TestProto3Optional_NestedMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestProto3Optional_NestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestProto3Optional_NestedMessage, _impl_._has_bits_);
};

TestProto3Optional_NestedMessage::TestProto3Optional_NestedMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestProto3Optional.NestedMessage)
}
TestProto3Optional_NestedMessage::TestProto3Optional_NestedMessage(
    ::google::protobuf::Arena* arena, const TestProto3Optional_NestedMessage& from)
    : TestProto3Optional_NestedMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestProto3Optional_NestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestProto3Optional_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bb_ = {};
}
TestProto3Optional_NestedMessage::~TestProto3Optional_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestProto3Optional.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestProto3Optional_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestProto3Optional_NestedMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestProto3Optional_NestedMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestProto3Optional_NestedMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestProto3Optional_NestedMessage>(),
            ::google::protobuf::Message::GetNewImpl<TestProto3Optional_NestedMessage>(),
            ::google::protobuf::Message::GetClearImpl<TestProto3Optional_NestedMessage>(), &TestProto3Optional_NestedMessage::ByteSizeLong,
                &TestProto3Optional_NestedMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestProto3Optional_NestedMessage, _impl_._cached_size_),
            false,
        },
        &TestProto3Optional_NestedMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestProto3Optional_NestedMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestProto3Optional_NestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestProto3Optional_NestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestProto3Optional_NestedMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 bb = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestProto3Optional_NestedMessage, _impl_.bb_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional_NestedMessage, _impl_.bb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional_NestedMessage, _impl_.bb_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TestProto3Optional_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestProto3Optional.NestedMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bb_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestProto3Optional_NestedMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestProto3Optional_NestedMessage& this_ = static_cast<const TestProto3Optional_NestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestProto3Optional_NestedMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestProto3Optional_NestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestProto3Optional.NestedMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 bb = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_bb(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestProto3Optional.NestedMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestProto3Optional_NestedMessage::ByteSizeLong(const MessageLite& base) {
          const TestProto3Optional_NestedMessage& this_ = static_cast<const TestProto3Optional_NestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestProto3Optional_NestedMessage::ByteSizeLong() const {
          const TestProto3Optional_NestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestProto3Optional.NestedMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional int32 bb = 1;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_bb());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestProto3Optional_NestedMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestProto3Optional_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestProto3Optional_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestProto3Optional.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.bb_ = from._impl_.bb_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestProto3Optional_NestedMessage::CopyFrom(const TestProto3Optional_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestProto3Optional.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestProto3Optional_NestedMessage::InternalSwap(TestProto3Optional_NestedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.bb_, other->_impl_.bb_);
}

::google::protobuf::Metadata TestProto3Optional_NestedMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestProto3Optional::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestProto3Optional>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_._has_bits_);
};

TestProto3Optional::TestProto3Optional(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestProto3Optional)
}
inline PROTOBUF_NDEBUG_INLINE TestProto3Optional::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf_unittest::TestProto3Optional& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        optional_string_(arena, from.optional_string_),
        optional_bytes_(arena, from.optional_bytes_),
        optional_cord_(arena, from.optional_cord_) {}

TestProto3Optional::TestProto3Optional(
    ::google::protobuf::Arena* arena,
    const TestProto3Optional& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestProto3Optional* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optional_nested_message_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestProto3Optional_NestedMessage>(
                              arena, *from._impl_.optional_nested_message_)
                        : nullptr;
  _impl_.lazy_nested_message_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestProto3Optional_NestedMessage>(
                              arena, *from._impl_.lazy_nested_message_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_int64_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, optional_int64_),
           offsetof(Impl_, singular_int32_) -
               offsetof(Impl_, optional_int64_) +
               sizeof(Impl_::singular_int32_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestProto3Optional)
}
inline PROTOBUF_NDEBUG_INLINE TestProto3Optional::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        optional_string_(arena),
        optional_bytes_(arena),
        optional_cord_(arena) {}

inline void TestProto3Optional::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_nested_message_),
           0,
           offsetof(Impl_, singular_int32_) -
               offsetof(Impl_, optional_nested_message_) +
               sizeof(Impl_::singular_int32_));
}
TestProto3Optional::~TestProto3Optional() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestProto3Optional)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestProto3Optional::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.optional_string_.Destroy();
  _impl_.optional_bytes_.Destroy();
  _impl_.optional_cord_.Destroy();
  delete _impl_.optional_nested_message_;
  delete _impl_.lazy_nested_message_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestProto3Optional::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestProto3Optional_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestProto3Optional::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestProto3Optional>(),
            ::google::protobuf::Message::GetNewImpl<TestProto3Optional>(),
            ::google::protobuf::Message::GetClearImpl<TestProto3Optional>(), &TestProto3Optional::ByteSizeLong,
                &TestProto3Optional::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_._cached_size_),
            false,
        },
        &TestProto3Optional::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestProto3Optional::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 21, 2, 89, 2> TestProto3Optional::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_._has_bits_),
    0, // no _extensions_
    23, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4287168512,  // skipmap
    offsetof(decltype(_table_), field_entries),
    21,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestProto3Optional>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 optional_int32 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestProto3Optional, _impl_.optional_int32_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_int32_)}},
    // optional int64 optional_int64 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestProto3Optional, _impl_.optional_int64_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_int64_)}},
    // optional uint32 optional_uint32 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestProto3Optional, _impl_.optional_uint32_), 7>(),
     {24, 7, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_uint32_)}},
    // optional uint64 optional_uint64 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestProto3Optional, _impl_.optional_uint64_), 8>(),
     {32, 8, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_uint64_)}},
    // optional sint32 optional_sint32 = 5;
    {::_pbi::TcParser::FastZ32S1,
     {40, 10, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_sint32_)}},
    // optional sint64 optional_sint64 = 6;
    {::_pbi::TcParser::FastZ64S1,
     {48, 9, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_sint64_)}},
    // optional fixed32 optional_fixed32 = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 11, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_fixed32_)}},
    // optional fixed64 optional_fixed64 = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 12, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_fixed64_)}},
    // optional sfixed32 optional_sfixed32 = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 14, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_sfixed32_)}},
    // optional sfixed64 optional_sfixed64 = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 13, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_sfixed64_)}},
    // optional float optional_float = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 15, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_float_)}},
    // optional double optional_double = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 16, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_double_)}},
    // optional bool optional_bool = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestProto3Optional, _impl_.optional_bool_), 17>(),
     {104, 17, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_bool_)}},
    // optional string optional_string = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 0, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_string_)}},
    // optional bytes optional_bytes = 15;
    {::_pbi::TcParser::FastBS1,
     {122, 1, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_bytes_)}},
    // optional string optional_cord = 16 [ctype = CORD];
    {::_pbi::TcParser::FastUcS2,
     {386, 2, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_cord_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 3, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_nested_message_)}},
    // optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];
    {::_pbi::TcParser::FastMtS2,
     {410, 4, 1, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.lazy_nested_message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 18, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_nested_enum_)}},
    // int32 singular_int32 = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.singular_int32_)}},
    // int64 singular_int64 = 23;
    {::_pbi::TcParser::FastV64S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.singular_int64_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 optional_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_int32_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 optional_int64 = 2;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_int64_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 optional_uint32 = 3;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_uint32_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 optional_uint64 = 4;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_uint64_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional sint32 optional_sint32 = 5;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_sint32_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint64 optional_sint64 = 6;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_sint64_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt64)},
    // optional fixed32 optional_fixed32 = 7;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_fixed32_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 optional_fixed64 = 8;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_fixed64_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional sfixed32 optional_sfixed32 = 9;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_sfixed32_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // optional sfixed64 optional_sfixed64 = 10;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_sfixed64_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed64)},
    // optional float optional_float = 11;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_float_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional double optional_double = 12;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_double_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool optional_bool = 13;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_bool_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string optional_string = 14;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bytes optional_bytes = 15;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_bytes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string optional_cord = 16 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_cord_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_nested_message_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.lazy_nested_message_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_nested_enum_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 singular_int32 = 22;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.singular_int32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 singular_int64 = 23;
    {PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.singular_int64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestProto3Optional_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestProto3Optional_NestedMessage>()},
  }}, {{
    "\44\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\15\0\0\0\0\0\0\0"
    "protobuf_unittest.TestProto3Optional"
    "optional_string"
    "optional_cord"
  }},
};

PROTOBUF_NOINLINE void TestProto3Optional::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestProto3Optional)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_bytes_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.optional_cord_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.optional_nested_message_ != nullptr);
      _impl_.optional_nested_message_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.lazy_nested_message_ != nullptr);
      _impl_.lazy_nested_message_->Clear();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.optional_int64_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_uint32_) -
        reinterpret_cast<char*>(&_impl_.optional_int64_)) + sizeof(_impl_.optional_uint32_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.optional_uint64_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_float_) -
        reinterpret_cast<char*>(&_impl_.optional_uint64_)) + sizeof(_impl_.optional_float_));
  }
  if (cached_has_bits & 0x00070000u) {
    ::memset(&_impl_.optional_double_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_nested_enum_) -
        reinterpret_cast<char*>(&_impl_.optional_double_)) + sizeof(_impl_.optional_nested_enum_));
  }
  ::memset(&_impl_.singular_int64_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.singular_int32_) -
      reinterpret_cast<char*>(&_impl_.singular_int64_)) + sizeof(_impl_.singular_int32_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestProto3Optional::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestProto3Optional& this_ = static_cast<const TestProto3Optional&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestProto3Optional::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestProto3Optional& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestProto3Optional)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 optional_int32 = 1;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_optional_int32(), target);
          }

          // optional int64 optional_int64 = 2;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_optional_int64(), target);
          }

          // optional uint32 optional_uint32 = 3;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_optional_uint32(), target);
          }

          // optional uint64 optional_uint64 = 4;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_optional_uint64(), target);
          }

          // optional sint32 optional_sint32 = 5;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                5, this_._internal_optional_sint32(), target);
          }

          // optional sint64 optional_sint64 = 6;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
                6, this_._internal_optional_sint64(), target);
          }

          // optional fixed32 optional_fixed32 = 7;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
                7, this_._internal_optional_fixed32(), target);
          }

          // optional fixed64 optional_fixed64 = 8;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
                8, this_._internal_optional_fixed64(), target);
          }

          // optional sfixed32 optional_sfixed32 = 9;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
                9, this_._internal_optional_sfixed32(), target);
          }

          // optional sfixed64 optional_sfixed64 = 10;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
                10, this_._internal_optional_sfixed64(), target);
          }

          // optional float optional_float = 11;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_optional_float(), target);
          }

          // optional double optional_double = 12;
          if (cached_has_bits & 0x00010000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                12, this_._internal_optional_double(), target);
          }

          // optional bool optional_bool = 13;
          if (cached_has_bits & 0x00020000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_optional_bool(), target);
          }

          // optional string optional_string = 14;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_optional_string();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf_unittest.TestProto3Optional.optional_string");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // optional bytes optional_bytes = 15;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_optional_bytes();
            target = stream->WriteBytesMaybeAliased(15, _s, target);
          }

          // optional string optional_cord = 16 [ctype = CORD];
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_optional_cord();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf_unittest.TestProto3Optional.optional_cord");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.optional_nested_message_, this_._impl_.optional_nested_message_->GetCachedSize(), target,
                stream);
          }

          // optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                19, *this_._impl_.lazy_nested_message_, this_._impl_.lazy_nested_message_->GetCachedSize(), target,
                stream);
          }

          // optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;
          if (cached_has_bits & 0x00040000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                21, this_._internal_optional_nested_enum(), target);
          }

          // int32 singular_int32 = 22;
          if (this_._internal_singular_int32() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                22, this_._internal_singular_int32(), target);
          }

          // int64 singular_int64 = 23;
          if (this_._internal_singular_int64() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                23, this_._internal_singular_int64(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestProto3Optional)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestProto3Optional::ByteSizeLong(const MessageLite& base) {
          const TestProto3Optional& this_ = static_cast<const TestProto3Optional&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestProto3Optional::ByteSizeLong() const {
          const TestProto3Optional& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestProto3Optional)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string optional_string = 14;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_optional_string());
            }
            // optional bytes optional_bytes = 15;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_optional_bytes());
            }
            // optional string optional_cord = 16 [ctype = CORD];
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_optional_cord());
            }
            // optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_nested_message_);
            }
            // optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lazy_nested_message_);
            }
            // optional int64 optional_int64 = 2;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_optional_int64());
            }
            // optional int32 optional_int32 = 1;
            if (cached_has_bits & 0x00000040u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_optional_int32());
            }
            // optional uint32 optional_uint32 = 3;
            if (cached_has_bits & 0x00000080u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_optional_uint32());
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // optional uint64 optional_uint64 = 4;
            if (cached_has_bits & 0x00000100u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_optional_uint64());
            }
            // optional sint64 optional_sint64 = 6;
            if (cached_has_bits & 0x00000200u) {
              total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
                  this_._internal_optional_sint64());
            }
            // optional sint32 optional_sint32 = 5;
            if (cached_has_bits & 0x00000400u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_optional_sint32());
            }
            // optional fixed32 optional_fixed32 = 7;
            if (cached_has_bits & 0x00000800u) {
              total_size += 5;
            }
            // optional fixed64 optional_fixed64 = 8;
            if (cached_has_bits & 0x00001000u) {
              total_size += 9;
            }
            // optional sfixed64 optional_sfixed64 = 10;
            if (cached_has_bits & 0x00002000u) {
              total_size += 9;
            }
            // optional sfixed32 optional_sfixed32 = 9;
            if (cached_has_bits & 0x00004000u) {
              total_size += 5;
            }
            // optional float optional_float = 11;
            if (cached_has_bits & 0x00008000u) {
              total_size += 5;
            }
          }
          if (cached_has_bits & 0x00070000u) {
            // optional double optional_double = 12;
            if (cached_has_bits & 0x00010000u) {
              total_size += 9;
            }
            // optional bool optional_bool = 13;
            if (cached_has_bits & 0x00020000u) {
              total_size += 2;
            }
            // optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;
            if (cached_has_bits & 0x00040000u) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_optional_nested_enum());
            }
          }
           {
            // int64 singular_int64 = 23;
            if (this_._internal_singular_int64() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_singular_int64());
            }
            // int32 singular_int32 = 22;
            if (this_._internal_singular_int32() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_singular_int32());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestProto3Optional::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestProto3Optional*>(&to_msg);
  auto& from = static_cast<const TestProto3Optional&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestProto3Optional)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_string(from._internal_optional_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_bytes(from._internal_optional_bytes());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_optional_cord(from._internal_optional_cord());
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.optional_nested_message_ != nullptr);
      if (_this->_impl_.optional_nested_message_ == nullptr) {
        _this->_impl_.optional_nested_message_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestProto3Optional_NestedMessage>(arena, *from._impl_.optional_nested_message_);
      } else {
        _this->_impl_.optional_nested_message_->MergeFrom(*from._impl_.optional_nested_message_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.lazy_nested_message_ != nullptr);
      if (_this->_impl_.lazy_nested_message_ == nullptr) {
        _this->_impl_.lazy_nested_message_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestProto3Optional_NestedMessage>(arena, *from._impl_.lazy_nested_message_);
      } else {
        _this->_impl_.lazy_nested_message_->MergeFrom(*from._impl_.lazy_nested_message_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.optional_int64_ = from._impl_.optional_int64_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_int32_ = from._impl_.optional_int32_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.optional_uint32_ = from._impl_.optional_uint32_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.optional_uint64_ = from._impl_.optional_uint64_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.optional_sint64_ = from._impl_.optional_sint64_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.optional_sint32_ = from._impl_.optional_sint32_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.optional_fixed32_ = from._impl_.optional_fixed32_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.optional_fixed64_ = from._impl_.optional_fixed64_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.optional_sfixed64_ = from._impl_.optional_sfixed64_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.optional_sfixed32_ = from._impl_.optional_sfixed32_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.optional_float_ = from._impl_.optional_float_;
    }
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.optional_double_ = from._impl_.optional_double_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.optional_bool_ = from._impl_.optional_bool_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.optional_nested_enum_ = from._impl_.optional_nested_enum_;
    }
  }
  if (from._internal_singular_int64() != 0) {
    _this->_impl_.singular_int64_ = from._impl_.singular_int64_;
  }
  if (from._internal_singular_int32() != 0) {
    _this->_impl_.singular_int32_ = from._impl_.singular_int32_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestProto3Optional::CopyFrom(const TestProto3Optional& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestProto3Optional)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestProto3Optional::InternalSwap(TestProto3Optional* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_, &other->_impl_.optional_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_bytes_, &other->_impl_.optional_bytes_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_cord_, &other->_impl_.optional_cord_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.singular_int32_)
      + sizeof(TestProto3Optional::_impl_.singular_int32_)
      - PROTOBUF_FIELD_OFFSET(TestProto3Optional, _impl_.optional_nested_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_nested_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_nested_message_));
}

::google::protobuf::Metadata TestProto3Optional::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestProto3OptionalMessage_NestedMessage::_Internal {
 public:
};

TestProto3OptionalMessage_NestedMessage::TestProto3OptionalMessage_NestedMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestProto3OptionalMessage_NestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf_unittest::TestProto3OptionalMessage_NestedMessage& from_msg)
      : s_(arena, from.s_),
        _cached_size_{0} {}

TestProto3OptionalMessage_NestedMessage::TestProto3OptionalMessage_NestedMessage(
    ::google::protobuf::Arena* arena,
    const TestProto3OptionalMessage_NestedMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestProto3OptionalMessage_NestedMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestProto3OptionalMessage_NestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : s_(arena),
        _cached_size_{0} {}

inline void TestProto3OptionalMessage_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestProto3OptionalMessage_NestedMessage::~TestProto3OptionalMessage_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestProto3OptionalMessage_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.s_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestProto3OptionalMessage_NestedMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestProto3OptionalMessage_NestedMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestProto3OptionalMessage_NestedMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestProto3OptionalMessage_NestedMessage>(),
            ::google::protobuf::Message::GetNewImpl<TestProto3OptionalMessage_NestedMessage>(),
            ::google::protobuf::Message::GetClearImpl<TestProto3OptionalMessage_NestedMessage>(), &TestProto3OptionalMessage_NestedMessage::ByteSizeLong,
                &TestProto3OptionalMessage_NestedMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage_NestedMessage, _impl_._cached_size_),
            false,
        },
        &TestProto3OptionalMessage_NestedMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestProto3OptionalMessage_NestedMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 67, 2> TestProto3OptionalMessage_NestedMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestProto3OptionalMessage_NestedMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string s = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage_NestedMessage, _impl_.s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string s = 1;
    {PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage_NestedMessage, _impl_.s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\1\0\0\0\0\0\0"
    "protobuf_unittest.TestProto3OptionalMessage.NestedMessage"
    "s"
  }},
};

PROTOBUF_NOINLINE void TestProto3OptionalMessage_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.s_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestProto3OptionalMessage_NestedMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestProto3OptionalMessage_NestedMessage& this_ = static_cast<const TestProto3OptionalMessage_NestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestProto3OptionalMessage_NestedMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestProto3OptionalMessage_NestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string s = 1;
          if (!this_._internal_s().empty()) {
            const std::string& _s = this_._internal_s();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf_unittest.TestProto3OptionalMessage.NestedMessage.s");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestProto3OptionalMessage_NestedMessage::ByteSizeLong(const MessageLite& base) {
          const TestProto3OptionalMessage_NestedMessage& this_ = static_cast<const TestProto3OptionalMessage_NestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestProto3OptionalMessage_NestedMessage::ByteSizeLong() const {
          const TestProto3OptionalMessage_NestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string s = 1;
            if (!this_._internal_s().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_s());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestProto3OptionalMessage_NestedMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestProto3OptionalMessage_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestProto3OptionalMessage_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _this->_internal_set_s(from._internal_s());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestProto3OptionalMessage_NestedMessage::CopyFrom(const TestProto3OptionalMessage_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestProto3OptionalMessage.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestProto3OptionalMessage_NestedMessage::InternalSwap(TestProto3OptionalMessage_NestedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.s_, &other->_impl_.s_, arena);
}

::google::protobuf::Metadata TestProto3OptionalMessage_NestedMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestProto3OptionalMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestProto3OptionalMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_._has_bits_);
};

TestProto3OptionalMessage::TestProto3OptionalMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestProto3OptionalMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestProto3OptionalMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf_unittest::TestProto3OptionalMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TestProto3OptionalMessage::TestProto3OptionalMessage(
    ::google::protobuf::Arena* arena,
    const TestProto3OptionalMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestProto3OptionalMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nested_message_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestProto3OptionalMessage_NestedMessage>(
                              arena, *from._impl_.nested_message_)
                        : nullptr;
  _impl_.optional_nested_message_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestProto3OptionalMessage_NestedMessage>(
                              arena, *from._impl_.optional_nested_message_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestProto3OptionalMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestProto3OptionalMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestProto3OptionalMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nested_message_),
           0,
           offsetof(Impl_, optional_nested_message_) -
               offsetof(Impl_, nested_message_) +
               sizeof(Impl_::optional_nested_message_));
}
TestProto3OptionalMessage::~TestProto3OptionalMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestProto3OptionalMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestProto3OptionalMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.nested_message_;
  delete _impl_.optional_nested_message_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestProto3OptionalMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestProto3OptionalMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestProto3OptionalMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestProto3OptionalMessage>(),
            ::google::protobuf::Message::GetNewImpl<TestProto3OptionalMessage>(),
            ::google::protobuf::Message::GetClearImpl<TestProto3OptionalMessage>(), &TestProto3OptionalMessage::ByteSizeLong,
                &TestProto3OptionalMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_._cached_size_),
            false,
        },
        &TestProto3OptionalMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestProto3OptionalMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> TestProto3OptionalMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestProto3OptionalMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .protobuf_unittest.TestProto3OptionalMessage.NestedMessage optional_nested_message = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_.optional_nested_message_)}},
    // .protobuf_unittest.TestProto3OptionalMessage.NestedMessage nested_message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_.nested_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .protobuf_unittest.TestProto3OptionalMessage.NestedMessage nested_message = 1;
    {PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_.nested_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestProto3OptionalMessage.NestedMessage optional_nested_message = 2;
    {PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_.optional_nested_message_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestProto3OptionalMessage_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestProto3OptionalMessage_NestedMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TestProto3OptionalMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestProto3OptionalMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.nested_message_ != nullptr);
      _impl_.nested_message_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.optional_nested_message_ != nullptr);
      _impl_.optional_nested_message_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestProto3OptionalMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestProto3OptionalMessage& this_ = static_cast<const TestProto3OptionalMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestProto3OptionalMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestProto3OptionalMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestProto3OptionalMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .protobuf_unittest.TestProto3OptionalMessage.NestedMessage nested_message = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.nested_message_, this_._impl_.nested_message_->GetCachedSize(), target,
                stream);
          }

          // optional .protobuf_unittest.TestProto3OptionalMessage.NestedMessage optional_nested_message = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.optional_nested_message_, this_._impl_.optional_nested_message_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestProto3OptionalMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestProto3OptionalMessage::ByteSizeLong(const MessageLite& base) {
          const TestProto3OptionalMessage& this_ = static_cast<const TestProto3OptionalMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestProto3OptionalMessage::ByteSizeLong() const {
          const TestProto3OptionalMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestProto3OptionalMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .protobuf_unittest.TestProto3OptionalMessage.NestedMessage nested_message = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nested_message_);
            }
            // optional .protobuf_unittest.TestProto3OptionalMessage.NestedMessage optional_nested_message = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_nested_message_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestProto3OptionalMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestProto3OptionalMessage*>(&to_msg);
  auto& from = static_cast<const TestProto3OptionalMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestProto3OptionalMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.nested_message_ != nullptr);
      if (_this->_impl_.nested_message_ == nullptr) {
        _this->_impl_.nested_message_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestProto3OptionalMessage_NestedMessage>(arena, *from._impl_.nested_message_);
      } else {
        _this->_impl_.nested_message_->MergeFrom(*from._impl_.nested_message_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.optional_nested_message_ != nullptr);
      if (_this->_impl_.optional_nested_message_ == nullptr) {
        _this->_impl_.optional_nested_message_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestProto3OptionalMessage_NestedMessage>(arena, *from._impl_.optional_nested_message_);
      } else {
        _this->_impl_.optional_nested_message_->MergeFrom(*from._impl_.optional_nested_message_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestProto3OptionalMessage::CopyFrom(const TestProto3OptionalMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestProto3OptionalMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestProto3OptionalMessage::InternalSwap(TestProto3OptionalMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_.optional_nested_message_)
      + sizeof(TestProto3OptionalMessage::_impl_.optional_nested_message_)
      - PROTOBUF_FIELD_OFFSET(TestProto3OptionalMessage, _impl_.nested_message_)>(
          reinterpret_cast<char*>(&_impl_.nested_message_),
          reinterpret_cast<char*>(&other->_impl_.nested_message_));
}

::google::protobuf::Metadata TestProto3OptionalMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Proto3OptionalExtensions::_Internal {
 public:
};

Proto3OptionalExtensions::Proto3OptionalExtensions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Proto3OptionalExtensions)
}
Proto3OptionalExtensions::Proto3OptionalExtensions(
    ::google::protobuf::Arena* arena,
    const Proto3OptionalExtensions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Proto3OptionalExtensions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Proto3OptionalExtensions)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Proto3OptionalExtensions::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_Proto3OptionalExtensions_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Proto3OptionalExtensions::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<Proto3OptionalExtensions>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Proto3OptionalExtensions>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Proto3OptionalExtensions>(), &Proto3OptionalExtensions::ByteSizeLong,
                &Proto3OptionalExtensions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Proto3OptionalExtensions, _impl_._cached_size_),
            false,
        },
        &Proto3OptionalExtensions::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Proto3OptionalExtensions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Proto3OptionalExtensions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::Proto3OptionalExtensions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Proto3OptionalExtensions::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
               const int Proto3OptionalExtensions::kExtNoOptionalFieldNumber;
#endif
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::
        ExtensionIdentifier<::google::protobuf::MessageOptions, ::_pbi::PrimitiveTypeTraits< ::int32_t >,
                            5, false>
            Proto3OptionalExtensions::ext_no_optional(kExtNoOptionalFieldNumber, 0);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
               const int Proto3OptionalExtensions::kExtWithOptionalFieldNumber;
#endif
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::
        ExtensionIdentifier<::google::protobuf::MessageOptions, ::_pbi::PrimitiveTypeTraits< ::int32_t >,
                            5, false>
            Proto3OptionalExtensions::ext_with_optional(kExtWithOptionalFieldNumber, 0);
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fproto3_5foptional_2eproto),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::MessageOptions::default_instance(), 355886728, 5,
            false, false),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::MessageOptions::default_instance(), 355886729, 5,
            false, false),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
