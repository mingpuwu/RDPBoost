// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/util/message_differencer_unittest.proto
// Protobuf C++ Version: 5.29.0-dev

#include "google/protobuf/util/message_differencer_unittest.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf_unittest {

inline constexpr TestField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rc_{},
        rm_{},
        m_{nullptr},
        c_{0},
        a_{0},
        b_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestField::TestField(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestFieldDefaultTypeInternal() {}
  union {
    TestField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestFieldDefaultTypeInternal _TestField_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TestDiffMessage_Item_MpEntry_DoNotUse::TestDiffMessage_Item_MpEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TestDiffMessage_Item_MpEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TestDiffMessage_Item_MpEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TestDiffMessage_Item_MpEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDiffMessage_Item_MpEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDiffMessage_Item_MpEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestDiffMessage_Item_MpEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDiffMessage_Item_MpEntry_DoNotUseDefaultTypeInternal _TestDiffMessage_Item_MpEntry_DoNotUse_default_instance_;

inline constexpr TestDiffMessage_Item::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ra_{},
        rb_{},
        rm_{},
        mp_{},
        b_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        m_{nullptr},
        a_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestDiffMessage_Item::TestDiffMessage_Item(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestDiffMessage_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDiffMessage_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDiffMessage_ItemDefaultTypeInternal() {}
  union {
    TestDiffMessage_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDiffMessage_ItemDefaultTypeInternal _TestDiffMessage_Item_default_instance_;

inline constexpr TestDiffMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_{},
        rw_{},
        rv_{},
        rm_{},
        rany_{},
        w_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        m_{nullptr},
        v_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestDiffMessage::TestDiffMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestDiffMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDiffMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDiffMessageDefaultTypeInternal() {}
  union {
    TestDiffMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDiffMessageDefaultTypeInternal _TestDiffMessage_default_instance_;
}  // namespace protobuf_unittest
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto = nullptr;
const ::uint32_t
    TableStruct_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestField, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestField, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestField, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestField, _impl_.b_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestField, _impl_.c_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestField, _impl_.rc_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestField, _impl_.m_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestField, _impl_.rm_),
        2,
        3,
        1,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item_MpEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item_MpEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item_MpEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item_MpEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _impl_.b_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _impl_.ra_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _impl_.rb_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _impl_.m_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _impl_.rm_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage_Item, _impl_.mp_),
        2,
        0,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _internal_metadata_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_._extensions_),
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_.v_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_.w_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_.m_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_.rv_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_.rw_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_.rm_),
        PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDiffMessage, _impl_.rany_),
        ~0u,
        2,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::protobuf_unittest::TestField)},
        {20, 30, -1, sizeof(::protobuf_unittest::TestDiffMessage_Item_MpEntry_DoNotUse)},
        {32, 47, -1, sizeof(::protobuf_unittest::TestDiffMessage_Item)},
        {54, 70, -1, sizeof(::protobuf_unittest::TestDiffMessage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf_unittest::_TestField_default_instance_._instance,
    &::protobuf_unittest::_TestDiffMessage_Item_MpEntry_DoNotUse_default_instance_._instance,
    &::protobuf_unittest::_TestDiffMessage_Item_default_instance_._instance,
    &::protobuf_unittest::_TestDiffMessage_default_instance_._instance,
};
const char descriptor_table_protodef_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n7google/protobuf/util/message_differenc"
    "er_unittest.proto\022\021protobuf_unittest\032\031go"
    "ogle/protobuf/any.proto\"\331\001\n\tTestField\022\t\n"
    "\001a\030\003 \001(\005\022\t\n\001b\030\004 \001(\005\022\t\n\001c\030\001 \001(\005\022\n\n\002rc\030\002 \003"
    "(\005\022\'\n\001m\030\005 \001(\0132\034.protobuf_unittest.TestFi"
    "eld\022(\n\002rm\030\006 \003(\0132\034.protobuf_unittest.Test"
    "Field2L\n\002tf\022\".protobuf_unittest.TestDiff"
    "Message\030d \001(\0132\034.protobuf_unittest.TestFi"
    "eld\"\356\003\n\017TestDiffMessage\0225\n\004item\030\001 \003(\n2\'."
    "protobuf_unittest.TestDiffMessage.Item\022\r"
    "\n\001v\030\r \001(\005B\002\030\001\022\t\n\001w\030\016 \001(\t\022\'\n\001m\030\017 \001(\0132\034.pr"
    "otobuf_unittest.TestField\022\n\n\002rv\030\013 \003(\005\022\n\n"
    "\002rw\030\n \003(\t\022,\n\002rm\030\014 \003(\0132\034.protobuf_unittes"
    "t.TestFieldB\002\030\001\022\"\n\004rany\030\020 \003(\0132\024.google.p"
    "rotobuf.Any\032\357\001\n\004Item\022\t\n\001a\030\002 \001(\005\022\t\n\001b\030\004 \001"
    "(\t\022\n\n\002ra\030\003 \003(\005\022\n\n\002rb\030\005 \003(\t\022\'\n\001m\030\006 \001(\0132\034."
    "protobuf_unittest.TestField\022(\n\002rm\030\007 \003(\0132"
    "\034.protobuf_unittest.TestField\022;\n\002mp\030\010 \003("
    "\0132/.protobuf_unittest.TestDiffMessage.It"
    "em.MpEntry\032)\n\007MpEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\005:\0028\001*\005\010d\020\310\001B\002H\001"
};
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto = {
    false,
    false,
    824,
    descriptor_table_protodef_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto,
    "google/protobuf/util/message_differencer_unittest.proto",
    &descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto_once,
    descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto::offsets,
    file_level_enum_descriptors_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto,
};
namespace protobuf_unittest {
// ===================================================================

class TestField::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestField>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestField, _impl_._has_bits_);
};

TestField::TestField(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestField)
}
inline PROTOBUF_NDEBUG_INLINE TestField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf_unittest::TestField& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rc_{visibility, arena, from.rc_},
        rm_{visibility, arena, from.rm_} {}

TestField::TestField(
    ::google::protobuf::Arena* arena,
    const TestField& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestField* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.m_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestField>(
                              arena, *from._impl_.m_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, c_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, c_),
           offsetof(Impl_, b_) -
               offsetof(Impl_, c_) +
               sizeof(Impl_::b_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestField)
}
inline PROTOBUF_NDEBUG_INLINE TestField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rc_{visibility, arena},
        rm_{visibility, arena} {}

inline void TestField::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, m_),
           0,
           offsetof(Impl_, b_) -
               offsetof(Impl_, m_) +
               sizeof(Impl_::b_));
}
TestField::~TestField() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestField)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestField::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.m_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestField::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestField_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestField::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestField>(),
            ::google::protobuf::Message::GetNewImpl<TestField>(),
            ::google::protobuf::Message::GetClearImpl<TestField>(), &TestField::ByteSizeLong,
                &TestField::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestField, _impl_._cached_size_),
            false,
        },
        &TestField::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestField::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> TestField::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestField, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestField>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 c = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestField, _impl_.c_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestField, _impl_.c_)}},
    // repeated int32 rc = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TestField, _impl_.rc_)}},
    // optional int32 a = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestField, _impl_.a_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TestField, _impl_.a_)}},
    // optional int32 b = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestField, _impl_.b_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TestField, _impl_.b_)}},
    // optional .protobuf_unittest.TestField m = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(TestField, _impl_.m_)}},
    // repeated .protobuf_unittest.TestField rm = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(TestField, _impl_.rm_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 c = 1;
    {PROTOBUF_FIELD_OFFSET(TestField, _impl_.c_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 rc = 2;
    {PROTOBUF_FIELD_OFFSET(TestField, _impl_.rc_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional int32 a = 3;
    {PROTOBUF_FIELD_OFFSET(TestField, _impl_.a_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 b = 4;
    {PROTOBUF_FIELD_OFFSET(TestField, _impl_.b_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestField m = 5;
    {PROTOBUF_FIELD_OFFSET(TestField, _impl_.m_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestField rm = 6;
    {PROTOBUF_FIELD_OFFSET(TestField, _impl_.rm_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestField>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestField>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TestField::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rc_.Clear();
  _impl_.rm_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.m_ != nullptr);
    _impl_.m_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.c_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.b_) -
        reinterpret_cast<char*>(&_impl_.c_)) + sizeof(_impl_.b_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestField::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestField& this_ = static_cast<const TestField&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestField::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestField& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestField)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 c = 1;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_c(), target);
          }

          // repeated int32 rc = 2;
          for (int i = 0, n = this_._internal_rc_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                2, this_._internal_rc().Get(i), target);
          }

          // optional int32 a = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_a(), target);
          }

          // optional int32 b = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_b(), target);
          }

          // optional .protobuf_unittest.TestField m = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.m_, this_._impl_.m_->GetCachedSize(), target,
                stream);
          }

          // repeated .protobuf_unittest.TestField rm = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rm_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rm().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestField)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestField::ByteSizeLong(const MessageLite& base) {
          const TestField& this_ = static_cast<const TestField&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestField::ByteSizeLong() const {
          const TestField& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestField)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 rc = 2;
             {
              std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
                  this_._internal_rc());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_rc_size());
              total_size += tag_size + data_size;
            }
            // repeated .protobuf_unittest.TestField rm = 6;
             {
              total_size += 1UL * this_._internal_rm_size();
              for (const auto& msg : this_._internal_rm()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional .protobuf_unittest.TestField m = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.m_);
            }
            // optional int32 c = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_c());
            }
            // optional int32 a = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_a());
            }
            // optional int32 b = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_b());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestField::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestField*>(&to_msg);
  auto& from = static_cast<const TestField&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rc()->MergeFrom(from._internal_rc());
  _this->_internal_mutable_rm()->MergeFrom(
      from._internal_rm());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.m_ != nullptr);
      if (_this->_impl_.m_ == nullptr) {
        _this->_impl_.m_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestField>(arena, *from._impl_.m_);
      } else {
        _this->_impl_.m_->MergeFrom(*from._impl_.m_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.c_ = from._impl_.c_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestField::CopyFrom(const TestField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestField::InternalSwap(TestField* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rc_.InternalSwap(&other->_impl_.rc_);
  _impl_.rm_.InternalSwap(&other->_impl_.rm_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestField, _impl_.b_)
      + sizeof(TestField::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(TestField, _impl_.m_)>(
          reinterpret_cast<char*>(&_impl_.m_),
          reinterpret_cast<char*>(&other->_impl_.m_));
}

::google::protobuf::Metadata TestField::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              TestDiffMessage_Item_MpEntry_DoNotUse::TestDiffMessage_Item_MpEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              TestDiffMessage_Item_MpEntry_DoNotUse::TestDiffMessage_Item_MpEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              TestDiffMessage_Item_MpEntry_DoNotUse::TestDiffMessage_Item_MpEntry_DoNotUse() : SuperType() {}
              TestDiffMessage_Item_MpEntry_DoNotUse::TestDiffMessage_Item_MpEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::MessageLite::ClassDataFull
                  TestDiffMessage_Item_MpEntry_DoNotUse::_class_data_ = {
                      ::google::protobuf::Message::ClassData{
                          &_TestDiffMessage_Item_MpEntry_DoNotUse_default_instance_._instance,
                          &_table_.header,
                          nullptr,  // OnDemandRegisterArenaDtor
                          nullptr,  // IsInitialized
                          &TestDiffMessage_Item_MpEntry_DoNotUse::MergeImpl,
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                          ::google::protobuf::Message::GetDeleteImpl<TestDiffMessage_Item_MpEntry_DoNotUse>(),
                          ::google::protobuf::Message::GetNewImpl<TestDiffMessage_Item_MpEntry_DoNotUse>(),
                          ::google::protobuf::Message::ClearImpl, ::google::protobuf::Message::ByteSizeLongImpl,
                              ::google::protobuf::Message::_InternalSerializeImpl,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                          PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item_MpEntry_DoNotUse, _impl_._cached_size_),
                          false,
                      },
                      &TestDiffMessage_Item_MpEntry_DoNotUse::kDescriptorMethods,
                      &descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto,
                      nullptr,  // tracker
              };
              const ::google::protobuf::MessageLite::ClassData* TestDiffMessage_Item_MpEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> TestDiffMessage_Item_MpEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item_MpEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestDiffMessage_Item_MpEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDiffMessage_Item_MpEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item_MpEntry_DoNotUse, _impl_.value_)}},
    // optional string key = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item_MpEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string key = 1;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item_MpEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item_MpEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\56\3\0\0\0\0\0\0"
    "protobuf_unittest.TestDiffMessage.Item.MpEntry"
    "key"
  }},
};

// ===================================================================

class TestDiffMessage_Item::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestDiffMessage_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_._has_bits_);
};

TestDiffMessage_Item::TestDiffMessage_Item(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDiffMessage.Item)
}
inline PROTOBUF_NDEBUG_INLINE TestDiffMessage_Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf_unittest::TestDiffMessage_Item& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ra_{visibility, arena, from.ra_},
        rb_{visibility, arena, from.rb_},
        rm_{visibility, arena, from.rm_},
        mp_{visibility, arena, from.mp_},
        b_(arena, from.b_) {}

TestDiffMessage_Item::TestDiffMessage_Item(
    ::google::protobuf::Arena* arena,
    const TestDiffMessage_Item& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestDiffMessage_Item* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.m_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestField>(
                              arena, *from._impl_.m_)
                        : nullptr;
  _impl_.a_ = from._impl_.a_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDiffMessage.Item)
}
inline PROTOBUF_NDEBUG_INLINE TestDiffMessage_Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ra_{visibility, arena},
        rb_{visibility, arena},
        rm_{visibility, arena},
        mp_{visibility, arena},
        b_(arena) {}

inline void TestDiffMessage_Item::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, m_),
           0,
           offsetof(Impl_, a_) -
               offsetof(Impl_, m_) +
               sizeof(Impl_::a_));
}
TestDiffMessage_Item::~TestDiffMessage_Item() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDiffMessage.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestDiffMessage_Item::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.b_.Destroy();
  delete _impl_.m_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestDiffMessage_Item::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestDiffMessage_Item_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TestDiffMessage_Item::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestDiffMessage_Item>(),
            ::google::protobuf::Message::GetNewImpl<TestDiffMessage_Item>(),
            ::google::protobuf::Message::GetClearImpl<TestDiffMessage_Item>(), &TestDiffMessage_Item::ByteSizeLong,
                &TestDiffMessage_Item::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_._cached_size_),
            false,
        },
        &TestDiffMessage_Item::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestDiffMessage_Item::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 52, 2> TestDiffMessage_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967041,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestDiffMessage_Item>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::FastEndG1, {12, 12}},
    // optional int32 a = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDiffMessage_Item, _impl_.a_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.a_)}},
    // repeated int32 ra = 3;
    {::_pbi::TcParser::FastV32R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.ra_)}},
    // optional string b = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.b_)}},
    // repeated string rb = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.rb_)}},
    // optional .protobuf_unittest.TestField m = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.m_)}},
    // repeated .protobuf_unittest.TestField rm = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.rm_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 2;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.a_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 ra = 3;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.ra_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional string b = 4;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.b_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string rb = 5;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.rb_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional .protobuf_unittest.TestField m = 6;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.m_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestField rm = 7;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.rm_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, int32> mp = 8;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.mp_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestField>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestField>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TestDiffMessage_Item()._impl_.mp_)>(
        0, 1, 0, 9,
        5)},
  }}, {{
    "\46\0\0\1\2\0\0\2"
    "protobuf_unittest.TestDiffMessage.Item"
    "b"
    "rb"
    "mp"
  }},
};

PROTOBUF_NOINLINE void TestDiffMessage_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDiffMessage.Item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ra_.Clear();
  _impl_.rb_.Clear();
  _impl_.rm_.Clear();
  _impl_.mp_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.b_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.m_ != nullptr);
      _impl_.m_->Clear();
    }
  }
  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestDiffMessage_Item::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestDiffMessage_Item& this_ = static_cast<const TestDiffMessage_Item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestDiffMessage_Item::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestDiffMessage_Item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDiffMessage.Item)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 a = 2;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_a(), target);
          }

          // repeated int32 ra = 3;
          for (int i = 0, n = this_._internal_ra_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                3, this_._internal_ra().Get(i), target);
          }

          // optional string b = 4;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_b();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "protobuf_unittest.TestDiffMessage.Item.b");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated string rb = 5;
          for (int i = 0, n = this_._internal_rb_size(); i < n; ++i) {
            const auto& s = this_._internal_rb().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "protobuf_unittest.TestDiffMessage.Item.rb");
            target = stream->WriteString(5, s, target);
          }

          // optional .protobuf_unittest.TestField m = 6;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.m_, this_._impl_.m_->GetCachedSize(), target,
                stream);
          }

          // repeated .protobuf_unittest.TestField rm = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rm_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rm().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, int32> mp = 8;
          if (!this_._internal_mp().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT32>;
            const auto& field = this_._internal_mp();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                            "protobuf_unittest.TestDiffMessage.Item.mp");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                            "protobuf_unittest.TestDiffMessage.Item.mp");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDiffMessage.Item)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestDiffMessage_Item::ByteSizeLong(const MessageLite& base) {
          const TestDiffMessage_Item& this_ = static_cast<const TestDiffMessage_Item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestDiffMessage_Item::ByteSizeLong() const {
          const TestDiffMessage_Item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDiffMessage.Item)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 ra = 3;
             {
              std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
                  this_._internal_ra());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_ra_size());
              total_size += tag_size + data_size;
            }
            // repeated string rb = 5;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_rb().size());
              for (int i = 0, n = this_._internal_rb().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_rb().Get(i));
              }
            }
            // repeated .protobuf_unittest.TestField rm = 7;
             {
              total_size += 1UL * this_._internal_rm_size();
              for (const auto& msg : this_._internal_rm()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, int32> mp = 8;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_mp_size());
              for (const auto& entry : this_._internal_mp()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string b = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_b());
            }
            // optional .protobuf_unittest.TestField m = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.m_);
            }
            // optional int32 a = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_a());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestDiffMessage_Item::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestDiffMessage_Item*>(&to_msg);
  auto& from = static_cast<const TestDiffMessage_Item&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDiffMessage.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ra()->MergeFrom(from._internal_ra());
  _this->_internal_mutable_rb()->MergeFrom(from._internal_rb());
  _this->_internal_mutable_rm()->MergeFrom(
      from._internal_rm());
  _this->_impl_.mp_.MergeFrom(from._impl_.mp_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_b(from._internal_b());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.m_ != nullptr);
      if (_this->_impl_.m_ == nullptr) {
        _this->_impl_.m_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestField>(arena, *from._impl_.m_);
      } else {
        _this->_impl_.m_->MergeFrom(*from._impl_.m_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDiffMessage_Item::CopyFrom(const TestDiffMessage_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDiffMessage.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestDiffMessage_Item::InternalSwap(TestDiffMessage_Item* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ra_.InternalSwap(&other->_impl_.ra_);
  _impl_.rb_.InternalSwap(&other->_impl_.rb_);
  _impl_.rm_.InternalSwap(&other->_impl_.rm_);
  _impl_.mp_.InternalSwap(&other->_impl_.mp_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.b_, &other->_impl_.b_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.a_)
      + sizeof(TestDiffMessage_Item::_impl_.a_)
      - PROTOBUF_FIELD_OFFSET(TestDiffMessage_Item, _impl_.m_)>(
          reinterpret_cast<char*>(&_impl_.m_),
          reinterpret_cast<char*>(&other->_impl_.m_));
}

::google::protobuf::Metadata TestDiffMessage_Item::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestDiffMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestDiffMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_._has_bits_);
};

void TestDiffMessage::clear_rany() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rany_.Clear();
}
TestDiffMessage::TestDiffMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDiffMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestDiffMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf_unittest::TestDiffMessage& from_msg)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        item_{visibility, arena, from.item_},
        rw_{visibility, arena, from.rw_},
        rv_{visibility, arena, from.rv_},
        rm_{visibility, arena, from.rm_},
        rany_{visibility, arena, from.rany_},
        w_(arena, from.w_) {}

TestDiffMessage::TestDiffMessage(
    ::google::protobuf::Arena* arena,
    const TestDiffMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestDiffMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.m_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestField>(
                              arena, *from._impl_.m_)
                        : nullptr;
  _impl_.v_ = from._impl_.v_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDiffMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestDiffMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        item_{visibility, arena},
        rw_{visibility, arena},
        rv_{visibility, arena},
        rm_{visibility, arena},
        rany_{visibility, arena},
        w_(arena) {}

inline void TestDiffMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, m_),
           0,
           offsetof(Impl_, v_) -
               offsetof(Impl_, m_) +
               sizeof(Impl_::v_));
}
TestDiffMessage::~TestDiffMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDiffMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestDiffMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.w_.Destroy();
  delete _impl_.m_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TestDiffMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TestDiffMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            TestDiffMessage::IsInitializedImpl,
            &TestDiffMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TestDiffMessage>(),
            ::google::protobuf::Message::GetNewImpl<TestDiffMessage>(),
            ::google::protobuf::Message::GetClearImpl<TestDiffMessage>(), &TestDiffMessage::ByteSizeLong,
                &TestDiffMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_._cached_size_),
            false,
        },
        &TestDiffMessage::kDescriptorMethods,
        &descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TestDiffMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 4, 53, 2> TestDiffMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_._extensions_),
    16, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294902270,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf_unittest::TestDiffMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .google.protobuf.Any rany = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 3, PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.rany_)}},
    // repeated group Item = 1 { ... };
    {::_pbi::TcParser::FastGtR1,
     {11, 63, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.item_)}},
    // repeated string rw = 10;
    {::_pbi::TcParser::FastSR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.rw_)}},
    // repeated int32 rv = 11;
    {::_pbi::TcParser::FastV32R1,
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.rv_)}},
    // repeated .protobuf_unittest.TestField rm = 12 [deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 1, PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.rm_)}},
    // optional int32 v = 13 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDiffMessage, _impl_.v_), 2>(),
     {104, 2, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.v_)}},
    // optional string w = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 0, 0, PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.w_)}},
    // optional .protobuf_unittest.TestField m = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 1, 2, PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated group Item = 1 { ... };
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated string rw = 10;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.rw_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated int32 rv = 11;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.rv_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated .protobuf_unittest.TestField rm = 12 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.rm_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 v = 13 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.v_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string w = 14;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.w_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .protobuf_unittest.TestField m = 15;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.m_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any rany = 16;
    {PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.rany_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestDiffMessage_Item>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestField>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestField>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\41\0\2\0\0\0\1\0\0\0\0\0\0\0\0\0"
    "protobuf_unittest.TestDiffMessage"
    "rw"
    "w"
  }},
};

PROTOBUF_NOINLINE void TestDiffMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDiffMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _impl_.item_.Clear();
  _impl_.rw_.Clear();
  _impl_.rv_.Clear();
  _impl_.rm_.Clear();
  _impl_.rany_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.w_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.m_ != nullptr);
      _impl_.m_->Clear();
    }
  }
  _impl_.v_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestDiffMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestDiffMessage& this_ = static_cast<const TestDiffMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestDiffMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestDiffMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDiffMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated group Item = 1 { ... };
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_item_size());
               i < n; i++) {
            target = stream->EnsureSpace(target);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteGroup(
                    1, this_._internal_item().Get(i),
                    target, stream);
          }

          // repeated string rw = 10;
          for (int i = 0, n = this_._internal_rw_size(); i < n; ++i) {
            const auto& s = this_._internal_rw().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "protobuf_unittest.TestDiffMessage.rw");
            target = stream->WriteString(10, s, target);
          }

          // repeated int32 rv = 11;
          for (int i = 0, n = this_._internal_rv_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                11, this_._internal_rv().Get(i), target);
          }

          // repeated .protobuf_unittest.TestField rm = 12 [deprecated = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rm_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rm().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 v = 13 [deprecated = true];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<13>(
                    stream, this_._internal_v(), target);
          }

          // optional string w = 14;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_w();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "protobuf_unittest.TestDiffMessage.w");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // optional .protobuf_unittest.TestField m = 15;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.m_, this_._impl_.m_->GetCachedSize(), target,
                stream);
          }

          // repeated .google.protobuf.Any rany = 16;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rany_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rany().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    16, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // Extension range [100, 200)
          target = this_._impl_._extensions_._InternalSerialize(
              internal_default_instance(), 100, 200, target, stream);
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDiffMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestDiffMessage::ByteSizeLong(const MessageLite& base) {
          const TestDiffMessage& this_ = static_cast<const TestDiffMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestDiffMessage::ByteSizeLong() const {
          const TestDiffMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDiffMessage)
          ::size_t total_size = 0;
          total_size += this_._impl_._extensions_.ByteSize();

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated group Item = 1 { ... };
             {
              total_size += 2UL * this_._internal_item_size();
              for (const auto& msg : this_._internal_item()) {
                total_size += ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
              }
            }
            // repeated string rw = 10;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_rw().size());
              for (int i = 0, n = this_._internal_rw().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_rw().Get(i));
              }
            }
            // repeated int32 rv = 11;
             {
              std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
                  this_._internal_rv());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_rv_size());
              total_size += tag_size + data_size;
            }
            // repeated .protobuf_unittest.TestField rm = 12 [deprecated = true];
             {
              total_size += 1UL * this_._internal_rm_size();
              for (const auto& msg : this_._internal_rm()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .google.protobuf.Any rany = 16;
             {
              total_size += 2UL * this_._internal_rany_size();
              for (const auto& msg : this_._internal_rany()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string w = 14;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_w());
            }
            // optional .protobuf_unittest.TestField m = 15;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.m_);
            }
            // optional int32 v = 13 [deprecated = true];
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_v());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestDiffMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestDiffMessage*>(&to_msg);
  auto& from = static_cast<const TestDiffMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDiffMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_item()->MergeFrom(
      from._internal_item());
  _this->_internal_mutable_rw()->MergeFrom(from._internal_rw());
  _this->_internal_mutable_rv()->MergeFrom(from._internal_rv());
  _this->_internal_mutable_rm()->MergeFrom(
      from._internal_rm());
  _this->_internal_mutable_rany()->MergeFrom(
      from._internal_rany());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_w(from._internal_w());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.m_ != nullptr);
      if (_this->_impl_.m_ == nullptr) {
        _this->_impl_.m_ =
            ::google::protobuf::Message::CopyConstruct<::protobuf_unittest::TestField>(arena, *from._impl_.m_);
      } else {
        _this->_impl_.m_->MergeFrom(*from._impl_.m_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.v_ = from._impl_.v_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDiffMessage::CopyFrom(const TestDiffMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDiffMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestDiffMessage::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const TestDiffMessage&>(msg);
  if (!this_._impl_._extensions_.IsInitialized(
          internal_default_instance())) {
    return false;
  }
  return true;
}

void TestDiffMessage::InternalSwap(TestDiffMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
  _impl_.rw_.InternalSwap(&other->_impl_.rw_);
  _impl_.rv_.InternalSwap(&other->_impl_.rv_);
  _impl_.rm_.InternalSwap(&other->_impl_.rm_);
  _impl_.rany_.InternalSwap(&other->_impl_.rany_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.w_, &other->_impl_.w_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.v_)
      + sizeof(TestDiffMessage::_impl_.v_)
      - PROTOBUF_FIELD_OFFSET(TestDiffMessage, _impl_.m_)>(
          reinterpret_cast<char*>(&_impl_.m_),
          reinterpret_cast<char*>(&other->_impl_.m_));
}

::google::protobuf::Metadata TestDiffMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
               const int TestField::kTfFieldNumber;
#endif
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::
        ExtensionIdentifier<::protobuf_unittest::TestDiffMessage, ::_pbi::MessageTypeTraits< ::protobuf_unittest::TestField >,
                            11, false>
            TestField::tf(kTfFieldNumber, &::protobuf_unittest::_TestField_default_instance_);
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto),
        ::_pbi::ExtensionSet::RegisterMessageExtension(
            &::protobuf_unittest::TestDiffMessage::default_instance(), 100, 11,
            false, false, &::protobuf_unittest::TestField::default_instance(),
            nullptr, ::_pbi::LazyAnnotation::kUndefined),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
