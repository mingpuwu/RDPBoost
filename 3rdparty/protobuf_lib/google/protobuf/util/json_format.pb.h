// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/util/json_format.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2fjson_5fformat_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2fjson_5fformat_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2fjson_5fformat_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
namespace protobuf_unittest {
class TestBase64ByteArrays;
struct TestBase64ByteArraysDefaultTypeInternal;
extern TestBase64ByteArraysDefaultTypeInternal _TestBase64ByteArrays_default_instance_;
class TestBoolMap;
struct TestBoolMapDefaultTypeInternal;
extern TestBoolMapDefaultTypeInternal _TestBoolMap_default_instance_;
class TestBoolMap_BoolMapEntry_DoNotUse;
struct TestBoolMap_BoolMapEntry_DoNotUseDefaultTypeInternal;
extern TestBoolMap_BoolMapEntry_DoNotUseDefaultTypeInternal _TestBoolMap_BoolMapEntry_DoNotUse_default_instance_;
class TestCamelCase;
struct TestCamelCaseDefaultTypeInternal;
extern TestCamelCaseDefaultTypeInternal _TestCamelCase_default_instance_;
class TestDefaultEnumValue;
struct TestDefaultEnumValueDefaultTypeInternal;
extern TestDefaultEnumValueDefaultTypeInternal _TestDefaultEnumValue_default_instance_;
class TestExtension;
struct TestExtensionDefaultTypeInternal;
extern TestExtensionDefaultTypeInternal _TestExtension_default_instance_;
class TestFlagsAndStrings;
struct TestFlagsAndStringsDefaultTypeInternal;
extern TestFlagsAndStringsDefaultTypeInternal _TestFlagsAndStrings_default_instance_;
class TestFlagsAndStrings_RepeatedGroup;
struct TestFlagsAndStrings_RepeatedGroupDefaultTypeInternal;
extern TestFlagsAndStrings_RepeatedGroupDefaultTypeInternal _TestFlagsAndStrings_RepeatedGroup_default_instance_;
class TestJavaScriptJSON;
struct TestJavaScriptJSONDefaultTypeInternal;
extern TestJavaScriptJSONDefaultTypeInternal _TestJavaScriptJSON_default_instance_;
class TestJavaScriptOrderJSON1;
struct TestJavaScriptOrderJSON1DefaultTypeInternal;
extern TestJavaScriptOrderJSON1DefaultTypeInternal _TestJavaScriptOrderJSON1_default_instance_;
class TestJavaScriptOrderJSON2;
struct TestJavaScriptOrderJSON2DefaultTypeInternal;
extern TestJavaScriptOrderJSON2DefaultTypeInternal _TestJavaScriptOrderJSON2_default_instance_;
class TestLargeInt;
struct TestLargeIntDefaultTypeInternal;
extern TestLargeIntDefaultTypeInternal _TestLargeInt_default_instance_;
class TestMapOfEnums;
struct TestMapOfEnumsDefaultTypeInternal;
extern TestMapOfEnumsDefaultTypeInternal _TestMapOfEnums_default_instance_;
class TestMapOfEnums_EnumMapEntry_DoNotUse;
struct TestMapOfEnums_EnumMapEntry_DoNotUseDefaultTypeInternal;
extern TestMapOfEnums_EnumMapEntry_DoNotUseDefaultTypeInternal _TestMapOfEnums_EnumMapEntry_DoNotUse_default_instance_;
class TestMessageWithExtension;
struct TestMessageWithExtensionDefaultTypeInternal;
extern TestMessageWithExtensionDefaultTypeInternal _TestMessageWithExtension_default_instance_;
class TestNumbers;
struct TestNumbersDefaultTypeInternal;
extern TestNumbersDefaultTypeInternal _TestNumbers_default_instance_;
class TestRecursion;
struct TestRecursionDefaultTypeInternal;
extern TestRecursionDefaultTypeInternal _TestRecursion_default_instance_;
class TestRepeatedEnum;
struct TestRepeatedEnumDefaultTypeInternal;
extern TestRepeatedEnumDefaultTypeInternal _TestRepeatedEnum_default_instance_;
class TestStringMap;
struct TestStringMapDefaultTypeInternal;
extern TestStringMapDefaultTypeInternal _TestStringMap_default_instance_;
class TestStringMap_StringMapEntry_DoNotUse;
struct TestStringMap_StringMapEntry_DoNotUseDefaultTypeInternal;
extern TestStringMap_StringMapEntry_DoNotUseDefaultTypeInternal _TestStringMap_StringMapEntry_DoNotUse_default_instance_;
class TestStringSerializer;
struct TestStringSerializerDefaultTypeInternal;
extern TestStringSerializerDefaultTypeInternal _TestStringSerializer_default_instance_;
class TestStringSerializer_StringMapEntry_DoNotUse;
struct TestStringSerializer_StringMapEntry_DoNotUseDefaultTypeInternal;
extern TestStringSerializer_StringMapEntry_DoNotUseDefaultTypeInternal _TestStringSerializer_StringMapEntry_DoNotUse_default_instance_;
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf_unittest {
enum TestNumbers_MyType : int {
  TestNumbers_MyType_OK = 0,
  TestNumbers_MyType_WARNING = 1,
  TestNumbers_MyType_ERROR = 2,
};

bool TestNumbers_MyType_IsValid(int value);
extern const uint32_t TestNumbers_MyType_internal_data_[];
constexpr TestNumbers_MyType TestNumbers_MyType_MyType_MIN = static_cast<TestNumbers_MyType>(0);
constexpr TestNumbers_MyType TestNumbers_MyType_MyType_MAX = static_cast<TestNumbers_MyType>(2);
constexpr int TestNumbers_MyType_MyType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
TestNumbers_MyType_descriptor();
template <typename T>
const std::string& TestNumbers_MyType_Name(T value) {
  static_assert(std::is_same<T, TestNumbers_MyType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MyType_Name().");
  return TestNumbers_MyType_Name(static_cast<TestNumbers_MyType>(value));
}
template <>
inline const std::string& TestNumbers_MyType_Name(TestNumbers_MyType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestNumbers_MyType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool TestNumbers_MyType_Parse(absl::string_view name, TestNumbers_MyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestNumbers_MyType>(
      TestNumbers_MyType_descriptor(), name, value);
}
enum EnumValue : int {
  PROTOCOL = 0,
  BUFFER = 1,
  DEFAULT = 2,
};

bool EnumValue_IsValid(int value);
extern const uint32_t EnumValue_internal_data_[];
constexpr EnumValue EnumValue_MIN = static_cast<EnumValue>(0);
constexpr EnumValue EnumValue_MAX = static_cast<EnumValue>(2);
constexpr int EnumValue_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EnumValue_descriptor();
template <typename T>
const std::string& EnumValue_Name(T value) {
  static_assert(std::is_same<T, EnumValue>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EnumValue_Name().");
  return EnumValue_Name(static_cast<EnumValue>(value));
}
template <>
inline const std::string& EnumValue_Name(EnumValue value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EnumValue_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool EnumValue_Parse(absl::string_view name, EnumValue* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumValue>(
      EnumValue_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TestStringSerializer_StringMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestStringSerializer_StringMapEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestStringSerializer_StringMapEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TestStringSerializer_StringMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestStringSerializer_StringMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestStringSerializer_StringMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestStringSerializer_StringMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestStringSerializer_StringMapEntry_DoNotUse*>(
        &_TestStringSerializer_StringMapEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestStringMap_StringMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestStringMap_StringMapEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestStringMap_StringMapEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TestStringMap_StringMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestStringMap_StringMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestStringMap_StringMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestStringMap_StringMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestStringMap_StringMapEntry_DoNotUse*>(
        &_TestStringMap_StringMapEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestRepeatedEnum final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestRepeatedEnum) */ {
 public:
  inline TestRepeatedEnum() : TestRepeatedEnum(nullptr) {}
  ~TestRepeatedEnum() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRepeatedEnum(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRepeatedEnum(const TestRepeatedEnum& from) : TestRepeatedEnum(nullptr, from) {}
  inline TestRepeatedEnum(TestRepeatedEnum&& from) noexcept
      : TestRepeatedEnum(nullptr, std::move(from)) {}
  inline TestRepeatedEnum& operator=(const TestRepeatedEnum& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRepeatedEnum& operator=(TestRepeatedEnum&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRepeatedEnum& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRepeatedEnum* internal_default_instance() {
    return reinterpret_cast<const TestRepeatedEnum*>(
        &_TestRepeatedEnum_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(TestRepeatedEnum& a, TestRepeatedEnum& b) { a.Swap(&b); }
  inline void Swap(TestRepeatedEnum* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRepeatedEnum* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRepeatedEnum* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRepeatedEnum>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRepeatedEnum& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRepeatedEnum& from) { TestRepeatedEnum::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRepeatedEnum* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestRepeatedEnum"; }

 protected:
  explicit TestRepeatedEnum(::google::protobuf::Arena* arena);
  TestRepeatedEnum(::google::protobuf::Arena* arena, const TestRepeatedEnum& from);
  TestRepeatedEnum(::google::protobuf::Arena* arena, TestRepeatedEnum&& from) noexcept
      : TestRepeatedEnum(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedEnumFieldNumber = 1,
  };
  // repeated .protobuf_unittest.EnumValue repeated_enum = 1;
  int repeated_enum_size() const;
  private:
  int _internal_repeated_enum_size() const;

  public:
  void clear_repeated_enum() ;
  public:
  ::protobuf_unittest::EnumValue repeated_enum(int index) const;
  void set_repeated_enum(int index, ::protobuf_unittest::EnumValue value);
  void add_repeated_enum(::protobuf_unittest::EnumValue value);
  const ::google::protobuf::RepeatedField<int>& repeated_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_enum();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_enum() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_enum();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRepeatedEnum)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRepeatedEnum_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRepeatedEnum& from_msg);
    ::google::protobuf::RepeatedField<int> repeated_enum_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestRecursion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestRecursion) */ {
 public:
  inline TestRecursion() : TestRecursion(nullptr) {}
  ~TestRecursion() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRecursion(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRecursion(const TestRecursion& from) : TestRecursion(nullptr, from) {}
  inline TestRecursion(TestRecursion&& from) noexcept
      : TestRecursion(nullptr, std::move(from)) {}
  inline TestRecursion& operator=(const TestRecursion& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRecursion& operator=(TestRecursion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRecursion& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRecursion* internal_default_instance() {
    return reinterpret_cast<const TestRecursion*>(
        &_TestRecursion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(TestRecursion& a, TestRecursion& b) { a.Swap(&b); }
  inline void Swap(TestRecursion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRecursion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRecursion* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRecursion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRecursion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRecursion& from) { TestRecursion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRecursion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestRecursion"; }

 protected:
  explicit TestRecursion(::google::protobuf::Arena* arena);
  TestRecursion(::google::protobuf::Arena* arena, const TestRecursion& from);
  TestRecursion(::google::protobuf::Arena* arena, TestRecursion&& from) noexcept
      : TestRecursion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChildFieldNumber = 2,
    kValueFieldNumber = 1,
  };
  // optional .protobuf_unittest.TestRecursion child = 2;
  bool has_child() const;
  void clear_child() ;
  const ::protobuf_unittest::TestRecursion& child() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::TestRecursion* release_child();
  ::protobuf_unittest::TestRecursion* mutable_child();
  void set_allocated_child(::protobuf_unittest::TestRecursion* value);
  void unsafe_arena_set_allocated_child(::protobuf_unittest::TestRecursion* value);
  ::protobuf_unittest::TestRecursion* unsafe_arena_release_child();

  private:
  const ::protobuf_unittest::TestRecursion& _internal_child() const;
  ::protobuf_unittest::TestRecursion* _internal_mutable_child();

  public:
  // optional int32 value = 1;
  bool has_value() const;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRecursion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRecursion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRecursion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::protobuf_unittest::TestRecursion* child_;
    ::int32_t value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestNumbers final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestNumbers) */ {
 public:
  inline TestNumbers() : TestNumbers(nullptr) {}
  ~TestNumbers() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNumbers(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNumbers(const TestNumbers& from) : TestNumbers(nullptr, from) {}
  inline TestNumbers(TestNumbers&& from) noexcept
      : TestNumbers(nullptr, std::move(from)) {}
  inline TestNumbers& operator=(const TestNumbers& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNumbers& operator=(TestNumbers&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNumbers& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNumbers* internal_default_instance() {
    return reinterpret_cast<const TestNumbers*>(
        &_TestNumbers_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(TestNumbers& a, TestNumbers& b) { a.Swap(&b); }
  inline void Swap(TestNumbers* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNumbers* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNumbers* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNumbers>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNumbers& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNumbers& from) { TestNumbers::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNumbers* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestNumbers"; }

 protected:
  explicit TestNumbers(::google::protobuf::Arena* arena);
  TestNumbers(::google::protobuf::Arena* arena, const TestNumbers& from);
  TestNumbers(::google::protobuf::Arena* arena, TestNumbers&& from) noexcept
      : TestNumbers(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using MyType = TestNumbers_MyType;
  static constexpr MyType OK = TestNumbers_MyType_OK;
  static constexpr MyType WARNING = TestNumbers_MyType_WARNING;
  static constexpr MyType ERROR = TestNumbers_MyType_ERROR;
  static inline bool MyType_IsValid(int value) {
    return TestNumbers_MyType_IsValid(value);
  }
  static constexpr MyType MyType_MIN = TestNumbers_MyType_MyType_MIN;
  static constexpr MyType MyType_MAX = TestNumbers_MyType_MyType_MAX;
  static constexpr int MyType_ARRAYSIZE = TestNumbers_MyType_MyType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* MyType_descriptor() {
    return TestNumbers_MyType_descriptor();
  }
  template <typename T>
  static inline const std::string& MyType_Name(T value) {
    return TestNumbers_MyType_Name(value);
  }
  static inline bool MyType_Parse(absl::string_view name, MyType* value) {
    return TestNumbers_MyType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
    kCFieldNumber = 3,
    kDFieldNumber = 4,
    kEFieldNumber = 5,
    kFFieldNumber = 6,
  };
  // optional .protobuf_unittest.TestNumbers.MyType a = 1;
  bool has_a() const;
  void clear_a() ;
  ::protobuf_unittest::TestNumbers_MyType a() const;
  void set_a(::protobuf_unittest::TestNumbers_MyType value);

  private:
  ::protobuf_unittest::TestNumbers_MyType _internal_a() const;
  void _internal_set_a(::protobuf_unittest::TestNumbers_MyType value);

  public:
  // optional int32 b = 2;
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // optional float c = 3;
  bool has_c() const;
  void clear_c() ;
  float c() const;
  void set_c(float value);

  private:
  float _internal_c() const;
  void _internal_set_c(float value);

  public:
  // optional bool d = 4;
  bool has_d() const;
  void clear_d() ;
  bool d() const;
  void set_d(bool value);

  private:
  bool _internal_d() const;
  void _internal_set_d(bool value);

  public:
  // optional double e = 5;
  bool has_e() const;
  void clear_e() ;
  double e() const;
  void set_e(double value);

  private:
  double _internal_e() const;
  void _internal_set_e(double value);

  public:
  // optional uint32 f = 6;
  bool has_f() const;
  void clear_f() ;
  ::uint32_t f() const;
  void set_f(::uint32_t value);

  private:
  ::uint32_t _internal_f() const;
  void _internal_set_f(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestNumbers)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNumbers_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNumbers& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int a_;
    ::int32_t b_;
    float c_;
    bool d_;
    double e_;
    ::uint32_t f_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestMessageWithExtension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageWithExtension) */ {
 public:
  inline TestMessageWithExtension() : TestMessageWithExtension(nullptr) {}
  ~TestMessageWithExtension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageWithExtension(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMessageWithExtension(const TestMessageWithExtension& from) : TestMessageWithExtension(nullptr, from) {}
  inline TestMessageWithExtension(TestMessageWithExtension&& from) noexcept
      : TestMessageWithExtension(nullptr, std::move(from)) {}
  inline TestMessageWithExtension& operator=(const TestMessageWithExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageWithExtension& operator=(TestMessageWithExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageWithExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageWithExtension* internal_default_instance() {
    return reinterpret_cast<const TestMessageWithExtension*>(
        &_TestMessageWithExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(TestMessageWithExtension& a, TestMessageWithExtension& b) { a.Swap(&b); }
  inline void Swap(TestMessageWithExtension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageWithExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageWithExtension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMessageWithExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessageWithExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMessageWithExtension& from) { TestMessageWithExtension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageWithExtension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestMessageWithExtension"; }

 protected:
  explicit TestMessageWithExtension(::google::protobuf::Arena* arena);
  TestMessageWithExtension(::google::protobuf::Arena* arena, const TestMessageWithExtension& from);
  TestMessageWithExtension(::google::protobuf::Arena* arena, TestMessageWithExtension&& from) noexcept
      : TestMessageWithExtension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMessageWithExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageWithExtension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMessageWithExtension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMessageWithExtension& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestMapOfEnums_EnumMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMapOfEnums_EnumMapEntry_DoNotUse, std::string, ::protobuf_unittest::EnumValue,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_ENUM> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMapOfEnums_EnumMapEntry_DoNotUse, std::string, ::protobuf_unittest::EnumValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>;
  TestMapOfEnums_EnumMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMapOfEnums_EnumMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMapOfEnums_EnumMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMapOfEnums_EnumMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMapOfEnums_EnumMapEntry_DoNotUse*>(
        &_TestMapOfEnums_EnumMapEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestLargeInt final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestLargeInt) */ {
 public:
  inline TestLargeInt() : TestLargeInt(nullptr) {}
  ~TestLargeInt() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestLargeInt(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestLargeInt(const TestLargeInt& from) : TestLargeInt(nullptr, from) {}
  inline TestLargeInt(TestLargeInt&& from) noexcept
      : TestLargeInt(nullptr, std::move(from)) {}
  inline TestLargeInt& operator=(const TestLargeInt& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestLargeInt& operator=(TestLargeInt&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestLargeInt& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestLargeInt* internal_default_instance() {
    return reinterpret_cast<const TestLargeInt*>(
        &_TestLargeInt_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(TestLargeInt& a, TestLargeInt& b) { a.Swap(&b); }
  inline void Swap(TestLargeInt* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestLargeInt* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestLargeInt* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestLargeInt>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestLargeInt& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestLargeInt& from) { TestLargeInt::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestLargeInt* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestLargeInt"; }

 protected:
  explicit TestLargeInt(::google::protobuf::Arena* arena);
  TestLargeInt(::google::protobuf::Arena* arena, const TestLargeInt& from);
  TestLargeInt(::google::protobuf::Arena* arena, TestLargeInt&& from) noexcept
      : TestLargeInt(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
  };
  // required int64 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int64_t a() const;
  void set_a(::int64_t value);

  private:
  ::int64_t _internal_a() const;
  void _internal_set_a(::int64_t value);

  public:
  // required uint64 b = 2;
  bool has_b() const;
  void clear_b() ;
  ::uint64_t b() const;
  void set_b(::uint64_t value);

  private:
  ::uint64_t _internal_b() const;
  void _internal_set_b(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestLargeInt)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestLargeInt_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestLargeInt& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t a_;
    ::uint64_t b_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestJavaScriptOrderJSON1 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestJavaScriptOrderJSON1) */ {
 public:
  inline TestJavaScriptOrderJSON1() : TestJavaScriptOrderJSON1(nullptr) {}
  ~TestJavaScriptOrderJSON1() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestJavaScriptOrderJSON1(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestJavaScriptOrderJSON1(const TestJavaScriptOrderJSON1& from) : TestJavaScriptOrderJSON1(nullptr, from) {}
  inline TestJavaScriptOrderJSON1(TestJavaScriptOrderJSON1&& from) noexcept
      : TestJavaScriptOrderJSON1(nullptr, std::move(from)) {}
  inline TestJavaScriptOrderJSON1& operator=(const TestJavaScriptOrderJSON1& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestJavaScriptOrderJSON1& operator=(TestJavaScriptOrderJSON1&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestJavaScriptOrderJSON1& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestJavaScriptOrderJSON1* internal_default_instance() {
    return reinterpret_cast<const TestJavaScriptOrderJSON1*>(
        &_TestJavaScriptOrderJSON1_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TestJavaScriptOrderJSON1& a, TestJavaScriptOrderJSON1& b) { a.Swap(&b); }
  inline void Swap(TestJavaScriptOrderJSON1* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestJavaScriptOrderJSON1* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestJavaScriptOrderJSON1* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestJavaScriptOrderJSON1>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestJavaScriptOrderJSON1& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestJavaScriptOrderJSON1& from) { TestJavaScriptOrderJSON1::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestJavaScriptOrderJSON1* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestJavaScriptOrderJSON1"; }

 protected:
  explicit TestJavaScriptOrderJSON1(::google::protobuf::Arena* arena);
  TestJavaScriptOrderJSON1(::google::protobuf::Arena* arena, const TestJavaScriptOrderJSON1& from);
  TestJavaScriptOrderJSON1(::google::protobuf::Arena* arena, TestJavaScriptOrderJSON1&& from) noexcept
      : TestJavaScriptOrderJSON1(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDFieldNumber = 1,
    kCFieldNumber = 2,
    kXFieldNumber = 3,
    kBFieldNumber = 4,
    kAFieldNumber = 5,
  };
  // optional int32 d = 1;
  bool has_d() const;
  void clear_d() ;
  ::int32_t d() const;
  void set_d(::int32_t value);

  private:
  ::int32_t _internal_d() const;
  void _internal_set_d(::int32_t value);

  public:
  // optional int32 c = 2;
  bool has_c() const;
  void clear_c() ;
  ::int32_t c() const;
  void set_c(::int32_t value);

  private:
  ::int32_t _internal_c() const;
  void _internal_set_c(::int32_t value);

  public:
  // optional bool x = 3;
  bool has_x() const;
  void clear_x() ;
  bool x() const;
  void set_x(bool value);

  private:
  bool _internal_x() const;
  void _internal_set_x(bool value);

  public:
  // optional int32 b = 4;
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // optional int32 a = 5;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestJavaScriptOrderJSON1)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestJavaScriptOrderJSON1_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestJavaScriptOrderJSON1& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t d_;
    ::int32_t c_;
    bool x_;
    ::int32_t b_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestJavaScriptJSON final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestJavaScriptJSON) */ {
 public:
  inline TestJavaScriptJSON() : TestJavaScriptJSON(nullptr) {}
  ~TestJavaScriptJSON() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestJavaScriptJSON(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestJavaScriptJSON(const TestJavaScriptJSON& from) : TestJavaScriptJSON(nullptr, from) {}
  inline TestJavaScriptJSON(TestJavaScriptJSON&& from) noexcept
      : TestJavaScriptJSON(nullptr, std::move(from)) {}
  inline TestJavaScriptJSON& operator=(const TestJavaScriptJSON& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestJavaScriptJSON& operator=(TestJavaScriptJSON&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestJavaScriptJSON& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestJavaScriptJSON* internal_default_instance() {
    return reinterpret_cast<const TestJavaScriptJSON*>(
        &_TestJavaScriptJSON_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TestJavaScriptJSON& a, TestJavaScriptJSON& b) { a.Swap(&b); }
  inline void Swap(TestJavaScriptJSON* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestJavaScriptJSON* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestJavaScriptJSON* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestJavaScriptJSON>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestJavaScriptJSON& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestJavaScriptJSON& from) { TestJavaScriptJSON::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestJavaScriptJSON* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestJavaScriptJSON"; }

 protected:
  explicit TestJavaScriptJSON(::google::protobuf::Arena* arena);
  TestJavaScriptJSON(::google::protobuf::Arena* arena, const TestJavaScriptJSON& from);
  TestJavaScriptJSON(::google::protobuf::Arena* arena, TestJavaScriptJSON&& from) noexcept
      : TestJavaScriptJSON(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInFieldNumber = 3,
    kVarFieldNumber = 4,
    kAFieldNumber = 1,
    kFinalFieldNumber = 2,
  };
  // optional string in = 3;
  bool has_in() const;
  void clear_in() ;
  const std::string& in() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_in(Arg_&& arg, Args_... args);
  std::string* mutable_in();
  PROTOBUF_NODISCARD std::string* release_in();
  void set_allocated_in(std::string* value);

  private:
  const std::string& _internal_in() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_in(
      const std::string& value);
  std::string* _internal_mutable_in();

  public:
  // optional string Var = 4;
  bool has_var() const;
  void clear_var() ;
  const std::string& var() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_var(Arg_&& arg, Args_... args);
  std::string* mutable_var();
  PROTOBUF_NODISCARD std::string* release_var();
  void set_allocated_var(std::string* value);

  private:
  const std::string& _internal_var() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_var(
      const std::string& value);
  std::string* _internal_mutable_var();

  public:
  // optional int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // optional float final = 2;
  bool has_final() const;
  void clear_final() ;
  float final() const;
  void set_final(float value);

  private:
  float _internal_final() const;
  void _internal_set_final(float value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestJavaScriptJSON)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestJavaScriptJSON_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestJavaScriptJSON& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr in_;
    ::google::protobuf::internal::ArenaStringPtr var_;
    ::int32_t a_;
    float final_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestFlagsAndStrings_RepeatedGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestFlagsAndStrings.RepeatedGroup) */ {
 public:
  inline TestFlagsAndStrings_RepeatedGroup() : TestFlagsAndStrings_RepeatedGroup(nullptr) {}
  ~TestFlagsAndStrings_RepeatedGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestFlagsAndStrings_RepeatedGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestFlagsAndStrings_RepeatedGroup(const TestFlagsAndStrings_RepeatedGroup& from) : TestFlagsAndStrings_RepeatedGroup(nullptr, from) {}
  inline TestFlagsAndStrings_RepeatedGroup(TestFlagsAndStrings_RepeatedGroup&& from) noexcept
      : TestFlagsAndStrings_RepeatedGroup(nullptr, std::move(from)) {}
  inline TestFlagsAndStrings_RepeatedGroup& operator=(const TestFlagsAndStrings_RepeatedGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestFlagsAndStrings_RepeatedGroup& operator=(TestFlagsAndStrings_RepeatedGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestFlagsAndStrings_RepeatedGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestFlagsAndStrings_RepeatedGroup* internal_default_instance() {
    return reinterpret_cast<const TestFlagsAndStrings_RepeatedGroup*>(
        &_TestFlagsAndStrings_RepeatedGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestFlagsAndStrings_RepeatedGroup& a, TestFlagsAndStrings_RepeatedGroup& b) { a.Swap(&b); }
  inline void Swap(TestFlagsAndStrings_RepeatedGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestFlagsAndStrings_RepeatedGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestFlagsAndStrings_RepeatedGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestFlagsAndStrings_RepeatedGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestFlagsAndStrings_RepeatedGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestFlagsAndStrings_RepeatedGroup& from) { TestFlagsAndStrings_RepeatedGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestFlagsAndStrings_RepeatedGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestFlagsAndStrings.RepeatedGroup"; }

 protected:
  explicit TestFlagsAndStrings_RepeatedGroup(::google::protobuf::Arena* arena);
  TestFlagsAndStrings_RepeatedGroup(::google::protobuf::Arena* arena, const TestFlagsAndStrings_RepeatedGroup& from);
  TestFlagsAndStrings_RepeatedGroup(::google::protobuf::Arena* arena, TestFlagsAndStrings_RepeatedGroup&& from) noexcept
      : TestFlagsAndStrings_RepeatedGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFFieldNumber = 3,
  };
  // required string f = 3;
  bool has_f() const;
  void clear_f() ;
  const std::string& f() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f(Arg_&& arg, Args_... args);
  std::string* mutable_f();
  PROTOBUF_NODISCARD std::string* release_f();
  void set_allocated_f(std::string* value);

  private:
  const std::string& _internal_f() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f(
      const std::string& value);
  std::string* _internal_mutable_f();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestFlagsAndStrings.RepeatedGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestFlagsAndStrings_RepeatedGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestFlagsAndStrings_RepeatedGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestExtension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestExtension) */ {
 public:
  inline TestExtension() : TestExtension(nullptr) {}
  ~TestExtension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestExtension(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestExtension(const TestExtension& from) : TestExtension(nullptr, from) {}
  inline TestExtension(TestExtension&& from) noexcept
      : TestExtension(nullptr, std::move(from)) {}
  inline TestExtension& operator=(const TestExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestExtension& operator=(TestExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestExtension* internal_default_instance() {
    return reinterpret_cast<const TestExtension*>(
        &_TestExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(TestExtension& a, TestExtension& b) { a.Swap(&b); }
  inline void Swap(TestExtension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestExtension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestExtension& from) { TestExtension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestExtension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestExtension"; }

 protected:
  explicit TestExtension(::google::protobuf::Arena* arena);
  TestExtension(::google::protobuf::Arena* arena, const TestExtension& from);
  TestExtension(::google::protobuf::Arena* arena, TestExtension&& from) noexcept
      : TestExtension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // optional string value = 1;
  bool has_value() const;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  static const int kExtFieldNumber = 100;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::protobuf_unittest::TestMessageWithExtension, ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestExtension >, 11,
      false>
      ext;
  static const int kEnumExtFieldNumber = 101;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::protobuf_unittest::TestMessageWithExtension, ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::EnumValue, ::protobuf_unittest::EnumValue_IsValid>, 14,
      false>
      enum_ext;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestExtension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestExtension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestExtension& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestDefaultEnumValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestDefaultEnumValue) */ {
 public:
  inline TestDefaultEnumValue() : TestDefaultEnumValue(nullptr) {}
  ~TestDefaultEnumValue() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDefaultEnumValue(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDefaultEnumValue(const TestDefaultEnumValue& from) : TestDefaultEnumValue(nullptr, from) {}
  inline TestDefaultEnumValue(TestDefaultEnumValue&& from) noexcept
      : TestDefaultEnumValue(nullptr, std::move(from)) {}
  inline TestDefaultEnumValue& operator=(const TestDefaultEnumValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDefaultEnumValue& operator=(TestDefaultEnumValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDefaultEnumValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDefaultEnumValue* internal_default_instance() {
    return reinterpret_cast<const TestDefaultEnumValue*>(
        &_TestDefaultEnumValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(TestDefaultEnumValue& a, TestDefaultEnumValue& b) { a.Swap(&b); }
  inline void Swap(TestDefaultEnumValue* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDefaultEnumValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDefaultEnumValue* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDefaultEnumValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDefaultEnumValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDefaultEnumValue& from) { TestDefaultEnumValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDefaultEnumValue* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestDefaultEnumValue"; }

 protected:
  explicit TestDefaultEnumValue(::google::protobuf::Arena* arena);
  TestDefaultEnumValue(::google::protobuf::Arena* arena, const TestDefaultEnumValue& from);
  TestDefaultEnumValue(::google::protobuf::Arena* arena, TestDefaultEnumValue&& from) noexcept
      : TestDefaultEnumValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnumValueFieldNumber = 1,
  };
  // optional .protobuf_unittest.EnumValue enum_value = 1 [default = DEFAULT];
  bool has_enum_value() const;
  void clear_enum_value() ;
  ::protobuf_unittest::EnumValue enum_value() const;
  void set_enum_value(::protobuf_unittest::EnumValue value);

  private:
  ::protobuf_unittest::EnumValue _internal_enum_value() const;
  void _internal_set_enum_value(::protobuf_unittest::EnumValue value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestDefaultEnumValue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDefaultEnumValue_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDefaultEnumValue& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int enum_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestCamelCase final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestCamelCase) */ {
 public:
  inline TestCamelCase() : TestCamelCase(nullptr) {}
  ~TestCamelCase() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestCamelCase(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestCamelCase(const TestCamelCase& from) : TestCamelCase(nullptr, from) {}
  inline TestCamelCase(TestCamelCase&& from) noexcept
      : TestCamelCase(nullptr, std::move(from)) {}
  inline TestCamelCase& operator=(const TestCamelCase& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestCamelCase& operator=(TestCamelCase&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestCamelCase& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestCamelCase* internal_default_instance() {
    return reinterpret_cast<const TestCamelCase*>(
        &_TestCamelCase_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(TestCamelCase& a, TestCamelCase& b) { a.Swap(&b); }
  inline void Swap(TestCamelCase* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestCamelCase* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestCamelCase* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestCamelCase>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestCamelCase& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestCamelCase& from) { TestCamelCase::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestCamelCase* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestCamelCase"; }

 protected:
  explicit TestCamelCase(::google::protobuf::Arena* arena);
  TestCamelCase(::google::protobuf::Arena* arena, const TestCamelCase& from);
  TestCamelCase(::google::protobuf::Arena* arena, TestCamelCase&& from) noexcept
      : TestCamelCase(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNormalFieldFieldNumber = 1,
    kCAPITALFIELDFieldNumber = 2,
    kCamelCaseFieldFieldNumber = 3,
  };
  // optional string normal_field = 1;
  bool has_normal_field() const;
  void clear_normal_field() ;
  const std::string& normal_field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_normal_field(Arg_&& arg, Args_... args);
  std::string* mutable_normal_field();
  PROTOBUF_NODISCARD std::string* release_normal_field();
  void set_allocated_normal_field(std::string* value);

  private:
  const std::string& _internal_normal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_normal_field(
      const std::string& value);
  std::string* _internal_mutable_normal_field();

  public:
  // optional int32 CAPITAL_FIELD = 2;
  bool has_capital_field() const;
  void clear_capital_field() ;
  ::int32_t capital_field() const;
  void set_capital_field(::int32_t value);

  private:
  ::int32_t _internal_capital_field() const;
  void _internal_set_capital_field(::int32_t value);

  public:
  // optional int32 CamelCaseField = 3;
  bool has_camelcasefield() const;
  void clear_camelcasefield() ;
  ::int32_t camelcasefield() const;
  void set_camelcasefield(::int32_t value);

  private:
  ::int32_t _internal_camelcasefield() const;
  void _internal_set_camelcasefield(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestCamelCase)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestCamelCase_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestCamelCase& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr normal_field_;
    ::int32_t capital_field_;
    ::int32_t camelcasefield_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestBoolMap_BoolMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestBoolMap_BoolMapEntry_DoNotUse, bool, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestBoolMap_BoolMapEntry_DoNotUse, bool, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  TestBoolMap_BoolMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestBoolMap_BoolMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestBoolMap_BoolMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestBoolMap_BoolMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestBoolMap_BoolMapEntry_DoNotUse*>(
        &_TestBoolMap_BoolMapEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestBase64ByteArrays final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestBase64ByteArrays) */ {
 public:
  inline TestBase64ByteArrays() : TestBase64ByteArrays(nullptr) {}
  ~TestBase64ByteArrays() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestBase64ByteArrays(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestBase64ByteArrays(const TestBase64ByteArrays& from) : TestBase64ByteArrays(nullptr, from) {}
  inline TestBase64ByteArrays(TestBase64ByteArrays&& from) noexcept
      : TestBase64ByteArrays(nullptr, std::move(from)) {}
  inline TestBase64ByteArrays& operator=(const TestBase64ByteArrays& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestBase64ByteArrays& operator=(TestBase64ByteArrays&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestBase64ByteArrays& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestBase64ByteArrays* internal_default_instance() {
    return reinterpret_cast<const TestBase64ByteArrays*>(
        &_TestBase64ByteArrays_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TestBase64ByteArrays& a, TestBase64ByteArrays& b) { a.Swap(&b); }
  inline void Swap(TestBase64ByteArrays* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestBase64ByteArrays* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestBase64ByteArrays* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestBase64ByteArrays>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestBase64ByteArrays& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestBase64ByteArrays& from) { TestBase64ByteArrays::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestBase64ByteArrays* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestBase64ByteArrays"; }

 protected:
  explicit TestBase64ByteArrays(::google::protobuf::Arena* arena);
  TestBase64ByteArrays(::google::protobuf::Arena* arena, const TestBase64ByteArrays& from);
  TestBase64ByteArrays(::google::protobuf::Arena* arena, TestBase64ByteArrays&& from) noexcept
      : TestBase64ByteArrays(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
  };
  // required bytes a = 1;
  bool has_a() const;
  void clear_a() ;
  const std::string& a() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_a(Arg_&& arg, Args_... args);
  std::string* mutable_a();
  PROTOBUF_NODISCARD std::string* release_a();
  void set_allocated_a(std::string* value);

  private:
  const std::string& _internal_a() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_a(
      const std::string& value);
  std::string* _internal_mutable_a();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestBase64ByteArrays)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestBase64ByteArrays_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestBase64ByteArrays& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestStringSerializer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestStringSerializer) */ {
 public:
  inline TestStringSerializer() : TestStringSerializer(nullptr) {}
  ~TestStringSerializer() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestStringSerializer(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestStringSerializer(const TestStringSerializer& from) : TestStringSerializer(nullptr, from) {}
  inline TestStringSerializer(TestStringSerializer&& from) noexcept
      : TestStringSerializer(nullptr, std::move(from)) {}
  inline TestStringSerializer& operator=(const TestStringSerializer& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestStringSerializer& operator=(TestStringSerializer&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestStringSerializer& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestStringSerializer* internal_default_instance() {
    return reinterpret_cast<const TestStringSerializer*>(
        &_TestStringSerializer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(TestStringSerializer& a, TestStringSerializer& b) { a.Swap(&b); }
  inline void Swap(TestStringSerializer* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestStringSerializer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestStringSerializer* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestStringSerializer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestStringSerializer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestStringSerializer& from) { TestStringSerializer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestStringSerializer* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestStringSerializer"; }

 protected:
  explicit TestStringSerializer(::google::protobuf::Arena* arena);
  TestStringSerializer(::google::protobuf::Arena* arena, const TestStringSerializer& from);
  TestStringSerializer(::google::protobuf::Arena* arena, TestStringSerializer&& from) noexcept
      : TestStringSerializer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedStringFieldNumber = 2,
    kStringMapFieldNumber = 3,
    kScalarStringFieldNumber = 1,
  };
  // repeated string repeated_string = 2;
  int repeated_string_size() const;
  private:
  int _internal_repeated_string_size() const;

  public:
  void clear_repeated_string() ;
  const std::string& repeated_string(int index) const;
  std::string* mutable_repeated_string(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repeated_string(int index, Arg_&& value, Args_... args);
  std::string* add_repeated_string();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_repeated_string(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string();

  public:
  // map<string, string> string_map = 3;
  int string_map_size() const;
  private:
  int _internal_string_map_size() const;

  public:
  void clear_string_map() ;
  const ::google::protobuf::Map<std::string, std::string>& string_map() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_string_map();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_string_map() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_string_map();

  public:
  // optional string scalar_string = 1;
  bool has_scalar_string() const;
  void clear_scalar_string() ;
  const std::string& scalar_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scalar_string(Arg_&& arg, Args_... args);
  std::string* mutable_scalar_string();
  PROTOBUF_NODISCARD std::string* release_scalar_string();
  void set_allocated_scalar_string(std::string* value);

  private:
  const std::string& _internal_scalar_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scalar_string(
      const std::string& value);
  std::string* _internal_mutable_scalar_string();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestStringSerializer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      85, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestStringSerializer_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestStringSerializer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_;
    ::google::protobuf::internal::MapField<TestStringSerializer_StringMapEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        string_map_;
    ::google::protobuf::internal::ArenaStringPtr scalar_string_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestStringMap final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestStringMap) */ {
 public:
  inline TestStringMap() : TestStringMap(nullptr) {}
  ~TestStringMap() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestStringMap(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestStringMap(const TestStringMap& from) : TestStringMap(nullptr, from) {}
  inline TestStringMap(TestStringMap&& from) noexcept
      : TestStringMap(nullptr, std::move(from)) {}
  inline TestStringMap& operator=(const TestStringMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestStringMap& operator=(TestStringMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestStringMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestStringMap* internal_default_instance() {
    return reinterpret_cast<const TestStringMap*>(
        &_TestStringMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(TestStringMap& a, TestStringMap& b) { a.Swap(&b); }
  inline void Swap(TestStringMap* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestStringMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestStringMap* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestStringMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestStringMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestStringMap& from) { TestStringMap::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestStringMap* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestStringMap"; }

 protected:
  explicit TestStringMap(::google::protobuf::Arena* arena);
  TestStringMap(::google::protobuf::Arena* arena, const TestStringMap& from);
  TestStringMap(::google::protobuf::Arena* arena, TestStringMap&& from) noexcept
      : TestStringMap(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStringMapFieldNumber = 1,
  };
  // map<string, string> string_map = 1;
  int string_map_size() const;
  private:
  int _internal_string_map_size() const;

  public:
  void clear_string_map() ;
  const ::google::protobuf::Map<std::string, std::string>& string_map() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_string_map();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_string_map() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_string_map();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestStringMap)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestStringMap_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestStringMap& from_msg);
    ::google::protobuf::internal::MapField<TestStringMap_StringMapEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        string_map_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestMapOfEnums final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMapOfEnums) */ {
 public:
  inline TestMapOfEnums() : TestMapOfEnums(nullptr) {}
  ~TestMapOfEnums() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMapOfEnums(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMapOfEnums(const TestMapOfEnums& from) : TestMapOfEnums(nullptr, from) {}
  inline TestMapOfEnums(TestMapOfEnums&& from) noexcept
      : TestMapOfEnums(nullptr, std::move(from)) {}
  inline TestMapOfEnums& operator=(const TestMapOfEnums& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMapOfEnums& operator=(TestMapOfEnums&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMapOfEnums& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMapOfEnums* internal_default_instance() {
    return reinterpret_cast<const TestMapOfEnums*>(
        &_TestMapOfEnums_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(TestMapOfEnums& a, TestMapOfEnums& b) { a.Swap(&b); }
  inline void Swap(TestMapOfEnums* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMapOfEnums* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMapOfEnums* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMapOfEnums>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMapOfEnums& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMapOfEnums& from) { TestMapOfEnums::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMapOfEnums* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestMapOfEnums"; }

 protected:
  explicit TestMapOfEnums(::google::protobuf::Arena* arena);
  TestMapOfEnums(::google::protobuf::Arena* arena, const TestMapOfEnums& from);
  TestMapOfEnums(::google::protobuf::Arena* arena, TestMapOfEnums&& from) noexcept
      : TestMapOfEnums(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnumMapFieldNumber = 1,
  };
  // map<string, .protobuf_unittest.EnumValue> enum_map = 1;
  int enum_map_size() const;
  private:
  int _internal_enum_map_size() const;

  public:
  void clear_enum_map() ;
  const ::google::protobuf::Map<std::string, ::protobuf_unittest::EnumValue>& enum_map() const;
  ::google::protobuf::Map<std::string, ::protobuf_unittest::EnumValue>* mutable_enum_map();

  private:
  const ::google::protobuf::Map<std::string, ::protobuf_unittest::EnumValue>& _internal_enum_map() const;
  ::google::protobuf::Map<std::string, ::protobuf_unittest::EnumValue>* _internal_mutable_enum_map();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMapOfEnums)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMapOfEnums_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMapOfEnums& from_msg);
    ::google::protobuf::internal::MapField<TestMapOfEnums_EnumMapEntry_DoNotUse, std::string, ::protobuf_unittest::EnumValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>
        enum_map_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestJavaScriptOrderJSON2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestJavaScriptOrderJSON2) */ {
 public:
  inline TestJavaScriptOrderJSON2() : TestJavaScriptOrderJSON2(nullptr) {}
  ~TestJavaScriptOrderJSON2() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestJavaScriptOrderJSON2(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestJavaScriptOrderJSON2(const TestJavaScriptOrderJSON2& from) : TestJavaScriptOrderJSON2(nullptr, from) {}
  inline TestJavaScriptOrderJSON2(TestJavaScriptOrderJSON2&& from) noexcept
      : TestJavaScriptOrderJSON2(nullptr, std::move(from)) {}
  inline TestJavaScriptOrderJSON2& operator=(const TestJavaScriptOrderJSON2& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestJavaScriptOrderJSON2& operator=(TestJavaScriptOrderJSON2&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestJavaScriptOrderJSON2& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestJavaScriptOrderJSON2* internal_default_instance() {
    return reinterpret_cast<const TestJavaScriptOrderJSON2*>(
        &_TestJavaScriptOrderJSON2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(TestJavaScriptOrderJSON2& a, TestJavaScriptOrderJSON2& b) { a.Swap(&b); }
  inline void Swap(TestJavaScriptOrderJSON2* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestJavaScriptOrderJSON2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestJavaScriptOrderJSON2* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestJavaScriptOrderJSON2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestJavaScriptOrderJSON2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestJavaScriptOrderJSON2& from) { TestJavaScriptOrderJSON2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestJavaScriptOrderJSON2* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestJavaScriptOrderJSON2"; }

 protected:
  explicit TestJavaScriptOrderJSON2(::google::protobuf::Arena* arena);
  TestJavaScriptOrderJSON2(::google::protobuf::Arena* arena, const TestJavaScriptOrderJSON2& from);
  TestJavaScriptOrderJSON2(::google::protobuf::Arena* arena, TestJavaScriptOrderJSON2&& from) noexcept
      : TestJavaScriptOrderJSON2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kZFieldNumber = 6,
    kDFieldNumber = 1,
    kCFieldNumber = 2,
    kXFieldNumber = 3,
    kBFieldNumber = 4,
    kAFieldNumber = 5,
  };
  // repeated .protobuf_unittest.TestJavaScriptOrderJSON1 z = 6;
  int z_size() const;
  private:
  int _internal_z_size() const;

  public:
  void clear_z() ;
  ::protobuf_unittest::TestJavaScriptOrderJSON1* mutable_z(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestJavaScriptOrderJSON1>* mutable_z();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestJavaScriptOrderJSON1>& _internal_z() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestJavaScriptOrderJSON1>* _internal_mutable_z();
  public:
  const ::protobuf_unittest::TestJavaScriptOrderJSON1& z(int index) const;
  ::protobuf_unittest::TestJavaScriptOrderJSON1* add_z();
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestJavaScriptOrderJSON1>& z() const;
  // optional int32 d = 1;
  bool has_d() const;
  void clear_d() ;
  ::int32_t d() const;
  void set_d(::int32_t value);

  private:
  ::int32_t _internal_d() const;
  void _internal_set_d(::int32_t value);

  public:
  // optional int32 c = 2;
  bool has_c() const;
  void clear_c() ;
  ::int32_t c() const;
  void set_c(::int32_t value);

  private:
  ::int32_t _internal_c() const;
  void _internal_set_c(::int32_t value);

  public:
  // optional bool x = 3;
  bool has_x() const;
  void clear_x() ;
  bool x() const;
  void set_x(bool value);

  private:
  bool _internal_x() const;
  void _internal_set_x(bool value);

  public:
  // optional int32 b = 4;
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // optional int32 a = 5;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestJavaScriptOrderJSON2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestJavaScriptOrderJSON2_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestJavaScriptOrderJSON2& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestJavaScriptOrderJSON1 > z_;
    ::int32_t d_;
    ::int32_t c_;
    bool x_;
    ::int32_t b_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestFlagsAndStrings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestFlagsAndStrings) */ {
 public:
  inline TestFlagsAndStrings() : TestFlagsAndStrings(nullptr) {}
  ~TestFlagsAndStrings() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestFlagsAndStrings(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestFlagsAndStrings(const TestFlagsAndStrings& from) : TestFlagsAndStrings(nullptr, from) {}
  inline TestFlagsAndStrings(TestFlagsAndStrings&& from) noexcept
      : TestFlagsAndStrings(nullptr, std::move(from)) {}
  inline TestFlagsAndStrings& operator=(const TestFlagsAndStrings& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestFlagsAndStrings& operator=(TestFlagsAndStrings&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestFlagsAndStrings& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestFlagsAndStrings* internal_default_instance() {
    return reinterpret_cast<const TestFlagsAndStrings*>(
        &_TestFlagsAndStrings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TestFlagsAndStrings& a, TestFlagsAndStrings& b) { a.Swap(&b); }
  inline void Swap(TestFlagsAndStrings* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestFlagsAndStrings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestFlagsAndStrings* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestFlagsAndStrings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestFlagsAndStrings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestFlagsAndStrings& from) { TestFlagsAndStrings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestFlagsAndStrings* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestFlagsAndStrings"; }

 protected:
  explicit TestFlagsAndStrings(::google::protobuf::Arena* arena);
  TestFlagsAndStrings(::google::protobuf::Arena* arena, const TestFlagsAndStrings& from);
  TestFlagsAndStrings(::google::protobuf::Arena* arena, TestFlagsAndStrings&& from) noexcept
      : TestFlagsAndStrings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RepeatedGroup = TestFlagsAndStrings_RepeatedGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedgroupFieldNumber = 2,
    kAFieldNumber = 1,
  };
  // repeated group RepeatedGroup = 2 { ... };
  int repeatedgroup_size() const;
  private:
  int _internal_repeatedgroup_size() const;

  public:
  void clear_repeatedgroup() ;
  ::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup* mutable_repeatedgroup(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup>* mutable_repeatedgroup();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup>& _internal_repeatedgroup() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup>* _internal_mutable_repeatedgroup();
  public:
  const ::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup& repeatedgroup(int index) const;
  ::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup* add_repeatedgroup();
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup>& repeatedgroup() const;
  // required int32 A = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestFlagsAndStrings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestFlagsAndStrings_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestFlagsAndStrings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup > repeatedgroup_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};
// -------------------------------------------------------------------

class TestBoolMap final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestBoolMap) */ {
 public:
  inline TestBoolMap() : TestBoolMap(nullptr) {}
  ~TestBoolMap() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestBoolMap(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestBoolMap(const TestBoolMap& from) : TestBoolMap(nullptr, from) {}
  inline TestBoolMap(TestBoolMap&& from) noexcept
      : TestBoolMap(nullptr, std::move(from)) {}
  inline TestBoolMap& operator=(const TestBoolMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestBoolMap& operator=(TestBoolMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestBoolMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestBoolMap* internal_default_instance() {
    return reinterpret_cast<const TestBoolMap*>(
        &_TestBoolMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(TestBoolMap& a, TestBoolMap& b) { a.Swap(&b); }
  inline void Swap(TestBoolMap* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestBoolMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestBoolMap* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestBoolMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestBoolMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestBoolMap& from) { TestBoolMap::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestBoolMap* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestBoolMap"; }

 protected:
  explicit TestBoolMap(::google::protobuf::Arena* arena);
  TestBoolMap(::google::protobuf::Arena* arena, const TestBoolMap& from);
  TestBoolMap(::google::protobuf::Arena* arena, TestBoolMap&& from) noexcept
      : TestBoolMap(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBoolMapFieldNumber = 1,
  };
  // map<bool, int32> bool_map = 1;
  int bool_map_size() const;
  private:
  int _internal_bool_map_size() const;

  public:
  void clear_bool_map() ;
  const ::google::protobuf::Map<bool, ::int32_t>& bool_map() const;
  ::google::protobuf::Map<bool, ::int32_t>* mutable_bool_map();

  private:
  const ::google::protobuf::Map<bool, ::int32_t>& _internal_bool_map() const;
  ::google::protobuf::Map<bool, ::int32_t>* _internal_mutable_bool_map();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestBoolMap)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestBoolMap_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestBoolMap& from_msg);
    ::google::protobuf::internal::MapField<TestBoolMap_BoolMapEntry_DoNotUse, bool, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        bool_map_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestFlagsAndStrings_RepeatedGroup

// required string f = 3;
inline bool TestFlagsAndStrings_RepeatedGroup::has_f() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestFlagsAndStrings_RepeatedGroup::clear_f() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestFlagsAndStrings_RepeatedGroup::f() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFlagsAndStrings.RepeatedGroup.f)
  return _internal_f();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestFlagsAndStrings_RepeatedGroup::set_f(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestFlagsAndStrings.RepeatedGroup.f)
}
inline std::string* TestFlagsAndStrings_RepeatedGroup::mutable_f() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestFlagsAndStrings.RepeatedGroup.f)
  return _s;
}
inline const std::string& TestFlagsAndStrings_RepeatedGroup::_internal_f() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_.Get();
}
inline void TestFlagsAndStrings_RepeatedGroup::_internal_set_f(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_.Set(value, GetArena());
}
inline std::string* TestFlagsAndStrings_RepeatedGroup::_internal_mutable_f() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_.Mutable( GetArena());
}
inline std::string* TestFlagsAndStrings_RepeatedGroup::release_f() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestFlagsAndStrings.RepeatedGroup.f)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestFlagsAndStrings_RepeatedGroup::set_allocated_f(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_.IsDefault()) {
          _impl_.f_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestFlagsAndStrings.RepeatedGroup.f)
}

// -------------------------------------------------------------------

// TestFlagsAndStrings

// required int32 A = 1;
inline bool TestFlagsAndStrings::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestFlagsAndStrings::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestFlagsAndStrings::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFlagsAndStrings.A)
  return _internal_a();
}
inline void TestFlagsAndStrings::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestFlagsAndStrings.A)
}
inline ::int32_t TestFlagsAndStrings::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestFlagsAndStrings::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// repeated group RepeatedGroup = 2 { ... };
inline int TestFlagsAndStrings::_internal_repeatedgroup_size() const {
  return _internal_repeatedgroup().size();
}
inline int TestFlagsAndStrings::repeatedgroup_size() const {
  return _internal_repeatedgroup_size();
}
inline void TestFlagsAndStrings::clear_repeatedgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedgroup_.Clear();
}
inline ::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup* TestFlagsAndStrings::mutable_repeatedgroup(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestFlagsAndStrings.repeatedgroup)
  return _internal_mutable_repeatedgroup()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup>* TestFlagsAndStrings::mutable_repeatedgroup()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestFlagsAndStrings.repeatedgroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedgroup();
}
inline const ::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup& TestFlagsAndStrings::repeatedgroup(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestFlagsAndStrings.repeatedgroup)
  return _internal_repeatedgroup().Get(index);
}
inline ::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup* TestFlagsAndStrings::add_repeatedgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup* _add = _internal_mutable_repeatedgroup()->Add();
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestFlagsAndStrings.repeatedgroup)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup>& TestFlagsAndStrings::repeatedgroup() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestFlagsAndStrings.repeatedgroup)
  return _internal_repeatedgroup();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup>&
TestFlagsAndStrings::_internal_repeatedgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedgroup_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestFlagsAndStrings_RepeatedGroup>*
TestFlagsAndStrings::_internal_mutable_repeatedgroup() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedgroup_;
}

// -------------------------------------------------------------------

// TestBase64ByteArrays

// required bytes a = 1;
inline bool TestBase64ByteArrays::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestBase64ByteArrays::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestBase64ByteArrays::a() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestBase64ByteArrays.a)
  return _internal_a();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestBase64ByteArrays::set_a(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestBase64ByteArrays.a)
}
inline std::string* TestBase64ByteArrays::mutable_a() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_a();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestBase64ByteArrays.a)
  return _s;
}
inline const std::string& TestBase64ByteArrays::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_.Get();
}
inline void TestBase64ByteArrays::_internal_set_a(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_.Set(value, GetArena());
}
inline std::string* TestBase64ByteArrays::_internal_mutable_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.a_.Mutable( GetArena());
}
inline std::string* TestBase64ByteArrays::release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestBase64ByteArrays.a)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.a_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.a_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestBase64ByteArrays::set_allocated_a(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.a_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.a_.IsDefault()) {
          _impl_.a_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestBase64ByteArrays.a)
}

// -------------------------------------------------------------------

// TestJavaScriptJSON

// optional int32 a = 1;
inline bool TestJavaScriptJSON::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestJavaScriptJSON::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestJavaScriptJSON::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptJSON.a)
  return _internal_a();
}
inline void TestJavaScriptJSON::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptJSON.a)
}
inline ::int32_t TestJavaScriptJSON::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestJavaScriptJSON::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// optional float final = 2;
inline bool TestJavaScriptJSON::has_final() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestJavaScriptJSON::clear_final() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float TestJavaScriptJSON::final() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptJSON.final)
  return _internal_final();
}
inline void TestJavaScriptJSON::set_final(float value) {
  _internal_set_final(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptJSON.final)
}
inline float TestJavaScriptJSON::_internal_final() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_;
}
inline void TestJavaScriptJSON::_internal_set_final(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_ = value;
}

// optional string in = 3;
inline bool TestJavaScriptJSON::has_in() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestJavaScriptJSON::clear_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestJavaScriptJSON::in() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptJSON.in)
  return _internal_in();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestJavaScriptJSON::set_in(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.in_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptJSON.in)
}
inline std::string* TestJavaScriptJSON::mutable_in() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_in();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestJavaScriptJSON.in)
  return _s;
}
inline const std::string& TestJavaScriptJSON::_internal_in() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.in_.Get();
}
inline void TestJavaScriptJSON::_internal_set_in(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.in_.Set(value, GetArena());
}
inline std::string* TestJavaScriptJSON::_internal_mutable_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.in_.Mutable( GetArena());
}
inline std::string* TestJavaScriptJSON::release_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestJavaScriptJSON.in)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.in_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.in_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestJavaScriptJSON::set_allocated_in(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.in_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.in_.IsDefault()) {
          _impl_.in_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestJavaScriptJSON.in)
}

// optional string Var = 4;
inline bool TestJavaScriptJSON::has_var() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestJavaScriptJSON::clear_var() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.var_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& TestJavaScriptJSON::var() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptJSON.Var)
  return _internal_var();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestJavaScriptJSON::set_var(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.var_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptJSON.Var)
}
inline std::string* TestJavaScriptJSON::mutable_var() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_var();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestJavaScriptJSON.Var)
  return _s;
}
inline const std::string& TestJavaScriptJSON::_internal_var() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.var_.Get();
}
inline void TestJavaScriptJSON::_internal_set_var(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.var_.Set(value, GetArena());
}
inline std::string* TestJavaScriptJSON::_internal_mutable_var() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.var_.Mutable( GetArena());
}
inline std::string* TestJavaScriptJSON::release_var() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestJavaScriptJSON.Var)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.var_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.var_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestJavaScriptJSON::set_allocated_var(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.var_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.var_.IsDefault()) {
          _impl_.var_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestJavaScriptJSON.Var)
}

// -------------------------------------------------------------------

// TestJavaScriptOrderJSON1

// optional int32 d = 1;
inline bool TestJavaScriptOrderJSON1::has_d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON1::clear_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestJavaScriptOrderJSON1::d() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON1.d)
  return _internal_d();
}
inline void TestJavaScriptOrderJSON1::set_d(::int32_t value) {
  _internal_set_d(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON1.d)
}
inline ::int32_t TestJavaScriptOrderJSON1::_internal_d() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.d_;
}
inline void TestJavaScriptOrderJSON1::_internal_set_d(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_ = value;
}

// optional int32 c = 2;
inline bool TestJavaScriptOrderJSON1::has_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON1::clear_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestJavaScriptOrderJSON1::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON1.c)
  return _internal_c();
}
inline void TestJavaScriptOrderJSON1::set_c(::int32_t value) {
  _internal_set_c(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON1.c)
}
inline ::int32_t TestJavaScriptOrderJSON1::_internal_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_;
}
inline void TestJavaScriptOrderJSON1::_internal_set_c(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = value;
}

// optional bool x = 3;
inline bool TestJavaScriptOrderJSON1::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON1::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool TestJavaScriptOrderJSON1::x() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON1.x)
  return _internal_x();
}
inline void TestJavaScriptOrderJSON1::set_x(bool value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON1.x)
}
inline bool TestJavaScriptOrderJSON1::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void TestJavaScriptOrderJSON1::_internal_set_x(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional int32 b = 4;
inline bool TestJavaScriptOrderJSON1::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON1::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestJavaScriptOrderJSON1::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON1.b)
  return _internal_b();
}
inline void TestJavaScriptOrderJSON1::set_b(::int32_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON1.b)
}
inline ::int32_t TestJavaScriptOrderJSON1::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void TestJavaScriptOrderJSON1::_internal_set_b(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// optional int32 a = 5;
inline bool TestJavaScriptOrderJSON1::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON1::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestJavaScriptOrderJSON1::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON1.a)
  return _internal_a();
}
inline void TestJavaScriptOrderJSON1::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON1.a)
}
inline ::int32_t TestJavaScriptOrderJSON1::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestJavaScriptOrderJSON1::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestJavaScriptOrderJSON2

// optional int32 d = 1;
inline bool TestJavaScriptOrderJSON2::has_d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON2::clear_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestJavaScriptOrderJSON2::d() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON2.d)
  return _internal_d();
}
inline void TestJavaScriptOrderJSON2::set_d(::int32_t value) {
  _internal_set_d(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON2.d)
}
inline ::int32_t TestJavaScriptOrderJSON2::_internal_d() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.d_;
}
inline void TestJavaScriptOrderJSON2::_internal_set_d(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_ = value;
}

// optional int32 c = 2;
inline bool TestJavaScriptOrderJSON2::has_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON2::clear_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestJavaScriptOrderJSON2::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON2.c)
  return _internal_c();
}
inline void TestJavaScriptOrderJSON2::set_c(::int32_t value) {
  _internal_set_c(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON2.c)
}
inline ::int32_t TestJavaScriptOrderJSON2::_internal_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_;
}
inline void TestJavaScriptOrderJSON2::_internal_set_c(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = value;
}

// optional bool x = 3;
inline bool TestJavaScriptOrderJSON2::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON2::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool TestJavaScriptOrderJSON2::x() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON2.x)
  return _internal_x();
}
inline void TestJavaScriptOrderJSON2::set_x(bool value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON2.x)
}
inline bool TestJavaScriptOrderJSON2::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void TestJavaScriptOrderJSON2::_internal_set_x(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional int32 b = 4;
inline bool TestJavaScriptOrderJSON2::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON2::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestJavaScriptOrderJSON2::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON2.b)
  return _internal_b();
}
inline void TestJavaScriptOrderJSON2::set_b(::int32_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON2.b)
}
inline ::int32_t TestJavaScriptOrderJSON2::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void TestJavaScriptOrderJSON2::_internal_set_b(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// optional int32 a = 5;
inline bool TestJavaScriptOrderJSON2::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestJavaScriptOrderJSON2::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestJavaScriptOrderJSON2::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON2.a)
  return _internal_a();
}
inline void TestJavaScriptOrderJSON2::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestJavaScriptOrderJSON2.a)
}
inline ::int32_t TestJavaScriptOrderJSON2::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestJavaScriptOrderJSON2::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// repeated .protobuf_unittest.TestJavaScriptOrderJSON1 z = 6;
inline int TestJavaScriptOrderJSON2::_internal_z_size() const {
  return _internal_z().size();
}
inline int TestJavaScriptOrderJSON2::z_size() const {
  return _internal_z_size();
}
inline void TestJavaScriptOrderJSON2::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_.Clear();
}
inline ::protobuf_unittest::TestJavaScriptOrderJSON1* TestJavaScriptOrderJSON2::mutable_z(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestJavaScriptOrderJSON2.z)
  return _internal_mutable_z()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestJavaScriptOrderJSON1>* TestJavaScriptOrderJSON2::mutable_z()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestJavaScriptOrderJSON2.z)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_z();
}
inline const ::protobuf_unittest::TestJavaScriptOrderJSON1& TestJavaScriptOrderJSON2::z(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestJavaScriptOrderJSON2.z)
  return _internal_z().Get(index);
}
inline ::protobuf_unittest::TestJavaScriptOrderJSON1* TestJavaScriptOrderJSON2::add_z() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_unittest::TestJavaScriptOrderJSON1* _add = _internal_mutable_z()->Add();
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestJavaScriptOrderJSON2.z)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestJavaScriptOrderJSON1>& TestJavaScriptOrderJSON2::z() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestJavaScriptOrderJSON2.z)
  return _internal_z();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestJavaScriptOrderJSON1>&
TestJavaScriptOrderJSON2::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestJavaScriptOrderJSON1>*
TestJavaScriptOrderJSON2::_internal_mutable_z() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.z_;
}

// -------------------------------------------------------------------

// TestLargeInt

// required int64 a = 1;
inline bool TestLargeInt::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestLargeInt::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t TestLargeInt::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestLargeInt.a)
  return _internal_a();
}
inline void TestLargeInt::set_a(::int64_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestLargeInt.a)
}
inline ::int64_t TestLargeInt::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestLargeInt::_internal_set_a(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// required uint64 b = 2;
inline bool TestLargeInt::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestLargeInt::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t TestLargeInt::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestLargeInt.b)
  return _internal_b();
}
inline void TestLargeInt::set_b(::uint64_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestLargeInt.b)
}
inline ::uint64_t TestLargeInt::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void TestLargeInt::_internal_set_b(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// -------------------------------------------------------------------

// TestNumbers

// optional .protobuf_unittest.TestNumbers.MyType a = 1;
inline bool TestNumbers::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestNumbers::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::protobuf_unittest::TestNumbers_MyType TestNumbers::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNumbers.a)
  return _internal_a();
}
inline void TestNumbers::set_a(::protobuf_unittest::TestNumbers_MyType value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestNumbers.a)
}
inline ::protobuf_unittest::TestNumbers_MyType TestNumbers::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::protobuf_unittest::TestNumbers_MyType>(_impl_.a_);
}
inline void TestNumbers::_internal_set_a(::protobuf_unittest::TestNumbers_MyType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::protobuf_unittest::TestNumbers_MyType_IsValid(value));
  _impl_.a_ = value;
}

// optional int32 b = 2;
inline bool TestNumbers::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestNumbers::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestNumbers::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNumbers.b)
  return _internal_b();
}
inline void TestNumbers::set_b(::int32_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestNumbers.b)
}
inline ::int32_t TestNumbers::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void TestNumbers::_internal_set_b(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// optional float c = 3;
inline bool TestNumbers::has_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestNumbers::clear_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float TestNumbers::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNumbers.c)
  return _internal_c();
}
inline void TestNumbers::set_c(float value) {
  _internal_set_c(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestNumbers.c)
}
inline float TestNumbers::_internal_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_;
}
inline void TestNumbers::_internal_set_c(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = value;
}

// optional bool d = 4;
inline bool TestNumbers::has_d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestNumbers::clear_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool TestNumbers::d() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNumbers.d)
  return _internal_d();
}
inline void TestNumbers::set_d(bool value) {
  _internal_set_d(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestNumbers.d)
}
inline bool TestNumbers::_internal_d() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.d_;
}
inline void TestNumbers::_internal_set_d(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_ = value;
}

// optional double e = 5;
inline bool TestNumbers::has_e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestNumbers::clear_e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.e_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double TestNumbers::e() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNumbers.e)
  return _internal_e();
}
inline void TestNumbers::set_e(double value) {
  _internal_set_e(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestNumbers.e)
}
inline double TestNumbers::_internal_e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.e_;
}
inline void TestNumbers::_internal_set_e(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.e_ = value;
}

// optional uint32 f = 6;
inline bool TestNumbers::has_f() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestNumbers::clear_f() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t TestNumbers::f() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestNumbers.f)
  return _internal_f();
}
inline void TestNumbers::set_f(::uint32_t value) {
  _internal_set_f(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestNumbers.f)
}
inline ::uint32_t TestNumbers::_internal_f() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_;
}
inline void TestNumbers::_internal_set_f(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_ = value;
}

// -------------------------------------------------------------------

// TestCamelCase

// optional string normal_field = 1;
inline bool TestCamelCase::has_normal_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestCamelCase::clear_normal_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.normal_field_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestCamelCase::normal_field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCase.normal_field)
  return _internal_normal_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestCamelCase::set_normal_field(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.normal_field_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCase.normal_field)
}
inline std::string* TestCamelCase::mutable_normal_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_normal_field();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestCamelCase.normal_field)
  return _s;
}
inline const std::string& TestCamelCase::_internal_normal_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.normal_field_.Get();
}
inline void TestCamelCase::_internal_set_normal_field(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.normal_field_.Set(value, GetArena());
}
inline std::string* TestCamelCase::_internal_mutable_normal_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.normal_field_.Mutable( GetArena());
}
inline std::string* TestCamelCase::release_normal_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestCamelCase.normal_field)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.normal_field_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.normal_field_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestCamelCase::set_allocated_normal_field(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.normal_field_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.normal_field_.IsDefault()) {
          _impl_.normal_field_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestCamelCase.normal_field)
}

// optional int32 CAPITAL_FIELD = 2;
inline bool TestCamelCase::has_capital_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestCamelCase::clear_capital_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capital_field_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestCamelCase::capital_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCase.CAPITAL_FIELD)
  return _internal_capital_field();
}
inline void TestCamelCase::set_capital_field(::int32_t value) {
  _internal_set_capital_field(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCase.CAPITAL_FIELD)
}
inline ::int32_t TestCamelCase::_internal_capital_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capital_field_;
}
inline void TestCamelCase::_internal_set_capital_field(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capital_field_ = value;
}

// optional int32 CamelCaseField = 3;
inline bool TestCamelCase::has_camelcasefield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestCamelCase::clear_camelcasefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camelcasefield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestCamelCase::camelcasefield() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestCamelCase.CamelCaseField)
  return _internal_camelcasefield();
}
inline void TestCamelCase::set_camelcasefield(::int32_t value) {
  _internal_set_camelcasefield(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestCamelCase.CamelCaseField)
}
inline ::int32_t TestCamelCase::_internal_camelcasefield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camelcasefield_;
}
inline void TestCamelCase::_internal_set_camelcasefield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camelcasefield_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestBoolMap

// map<bool, int32> bool_map = 1;
inline int TestBoolMap::_internal_bool_map_size() const {
  return _internal_bool_map().size();
}
inline int TestBoolMap::bool_map_size() const {
  return _internal_bool_map_size();
}
inline void TestBoolMap::clear_bool_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bool_map_.Clear();
}
inline const ::google::protobuf::Map<bool, ::int32_t>& TestBoolMap::_internal_bool_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bool_map_.GetMap();
}
inline const ::google::protobuf::Map<bool, ::int32_t>& TestBoolMap::bool_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestBoolMap.bool_map)
  return _internal_bool_map();
}
inline ::google::protobuf::Map<bool, ::int32_t>* TestBoolMap::_internal_mutable_bool_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bool_map_.MutableMap();
}
inline ::google::protobuf::Map<bool, ::int32_t>* TestBoolMap::mutable_bool_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestBoolMap.bool_map)
  return _internal_mutable_bool_map();
}

// -------------------------------------------------------------------

// TestRecursion

// optional int32 value = 1;
inline bool TestRecursion::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestRecursion::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestRecursion::value() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRecursion.value)
  return _internal_value();
}
inline void TestRecursion::set_value(::int32_t value) {
  _internal_set_value(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRecursion.value)
}
inline ::int32_t TestRecursion::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void TestRecursion::_internal_set_value(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// optional .protobuf_unittest.TestRecursion child = 2;
inline bool TestRecursion::has_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.child_ != nullptr);
  return value;
}
inline void TestRecursion::clear_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ != nullptr) _impl_.child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::TestRecursion& TestRecursion::_internal_child() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::protobuf_unittest::TestRecursion* p = _impl_.child_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::TestRecursion&>(::protobuf_unittest::_TestRecursion_default_instance_);
}
inline const ::protobuf_unittest::TestRecursion& TestRecursion::child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRecursion.child)
  return _internal_child();
}
inline void TestRecursion::unsafe_arena_set_allocated_child(::protobuf_unittest::TestRecursion* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.child_);
  }
  _impl_.child_ = reinterpret_cast<::protobuf_unittest::TestRecursion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestRecursion.child)
}
inline ::protobuf_unittest::TestRecursion* TestRecursion::release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestRecursion* released = _impl_.child_;
  _impl_.child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::TestRecursion* TestRecursion::unsafe_arena_release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestRecursion.child)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestRecursion* temp = _impl_.child_;
  _impl_.child_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::TestRecursion* TestRecursion::_internal_mutable_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::protobuf_unittest::TestRecursion>(GetArena());
    _impl_.child_ = reinterpret_cast<::protobuf_unittest::TestRecursion*>(p);
  }
  return _impl_.child_;
}
inline ::protobuf_unittest::TestRecursion* TestRecursion::mutable_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::protobuf_unittest::TestRecursion* _msg = _internal_mutable_child();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestRecursion.child)
  return _msg;
}
inline void TestRecursion::set_allocated_child(::protobuf_unittest::TestRecursion* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.child_ = reinterpret_cast<::protobuf_unittest::TestRecursion*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestRecursion.child)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestStringMap

// map<string, string> string_map = 1;
inline int TestStringMap::_internal_string_map_size() const {
  return _internal_string_map().size();
}
inline int TestStringMap::string_map_size() const {
  return _internal_string_map_size();
}
inline void TestStringMap::clear_string_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestStringMap::_internal_string_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestStringMap::string_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestStringMap.string_map)
  return _internal_string_map();
}
inline ::google::protobuf::Map<std::string, std::string>* TestStringMap::_internal_mutable_string_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.string_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TestStringMap::mutable_string_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestStringMap.string_map)
  return _internal_mutable_string_map();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestStringSerializer

// optional string scalar_string = 1;
inline bool TestStringSerializer::has_scalar_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestStringSerializer::clear_scalar_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalar_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestStringSerializer::scalar_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestStringSerializer.scalar_string)
  return _internal_scalar_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestStringSerializer::set_scalar_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.scalar_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestStringSerializer.scalar_string)
}
inline std::string* TestStringSerializer::mutable_scalar_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scalar_string();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestStringSerializer.scalar_string)
  return _s;
}
inline const std::string& TestStringSerializer::_internal_scalar_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scalar_string_.Get();
}
inline void TestStringSerializer::_internal_set_scalar_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.scalar_string_.Set(value, GetArena());
}
inline std::string* TestStringSerializer::_internal_mutable_scalar_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.scalar_string_.Mutable( GetArena());
}
inline std::string* TestStringSerializer::release_scalar_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestStringSerializer.scalar_string)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.scalar_string_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.scalar_string_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestStringSerializer::set_allocated_scalar_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.scalar_string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scalar_string_.IsDefault()) {
          _impl_.scalar_string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestStringSerializer.scalar_string)
}

// repeated string repeated_string = 2;
inline int TestStringSerializer::_internal_repeated_string_size() const {
  return _internal_repeated_string().size();
}
inline int TestStringSerializer::repeated_string_size() const {
  return _internal_repeated_string_size();
}
inline void TestStringSerializer::clear_repeated_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_.Clear();
}
inline std::string* TestStringSerializer::add_repeated_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_repeated_string()->Add();
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestStringSerializer.repeated_string)
  return _s;
}
inline const std::string& TestStringSerializer::repeated_string(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestStringSerializer.repeated_string)
  return _internal_repeated_string().Get(index);
}
inline std::string* TestStringSerializer::mutable_repeated_string(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestStringSerializer.repeated_string)
  return _internal_mutable_repeated_string()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestStringSerializer::set_repeated_string(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_repeated_string()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestStringSerializer.repeated_string)
}
template <typename Arg_, typename... Args_>
inline void TestStringSerializer::add_repeated_string(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_repeated_string(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestStringSerializer.repeated_string)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestStringSerializer::repeated_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestStringSerializer.repeated_string)
  return _internal_repeated_string();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestStringSerializer::mutable_repeated_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestStringSerializer.repeated_string)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestStringSerializer::_internal_repeated_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestStringSerializer::_internal_mutable_repeated_string() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_;
}

// map<string, string> string_map = 3;
inline int TestStringSerializer::_internal_string_map_size() const {
  return _internal_string_map().size();
}
inline int TestStringSerializer::string_map_size() const {
  return _internal_string_map_size();
}
inline void TestStringSerializer::clear_string_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestStringSerializer::_internal_string_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestStringSerializer::string_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestStringSerializer.string_map)
  return _internal_string_map();
}
inline ::google::protobuf::Map<std::string, std::string>* TestStringSerializer::_internal_mutable_string_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.string_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TestStringSerializer::mutable_string_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestStringSerializer.string_map)
  return _internal_mutable_string_map();
}

// -------------------------------------------------------------------

// TestMessageWithExtension

// -------------------------------------------------------------------

// TestExtension

// optional string value = 1;
inline bool TestExtension::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestExtension::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestExtension::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestExtension.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestExtension::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestExtension.value)
}
inline std::string* TestExtension::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestExtension.value)
  return _s;
}
inline const std::string& TestExtension::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void TestExtension::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* TestExtension::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* TestExtension::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestExtension.value)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.value_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestExtension::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestExtension.value)
}

// -------------------------------------------------------------------

// TestDefaultEnumValue

// optional .protobuf_unittest.EnumValue enum_value = 1 [default = DEFAULT];
inline bool TestDefaultEnumValue::has_enum_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestDefaultEnumValue::clear_enum_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_value_ = 2;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::protobuf_unittest::EnumValue TestDefaultEnumValue::enum_value() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDefaultEnumValue.enum_value)
  return _internal_enum_value();
}
inline void TestDefaultEnumValue::set_enum_value(::protobuf_unittest::EnumValue value) {
  _internal_set_enum_value(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDefaultEnumValue.enum_value)
}
inline ::protobuf_unittest::EnumValue TestDefaultEnumValue::_internal_enum_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::protobuf_unittest::EnumValue>(_impl_.enum_value_);
}
inline void TestDefaultEnumValue::_internal_set_enum_value(::protobuf_unittest::EnumValue value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::protobuf_unittest::EnumValue_IsValid(value));
  _impl_.enum_value_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestMapOfEnums

// map<string, .protobuf_unittest.EnumValue> enum_map = 1;
inline int TestMapOfEnums::_internal_enum_map_size() const {
  return _internal_enum_map().size();
}
inline int TestMapOfEnums::enum_map_size() const {
  return _internal_enum_map_size();
}
inline void TestMapOfEnums::clear_enum_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::protobuf_unittest::EnumValue>& TestMapOfEnums::_internal_enum_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enum_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::protobuf_unittest::EnumValue>& TestMapOfEnums::enum_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMapOfEnums.enum_map)
  return _internal_enum_map();
}
inline ::google::protobuf::Map<std::string, ::protobuf_unittest::EnumValue>* TestMapOfEnums::_internal_mutable_enum_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.enum_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::protobuf_unittest::EnumValue>* TestMapOfEnums::mutable_enum_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMapOfEnums.enum_map)
  return _internal_mutable_enum_map();
}

// -------------------------------------------------------------------

// TestRepeatedEnum

// repeated .protobuf_unittest.EnumValue repeated_enum = 1;
inline int TestRepeatedEnum::_internal_repeated_enum_size() const {
  return _internal_repeated_enum().size();
}
inline int TestRepeatedEnum::repeated_enum_size() const {
  return _internal_repeated_enum_size();
}
inline void TestRepeatedEnum::clear_repeated_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_enum_.Clear();
}
inline ::protobuf_unittest::EnumValue TestRepeatedEnum::repeated_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestRepeatedEnum.repeated_enum)
  return static_cast<::protobuf_unittest::EnumValue>(_internal_repeated_enum().Get(index));
}
inline void TestRepeatedEnum::set_repeated_enum(int index, ::protobuf_unittest::EnumValue value) {
  assert(::protobuf_unittest::EnumValue_IsValid(value));
  _internal_mutable_repeated_enum()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestRepeatedEnum.repeated_enum)
}
inline void TestRepeatedEnum::add_repeated_enum(::protobuf_unittest::EnumValue value) {
  assert(::protobuf_unittest::EnumValue_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_enum()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestRepeatedEnum.repeated_enum)
}
inline const ::google::protobuf::RepeatedField<int>& TestRepeatedEnum::repeated_enum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestRepeatedEnum.repeated_enum)
  return _internal_repeated_enum();
}
inline ::google::protobuf::RepeatedField<int>* TestRepeatedEnum::mutable_repeated_enum()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestRepeatedEnum.repeated_enum)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_enum();
}
inline const ::google::protobuf::RepeatedField<int>& TestRepeatedEnum::_internal_repeated_enum()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_enum_;
}
inline ::google::protobuf::RepeatedField<int>* TestRepeatedEnum::_internal_mutable_repeated_enum() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_enum_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::protobuf_unittest::TestNumbers_MyType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::protobuf_unittest::TestNumbers_MyType>() {
  return ::protobuf_unittest::TestNumbers_MyType_descriptor();
}
template <>
struct is_proto_enum<::protobuf_unittest::EnumValue> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::protobuf_unittest::EnumValue>() {
  return ::protobuf_unittest::EnumValue_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2fjson_5fformat_2eproto_2epb_2eh
