// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/util/message_differencer_unittest.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto;
namespace protobuf_unittest {
class TestDiffMessage;
struct TestDiffMessageDefaultTypeInternal;
extern TestDiffMessageDefaultTypeInternal _TestDiffMessage_default_instance_;
class TestDiffMessage_Item;
struct TestDiffMessage_ItemDefaultTypeInternal;
extern TestDiffMessage_ItemDefaultTypeInternal _TestDiffMessage_Item_default_instance_;
class TestDiffMessage_Item_MpEntry_DoNotUse;
struct TestDiffMessage_Item_MpEntry_DoNotUseDefaultTypeInternal;
extern TestDiffMessage_Item_MpEntry_DoNotUseDefaultTypeInternal _TestDiffMessage_Item_MpEntry_DoNotUse_default_instance_;
class TestField;
struct TestFieldDefaultTypeInternal;
extern TestFieldDefaultTypeInternal _TestField_default_instance_;
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf_unittest {

// ===================================================================


// -------------------------------------------------------------------

class TestField final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestField) */ {
 public:
  inline TestField() : TestField(nullptr) {}
  ~TestField() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestField(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestField(const TestField& from) : TestField(nullptr, from) {}
  inline TestField(TestField&& from) noexcept
      : TestField(nullptr, std::move(from)) {}
  inline TestField& operator=(const TestField& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestField& operator=(TestField&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestField& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestField* internal_default_instance() {
    return reinterpret_cast<const TestField*>(
        &_TestField_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestField& a, TestField& b) { a.Swap(&b); }
  inline void Swap(TestField* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestField* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestField* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestField>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestField& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestField& from) { TestField::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestField* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestField"; }

 protected:
  explicit TestField(::google::protobuf::Arena* arena);
  TestField(::google::protobuf::Arena* arena, const TestField& from);
  TestField(::google::protobuf::Arena* arena, TestField&& from) noexcept
      : TestField(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRcFieldNumber = 2,
    kRmFieldNumber = 6,
    kMFieldNumber = 5,
    kCFieldNumber = 1,
    kAFieldNumber = 3,
    kBFieldNumber = 4,
  };
  // repeated int32 rc = 2;
  int rc_size() const;
  private:
  int _internal_rc_size() const;

  public:
  void clear_rc() ;
  ::int32_t rc(int index) const;
  void set_rc(int index, ::int32_t value);
  void add_rc(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& rc() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_rc();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_rc() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_rc();

  public:
  // repeated .protobuf_unittest.TestField rm = 6;
  int rm_size() const;
  private:
  int _internal_rm_size() const;

  public:
  void clear_rm() ;
  ::protobuf_unittest::TestField* mutable_rm(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* mutable_rm();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& _internal_rm() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* _internal_mutable_rm();
  public:
  const ::protobuf_unittest::TestField& rm(int index) const;
  ::protobuf_unittest::TestField* add_rm();
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& rm() const;
  // optional .protobuf_unittest.TestField m = 5;
  bool has_m() const;
  void clear_m() ;
  const ::protobuf_unittest::TestField& m() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::TestField* release_m();
  ::protobuf_unittest::TestField* mutable_m();
  void set_allocated_m(::protobuf_unittest::TestField* value);
  void unsafe_arena_set_allocated_m(::protobuf_unittest::TestField* value);
  ::protobuf_unittest::TestField* unsafe_arena_release_m();

  private:
  const ::protobuf_unittest::TestField& _internal_m() const;
  ::protobuf_unittest::TestField* _internal_mutable_m();

  public:
  // optional int32 c = 1;
  bool has_c() const;
  void clear_c() ;
  ::int32_t c() const;
  void set_c(::int32_t value);

  private:
  ::int32_t _internal_c() const;
  void _internal_set_c(::int32_t value);

  public:
  // optional int32 a = 3;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // optional int32 b = 4;
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  static const int kTfFieldNumber = 100;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::protobuf_unittest::TestDiffMessage, ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestField >, 11,
      false>
      tf;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestField)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestField_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestField& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> rc_;
    ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestField > rm_;
    ::protobuf_unittest::TestField* m_;
    ::int32_t c_;
    ::int32_t a_;
    ::int32_t b_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDiffMessage_Item_MpEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestDiffMessage_Item_MpEntry_DoNotUse, std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestDiffMessage_Item_MpEntry_DoNotUse, std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  TestDiffMessage_Item_MpEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDiffMessage_Item_MpEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestDiffMessage_Item_MpEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestDiffMessage_Item_MpEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestDiffMessage_Item_MpEntry_DoNotUse*>(
        &_TestDiffMessage_Item_MpEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDiffMessage_Item final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestDiffMessage.Item) */ {
 public:
  inline TestDiffMessage_Item() : TestDiffMessage_Item(nullptr) {}
  ~TestDiffMessage_Item() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDiffMessage_Item(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDiffMessage_Item(const TestDiffMessage_Item& from) : TestDiffMessage_Item(nullptr, from) {}
  inline TestDiffMessage_Item(TestDiffMessage_Item&& from) noexcept
      : TestDiffMessage_Item(nullptr, std::move(from)) {}
  inline TestDiffMessage_Item& operator=(const TestDiffMessage_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDiffMessage_Item& operator=(TestDiffMessage_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDiffMessage_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDiffMessage_Item* internal_default_instance() {
    return reinterpret_cast<const TestDiffMessage_Item*>(
        &_TestDiffMessage_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TestDiffMessage_Item& a, TestDiffMessage_Item& b) { a.Swap(&b); }
  inline void Swap(TestDiffMessage_Item* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDiffMessage_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDiffMessage_Item* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDiffMessage_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDiffMessage_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDiffMessage_Item& from) { TestDiffMessage_Item::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDiffMessage_Item* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestDiffMessage.Item"; }

 protected:
  explicit TestDiffMessage_Item(::google::protobuf::Arena* arena);
  TestDiffMessage_Item(::google::protobuf::Arena* arena, const TestDiffMessage_Item& from);
  TestDiffMessage_Item(::google::protobuf::Arena* arena, TestDiffMessage_Item&& from) noexcept
      : TestDiffMessage_Item(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRaFieldNumber = 3,
    kRbFieldNumber = 5,
    kRmFieldNumber = 7,
    kMpFieldNumber = 8,
    kBFieldNumber = 4,
    kMFieldNumber = 6,
    kAFieldNumber = 2,
  };
  // repeated int32 ra = 3;
  int ra_size() const;
  private:
  int _internal_ra_size() const;

  public:
  void clear_ra() ;
  ::int32_t ra(int index) const;
  void set_ra(int index, ::int32_t value);
  void add_ra(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& ra() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_ra();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_ra() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_ra();

  public:
  // repeated string rb = 5;
  int rb_size() const;
  private:
  int _internal_rb_size() const;

  public:
  void clear_rb() ;
  const std::string& rb(int index) const;
  std::string* mutable_rb(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rb(int index, Arg_&& value, Args_... args);
  std::string* add_rb();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_rb(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& rb() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_rb();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_rb() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_rb();

  public:
  // repeated .protobuf_unittest.TestField rm = 7;
  int rm_size() const;
  private:
  int _internal_rm_size() const;

  public:
  void clear_rm() ;
  ::protobuf_unittest::TestField* mutable_rm(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* mutable_rm();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& _internal_rm() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* _internal_mutable_rm();
  public:
  const ::protobuf_unittest::TestField& rm(int index) const;
  ::protobuf_unittest::TestField* add_rm();
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& rm() const;
  // map<string, int32> mp = 8;
  int mp_size() const;
  private:
  int _internal_mp_size() const;

  public:
  void clear_mp() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& mp() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_mp();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_mp() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_mp();

  public:
  // optional string b = 4;
  bool has_b() const;
  void clear_b() ;
  const std::string& b() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_b(Arg_&& arg, Args_... args);
  std::string* mutable_b();
  PROTOBUF_NODISCARD std::string* release_b();
  void set_allocated_b(std::string* value);

  private:
  const std::string& _internal_b() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_b(
      const std::string& value);
  std::string* _internal_mutable_b();

  public:
  // optional .protobuf_unittest.TestField m = 6;
  bool has_m() const;
  void clear_m() ;
  const ::protobuf_unittest::TestField& m() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::TestField* release_m();
  ::protobuf_unittest::TestField* mutable_m();
  void set_allocated_m(::protobuf_unittest::TestField* value);
  void unsafe_arena_set_allocated_m(::protobuf_unittest::TestField* value);
  ::protobuf_unittest::TestField* unsafe_arena_release_m();

  private:
  const ::protobuf_unittest::TestField& _internal_m() const;
  ::protobuf_unittest::TestField* _internal_mutable_m();

  public:
  // optional int32 a = 2;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestDiffMessage.Item)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDiffMessage_Item_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDiffMessage_Item& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> ra_;
    ::google::protobuf::RepeatedPtrField<std::string> rb_;
    ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestField > rm_;
    ::google::protobuf::internal::MapField<TestDiffMessage_Item_MpEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        mp_;
    ::google::protobuf::internal::ArenaStringPtr b_;
    ::protobuf_unittest::TestField* m_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDiffMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestDiffMessage) */ {
 public:
  inline TestDiffMessage() : TestDiffMessage(nullptr) {}
  ~TestDiffMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDiffMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDiffMessage(const TestDiffMessage& from) : TestDiffMessage(nullptr, from) {}
  inline TestDiffMessage(TestDiffMessage&& from) noexcept
      : TestDiffMessage(nullptr, std::move(from)) {}
  inline TestDiffMessage& operator=(const TestDiffMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDiffMessage& operator=(TestDiffMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDiffMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDiffMessage* internal_default_instance() {
    return reinterpret_cast<const TestDiffMessage*>(
        &_TestDiffMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TestDiffMessage& a, TestDiffMessage& b) { a.Swap(&b); }
  inline void Swap(TestDiffMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDiffMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDiffMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDiffMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDiffMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDiffMessage& from) { TestDiffMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDiffMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestDiffMessage"; }

 protected:
  explicit TestDiffMessage(::google::protobuf::Arena* arena);
  TestDiffMessage(::google::protobuf::Arena* arena, const TestDiffMessage& from);
  TestDiffMessage(::google::protobuf::Arena* arena, TestDiffMessage&& from) noexcept
      : TestDiffMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Item = TestDiffMessage_Item;

  // accessors -------------------------------------------------------
  enum : int {
    kItemFieldNumber = 1,
    kRwFieldNumber = 10,
    kRvFieldNumber = 11,
    kRmFieldNumber = 12,
    kRanyFieldNumber = 16,
    kWFieldNumber = 14,
    kMFieldNumber = 15,
    kVFieldNumber = 13,
  };
  // repeated group Item = 1 { ... };
  int item_size() const;
  private:
  int _internal_item_size() const;

  public:
  void clear_item() ;
  ::protobuf_unittest::TestDiffMessage_Item* mutable_item(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestDiffMessage_Item>* mutable_item();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestDiffMessage_Item>& _internal_item() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestDiffMessage_Item>* _internal_mutable_item();
  public:
  const ::protobuf_unittest::TestDiffMessage_Item& item(int index) const;
  ::protobuf_unittest::TestDiffMessage_Item* add_item();
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestDiffMessage_Item>& item() const;
  // repeated string rw = 10;
  int rw_size() const;
  private:
  int _internal_rw_size() const;

  public:
  void clear_rw() ;
  const std::string& rw(int index) const;
  std::string* mutable_rw(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rw(int index, Arg_&& value, Args_... args);
  std::string* add_rw();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_rw(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& rw() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_rw();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_rw() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_rw();

  public:
  // repeated int32 rv = 11;
  int rv_size() const;
  private:
  int _internal_rv_size() const;

  public:
  void clear_rv() ;
  ::int32_t rv(int index) const;
  void set_rv(int index, ::int32_t value);
  void add_rv(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& rv() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_rv();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_rv() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_rv();

  public:
  // repeated .protobuf_unittest.TestField rm = 12 [deprecated = true];
  [[deprecated]]  int rm_size() const;
  private:
  int _internal_rm_size() const;

  public:
  [[deprecated]]  void clear_rm() ;
  [[deprecated]] ::protobuf_unittest::TestField* mutable_rm(int index);
  [[deprecated]] ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* mutable_rm();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& _internal_rm() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* _internal_mutable_rm();
  public:
  [[deprecated]] const ::protobuf_unittest::TestField& rm(int index) const;
  [[deprecated]] ::protobuf_unittest::TestField* add_rm();
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& rm() const;
  // repeated .google.protobuf.Any rany = 16;
  int rany_size() const;
  private:
  int _internal_rany_size() const;

  public:
  void clear_rany() ;
  ::google::protobuf::Any* mutable_rany(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* mutable_rany();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_rany() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_rany();
  public:
  const ::google::protobuf::Any& rany(int index) const;
  ::google::protobuf::Any* add_rany();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& rany() const;
  // optional string w = 14;
  bool has_w() const;
  void clear_w() ;
  const std::string& w() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_w(Arg_&& arg, Args_... args);
  std::string* mutable_w();
  PROTOBUF_NODISCARD std::string* release_w();
  void set_allocated_w(std::string* value);

  private:
  const std::string& _internal_w() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_w(
      const std::string& value);
  std::string* _internal_mutable_w();

  public:
  // optional .protobuf_unittest.TestField m = 15;
  bool has_m() const;
  void clear_m() ;
  const ::protobuf_unittest::TestField& m() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::TestField* release_m();
  ::protobuf_unittest::TestField* mutable_m();
  void set_allocated_m(::protobuf_unittest::TestField* value);
  void unsafe_arena_set_allocated_m(::protobuf_unittest::TestField* value);
  ::protobuf_unittest::TestField* unsafe_arena_release_m();

  private:
  const ::protobuf_unittest::TestField& _internal_m() const;
  ::protobuf_unittest::TestField* _internal_mutable_m();

  public:
  // optional int32 v = 13 [deprecated = true];
  [[deprecated]]  bool has_v() const;
  [[deprecated]]  void clear_v() ;
  [[deprecated]] ::int32_t v() const;
  [[deprecated]] void set_v(::int32_t value);

  private:
  ::int32_t _internal_v() const;
  void _internal_set_v(::int32_t value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestDiffMessage, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestDiffMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 4,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDiffMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDiffMessage& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestDiffMessage_Item > item_;
    ::google::protobuf::RepeatedPtrField<std::string> rw_;
    ::google::protobuf::RepeatedField<::int32_t> rv_;
    ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::TestField > rm_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > rany_;
    ::google::protobuf::internal::ArenaStringPtr w_;
    ::protobuf_unittest::TestField* m_;
    ::int32_t v_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestField

// optional int32 a = 3;
inline bool TestField::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestField::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestField::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestField.a)
  return _internal_a();
}
inline void TestField::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestField.a)
}
inline ::int32_t TestField::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestField::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// optional int32 b = 4;
inline bool TestField::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestField::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestField::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestField.b)
  return _internal_b();
}
inline void TestField::set_b(::int32_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestField.b)
}
inline ::int32_t TestField::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void TestField::_internal_set_b(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// optional int32 c = 1;
inline bool TestField::has_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestField::clear_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestField::c() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestField.c)
  return _internal_c();
}
inline void TestField::set_c(::int32_t value) {
  _internal_set_c(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestField.c)
}
inline ::int32_t TestField::_internal_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_;
}
inline void TestField::_internal_set_c(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = value;
}

// repeated int32 rc = 2;
inline int TestField::_internal_rc_size() const {
  return _internal_rc().size();
}
inline int TestField::rc_size() const {
  return _internal_rc_size();
}
inline void TestField::clear_rc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rc_.Clear();
}
inline ::int32_t TestField::rc(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestField.rc)
  return _internal_rc().Get(index);
}
inline void TestField::set_rc(int index, ::int32_t value) {
  _internal_mutable_rc()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestField.rc)
}
inline void TestField::add_rc(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rc()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestField.rc)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestField::rc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestField.rc)
  return _internal_rc();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestField::mutable_rc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestField.rc)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rc();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestField::_internal_rc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rc_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestField::_internal_mutable_rc() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rc_;
}

// optional .protobuf_unittest.TestField m = 5;
inline bool TestField::has_m() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.m_ != nullptr);
  return value;
}
inline void TestField::clear_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.m_ != nullptr) _impl_.m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::TestField& TestField::_internal_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::protobuf_unittest::TestField* p = _impl_.m_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::TestField&>(::protobuf_unittest::_TestField_default_instance_);
}
inline const ::protobuf_unittest::TestField& TestField::m() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestField.m)
  return _internal_m();
}
inline void TestField::unsafe_arena_set_allocated_m(::protobuf_unittest::TestField* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.m_);
  }
  _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestField.m)
}
inline ::protobuf_unittest::TestField* TestField::release_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestField* released = _impl_.m_;
  _impl_.m_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::TestField* TestField::unsafe_arena_release_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestField.m)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestField* temp = _impl_.m_;
  _impl_.m_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::TestField* TestField::_internal_mutable_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.m_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::protobuf_unittest::TestField>(GetArena());
    _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(p);
  }
  return _impl_.m_;
}
inline ::protobuf_unittest::TestField* TestField::mutable_m() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::protobuf_unittest::TestField* _msg = _internal_mutable_m();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestField.m)
  return _msg;
}
inline void TestField::set_allocated_m(::protobuf_unittest::TestField* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.m_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestField.m)
}

// repeated .protobuf_unittest.TestField rm = 6;
inline int TestField::_internal_rm_size() const {
  return _internal_rm().size();
}
inline int TestField::rm_size() const {
  return _internal_rm_size();
}
inline void TestField::clear_rm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rm_.Clear();
}
inline ::protobuf_unittest::TestField* TestField::mutable_rm(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestField.rm)
  return _internal_mutable_rm()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* TestField::mutable_rm()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestField.rm)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rm();
}
inline const ::protobuf_unittest::TestField& TestField::rm(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestField.rm)
  return _internal_rm().Get(index);
}
inline ::protobuf_unittest::TestField* TestField::add_rm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_unittest::TestField* _add = _internal_mutable_rm()->Add();
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestField.rm)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& TestField::rm() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestField.rm)
  return _internal_rm();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>&
TestField::_internal_rm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rm_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>*
TestField::_internal_mutable_rm() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rm_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestDiffMessage_Item

// optional int32 a = 2;
inline bool TestDiffMessage_Item::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestDiffMessage_Item::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestDiffMessage_Item::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.Item.a)
  return _internal_a();
}
inline void TestDiffMessage_Item::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDiffMessage.Item.a)
}
inline ::int32_t TestDiffMessage_Item::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestDiffMessage_Item::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// optional string b = 4;
inline bool TestDiffMessage_Item::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestDiffMessage_Item::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestDiffMessage_Item::b() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.Item.b)
  return _internal_b();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestDiffMessage_Item::set_b(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.b_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDiffMessage.Item.b)
}
inline std::string* TestDiffMessage_Item::mutable_b() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_b();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.Item.b)
  return _s;
}
inline const std::string& TestDiffMessage_Item::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_.Get();
}
inline void TestDiffMessage_Item::_internal_set_b(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.b_.Set(value, GetArena());
}
inline std::string* TestDiffMessage_Item::_internal_mutable_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.b_.Mutable( GetArena());
}
inline std::string* TestDiffMessage_Item::release_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestDiffMessage.Item.b)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.b_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.b_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestDiffMessage_Item::set_allocated_b(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.b_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.b_.IsDefault()) {
          _impl_.b_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestDiffMessage.Item.b)
}

// repeated int32 ra = 3;
inline int TestDiffMessage_Item::_internal_ra_size() const {
  return _internal_ra().size();
}
inline int TestDiffMessage_Item::ra_size() const {
  return _internal_ra_size();
}
inline void TestDiffMessage_Item::clear_ra() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ra_.Clear();
}
inline ::int32_t TestDiffMessage_Item::ra(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.Item.ra)
  return _internal_ra().Get(index);
}
inline void TestDiffMessage_Item::set_ra(int index, ::int32_t value) {
  _internal_mutable_ra()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDiffMessage.Item.ra)
}
inline void TestDiffMessage_Item::add_ra(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ra()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDiffMessage.Item.ra)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestDiffMessage_Item::ra() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDiffMessage.Item.ra)
  return _internal_ra();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestDiffMessage_Item::mutable_ra()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDiffMessage.Item.ra)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ra();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestDiffMessage_Item::_internal_ra() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ra_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestDiffMessage_Item::_internal_mutable_ra() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ra_;
}

// repeated string rb = 5;
inline int TestDiffMessage_Item::_internal_rb_size() const {
  return _internal_rb().size();
}
inline int TestDiffMessage_Item::rb_size() const {
  return _internal_rb_size();
}
inline void TestDiffMessage_Item::clear_rb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rb_.Clear();
}
inline std::string* TestDiffMessage_Item::add_rb() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_rb()->Add();
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestDiffMessage.Item.rb)
  return _s;
}
inline const std::string& TestDiffMessage_Item::rb(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.Item.rb)
  return _internal_rb().Get(index);
}
inline std::string* TestDiffMessage_Item::mutable_rb(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.Item.rb)
  return _internal_mutable_rb()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestDiffMessage_Item::set_rb(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_rb()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDiffMessage.Item.rb)
}
template <typename Arg_, typename... Args_>
inline void TestDiffMessage_Item::add_rb(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_rb(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDiffMessage.Item.rb)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestDiffMessage_Item::rb() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDiffMessage.Item.rb)
  return _internal_rb();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestDiffMessage_Item::mutable_rb() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDiffMessage.Item.rb)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rb();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestDiffMessage_Item::_internal_rb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rb_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestDiffMessage_Item::_internal_mutable_rb() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rb_;
}

// optional .protobuf_unittest.TestField m = 6;
inline bool TestDiffMessage_Item::has_m() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.m_ != nullptr);
  return value;
}
inline void TestDiffMessage_Item::clear_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.m_ != nullptr) _impl_.m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::protobuf_unittest::TestField& TestDiffMessage_Item::_internal_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::protobuf_unittest::TestField* p = _impl_.m_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::TestField&>(::protobuf_unittest::_TestField_default_instance_);
}
inline const ::protobuf_unittest::TestField& TestDiffMessage_Item::m() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.Item.m)
  return _internal_m();
}
inline void TestDiffMessage_Item::unsafe_arena_set_allocated_m(::protobuf_unittest::TestField* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.m_);
  }
  _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestDiffMessage.Item.m)
}
inline ::protobuf_unittest::TestField* TestDiffMessage_Item::release_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::TestField* released = _impl_.m_;
  _impl_.m_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::TestField* TestDiffMessage_Item::unsafe_arena_release_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestDiffMessage.Item.m)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::TestField* temp = _impl_.m_;
  _impl_.m_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::TestField* TestDiffMessage_Item::_internal_mutable_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.m_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::protobuf_unittest::TestField>(GetArena());
    _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(p);
  }
  return _impl_.m_;
}
inline ::protobuf_unittest::TestField* TestDiffMessage_Item::mutable_m() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::protobuf_unittest::TestField* _msg = _internal_mutable_m();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.Item.m)
  return _msg;
}
inline void TestDiffMessage_Item::set_allocated_m(::protobuf_unittest::TestField* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.m_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestDiffMessage.Item.m)
}

// repeated .protobuf_unittest.TestField rm = 7;
inline int TestDiffMessage_Item::_internal_rm_size() const {
  return _internal_rm().size();
}
inline int TestDiffMessage_Item::rm_size() const {
  return _internal_rm_size();
}
inline void TestDiffMessage_Item::clear_rm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rm_.Clear();
}
inline ::protobuf_unittest::TestField* TestDiffMessage_Item::mutable_rm(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.Item.rm)
  return _internal_mutable_rm()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* TestDiffMessage_Item::mutable_rm()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDiffMessage.Item.rm)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rm();
}
inline const ::protobuf_unittest::TestField& TestDiffMessage_Item::rm(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.Item.rm)
  return _internal_rm().Get(index);
}
inline ::protobuf_unittest::TestField* TestDiffMessage_Item::add_rm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_unittest::TestField* _add = _internal_mutable_rm()->Add();
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDiffMessage.Item.rm)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& TestDiffMessage_Item::rm() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDiffMessage.Item.rm)
  return _internal_rm();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>&
TestDiffMessage_Item::_internal_rm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rm_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>*
TestDiffMessage_Item::_internal_mutable_rm() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rm_;
}

// map<string, int32> mp = 8;
inline int TestDiffMessage_Item::_internal_mp_size() const {
  return _internal_mp().size();
}
inline int TestDiffMessage_Item::mp_size() const {
  return _internal_mp_size();
}
inline void TestDiffMessage_Item::clear_mp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mp_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& TestDiffMessage_Item::_internal_mp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mp_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& TestDiffMessage_Item::mp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestDiffMessage.Item.mp)
  return _internal_mp();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* TestDiffMessage_Item::_internal_mutable_mp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.mp_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* TestDiffMessage_Item::mutable_mp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestDiffMessage.Item.mp)
  return _internal_mutable_mp();
}

// -------------------------------------------------------------------

// TestDiffMessage

// repeated group Item = 1 { ... };
inline int TestDiffMessage::_internal_item_size() const {
  return _internal_item().size();
}
inline int TestDiffMessage::item_size() const {
  return _internal_item_size();
}
inline void TestDiffMessage::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.Clear();
}
inline ::protobuf_unittest::TestDiffMessage_Item* TestDiffMessage::mutable_item(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.item)
  return _internal_mutable_item()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestDiffMessage_Item>* TestDiffMessage::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDiffMessage.item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_item();
}
inline const ::protobuf_unittest::TestDiffMessage_Item& TestDiffMessage::item(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.item)
  return _internal_item().Get(index);
}
inline ::protobuf_unittest::TestDiffMessage_Item* TestDiffMessage::add_item() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_unittest::TestDiffMessage_Item* _add = _internal_mutable_item()->Add();
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDiffMessage.item)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestDiffMessage_Item>& TestDiffMessage::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDiffMessage.item)
  return _internal_item();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestDiffMessage_Item>&
TestDiffMessage::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestDiffMessage_Item>*
TestDiffMessage::_internal_mutable_item() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.item_;
}

// optional int32 v = 13 [deprecated = true];
inline bool TestDiffMessage::has_v() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestDiffMessage::clear_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestDiffMessage::v() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.v)
  return _internal_v();
}
inline void TestDiffMessage::set_v(::int32_t value) {
  _internal_set_v(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDiffMessage.v)
}
inline ::int32_t TestDiffMessage::_internal_v() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v_;
}
inline void TestDiffMessage::_internal_set_v(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_ = value;
}

// optional string w = 14;
inline bool TestDiffMessage::has_w() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestDiffMessage::clear_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestDiffMessage::w() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.w)
  return _internal_w();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestDiffMessage::set_w(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.w_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDiffMessage.w)
}
inline std::string* TestDiffMessage::mutable_w() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_w();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.w)
  return _s;
}
inline const std::string& TestDiffMessage::_internal_w() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.w_.Get();
}
inline void TestDiffMessage::_internal_set_w(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.w_.Set(value, GetArena());
}
inline std::string* TestDiffMessage::_internal_mutable_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.w_.Mutable( GetArena());
}
inline std::string* TestDiffMessage::release_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestDiffMessage.w)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.w_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.w_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestDiffMessage::set_allocated_w(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.w_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.w_.IsDefault()) {
          _impl_.w_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestDiffMessage.w)
}

// optional .protobuf_unittest.TestField m = 15;
inline bool TestDiffMessage::has_m() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.m_ != nullptr);
  return value;
}
inline void TestDiffMessage::clear_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.m_ != nullptr) _impl_.m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::protobuf_unittest::TestField& TestDiffMessage::_internal_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::protobuf_unittest::TestField* p = _impl_.m_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::TestField&>(::protobuf_unittest::_TestField_default_instance_);
}
inline const ::protobuf_unittest::TestField& TestDiffMessage::m() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.m)
  return _internal_m();
}
inline void TestDiffMessage::unsafe_arena_set_allocated_m(::protobuf_unittest::TestField* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.m_);
  }
  _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestDiffMessage.m)
}
inline ::protobuf_unittest::TestField* TestDiffMessage::release_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::TestField* released = _impl_.m_;
  _impl_.m_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::TestField* TestDiffMessage::unsafe_arena_release_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestDiffMessage.m)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::TestField* temp = _impl_.m_;
  _impl_.m_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::TestField* TestDiffMessage::_internal_mutable_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.m_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::protobuf_unittest::TestField>(GetArena());
    _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(p);
  }
  return _impl_.m_;
}
inline ::protobuf_unittest::TestField* TestDiffMessage::mutable_m() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::protobuf_unittest::TestField* _msg = _internal_mutable_m();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.m)
  return _msg;
}
inline void TestDiffMessage::set_allocated_m(::protobuf_unittest::TestField* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.m_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.m_ = reinterpret_cast<::protobuf_unittest::TestField*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestDiffMessage.m)
}

// repeated int32 rv = 11;
inline int TestDiffMessage::_internal_rv_size() const {
  return _internal_rv().size();
}
inline int TestDiffMessage::rv_size() const {
  return _internal_rv_size();
}
inline void TestDiffMessage::clear_rv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rv_.Clear();
}
inline ::int32_t TestDiffMessage::rv(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.rv)
  return _internal_rv().Get(index);
}
inline void TestDiffMessage::set_rv(int index, ::int32_t value) {
  _internal_mutable_rv()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDiffMessage.rv)
}
inline void TestDiffMessage::add_rv(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rv()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDiffMessage.rv)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestDiffMessage::rv() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDiffMessage.rv)
  return _internal_rv();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestDiffMessage::mutable_rv()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDiffMessage.rv)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rv();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestDiffMessage::_internal_rv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rv_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestDiffMessage::_internal_mutable_rv() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rv_;
}

// repeated string rw = 10;
inline int TestDiffMessage::_internal_rw_size() const {
  return _internal_rw().size();
}
inline int TestDiffMessage::rw_size() const {
  return _internal_rw_size();
}
inline void TestDiffMessage::clear_rw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rw_.Clear();
}
inline std::string* TestDiffMessage::add_rw() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_rw()->Add();
  // @@protoc_insertion_point(field_add_mutable:protobuf_unittest.TestDiffMessage.rw)
  return _s;
}
inline const std::string& TestDiffMessage::rw(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.rw)
  return _internal_rw().Get(index);
}
inline std::string* TestDiffMessage::mutable_rw(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.rw)
  return _internal_mutable_rw()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestDiffMessage::set_rw(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_rw()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestDiffMessage.rw)
}
template <typename Arg_, typename... Args_>
inline void TestDiffMessage::add_rw(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_rw(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDiffMessage.rw)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestDiffMessage::rw() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDiffMessage.rw)
  return _internal_rw();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestDiffMessage::mutable_rw() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDiffMessage.rw)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rw();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestDiffMessage::_internal_rw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rw_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestDiffMessage::_internal_mutable_rw() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rw_;
}

// repeated .protobuf_unittest.TestField rm = 12 [deprecated = true];
inline int TestDiffMessage::_internal_rm_size() const {
  return _internal_rm().size();
}
inline int TestDiffMessage::rm_size() const {
  return _internal_rm_size();
}
inline void TestDiffMessage::clear_rm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rm_.Clear();
}
inline ::protobuf_unittest::TestField* TestDiffMessage::mutable_rm(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.rm)
  return _internal_mutable_rm()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>* TestDiffMessage::mutable_rm()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDiffMessage.rm)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rm();
}
inline const ::protobuf_unittest::TestField& TestDiffMessage::rm(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.rm)
  return _internal_rm().Get(index);
}
inline ::protobuf_unittest::TestField* TestDiffMessage::add_rm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_unittest::TestField* _add = _internal_mutable_rm()->Add();
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDiffMessage.rm)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>& TestDiffMessage::rm() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDiffMessage.rm)
  return _internal_rm();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>&
TestDiffMessage::_internal_rm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rm_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::TestField>*
TestDiffMessage::_internal_mutable_rm() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rm_;
}

// repeated .google.protobuf.Any rany = 16;
inline int TestDiffMessage::_internal_rany_size() const {
  return _internal_rany().size();
}
inline int TestDiffMessage::rany_size() const {
  return _internal_rany_size();
}
inline ::google::protobuf::Any* TestDiffMessage::mutable_rany(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestDiffMessage.rany)
  return _internal_mutable_rany()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* TestDiffMessage::mutable_rany()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.TestDiffMessage.rany)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rany();
}
inline const ::google::protobuf::Any& TestDiffMessage::rany(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestDiffMessage.rany)
  return _internal_rany().Get(index);
}
inline ::google::protobuf::Any* TestDiffMessage::add_rany() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_rany()->Add();
  // @@protoc_insertion_point(field_add:protobuf_unittest.TestDiffMessage.rany)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& TestDiffMessage::rany() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.TestDiffMessage.rany)
  return _internal_rany();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
TestDiffMessage::_internal_rany() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rany_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
TestDiffMessage::_internal_mutable_rany() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rany_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2fmessage_5fdifferencer_5funittest_2eproto_2epb_2eh
