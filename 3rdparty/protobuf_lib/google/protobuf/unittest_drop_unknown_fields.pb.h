// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/unittest_drop_unknown_fields.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fdrop_5funknown_5ffields_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fdrop_5funknown_5ffields_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fdrop_5funknown_5ffields_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2funittest_5fdrop_5funknown_5ffields_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fprotobuf_2funittest_5fdrop_5funknown_5ffields_2eproto;
namespace unittest_drop_unknown_fields {
class Foo;
struct FooDefaultTypeInternal;
extern FooDefaultTypeInternal _Foo_default_instance_;
class FooWithExtraFields;
struct FooWithExtraFieldsDefaultTypeInternal;
extern FooWithExtraFieldsDefaultTypeInternal _FooWithExtraFields_default_instance_;
}  // namespace unittest_drop_unknown_fields
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace unittest_drop_unknown_fields {
enum Foo_NestedEnum : int {
  Foo_NestedEnum_FOO = 0,
  Foo_NestedEnum_BAR = 1,
  Foo_NestedEnum_BAZ = 2,
  Foo_NestedEnum_Foo_NestedEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Foo_NestedEnum_Foo_NestedEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Foo_NestedEnum_IsValid(int value);
extern const uint32_t Foo_NestedEnum_internal_data_[];
constexpr Foo_NestedEnum Foo_NestedEnum_NestedEnum_MIN = static_cast<Foo_NestedEnum>(0);
constexpr Foo_NestedEnum Foo_NestedEnum_NestedEnum_MAX = static_cast<Foo_NestedEnum>(2);
constexpr int Foo_NestedEnum_NestedEnum_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Foo_NestedEnum_descriptor();
template <typename T>
const std::string& Foo_NestedEnum_Name(T value) {
  static_assert(std::is_same<T, Foo_NestedEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NestedEnum_Name().");
  return Foo_NestedEnum_Name(static_cast<Foo_NestedEnum>(value));
}
template <>
inline const std::string& Foo_NestedEnum_Name(Foo_NestedEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Foo_NestedEnum_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Foo_NestedEnum_Parse(absl::string_view name, Foo_NestedEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Foo_NestedEnum>(
      Foo_NestedEnum_descriptor(), name, value);
}
enum FooWithExtraFields_NestedEnum : int {
  FooWithExtraFields_NestedEnum_FOO = 0,
  FooWithExtraFields_NestedEnum_BAR = 1,
  FooWithExtraFields_NestedEnum_BAZ = 2,
  FooWithExtraFields_NestedEnum_MOO = 3,
  FooWithExtraFields_NestedEnum_FooWithExtraFields_NestedEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FooWithExtraFields_NestedEnum_FooWithExtraFields_NestedEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FooWithExtraFields_NestedEnum_IsValid(int value);
extern const uint32_t FooWithExtraFields_NestedEnum_internal_data_[];
constexpr FooWithExtraFields_NestedEnum FooWithExtraFields_NestedEnum_NestedEnum_MIN = static_cast<FooWithExtraFields_NestedEnum>(0);
constexpr FooWithExtraFields_NestedEnum FooWithExtraFields_NestedEnum_NestedEnum_MAX = static_cast<FooWithExtraFields_NestedEnum>(3);
constexpr int FooWithExtraFields_NestedEnum_NestedEnum_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
FooWithExtraFields_NestedEnum_descriptor();
template <typename T>
const std::string& FooWithExtraFields_NestedEnum_Name(T value) {
  static_assert(std::is_same<T, FooWithExtraFields_NestedEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NestedEnum_Name().");
  return FooWithExtraFields_NestedEnum_Name(static_cast<FooWithExtraFields_NestedEnum>(value));
}
template <>
inline const std::string& FooWithExtraFields_NestedEnum_Name(FooWithExtraFields_NestedEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FooWithExtraFields_NestedEnum_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool FooWithExtraFields_NestedEnum_Parse(absl::string_view name, FooWithExtraFields_NestedEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FooWithExtraFields_NestedEnum>(
      FooWithExtraFields_NestedEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class FooWithExtraFields final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:unittest_drop_unknown_fields.FooWithExtraFields) */ {
 public:
  inline FooWithExtraFields() : FooWithExtraFields(nullptr) {}
  ~FooWithExtraFields() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FooWithExtraFields(
      ::google::protobuf::internal::ConstantInitialized);

  inline FooWithExtraFields(const FooWithExtraFields& from) : FooWithExtraFields(nullptr, from) {}
  inline FooWithExtraFields(FooWithExtraFields&& from) noexcept
      : FooWithExtraFields(nullptr, std::move(from)) {}
  inline FooWithExtraFields& operator=(const FooWithExtraFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline FooWithExtraFields& operator=(FooWithExtraFields&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FooWithExtraFields& default_instance() {
    return *internal_default_instance();
  }
  static inline const FooWithExtraFields* internal_default_instance() {
    return reinterpret_cast<const FooWithExtraFields*>(
        &_FooWithExtraFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FooWithExtraFields& a, FooWithExtraFields& b) { a.Swap(&b); }
  inline void Swap(FooWithExtraFields* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FooWithExtraFields* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FooWithExtraFields* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FooWithExtraFields>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FooWithExtraFields& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FooWithExtraFields& from) { FooWithExtraFields::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FooWithExtraFields* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "unittest_drop_unknown_fields.FooWithExtraFields"; }

 protected:
  explicit FooWithExtraFields(::google::protobuf::Arena* arena);
  FooWithExtraFields(::google::protobuf::Arena* arena, const FooWithExtraFields& from);
  FooWithExtraFields(::google::protobuf::Arena* arena, FooWithExtraFields&& from) noexcept
      : FooWithExtraFields(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedEnum = FooWithExtraFields_NestedEnum;
  static constexpr NestedEnum FOO = FooWithExtraFields_NestedEnum_FOO;
  static constexpr NestedEnum BAR = FooWithExtraFields_NestedEnum_BAR;
  static constexpr NestedEnum BAZ = FooWithExtraFields_NestedEnum_BAZ;
  static constexpr NestedEnum MOO = FooWithExtraFields_NestedEnum_MOO;
  static inline bool NestedEnum_IsValid(int value) {
    return FooWithExtraFields_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN = FooWithExtraFields_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX = FooWithExtraFields_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE = FooWithExtraFields_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NestedEnum_descriptor() {
    return FooWithExtraFields_NestedEnum_descriptor();
  }
  template <typename T>
  static inline const std::string& NestedEnum_Name(T value) {
    return FooWithExtraFields_NestedEnum_Name(value);
  }
  static inline bool NestedEnum_Parse(absl::string_view name, NestedEnum* value) {
    return FooWithExtraFields_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kInt32ValueFieldNumber = 1,
    kEnumValueFieldNumber = 2,
    kExtraInt32ValueFieldNumber = 3,
  };
  // int32 int32_value = 1;
  void clear_int32_value() ;
  ::int32_t int32_value() const;
  void set_int32_value(::int32_t value);

  private:
  ::int32_t _internal_int32_value() const;
  void _internal_set_int32_value(::int32_t value);

  public:
  // .unittest_drop_unknown_fields.FooWithExtraFields.NestedEnum enum_value = 2;
  void clear_enum_value() ;
  ::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum enum_value() const;
  void set_enum_value(::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum value);

  private:
  ::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum _internal_enum_value() const;
  void _internal_set_enum_value(::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum value);

  public:
  // int32 extra_int32_value = 3;
  void clear_extra_int32_value() ;
  ::int32_t extra_int32_value() const;
  void set_extra_int32_value(::int32_t value);

  private:
  ::int32_t _internal_extra_int32_value() const;
  void _internal_set_extra_int32_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:unittest_drop_unknown_fields.FooWithExtraFields)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FooWithExtraFields_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FooWithExtraFields& from_msg);
    ::int32_t int32_value_;
    int enum_value_;
    ::int32_t extra_int32_value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fdrop_5funknown_5ffields_2eproto;
};
// -------------------------------------------------------------------

class Foo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:unittest_drop_unknown_fields.Foo) */ {
 public:
  inline Foo() : Foo(nullptr) {}
  ~Foo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Foo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Foo(const Foo& from) : Foo(nullptr, from) {}
  inline Foo(Foo&& from) noexcept
      : Foo(nullptr, std::move(from)) {}
  inline Foo& operator=(const Foo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Foo& operator=(Foo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Foo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Foo* internal_default_instance() {
    return reinterpret_cast<const Foo*>(
        &_Foo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Foo& a, Foo& b) { a.Swap(&b); }
  inline void Swap(Foo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Foo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Foo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Foo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Foo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Foo& from) { Foo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Foo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "unittest_drop_unknown_fields.Foo"; }

 protected:
  explicit Foo(::google::protobuf::Arena* arena);
  Foo(::google::protobuf::Arena* arena, const Foo& from);
  Foo(::google::protobuf::Arena* arena, Foo&& from) noexcept
      : Foo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedEnum = Foo_NestedEnum;
  static constexpr NestedEnum FOO = Foo_NestedEnum_FOO;
  static constexpr NestedEnum BAR = Foo_NestedEnum_BAR;
  static constexpr NestedEnum BAZ = Foo_NestedEnum_BAZ;
  static inline bool NestedEnum_IsValid(int value) {
    return Foo_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN = Foo_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX = Foo_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE = Foo_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NestedEnum_descriptor() {
    return Foo_NestedEnum_descriptor();
  }
  template <typename T>
  static inline const std::string& NestedEnum_Name(T value) {
    return Foo_NestedEnum_Name(value);
  }
  static inline bool NestedEnum_Parse(absl::string_view name, NestedEnum* value) {
    return Foo_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kInt32ValueFieldNumber = 1,
    kEnumValueFieldNumber = 2,
  };
  // int32 int32_value = 1;
  void clear_int32_value() ;
  ::int32_t int32_value() const;
  void set_int32_value(::int32_t value);

  private:
  ::int32_t _internal_int32_value() const;
  void _internal_set_int32_value(::int32_t value);

  public:
  // .unittest_drop_unknown_fields.Foo.NestedEnum enum_value = 2;
  void clear_enum_value() ;
  ::unittest_drop_unknown_fields::Foo_NestedEnum enum_value() const;
  void set_enum_value(::unittest_drop_unknown_fields::Foo_NestedEnum value);

  private:
  ::unittest_drop_unknown_fields::Foo_NestedEnum _internal_enum_value() const;
  void _internal_set_enum_value(::unittest_drop_unknown_fields::Foo_NestedEnum value);

  public:
  // @@protoc_insertion_point(class_scope:unittest_drop_unknown_fields.Foo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Foo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Foo& from_msg);
    ::int32_t int32_value_;
    int enum_value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fdrop_5funknown_5ffields_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Foo

// int32 int32_value = 1;
inline void Foo::clear_int32_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.int32_value_ = 0;
}
inline ::int32_t Foo::int32_value() const {
  // @@protoc_insertion_point(field_get:unittest_drop_unknown_fields.Foo.int32_value)
  return _internal_int32_value();
}
inline void Foo::set_int32_value(::int32_t value) {
  _internal_set_int32_value(value);
  // @@protoc_insertion_point(field_set:unittest_drop_unknown_fields.Foo.int32_value)
}
inline ::int32_t Foo::_internal_int32_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.int32_value_;
}
inline void Foo::_internal_set_int32_value(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.int32_value_ = value;
}

// .unittest_drop_unknown_fields.Foo.NestedEnum enum_value = 2;
inline void Foo::clear_enum_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_value_ = 0;
}
inline ::unittest_drop_unknown_fields::Foo_NestedEnum Foo::enum_value() const {
  // @@protoc_insertion_point(field_get:unittest_drop_unknown_fields.Foo.enum_value)
  return _internal_enum_value();
}
inline void Foo::set_enum_value(::unittest_drop_unknown_fields::Foo_NestedEnum value) {
  _internal_set_enum_value(value);
  // @@protoc_insertion_point(field_set:unittest_drop_unknown_fields.Foo.enum_value)
}
inline ::unittest_drop_unknown_fields::Foo_NestedEnum Foo::_internal_enum_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::unittest_drop_unknown_fields::Foo_NestedEnum>(_impl_.enum_value_);
}
inline void Foo::_internal_set_enum_value(::unittest_drop_unknown_fields::Foo_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_value_ = value;
}

// -------------------------------------------------------------------

// FooWithExtraFields

// int32 int32_value = 1;
inline void FooWithExtraFields::clear_int32_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.int32_value_ = 0;
}
inline ::int32_t FooWithExtraFields::int32_value() const {
  // @@protoc_insertion_point(field_get:unittest_drop_unknown_fields.FooWithExtraFields.int32_value)
  return _internal_int32_value();
}
inline void FooWithExtraFields::set_int32_value(::int32_t value) {
  _internal_set_int32_value(value);
  // @@protoc_insertion_point(field_set:unittest_drop_unknown_fields.FooWithExtraFields.int32_value)
}
inline ::int32_t FooWithExtraFields::_internal_int32_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.int32_value_;
}
inline void FooWithExtraFields::_internal_set_int32_value(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.int32_value_ = value;
}

// .unittest_drop_unknown_fields.FooWithExtraFields.NestedEnum enum_value = 2;
inline void FooWithExtraFields::clear_enum_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_value_ = 0;
}
inline ::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum FooWithExtraFields::enum_value() const {
  // @@protoc_insertion_point(field_get:unittest_drop_unknown_fields.FooWithExtraFields.enum_value)
  return _internal_enum_value();
}
inline void FooWithExtraFields::set_enum_value(::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum value) {
  _internal_set_enum_value(value);
  // @@protoc_insertion_point(field_set:unittest_drop_unknown_fields.FooWithExtraFields.enum_value)
}
inline ::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum FooWithExtraFields::_internal_enum_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum>(_impl_.enum_value_);
}
inline void FooWithExtraFields::_internal_set_enum_value(::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_value_ = value;
}

// int32 extra_int32_value = 3;
inline void FooWithExtraFields::clear_extra_int32_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extra_int32_value_ = 0;
}
inline ::int32_t FooWithExtraFields::extra_int32_value() const {
  // @@protoc_insertion_point(field_get:unittest_drop_unknown_fields.FooWithExtraFields.extra_int32_value)
  return _internal_extra_int32_value();
}
inline void FooWithExtraFields::set_extra_int32_value(::int32_t value) {
  _internal_set_extra_int32_value(value);
  // @@protoc_insertion_point(field_set:unittest_drop_unknown_fields.FooWithExtraFields.extra_int32_value)
}
inline ::int32_t FooWithExtraFields::_internal_extra_int32_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extra_int32_value_;
}
inline void FooWithExtraFields::_internal_set_extra_int32_value(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extra_int32_value_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace unittest_drop_unknown_fields


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::unittest_drop_unknown_fields::Foo_NestedEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::unittest_drop_unknown_fields::Foo_NestedEnum>() {
  return ::unittest_drop_unknown_fields::Foo_NestedEnum_descriptor();
}
template <>
struct is_proto_enum<::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum>() {
  return ::unittest_drop_unknown_fields::FooWithExtraFields_NestedEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fdrop_5funknown_5ffields_2eproto_2epb_2eh
