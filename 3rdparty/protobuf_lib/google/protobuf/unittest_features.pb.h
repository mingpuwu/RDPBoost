// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/unittest_features.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5ffeatures_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5ffeatures_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5ffeatures_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2funittest_5ffeatures_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fprotobuf_2funittest_5ffeatures_2eproto;
namespace pb {
class TestFeatures;
struct TestFeaturesDefaultTypeInternal;
extern TestFeaturesDefaultTypeInternal _TestFeatures_default_instance_;
class TestMessage;
struct TestMessageDefaultTypeInternal;
extern TestMessageDefaultTypeInternal _TestMessage_default_instance_;
class TestMessage_Nested;
struct TestMessage_NestedDefaultTypeInternal;
extern TestMessage_NestedDefaultTypeInternal _TestMessage_Nested_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb {
enum EnumFeature : int {
  TEST_ENUM_FEATURE_UNKNOWN = 0,
  VALUE1 = 1,
  VALUE2 = 2,
  VALUE3 = 3,
  VALUE4 = 4,
  VALUE5 = 5,
  VALUE6 = 6,
  VALUE7 = 7,
  VALUE8 = 8,
  VALUE9 = 9,
  VALUE10 = 10,
  VALUE11 = 11,
  VALUE12 = 12,
  VALUE13 = 13,
  VALUE14 = 14,
  VALUE15 = 15,
  VALUE_EMPTY_SUPPORT = 98,
  VALUE_FUTURE = 99,
};

bool EnumFeature_IsValid(int value);
extern const uint32_t EnumFeature_internal_data_[];
constexpr EnumFeature EnumFeature_MIN = static_cast<EnumFeature>(0);
constexpr EnumFeature EnumFeature_MAX = static_cast<EnumFeature>(99);
constexpr int EnumFeature_ARRAYSIZE = 99 + 1;
const ::google::protobuf::EnumDescriptor*
EnumFeature_descriptor();
template <typename T>
const std::string& EnumFeature_Name(T value) {
  static_assert(std::is_same<T, EnumFeature>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EnumFeature_Name().");
  return ::google::protobuf::internal::NameOfEnum(EnumFeature_descriptor(), value);
}
inline bool EnumFeature_Parse(absl::string_view name, EnumFeature* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumFeature>(
      EnumFeature_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TestMessage_Nested final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:pb.TestMessage.Nested) */ {
 public:
  inline TestMessage_Nested() : TestMessage_Nested(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessage_Nested(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMessage_Nested(const TestMessage_Nested& from) : TestMessage_Nested(nullptr, from) {}
  inline TestMessage_Nested(TestMessage_Nested&& from) noexcept
      : TestMessage_Nested(nullptr, std::move(from)) {}
  inline TestMessage_Nested& operator=(const TestMessage_Nested& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessage_Nested& operator=(TestMessage_Nested&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessage_Nested& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessage_Nested* internal_default_instance() {
    return reinterpret_cast<const TestMessage_Nested*>(
        &_TestMessage_Nested_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestMessage_Nested& a, TestMessage_Nested& b) { a.Swap(&b); }
  inline void Swap(TestMessage_Nested* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessage_Nested* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessage_Nested* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestMessage_Nested>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestMessage_Nested& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestMessage_Nested& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.TestMessage.Nested"; }

 protected:
  explicit TestMessage_Nested(::google::protobuf::Arena* arena);
  TestMessage_Nested(::google::protobuf::Arena* arena, const TestMessage_Nested& from);
  TestMessage_Nested(::google::protobuf::Arena* arena, TestMessage_Nested&& from) noexcept
      : TestMessage_Nested(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  static const int kTestNestedFieldNumber = 9997;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::google::protobuf::FeatureSet, ::google::protobuf::internal::MessageTypeTraits< ::pb::TestFeatures >, 11,
      false>
      test_nested;
  // @@protoc_insertion_point(class_scope:pb.TestMessage.Nested)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMessage_Nested_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMessage_Nested& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class TestMessage final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:pb.TestMessage) */ {
 public:
  inline TestMessage() : TestMessage(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMessage(const TestMessage& from) : TestMessage(nullptr, from) {}
  inline TestMessage(TestMessage&& from) noexcept
      : TestMessage(nullptr, std::move(from)) {}
  inline TestMessage& operator=(const TestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessage& operator=(TestMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessage* internal_default_instance() {
    return reinterpret_cast<const TestMessage*>(
        &_TestMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TestMessage& a, TestMessage& b) { a.Swap(&b); }
  inline void Swap(TestMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestMessage>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.TestMessage"; }

 protected:
  explicit TestMessage(::google::protobuf::Arena* arena);
  TestMessage(::google::protobuf::Arena* arena, const TestMessage& from);
  TestMessage(::google::protobuf::Arena* arena, TestMessage&& from) noexcept
      : TestMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Nested = TestMessage_Nested;

  // accessors -------------------------------------------------------
  static const int kTestMessageFieldNumber = 9998;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::google::protobuf::FeatureSet, ::google::protobuf::internal::MessageTypeTraits< ::pb::TestFeatures >, 11,
      false>
      test_message;
  // @@protoc_insertion_point(class_scope:pb.TestMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMessage& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class TestFeatures final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.TestFeatures) */ {
 public:
  inline TestFeatures() : TestFeatures(nullptr) {}
  ~TestFeatures() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestFeatures(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestFeatures(const TestFeatures& from) : TestFeatures(nullptr, from) {}
  inline TestFeatures(TestFeatures&& from) noexcept
      : TestFeatures(nullptr, std::move(from)) {}
  inline TestFeatures& operator=(const TestFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestFeatures& operator=(TestFeatures&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestFeatures& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestFeatures* internal_default_instance() {
    return reinterpret_cast<const TestFeatures*>(
        &_TestFeatures_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TestFeatures& a, TestFeatures& b) { a.Swap(&b); }
  inline void Swap(TestFeatures* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestFeatures* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestFeatures* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestFeatures>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestFeatures& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestFeatures& from) { TestFeatures::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestFeatures* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.TestFeatures"; }

 protected:
  explicit TestFeatures(::google::protobuf::Arena* arena);
  TestFeatures(::google::protobuf::Arena* arena, const TestFeatures& from);
  TestFeatures(::google::protobuf::Arena* arena, TestFeatures&& from) noexcept
      : TestFeatures(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileFeatureFieldNumber = 1,
    kExtensionRangeFeatureFieldNumber = 2,
    kMessageFeatureFieldNumber = 3,
    kFieldFeatureFieldNumber = 4,
    kOneofFeatureFieldNumber = 5,
    kEnumFeatureFieldNumber = 6,
    kEnumEntryFeatureFieldNumber = 7,
    kServiceFeatureFieldNumber = 8,
    kMethodFeatureFieldNumber = 9,
    kMultipleFeatureFieldNumber = 10,
    kBoolFieldFeatureFieldNumber = 11,
    kSourceFeatureFieldNumber = 15,
    kSourceFeature2FieldNumber = 16,
    kRemovedFeatureFieldNumber = 17,
    kFutureFeatureFieldNumber = 18,
    kLegacyFeatureFieldNumber = 19,
  };
  // optional .pb.EnumFeature file_feature = 1 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, edition_defaults = {
  bool has_file_feature() const;
  void clear_file_feature() ;
  ::pb::EnumFeature file_feature() const;
  void set_file_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_file_feature() const;
  void _internal_set_file_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature extension_range_feature = 2 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_EXTENSION_RANGE, edition_defaults = {
  bool has_extension_range_feature() const;
  void clear_extension_range_feature() ;
  ::pb::EnumFeature extension_range_feature() const;
  void set_extension_range_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_extension_range_feature() const;
  void _internal_set_extension_range_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature message_feature = 3 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_MESSAGE, edition_defaults = {
  bool has_message_feature() const;
  void clear_message_feature() ;
  ::pb::EnumFeature message_feature() const;
  void set_message_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_message_feature() const;
  void _internal_set_message_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature field_feature = 4 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FIELD, edition_defaults = {
  bool has_field_feature() const;
  void clear_field_feature() ;
  ::pb::EnumFeature field_feature() const;
  void set_field_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_field_feature() const;
  void _internal_set_field_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature oneof_feature = 5 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_ONEOF, edition_defaults = {
  bool has_oneof_feature() const;
  void clear_oneof_feature() ;
  ::pb::EnumFeature oneof_feature() const;
  void set_oneof_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_oneof_feature() const;
  void _internal_set_oneof_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature enum_feature = 6 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_ENUM, edition_defaults = {
  bool has_enum_feature() const;
  void clear_enum_feature() ;
  ::pb::EnumFeature enum_feature() const;
  void set_enum_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_enum_feature() const;
  void _internal_set_enum_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature enum_entry_feature = 7 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_ENUM_ENTRY, edition_defaults = {
  bool has_enum_entry_feature() const;
  void clear_enum_entry_feature() ;
  ::pb::EnumFeature enum_entry_feature() const;
  void set_enum_entry_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_enum_entry_feature() const;
  void _internal_set_enum_entry_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature service_feature = 8 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_SERVICE, edition_defaults = {
  bool has_service_feature() const;
  void clear_service_feature() ;
  ::pb::EnumFeature service_feature() const;
  void set_service_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_service_feature() const;
  void _internal_set_service_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature method_feature = 9 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_METHOD, edition_defaults = {
  bool has_method_feature() const;
  void clear_method_feature() ;
  ::pb::EnumFeature method_feature() const;
  void set_method_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_method_feature() const;
  void _internal_set_method_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature multiple_feature = 10 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, targets = TARGET_TYPE_MESSAGE, targets = TARGET_TYPE_ENUM, targets = TARGET_TYPE_ENUM_ENTRY, targets = TARGET_TYPE_SERVICE, targets = TARGET_TYPE_METHOD, targets = TARGET_TYPE_ONEOF, targets = TARGET_TYPE_EXTENSION_RANGE, edition_defaults = {
  bool has_multiple_feature() const;
  void clear_multiple_feature() ;
  ::pb::EnumFeature multiple_feature() const;
  void set_multiple_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_multiple_feature() const;
  void _internal_set_multiple_feature(::pb::EnumFeature value);

  public:
  // optional bool bool_field_feature = 11 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FIELD, edition_defaults = {
  bool has_bool_field_feature() const;
  void clear_bool_field_feature() ;
  bool bool_field_feature() const;
  void set_bool_field_feature(bool value);

  private:
  bool _internal_bool_field_feature() const;
  void _internal_set_bool_field_feature(bool value);

  public:
  // optional .pb.EnumFeature source_feature = 15 [retention = RETENTION_SOURCE, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, targets = TARGET_TYPE_MESSAGE, targets = TARGET_TYPE_ENUM, targets = TARGET_TYPE_ENUM_ENTRY, targets = TARGET_TYPE_SERVICE, targets = TARGET_TYPE_METHOD, targets = TARGET_TYPE_ONEOF, targets = TARGET_TYPE_EXTENSION_RANGE, edition_defaults = {
  bool has_source_feature() const;
  void clear_source_feature() ;
  ::pb::EnumFeature source_feature() const;
  void set_source_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_source_feature() const;
  void _internal_set_source_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature source_feature2 = 16 [retention = RETENTION_SOURCE, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, targets = TARGET_TYPE_MESSAGE, targets = TARGET_TYPE_ENUM, targets = TARGET_TYPE_ENUM_ENTRY, targets = TARGET_TYPE_SERVICE, targets = TARGET_TYPE_METHOD, targets = TARGET_TYPE_ONEOF, targets = TARGET_TYPE_EXTENSION_RANGE, edition_defaults = {
  bool has_source_feature2() const;
  void clear_source_feature2() ;
  ::pb::EnumFeature source_feature2() const;
  void set_source_feature2(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_source_feature2() const;
  void _internal_set_source_feature2(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature removed_feature = 17 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, edition_defaults = {
  bool has_removed_feature() const;
  void clear_removed_feature() ;
  ::pb::EnumFeature removed_feature() const;
  void set_removed_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_removed_feature() const;
  void _internal_set_removed_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature future_feature = 18 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, edition_defaults = {
  bool has_future_feature() const;
  void clear_future_feature() ;
  ::pb::EnumFeature future_feature() const;
  void set_future_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_future_feature() const;
  void _internal_set_future_feature(::pb::EnumFeature value);

  public:
  // optional .pb.EnumFeature legacy_feature = 19 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, edition_defaults = {
  bool has_legacy_feature() const;
  void clear_legacy_feature() ;
  ::pb::EnumFeature legacy_feature() const;
  void set_legacy_feature(::pb::EnumFeature value);

  private:
  ::pb::EnumFeature _internal_legacy_feature() const;
  void _internal_set_legacy_feature(::pb::EnumFeature value);

  public:
  // @@protoc_insertion_point(class_scope:pb.TestFeatures)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 16, 15,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestFeatures_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestFeatures& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int file_feature_;
    int extension_range_feature_;
    int message_feature_;
    int field_feature_;
    int oneof_feature_;
    int enum_feature_;
    int enum_entry_feature_;
    int service_feature_;
    int method_feature_;
    int multiple_feature_;
    bool bool_field_feature_;
    int source_feature_;
    int source_feature2_;
    int removed_feature_;
    int future_feature_;
    int legacy_feature_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5ffeatures_2eproto;
};

// ===================================================================



static const int kTestFieldNumber = 9999;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FeatureSet, ::google::protobuf::internal::MessageTypeTraits< ::pb::TestFeatures >, 11,
    false>
    test;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestMessage_Nested

// -------------------------------------------------------------------

// TestMessage

// -------------------------------------------------------------------

// TestFeatures

// optional .pb.EnumFeature file_feature = 1 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, edition_defaults = {
inline bool TestFeatures::has_file_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestFeatures::clear_file_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::pb::EnumFeature TestFeatures::file_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.file_feature)
  return _internal_file_feature();
}
inline void TestFeatures::set_file_feature(::pb::EnumFeature value) {
  _internal_set_file_feature(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.file_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_file_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.file_feature_);
}
inline void TestFeatures::_internal_set_file_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.file_feature_ = value;
}

// optional .pb.EnumFeature extension_range_feature = 2 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_EXTENSION_RANGE, edition_defaults = {
inline bool TestFeatures::has_extension_range_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestFeatures::clear_extension_range_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_range_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::pb::EnumFeature TestFeatures::extension_range_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.extension_range_feature)
  return _internal_extension_range_feature();
}
inline void TestFeatures::set_extension_range_feature(::pb::EnumFeature value) {
  _internal_set_extension_range_feature(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.extension_range_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_extension_range_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.extension_range_feature_);
}
inline void TestFeatures::_internal_set_extension_range_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.extension_range_feature_ = value;
}

// optional .pb.EnumFeature message_feature = 3 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_MESSAGE, edition_defaults = {
inline bool TestFeatures::has_message_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestFeatures::clear_message_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::pb::EnumFeature TestFeatures::message_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.message_feature)
  return _internal_message_feature();
}
inline void TestFeatures::set_message_feature(::pb::EnumFeature value) {
  _internal_set_message_feature(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.message_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_message_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.message_feature_);
}
inline void TestFeatures::_internal_set_message_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.message_feature_ = value;
}

// optional .pb.EnumFeature field_feature = 4 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FIELD, edition_defaults = {
inline bool TestFeatures::has_field_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestFeatures::clear_field_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::pb::EnumFeature TestFeatures::field_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.field_feature)
  return _internal_field_feature();
}
inline void TestFeatures::set_field_feature(::pb::EnumFeature value) {
  _internal_set_field_feature(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.field_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_field_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.field_feature_);
}
inline void TestFeatures::_internal_set_field_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.field_feature_ = value;
}

// optional .pb.EnumFeature oneof_feature = 5 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_ONEOF, edition_defaults = {
inline bool TestFeatures::has_oneof_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestFeatures::clear_oneof_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oneof_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::pb::EnumFeature TestFeatures::oneof_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.oneof_feature)
  return _internal_oneof_feature();
}
inline void TestFeatures::set_oneof_feature(::pb::EnumFeature value) {
  _internal_set_oneof_feature(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.oneof_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_oneof_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.oneof_feature_);
}
inline void TestFeatures::_internal_set_oneof_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.oneof_feature_ = value;
}

// optional .pb.EnumFeature enum_feature = 6 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_ENUM, edition_defaults = {
inline bool TestFeatures::has_enum_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestFeatures::clear_enum_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::pb::EnumFeature TestFeatures::enum_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.enum_feature)
  return _internal_enum_feature();
}
inline void TestFeatures::set_enum_feature(::pb::EnumFeature value) {
  _internal_set_enum_feature(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.enum_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_enum_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.enum_feature_);
}
inline void TestFeatures::_internal_set_enum_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.enum_feature_ = value;
}

// optional .pb.EnumFeature enum_entry_feature = 7 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_ENUM_ENTRY, edition_defaults = {
inline bool TestFeatures::has_enum_entry_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestFeatures::clear_enum_entry_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_entry_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::pb::EnumFeature TestFeatures::enum_entry_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.enum_entry_feature)
  return _internal_enum_entry_feature();
}
inline void TestFeatures::set_enum_entry_feature(::pb::EnumFeature value) {
  _internal_set_enum_entry_feature(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.enum_entry_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_enum_entry_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.enum_entry_feature_);
}
inline void TestFeatures::_internal_set_enum_entry_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.enum_entry_feature_ = value;
}

// optional .pb.EnumFeature service_feature = 8 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_SERVICE, edition_defaults = {
inline bool TestFeatures::has_service_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TestFeatures::clear_service_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::pb::EnumFeature TestFeatures::service_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.service_feature)
  return _internal_service_feature();
}
inline void TestFeatures::set_service_feature(::pb::EnumFeature value) {
  _internal_set_service_feature(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.service_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_service_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.service_feature_);
}
inline void TestFeatures::_internal_set_service_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.service_feature_ = value;
}

// optional .pb.EnumFeature method_feature = 9 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_METHOD, edition_defaults = {
inline bool TestFeatures::has_method_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void TestFeatures::clear_method_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::pb::EnumFeature TestFeatures::method_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.method_feature)
  return _internal_method_feature();
}
inline void TestFeatures::set_method_feature(::pb::EnumFeature value) {
  _internal_set_method_feature(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.method_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_method_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.method_feature_);
}
inline void TestFeatures::_internal_set_method_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.method_feature_ = value;
}

// optional .pb.EnumFeature multiple_feature = 10 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, targets = TARGET_TYPE_MESSAGE, targets = TARGET_TYPE_ENUM, targets = TARGET_TYPE_ENUM_ENTRY, targets = TARGET_TYPE_SERVICE, targets = TARGET_TYPE_METHOD, targets = TARGET_TYPE_ONEOF, targets = TARGET_TYPE_EXTENSION_RANGE, edition_defaults = {
inline bool TestFeatures::has_multiple_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void TestFeatures::clear_multiple_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multiple_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::pb::EnumFeature TestFeatures::multiple_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.multiple_feature)
  return _internal_multiple_feature();
}
inline void TestFeatures::set_multiple_feature(::pb::EnumFeature value) {
  _internal_set_multiple_feature(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.multiple_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_multiple_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.multiple_feature_);
}
inline void TestFeatures::_internal_set_multiple_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.multiple_feature_ = value;
}

// optional bool bool_field_feature = 11 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FIELD, edition_defaults = {
inline bool TestFeatures::has_bool_field_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void TestFeatures::clear_bool_field_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bool_field_feature_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool TestFeatures::bool_field_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.bool_field_feature)
  return _internal_bool_field_feature();
}
inline void TestFeatures::set_bool_field_feature(bool value) {
  _internal_set_bool_field_feature(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.bool_field_feature)
}
inline bool TestFeatures::_internal_bool_field_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bool_field_feature_;
}
inline void TestFeatures::_internal_set_bool_field_feature(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bool_field_feature_ = value;
}

// optional .pb.EnumFeature source_feature = 15 [retention = RETENTION_SOURCE, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, targets = TARGET_TYPE_MESSAGE, targets = TARGET_TYPE_ENUM, targets = TARGET_TYPE_ENUM_ENTRY, targets = TARGET_TYPE_SERVICE, targets = TARGET_TYPE_METHOD, targets = TARGET_TYPE_ONEOF, targets = TARGET_TYPE_EXTENSION_RANGE, edition_defaults = {
inline bool TestFeatures::has_source_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void TestFeatures::clear_source_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::pb::EnumFeature TestFeatures::source_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.source_feature)
  return _internal_source_feature();
}
inline void TestFeatures::set_source_feature(::pb::EnumFeature value) {
  _internal_set_source_feature(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.source_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_source_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.source_feature_);
}
inline void TestFeatures::_internal_set_source_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.source_feature_ = value;
}

// optional .pb.EnumFeature source_feature2 = 16 [retention = RETENTION_SOURCE, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, targets = TARGET_TYPE_MESSAGE, targets = TARGET_TYPE_ENUM, targets = TARGET_TYPE_ENUM_ENTRY, targets = TARGET_TYPE_SERVICE, targets = TARGET_TYPE_METHOD, targets = TARGET_TYPE_ONEOF, targets = TARGET_TYPE_EXTENSION_RANGE, edition_defaults = {
inline bool TestFeatures::has_source_feature2() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void TestFeatures::clear_source_feature2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_feature2_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::pb::EnumFeature TestFeatures::source_feature2() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.source_feature2)
  return _internal_source_feature2();
}
inline void TestFeatures::set_source_feature2(::pb::EnumFeature value) {
  _internal_set_source_feature2(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.source_feature2)
}
inline ::pb::EnumFeature TestFeatures::_internal_source_feature2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.source_feature2_);
}
inline void TestFeatures::_internal_set_source_feature2(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.source_feature2_ = value;
}

// optional .pb.EnumFeature removed_feature = 17 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, edition_defaults = {
inline bool TestFeatures::has_removed_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void TestFeatures::clear_removed_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.removed_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::pb::EnumFeature TestFeatures::removed_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.removed_feature)
  return _internal_removed_feature();
}
inline void TestFeatures::set_removed_feature(::pb::EnumFeature value) {
  _internal_set_removed_feature(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.removed_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_removed_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.removed_feature_);
}
inline void TestFeatures::_internal_set_removed_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.removed_feature_ = value;
}

// optional .pb.EnumFeature future_feature = 18 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, edition_defaults = {
inline bool TestFeatures::has_future_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void TestFeatures::clear_future_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.future_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::pb::EnumFeature TestFeatures::future_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.future_feature)
  return _internal_future_feature();
}
inline void TestFeatures::set_future_feature(::pb::EnumFeature value) {
  _internal_set_future_feature(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.future_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_future_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.future_feature_);
}
inline void TestFeatures::_internal_set_future_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.future_feature_ = value;
}

// optional .pb.EnumFeature legacy_feature = 19 [retention = RETENTION_RUNTIME, targets = TARGET_TYPE_FILE, targets = TARGET_TYPE_FIELD, edition_defaults = {
inline bool TestFeatures::has_legacy_feature() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void TestFeatures::clear_legacy_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_feature_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::pb::EnumFeature TestFeatures::legacy_feature() const {
  // @@protoc_insertion_point(field_get:pb.TestFeatures.legacy_feature)
  return _internal_legacy_feature();
}
inline void TestFeatures::set_legacy_feature(::pb::EnumFeature value) {
  _internal_set_legacy_feature(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:pb.TestFeatures.legacy_feature)
}
inline ::pb::EnumFeature TestFeatures::_internal_legacy_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::EnumFeature>(_impl_.legacy_feature_);
}
inline void TestFeatures::_internal_set_legacy_feature(::pb::EnumFeature value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::pb::EnumFeature_IsValid(value));
  _impl_.legacy_feature_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::pb::EnumFeature> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::pb::EnumFeature>() {
  return ::pb::EnumFeature_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5ffeatures_2eproto_2epb_2eh
