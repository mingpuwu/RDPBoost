// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/compiler/cpp/test_large_enum_value.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fcompiler_2fcpp_2ftest_5flarge_5fenum_5fvalue_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fcompiler_2fcpp_2ftest_5flarge_5fenum_5fvalue_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fcompiler_2fcpp_2ftest_5flarge_5fenum_5fvalue_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2fcompiler_2fcpp_2ftest_5flarge_5fenum_5fvalue_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fprotobuf_2fcompiler_2fcpp_2ftest_5flarge_5fenum_5fvalue_2eproto;
namespace protobuf_unittest {
class TestLargeEnumValue;
struct TestLargeEnumValueDefaultTypeInternal;
extern TestLargeEnumValueDefaultTypeInternal _TestLargeEnumValue_default_instance_;
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf_unittest {
enum TestLargeEnumValue_EnumWithLargeValue : int {
  TestLargeEnumValue_EnumWithLargeValue_VALUE_1 = 1,
  TestLargeEnumValue_EnumWithLargeValue_VALUE_MAX = 2147483647,
};

bool TestLargeEnumValue_EnumWithLargeValue_IsValid(int value);
extern const uint32_t TestLargeEnumValue_EnumWithLargeValue_internal_data_[];
constexpr TestLargeEnumValue_EnumWithLargeValue TestLargeEnumValue_EnumWithLargeValue_EnumWithLargeValue_MIN = static_cast<TestLargeEnumValue_EnumWithLargeValue>(1);
constexpr TestLargeEnumValue_EnumWithLargeValue TestLargeEnumValue_EnumWithLargeValue_EnumWithLargeValue_MAX = static_cast<TestLargeEnumValue_EnumWithLargeValue>(2147483647);
const ::google::protobuf::EnumDescriptor*
TestLargeEnumValue_EnumWithLargeValue_descriptor();
template <typename T>
const std::string& TestLargeEnumValue_EnumWithLargeValue_Name(T value) {
  static_assert(std::is_same<T, TestLargeEnumValue_EnumWithLargeValue>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EnumWithLargeValue_Name().");
  return ::google::protobuf::internal::NameOfEnum(TestLargeEnumValue_EnumWithLargeValue_descriptor(), value);
}
inline bool TestLargeEnumValue_EnumWithLargeValue_Parse(absl::string_view name, TestLargeEnumValue_EnumWithLargeValue* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestLargeEnumValue_EnumWithLargeValue>(
      TestLargeEnumValue_EnumWithLargeValue_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TestLargeEnumValue final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:protobuf_unittest.TestLargeEnumValue) */ {
 public:
  inline TestLargeEnumValue() : TestLargeEnumValue(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestLargeEnumValue(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestLargeEnumValue(const TestLargeEnumValue& from) : TestLargeEnumValue(nullptr, from) {}
  inline TestLargeEnumValue(TestLargeEnumValue&& from) noexcept
      : TestLargeEnumValue(nullptr, std::move(from)) {}
  inline TestLargeEnumValue& operator=(const TestLargeEnumValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestLargeEnumValue& operator=(TestLargeEnumValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestLargeEnumValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestLargeEnumValue* internal_default_instance() {
    return reinterpret_cast<const TestLargeEnumValue*>(
        &_TestLargeEnumValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestLargeEnumValue& a, TestLargeEnumValue& b) { a.Swap(&b); }
  inline void Swap(TestLargeEnumValue* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestLargeEnumValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestLargeEnumValue* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestLargeEnumValue>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestLargeEnumValue& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestLargeEnumValue& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_unittest.TestLargeEnumValue"; }

 protected:
  explicit TestLargeEnumValue(::google::protobuf::Arena* arena);
  TestLargeEnumValue(::google::protobuf::Arena* arena, const TestLargeEnumValue& from);
  TestLargeEnumValue(::google::protobuf::Arena* arena, TestLargeEnumValue&& from) noexcept
      : TestLargeEnumValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using EnumWithLargeValue = TestLargeEnumValue_EnumWithLargeValue;
  static constexpr EnumWithLargeValue VALUE_1 = TestLargeEnumValue_EnumWithLargeValue_VALUE_1;
  static constexpr EnumWithLargeValue VALUE_MAX = TestLargeEnumValue_EnumWithLargeValue_VALUE_MAX;
  static inline bool EnumWithLargeValue_IsValid(int value) {
    return TestLargeEnumValue_EnumWithLargeValue_IsValid(value);
  }
  static constexpr EnumWithLargeValue EnumWithLargeValue_MIN = TestLargeEnumValue_EnumWithLargeValue_EnumWithLargeValue_MIN;
  static constexpr EnumWithLargeValue EnumWithLargeValue_MAX = TestLargeEnumValue_EnumWithLargeValue_EnumWithLargeValue_MAX;
  static inline const ::google::protobuf::EnumDescriptor* EnumWithLargeValue_descriptor() {
    return TestLargeEnumValue_EnumWithLargeValue_descriptor();
  }
  template <typename T>
  static inline const std::string& EnumWithLargeValue_Name(T value) {
    return TestLargeEnumValue_EnumWithLargeValue_Name(value);
  }
  static inline bool EnumWithLargeValue_Parse(absl::string_view name, EnumWithLargeValue* value) {
    return TestLargeEnumValue_EnumWithLargeValue_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestLargeEnumValue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestLargeEnumValue_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestLargeEnumValue& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fcompiler_2fcpp_2ftest_5flarge_5fenum_5fvalue_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestLargeEnumValue

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::protobuf_unittest::TestLargeEnumValue_EnumWithLargeValue> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::protobuf_unittest::TestLargeEnumValue_EnumWithLargeValue>() {
  return ::protobuf_unittest::TestLargeEnumValue_EnumWithLargeValue_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fcompiler_2fcpp_2ftest_5flarge_5fenum_5fvalue_2eproto_2epb_2eh
