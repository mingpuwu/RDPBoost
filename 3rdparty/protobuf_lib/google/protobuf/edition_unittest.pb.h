// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/edition_unittest.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fedition_5funittest_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fedition_5funittest_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "absl/strings/cord.h"
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/cpp_features.pb.h"
#include "google/protobuf/unittest_import.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fedition_5funittest_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fprotobuf_2fedition_5funittest_2eproto;
namespace edition_unittest {
class BadFieldNames;
struct BadFieldNamesDefaultTypeInternal;
extern BadFieldNamesDefaultTypeInternal _BadFieldNames_default_instance_;
class BarRequest;
struct BarRequestDefaultTypeInternal;
extern BarRequestDefaultTypeInternal _BarRequest_default_instance_;
class BarResponse;
struct BarResponseDefaultTypeInternal;
extern BarResponseDefaultTypeInternal _BarResponse_default_instance_;
class BoolMessage;
struct BoolMessageDefaultTypeInternal;
extern BoolMessageDefaultTypeInternal _BoolMessage_default_instance_;
class BoolParseTester;
struct BoolParseTesterDefaultTypeInternal;
extern BoolParseTesterDefaultTypeInternal _BoolParseTester_default_instance_;
class EnumParseTester;
struct EnumParseTesterDefaultTypeInternal;
extern EnumParseTesterDefaultTypeInternal _EnumParseTester_default_instance_;
class EnumsForBenchmark;
struct EnumsForBenchmarkDefaultTypeInternal;
extern EnumsForBenchmarkDefaultTypeInternal _EnumsForBenchmark_default_instance_;
class FooClientMessage;
struct FooClientMessageDefaultTypeInternal;
extern FooClientMessageDefaultTypeInternal _FooClientMessage_default_instance_;
class FooRequest;
struct FooRequestDefaultTypeInternal;
extern FooRequestDefaultTypeInternal _FooRequest_default_instance_;
class FooResponse;
struct FooResponseDefaultTypeInternal;
extern FooResponseDefaultTypeInternal _FooResponse_default_instance_;
class FooServerMessage;
struct FooServerMessageDefaultTypeInternal;
extern FooServerMessageDefaultTypeInternal _FooServerMessage_default_instance_;
class ForeignMessage;
struct ForeignMessageDefaultTypeInternal;
extern ForeignMessageDefaultTypeInternal _ForeignMessage_default_instance_;
class InlinedStringIdxRegressionProto;
struct InlinedStringIdxRegressionProtoDefaultTypeInternal;
extern InlinedStringIdxRegressionProtoDefaultTypeInternal _InlinedStringIdxRegressionProto_default_instance_;
class Int32Message;
struct Int32MessageDefaultTypeInternal;
extern Int32MessageDefaultTypeInternal _Int32Message_default_instance_;
class Int32ParseTester;
struct Int32ParseTesterDefaultTypeInternal;
extern Int32ParseTesterDefaultTypeInternal _Int32ParseTester_default_instance_;
class Int64Message;
struct Int64MessageDefaultTypeInternal;
extern Int64MessageDefaultTypeInternal _Int64Message_default_instance_;
class Int64ParseTester;
struct Int64ParseTesterDefaultTypeInternal;
extern Int64ParseTesterDefaultTypeInternal _Int64ParseTester_default_instance_;
class ManyOptionalString;
struct ManyOptionalStringDefaultTypeInternal;
extern ManyOptionalStringDefaultTypeInternal _ManyOptionalString_default_instance_;
class MoreBytes;
struct MoreBytesDefaultTypeInternal;
extern MoreBytesDefaultTypeInternal _MoreBytes_default_instance_;
class MoreString;
struct MoreStringDefaultTypeInternal;
extern MoreStringDefaultTypeInternal _MoreString_default_instance_;
class NestedTestAllTypes;
struct NestedTestAllTypesDefaultTypeInternal;
extern NestedTestAllTypesDefaultTypeInternal _NestedTestAllTypes_default_instance_;
class OneBytes;
struct OneBytesDefaultTypeInternal;
extern OneBytesDefaultTypeInternal _OneBytes_default_instance_;
class OneString;
struct OneStringDefaultTypeInternal;
extern OneStringDefaultTypeInternal _OneString_default_instance_;
class OptionalGroup_extension;
struct OptionalGroup_extensionDefaultTypeInternal;
extern OptionalGroup_extensionDefaultTypeInternal _OptionalGroup_extension_default_instance_;
class RedactedFields;
struct RedactedFieldsDefaultTypeInternal;
extern RedactedFieldsDefaultTypeInternal _RedactedFields_default_instance_;
class RedactedFields_MapRedactedStringEntry_DoNotUse;
struct RedactedFields_MapRedactedStringEntry_DoNotUseDefaultTypeInternal;
extern RedactedFields_MapRedactedStringEntry_DoNotUseDefaultTypeInternal _RedactedFields_MapRedactedStringEntry_DoNotUse_default_instance_;
class RedactedFields_MapUnredactedStringEntry_DoNotUse;
struct RedactedFields_MapUnredactedStringEntry_DoNotUseDefaultTypeInternal;
extern RedactedFields_MapUnredactedStringEntry_DoNotUseDefaultTypeInternal _RedactedFields_MapUnredactedStringEntry_DoNotUse_default_instance_;
class RepeatedGroup_extension;
struct RepeatedGroup_extensionDefaultTypeInternal;
extern RepeatedGroup_extensionDefaultTypeInternal _RepeatedGroup_extension_default_instance_;
class SparseEnumMessage;
struct SparseEnumMessageDefaultTypeInternal;
extern SparseEnumMessageDefaultTypeInternal _SparseEnumMessage_default_instance_;
class StringParseTester;
struct StringParseTesterDefaultTypeInternal;
extern StringParseTesterDefaultTypeInternal _StringParseTester_default_instance_;
class TestAllExtensions;
struct TestAllExtensionsDefaultTypeInternal;
extern TestAllExtensionsDefaultTypeInternal _TestAllExtensions_default_instance_;
class TestAllTypes;
struct TestAllTypesDefaultTypeInternal;
extern TestAllTypesDefaultTypeInternal _TestAllTypes_default_instance_;
class TestAllTypes_NestedMessage;
struct TestAllTypes_NestedMessageDefaultTypeInternal;
extern TestAllTypes_NestedMessageDefaultTypeInternal _TestAllTypes_NestedMessage_default_instance_;
class TestAllTypes_OptionalGroup;
struct TestAllTypes_OptionalGroupDefaultTypeInternal;
extern TestAllTypes_OptionalGroupDefaultTypeInternal _TestAllTypes_OptionalGroup_default_instance_;
class TestAllTypes_RepeatedGroup;
struct TestAllTypes_RepeatedGroupDefaultTypeInternal;
extern TestAllTypes_RepeatedGroupDefaultTypeInternal _TestAllTypes_RepeatedGroup_default_instance_;
class TestCamelCaseFieldNames;
struct TestCamelCaseFieldNamesDefaultTypeInternal;
extern TestCamelCaseFieldNamesDefaultTypeInternal _TestCamelCaseFieldNames_default_instance_;
class TestChildExtension;
struct TestChildExtensionDefaultTypeInternal;
extern TestChildExtensionDefaultTypeInternal _TestChildExtension_default_instance_;
class TestChildExtensionData;
struct TestChildExtensionDataDefaultTypeInternal;
extern TestChildExtensionDataDefaultTypeInternal _TestChildExtensionData_default_instance_;
class TestChildExtensionData_NestedTestAllExtensionsData;
struct TestChildExtensionData_NestedTestAllExtensionsDataDefaultTypeInternal;
extern TestChildExtensionData_NestedTestAllExtensionsDataDefaultTypeInternal _TestChildExtensionData_NestedTestAllExtensionsData_default_instance_;
class TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions;
struct TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsDefaultTypeInternal;
extern TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsDefaultTypeInternal _TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions_default_instance_;
class TestCommentInjectionMessage;
struct TestCommentInjectionMessageDefaultTypeInternal;
extern TestCommentInjectionMessageDefaultTypeInternal _TestCommentInjectionMessage_default_instance_;
class TestCord;
struct TestCordDefaultTypeInternal;
extern TestCordDefaultTypeInternal _TestCord_default_instance_;
class TestDeprecatedFields;
struct TestDeprecatedFieldsDefaultTypeInternal;
extern TestDeprecatedFieldsDefaultTypeInternal _TestDeprecatedFields_default_instance_;
class TestDeprecatedMessage;
struct TestDeprecatedMessageDefaultTypeInternal;
extern TestDeprecatedMessageDefaultTypeInternal _TestDeprecatedMessage_default_instance_;
class TestDupFieldNumber;
struct TestDupFieldNumberDefaultTypeInternal;
extern TestDupFieldNumberDefaultTypeInternal _TestDupFieldNumber_default_instance_;
class TestDupFieldNumber_Bar;
struct TestDupFieldNumber_BarDefaultTypeInternal;
extern TestDupFieldNumber_BarDefaultTypeInternal _TestDupFieldNumber_Bar_default_instance_;
class TestDupFieldNumber_Foo;
struct TestDupFieldNumber_FooDefaultTypeInternal;
extern TestDupFieldNumber_FooDefaultTypeInternal _TestDupFieldNumber_Foo_default_instance_;
class TestDynamicExtensions;
struct TestDynamicExtensionsDefaultTypeInternal;
extern TestDynamicExtensionsDefaultTypeInternal _TestDynamicExtensions_default_instance_;
class TestDynamicExtensions_DynamicMessageType;
struct TestDynamicExtensions_DynamicMessageTypeDefaultTypeInternal;
extern TestDynamicExtensions_DynamicMessageTypeDefaultTypeInternal _TestDynamicExtensions_DynamicMessageType_default_instance_;
class TestEagerMaybeLazy;
struct TestEagerMaybeLazyDefaultTypeInternal;
extern TestEagerMaybeLazyDefaultTypeInternal _TestEagerMaybeLazy_default_instance_;
class TestEagerMaybeLazy_NestedMessage;
struct TestEagerMaybeLazy_NestedMessageDefaultTypeInternal;
extern TestEagerMaybeLazy_NestedMessageDefaultTypeInternal _TestEagerMaybeLazy_NestedMessage_default_instance_;
class TestEagerMessage;
struct TestEagerMessageDefaultTypeInternal;
extern TestEagerMessageDefaultTypeInternal _TestEagerMessage_default_instance_;
class TestEmptyMessage;
struct TestEmptyMessageDefaultTypeInternal;
extern TestEmptyMessageDefaultTypeInternal _TestEmptyMessage_default_instance_;
class TestEmptyMessageWithExtensions;
struct TestEmptyMessageWithExtensionsDefaultTypeInternal;
extern TestEmptyMessageWithExtensionsDefaultTypeInternal _TestEmptyMessageWithExtensions_default_instance_;
class TestExtensionInsideTable;
struct TestExtensionInsideTableDefaultTypeInternal;
extern TestExtensionInsideTableDefaultTypeInternal _TestExtensionInsideTable_default_instance_;
class TestExtensionOrderings1;
struct TestExtensionOrderings1DefaultTypeInternal;
extern TestExtensionOrderings1DefaultTypeInternal _TestExtensionOrderings1_default_instance_;
class TestExtensionOrderings2;
struct TestExtensionOrderings2DefaultTypeInternal;
extern TestExtensionOrderings2DefaultTypeInternal _TestExtensionOrderings2_default_instance_;
class TestExtensionOrderings2_TestExtensionOrderings3;
struct TestExtensionOrderings2_TestExtensionOrderings3DefaultTypeInternal;
extern TestExtensionOrderings2_TestExtensionOrderings3DefaultTypeInternal _TestExtensionOrderings2_TestExtensionOrderings3_default_instance_;
class TestExtensionRangeSerialize;
struct TestExtensionRangeSerializeDefaultTypeInternal;
extern TestExtensionRangeSerializeDefaultTypeInternal _TestExtensionRangeSerialize_default_instance_;
class TestExtremeDefaultValues;
struct TestExtremeDefaultValuesDefaultTypeInternal;
extern TestExtremeDefaultValuesDefaultTypeInternal _TestExtremeDefaultValues_default_instance_;
class TestFieldOrderings;
struct TestFieldOrderingsDefaultTypeInternal;
extern TestFieldOrderingsDefaultTypeInternal _TestFieldOrderings_default_instance_;
class TestFieldOrderings_NestedMessage;
struct TestFieldOrderings_NestedMessageDefaultTypeInternal;
extern TestFieldOrderings_NestedMessageDefaultTypeInternal _TestFieldOrderings_NestedMessage_default_instance_;
class TestForeignNested;
struct TestForeignNestedDefaultTypeInternal;
extern TestForeignNestedDefaultTypeInternal _TestForeignNested_default_instance_;
class TestGroup;
struct TestGroupDefaultTypeInternal;
extern TestGroupDefaultTypeInternal _TestGroup_default_instance_;
class TestGroupExtension;
struct TestGroupExtensionDefaultTypeInternal;
extern TestGroupExtensionDefaultTypeInternal _TestGroupExtension_default_instance_;
class TestGroup_OptionalGroup;
struct TestGroup_OptionalGroupDefaultTypeInternal;
extern TestGroup_OptionalGroupDefaultTypeInternal _TestGroup_OptionalGroup_default_instance_;
class TestHugeFieldNumbers;
struct TestHugeFieldNumbersDefaultTypeInternal;
extern TestHugeFieldNumbersDefaultTypeInternal _TestHugeFieldNumbers_default_instance_;
class TestHugeFieldNumbers_OptionalGroup;
struct TestHugeFieldNumbers_OptionalGroupDefaultTypeInternal;
extern TestHugeFieldNumbers_OptionalGroupDefaultTypeInternal _TestHugeFieldNumbers_OptionalGroup_default_instance_;
class TestHugeFieldNumbers_StringStringMapEntry_DoNotUse;
struct TestHugeFieldNumbers_StringStringMapEntry_DoNotUseDefaultTypeInternal;
extern TestHugeFieldNumbers_StringStringMapEntry_DoNotUseDefaultTypeInternal _TestHugeFieldNumbers_StringStringMapEntry_DoNotUse_default_instance_;
class TestIsInitialized;
struct TestIsInitializedDefaultTypeInternal;
extern TestIsInitializedDefaultTypeInternal _TestIsInitialized_default_instance_;
class TestIsInitialized_SubMessage;
struct TestIsInitialized_SubMessageDefaultTypeInternal;
extern TestIsInitialized_SubMessageDefaultTypeInternal _TestIsInitialized_SubMessage_default_instance_;
class TestIsInitialized_SubMessage_SubGroup;
struct TestIsInitialized_SubMessage_SubGroupDefaultTypeInternal;
extern TestIsInitialized_SubMessage_SubGroupDefaultTypeInternal _TestIsInitialized_SubMessage_SubGroup_default_instance_;
class TestJsonName;
struct TestJsonNameDefaultTypeInternal;
extern TestJsonNameDefaultTypeInternal _TestJsonName_default_instance_;
class TestLazyMessage;
struct TestLazyMessageDefaultTypeInternal;
extern TestLazyMessageDefaultTypeInternal _TestLazyMessage_default_instance_;
class TestLazyMessageRepeated;
struct TestLazyMessageRepeatedDefaultTypeInternal;
extern TestLazyMessageRepeatedDefaultTypeInternal _TestLazyMessageRepeated_default_instance_;
class TestMergeException;
struct TestMergeExceptionDefaultTypeInternal;
extern TestMergeExceptionDefaultTypeInternal _TestMergeException_default_instance_;
class TestMessageSize;
struct TestMessageSizeDefaultTypeInternal;
extern TestMessageSizeDefaultTypeInternal _TestMessageSize_default_instance_;
class TestMessageWithManyRepeatedPtrFields;
struct TestMessageWithManyRepeatedPtrFieldsDefaultTypeInternal;
extern TestMessageWithManyRepeatedPtrFieldsDefaultTypeInternal _TestMessageWithManyRepeatedPtrFields_default_instance_;
class TestMixedFieldsAndExtensions;
struct TestMixedFieldsAndExtensionsDefaultTypeInternal;
extern TestMixedFieldsAndExtensionsDefaultTypeInternal _TestMixedFieldsAndExtensions_default_instance_;
class TestMultipleExtensionRanges;
struct TestMultipleExtensionRangesDefaultTypeInternal;
extern TestMultipleExtensionRangesDefaultTypeInternal _TestMultipleExtensionRanges_default_instance_;
class TestMutualRecursionA;
struct TestMutualRecursionADefaultTypeInternal;
extern TestMutualRecursionADefaultTypeInternal _TestMutualRecursionA_default_instance_;
class TestMutualRecursionA_SubGroup;
struct TestMutualRecursionA_SubGroupDefaultTypeInternal;
extern TestMutualRecursionA_SubGroupDefaultTypeInternal _TestMutualRecursionA_SubGroup_default_instance_;
class TestMutualRecursionA_SubGroupR;
struct TestMutualRecursionA_SubGroupRDefaultTypeInternal;
extern TestMutualRecursionA_SubGroupRDefaultTypeInternal _TestMutualRecursionA_SubGroupR_default_instance_;
class TestMutualRecursionA_SubMessage;
struct TestMutualRecursionA_SubMessageDefaultTypeInternal;
extern TestMutualRecursionA_SubMessageDefaultTypeInternal _TestMutualRecursionA_SubMessage_default_instance_;
class TestMutualRecursionB;
struct TestMutualRecursionBDefaultTypeInternal;
extern TestMutualRecursionBDefaultTypeInternal _TestMutualRecursionB_default_instance_;
class TestNestedChildExtension;
struct TestNestedChildExtensionDefaultTypeInternal;
extern TestNestedChildExtensionDefaultTypeInternal _TestNestedChildExtension_default_instance_;
class TestNestedChildExtensionData;
struct TestNestedChildExtensionDataDefaultTypeInternal;
extern TestNestedChildExtensionDataDefaultTypeInternal _TestNestedChildExtensionData_default_instance_;
class TestNestedExtension;
struct TestNestedExtensionDefaultTypeInternal;
extern TestNestedExtensionDefaultTypeInternal _TestNestedExtension_default_instance_;
class TestNestedExtension_OptionalGroup_extension;
struct TestNestedExtension_OptionalGroup_extensionDefaultTypeInternal;
extern TestNestedExtension_OptionalGroup_extensionDefaultTypeInternal _TestNestedExtension_OptionalGroup_extension_default_instance_;
class TestNestedGroupExtensionInnerExtension;
struct TestNestedGroupExtensionInnerExtensionDefaultTypeInternal;
extern TestNestedGroupExtensionInnerExtensionDefaultTypeInternal _TestNestedGroupExtensionInnerExtension_default_instance_;
class TestNestedGroupExtensionOuter;
struct TestNestedGroupExtensionOuterDefaultTypeInternal;
extern TestNestedGroupExtensionOuterDefaultTypeInternal _TestNestedGroupExtensionOuter_default_instance_;
class TestNestedGroupExtensionOuter_Layer1OptionalGroup;
struct TestNestedGroupExtensionOuter_Layer1OptionalGroupDefaultTypeInternal;
extern TestNestedGroupExtensionOuter_Layer1OptionalGroupDefaultTypeInternal _TestNestedGroupExtensionOuter_Layer1OptionalGroup_default_instance_;
class TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup;
struct TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupDefaultTypeInternal;
extern TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupDefaultTypeInternal _TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup_default_instance_;
class TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup;
struct TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupDefaultTypeInternal;
extern TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupDefaultTypeInternal _TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup_default_instance_;
class TestNestedMessageHasBits;
struct TestNestedMessageHasBitsDefaultTypeInternal;
extern TestNestedMessageHasBitsDefaultTypeInternal _TestNestedMessageHasBits_default_instance_;
class TestNestedMessageHasBits_NestedMessage;
struct TestNestedMessageHasBits_NestedMessageDefaultTypeInternal;
extern TestNestedMessageHasBits_NestedMessageDefaultTypeInternal _TestNestedMessageHasBits_NestedMessage_default_instance_;
class TestNestedMessageRedaction;
struct TestNestedMessageRedactionDefaultTypeInternal;
extern TestNestedMessageRedactionDefaultTypeInternal _TestNestedMessageRedaction_default_instance_;
class TestNestedRequiredForeign;
struct TestNestedRequiredForeignDefaultTypeInternal;
extern TestNestedRequiredForeignDefaultTypeInternal _TestNestedRequiredForeign_default_instance_;
class TestOneof;
struct TestOneofDefaultTypeInternal;
extern TestOneofDefaultTypeInternal _TestOneof_default_instance_;
class TestOneof2;
struct TestOneof2DefaultTypeInternal;
extern TestOneof2DefaultTypeInternal _TestOneof2_default_instance_;
class TestOneof2_FooGroup;
struct TestOneof2_FooGroupDefaultTypeInternal;
extern TestOneof2_FooGroupDefaultTypeInternal _TestOneof2_FooGroup_default_instance_;
class TestOneof2_NestedMessage;
struct TestOneof2_NestedMessageDefaultTypeInternal;
extern TestOneof2_NestedMessageDefaultTypeInternal _TestOneof2_NestedMessage_default_instance_;
class TestOneofBackwardsCompatible;
struct TestOneofBackwardsCompatibleDefaultTypeInternal;
extern TestOneofBackwardsCompatibleDefaultTypeInternal _TestOneofBackwardsCompatible_default_instance_;
class TestOneofBackwardsCompatible_FooGroup;
struct TestOneofBackwardsCompatible_FooGroupDefaultTypeInternal;
extern TestOneofBackwardsCompatible_FooGroupDefaultTypeInternal _TestOneofBackwardsCompatible_FooGroup_default_instance_;
class TestOneof_FooGroup;
struct TestOneof_FooGroupDefaultTypeInternal;
extern TestOneof_FooGroupDefaultTypeInternal _TestOneof_FooGroup_default_instance_;
class TestPackedEnumSmallRange;
struct TestPackedEnumSmallRangeDefaultTypeInternal;
extern TestPackedEnumSmallRangeDefaultTypeInternal _TestPackedEnumSmallRange_default_instance_;
class TestPackedExtensions;
struct TestPackedExtensionsDefaultTypeInternal;
extern TestPackedExtensionsDefaultTypeInternal _TestPackedExtensions_default_instance_;
class TestPackedTypes;
struct TestPackedTypesDefaultTypeInternal;
extern TestPackedTypesDefaultTypeInternal _TestPackedTypes_default_instance_;
class TestParsingMerge;
struct TestParsingMergeDefaultTypeInternal;
extern TestParsingMergeDefaultTypeInternal _TestParsingMerge_default_instance_;
class TestParsingMerge_OptionalGroup;
struct TestParsingMerge_OptionalGroupDefaultTypeInternal;
extern TestParsingMerge_OptionalGroupDefaultTypeInternal _TestParsingMerge_OptionalGroup_default_instance_;
class TestParsingMerge_RepeatedFieldsGenerator;
struct TestParsingMerge_RepeatedFieldsGeneratorDefaultTypeInternal;
extern TestParsingMerge_RepeatedFieldsGeneratorDefaultTypeInternal _TestParsingMerge_RepeatedFieldsGenerator_default_instance_;
class TestParsingMerge_RepeatedFieldsGenerator_Group1;
struct TestParsingMerge_RepeatedFieldsGenerator_Group1DefaultTypeInternal;
extern TestParsingMerge_RepeatedFieldsGenerator_Group1DefaultTypeInternal _TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_;
class TestParsingMerge_RepeatedFieldsGenerator_Group2;
struct TestParsingMerge_RepeatedFieldsGenerator_Group2DefaultTypeInternal;
extern TestParsingMerge_RepeatedFieldsGenerator_Group2DefaultTypeInternal _TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_;
class TestParsingMerge_RepeatedGroup;
struct TestParsingMerge_RepeatedGroupDefaultTypeInternal;
extern TestParsingMerge_RepeatedGroupDefaultTypeInternal _TestParsingMerge_RepeatedGroup_default_instance_;
class TestPickleNestedMessage;
struct TestPickleNestedMessageDefaultTypeInternal;
extern TestPickleNestedMessageDefaultTypeInternal _TestPickleNestedMessage_default_instance_;
class TestPickleNestedMessage_NestedMessage;
struct TestPickleNestedMessage_NestedMessageDefaultTypeInternal;
extern TestPickleNestedMessage_NestedMessageDefaultTypeInternal _TestPickleNestedMessage_NestedMessage_default_instance_;
class TestPickleNestedMessage_NestedMessage_NestedNestedMessage;
struct TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal;
extern TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal _TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_;
class TestReallyLargeTagNumber;
struct TestReallyLargeTagNumberDefaultTypeInternal;
extern TestReallyLargeTagNumberDefaultTypeInternal _TestReallyLargeTagNumber_default_instance_;
class TestRecursiveMessage;
struct TestRecursiveMessageDefaultTypeInternal;
extern TestRecursiveMessageDefaultTypeInternal _TestRecursiveMessage_default_instance_;
class TestRepeatedScalarDifferentTagSizes;
struct TestRepeatedScalarDifferentTagSizesDefaultTypeInternal;
extern TestRepeatedScalarDifferentTagSizesDefaultTypeInternal _TestRepeatedScalarDifferentTagSizes_default_instance_;
class TestRepeatedString;
struct TestRepeatedStringDefaultTypeInternal;
extern TestRepeatedStringDefaultTypeInternal _TestRepeatedString_default_instance_;
class TestRequired;
struct TestRequiredDefaultTypeInternal;
extern TestRequiredDefaultTypeInternal _TestRequired_default_instance_;
class TestRequiredEnum;
struct TestRequiredEnumDefaultTypeInternal;
extern TestRequiredEnumDefaultTypeInternal _TestRequiredEnum_default_instance_;
class TestRequiredEnumMulti;
struct TestRequiredEnumMultiDefaultTypeInternal;
extern TestRequiredEnumMultiDefaultTypeInternal _TestRequiredEnumMulti_default_instance_;
class TestRequiredEnumNoMask;
struct TestRequiredEnumNoMaskDefaultTypeInternal;
extern TestRequiredEnumNoMaskDefaultTypeInternal _TestRequiredEnumNoMask_default_instance_;
class TestRequiredForeign;
struct TestRequiredForeignDefaultTypeInternal;
extern TestRequiredForeignDefaultTypeInternal _TestRequiredForeign_default_instance_;
class TestRequiredMessage;
struct TestRequiredMessageDefaultTypeInternal;
extern TestRequiredMessageDefaultTypeInternal _TestRequiredMessage_default_instance_;
class TestRequiredNoMaskMulti;
struct TestRequiredNoMaskMultiDefaultTypeInternal;
extern TestRequiredNoMaskMultiDefaultTypeInternal _TestRequiredNoMaskMulti_default_instance_;
class TestRequiredOneof;
struct TestRequiredOneofDefaultTypeInternal;
extern TestRequiredOneofDefaultTypeInternal _TestRequiredOneof_default_instance_;
class TestRequiredOneof_NestedMessage;
struct TestRequiredOneof_NestedMessageDefaultTypeInternal;
extern TestRequiredOneof_NestedMessageDefaultTypeInternal _TestRequiredOneof_NestedMessage_default_instance_;
class TestReservedFields;
struct TestReservedFieldsDefaultTypeInternal;
extern TestReservedFieldsDefaultTypeInternal _TestReservedFields_default_instance_;
class TestUnpackedExtensions;
struct TestUnpackedExtensionsDefaultTypeInternal;
extern TestUnpackedExtensionsDefaultTypeInternal _TestUnpackedExtensions_default_instance_;
class TestUnpackedTypes;
struct TestUnpackedTypesDefaultTypeInternal;
extern TestUnpackedTypesDefaultTypeInternal _TestUnpackedTypes_default_instance_;
class TestVerifyBigFieldNumberUint32;
struct TestVerifyBigFieldNumberUint32DefaultTypeInternal;
extern TestVerifyBigFieldNumberUint32DefaultTypeInternal _TestVerifyBigFieldNumberUint32_default_instance_;
class TestVerifyBigFieldNumberUint32_Nested;
struct TestVerifyBigFieldNumberUint32_NestedDefaultTypeInternal;
extern TestVerifyBigFieldNumberUint32_NestedDefaultTypeInternal _TestVerifyBigFieldNumberUint32_Nested_default_instance_;
class TestVerifyInt32;
struct TestVerifyInt32DefaultTypeInternal;
extern TestVerifyInt32DefaultTypeInternal _TestVerifyInt32_default_instance_;
class TestVerifyInt32BigFieldNumber;
struct TestVerifyInt32BigFieldNumberDefaultTypeInternal;
extern TestVerifyInt32BigFieldNumberDefaultTypeInternal _TestVerifyInt32BigFieldNumber_default_instance_;
class TestVerifyInt32Simple;
struct TestVerifyInt32SimpleDefaultTypeInternal;
extern TestVerifyInt32SimpleDefaultTypeInternal _TestVerifyInt32Simple_default_instance_;
class TestVerifyMostlyInt32;
struct TestVerifyMostlyInt32DefaultTypeInternal;
extern TestVerifyMostlyInt32DefaultTypeInternal _TestVerifyMostlyInt32_default_instance_;
class TestVerifyMostlyInt32BigFieldNumber;
struct TestVerifyMostlyInt32BigFieldNumberDefaultTypeInternal;
extern TestVerifyMostlyInt32BigFieldNumberDefaultTypeInternal _TestVerifyMostlyInt32BigFieldNumber_default_instance_;
class TestVerifyOneInt32BigFieldNumber;
struct TestVerifyOneInt32BigFieldNumberDefaultTypeInternal;
extern TestVerifyOneInt32BigFieldNumberDefaultTypeInternal _TestVerifyOneInt32BigFieldNumber_default_instance_;
class TestVerifyOneUint32;
struct TestVerifyOneUint32DefaultTypeInternal;
extern TestVerifyOneUint32DefaultTypeInternal _TestVerifyOneUint32_default_instance_;
class TestVerifyUint32;
struct TestVerifyUint32DefaultTypeInternal;
extern TestVerifyUint32DefaultTypeInternal _TestVerifyUint32_default_instance_;
class TestVerifyUint32BigFieldNumber;
struct TestVerifyUint32BigFieldNumberDefaultTypeInternal;
extern TestVerifyUint32BigFieldNumberDefaultTypeInternal _TestVerifyUint32BigFieldNumber_default_instance_;
class TestVerifyUint32Simple;
struct TestVerifyUint32SimpleDefaultTypeInternal;
extern TestVerifyUint32SimpleDefaultTypeInternal _TestVerifyUint32Simple_default_instance_;
class Uint32Message;
struct Uint32MessageDefaultTypeInternal;
extern Uint32MessageDefaultTypeInternal _Uint32Message_default_instance_;
class Uint64Message;
struct Uint64MessageDefaultTypeInternal;
extern Uint64MessageDefaultTypeInternal _Uint64Message_default_instance_;
}  // namespace edition_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace edition_unittest {
enum TestAllTypes_NestedEnum : int {
  TestAllTypes_NestedEnum_FOO = 1,
  TestAllTypes_NestedEnum_BAR = 2,
  TestAllTypes_NestedEnum_BAZ = 3,
  TestAllTypes_NestedEnum_NEG = -1,
};

bool TestAllTypes_NestedEnum_IsValid(int value);
extern const uint32_t TestAllTypes_NestedEnum_internal_data_[];
constexpr TestAllTypes_NestedEnum TestAllTypes_NestedEnum_NestedEnum_MIN = static_cast<TestAllTypes_NestedEnum>(-1);
constexpr TestAllTypes_NestedEnum TestAllTypes_NestedEnum_NestedEnum_MAX = static_cast<TestAllTypes_NestedEnum>(3);
constexpr int TestAllTypes_NestedEnum_NestedEnum_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TestAllTypes_NestedEnum_descriptor();
template <typename T>
const std::string& TestAllTypes_NestedEnum_Name(T value) {
  static_assert(std::is_same<T, TestAllTypes_NestedEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NestedEnum_Name().");
  return TestAllTypes_NestedEnum_Name(static_cast<TestAllTypes_NestedEnum>(value));
}
template <>
inline const std::string& TestAllTypes_NestedEnum_Name(TestAllTypes_NestedEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestAllTypes_NestedEnum_descriptor,
                                                 -1, 3>(
      static_cast<int>(value));
}
inline bool TestAllTypes_NestedEnum_Parse(absl::string_view name, TestAllTypes_NestedEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestAllTypes_NestedEnum>(
      TestAllTypes_NestedEnum_descriptor(), name, value);
}
enum TestRequiredEnumNoMask_NestedEnum : int {
  TestRequiredEnumNoMask_NestedEnum_UNSPECIFIED = 0,
  TestRequiredEnumNoMask_NestedEnum_FOO = 2,
  TestRequiredEnumNoMask_NestedEnum_BAR = 100,
  TestRequiredEnumNoMask_NestedEnum_BAZ = -1,
};

bool TestRequiredEnumNoMask_NestedEnum_IsValid(int value);
extern const uint32_t TestRequiredEnumNoMask_NestedEnum_internal_data_[];
constexpr TestRequiredEnumNoMask_NestedEnum TestRequiredEnumNoMask_NestedEnum_NestedEnum_MIN = static_cast<TestRequiredEnumNoMask_NestedEnum>(-1);
constexpr TestRequiredEnumNoMask_NestedEnum TestRequiredEnumNoMask_NestedEnum_NestedEnum_MAX = static_cast<TestRequiredEnumNoMask_NestedEnum>(100);
constexpr int TestRequiredEnumNoMask_NestedEnum_NestedEnum_ARRAYSIZE = 100 + 1;
const ::google::protobuf::EnumDescriptor*
TestRequiredEnumNoMask_NestedEnum_descriptor();
template <typename T>
const std::string& TestRequiredEnumNoMask_NestedEnum_Name(T value) {
  static_assert(std::is_same<T, TestRequiredEnumNoMask_NestedEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NestedEnum_Name().");
  return ::google::protobuf::internal::NameOfEnum(TestRequiredEnumNoMask_NestedEnum_descriptor(), value);
}
inline bool TestRequiredEnumNoMask_NestedEnum_Parse(absl::string_view name, TestRequiredEnumNoMask_NestedEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestRequiredEnumNoMask_NestedEnum>(
      TestRequiredEnumNoMask_NestedEnum_descriptor(), name, value);
}
enum TestRequiredEnumMulti_NestedEnum : int {
  TestRequiredEnumMulti_NestedEnum_UNSPECIFIED = 0,
  TestRequiredEnumMulti_NestedEnum_FOO = 1,
  TestRequiredEnumMulti_NestedEnum_BAR = 2,
  TestRequiredEnumMulti_NestedEnum_BAZ = 100,
};

bool TestRequiredEnumMulti_NestedEnum_IsValid(int value);
extern const uint32_t TestRequiredEnumMulti_NestedEnum_internal_data_[];
constexpr TestRequiredEnumMulti_NestedEnum TestRequiredEnumMulti_NestedEnum_NestedEnum_MIN = static_cast<TestRequiredEnumMulti_NestedEnum>(0);
constexpr TestRequiredEnumMulti_NestedEnum TestRequiredEnumMulti_NestedEnum_NestedEnum_MAX = static_cast<TestRequiredEnumMulti_NestedEnum>(100);
constexpr int TestRequiredEnumMulti_NestedEnum_NestedEnum_ARRAYSIZE = 100 + 1;
const ::google::protobuf::EnumDescriptor*
TestRequiredEnumMulti_NestedEnum_descriptor();
template <typename T>
const std::string& TestRequiredEnumMulti_NestedEnum_Name(T value) {
  static_assert(std::is_same<T, TestRequiredEnumMulti_NestedEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NestedEnum_Name().");
  return ::google::protobuf::internal::NameOfEnum(TestRequiredEnumMulti_NestedEnum_descriptor(), value);
}
inline bool TestRequiredEnumMulti_NestedEnum_Parse(absl::string_view name, TestRequiredEnumMulti_NestedEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestRequiredEnumMulti_NestedEnum>(
      TestRequiredEnumMulti_NestedEnum_descriptor(), name, value);
}
enum TestRequiredNoMaskMulti_NestedEnum : int {
  TestRequiredNoMaskMulti_NestedEnum_UNSPECIFIED = 0,
  TestRequiredNoMaskMulti_NestedEnum_FOO = 1,
  TestRequiredNoMaskMulti_NestedEnum_BAR = 2,
  TestRequiredNoMaskMulti_NestedEnum_BAZ = 100,
};

bool TestRequiredNoMaskMulti_NestedEnum_IsValid(int value);
extern const uint32_t TestRequiredNoMaskMulti_NestedEnum_internal_data_[];
constexpr TestRequiredNoMaskMulti_NestedEnum TestRequiredNoMaskMulti_NestedEnum_NestedEnum_MIN = static_cast<TestRequiredNoMaskMulti_NestedEnum>(0);
constexpr TestRequiredNoMaskMulti_NestedEnum TestRequiredNoMaskMulti_NestedEnum_NestedEnum_MAX = static_cast<TestRequiredNoMaskMulti_NestedEnum>(100);
constexpr int TestRequiredNoMaskMulti_NestedEnum_NestedEnum_ARRAYSIZE = 100 + 1;
const ::google::protobuf::EnumDescriptor*
TestRequiredNoMaskMulti_NestedEnum_descriptor();
template <typename T>
const std::string& TestRequiredNoMaskMulti_NestedEnum_Name(T value) {
  static_assert(std::is_same<T, TestRequiredNoMaskMulti_NestedEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NestedEnum_Name().");
  return ::google::protobuf::internal::NameOfEnum(TestRequiredNoMaskMulti_NestedEnum_descriptor(), value);
}
inline bool TestRequiredNoMaskMulti_NestedEnum_Parse(absl::string_view name, TestRequiredNoMaskMulti_NestedEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestRequiredNoMaskMulti_NestedEnum>(
      TestRequiredNoMaskMulti_NestedEnum_descriptor(), name, value);
}
enum TestOneof2_NestedEnum : int {
  TestOneof2_NestedEnum_UNKNOWN = 0,
  TestOneof2_NestedEnum_FOO = 1,
  TestOneof2_NestedEnum_BAR = 2,
  TestOneof2_NestedEnum_BAZ = 3,
};

bool TestOneof2_NestedEnum_IsValid(int value);
extern const uint32_t TestOneof2_NestedEnum_internal_data_[];
constexpr TestOneof2_NestedEnum TestOneof2_NestedEnum_NestedEnum_MIN = static_cast<TestOneof2_NestedEnum>(0);
constexpr TestOneof2_NestedEnum TestOneof2_NestedEnum_NestedEnum_MAX = static_cast<TestOneof2_NestedEnum>(3);
constexpr int TestOneof2_NestedEnum_NestedEnum_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TestOneof2_NestedEnum_descriptor();
template <typename T>
const std::string& TestOneof2_NestedEnum_Name(T value) {
  static_assert(std::is_same<T, TestOneof2_NestedEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NestedEnum_Name().");
  return TestOneof2_NestedEnum_Name(static_cast<TestOneof2_NestedEnum>(value));
}
template <>
inline const std::string& TestOneof2_NestedEnum_Name(TestOneof2_NestedEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestOneof2_NestedEnum_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TestOneof2_NestedEnum_Parse(absl::string_view name, TestOneof2_NestedEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestOneof2_NestedEnum>(
      TestOneof2_NestedEnum_descriptor(), name, value);
}
enum TestDynamicExtensions_DynamicEnumType : int {
  TestDynamicExtensions_DynamicEnumType_DYNAMIC_UNKNOWN = 0,
  TestDynamicExtensions_DynamicEnumType_DYNAMIC_FOO = 2200,
  TestDynamicExtensions_DynamicEnumType_DYNAMIC_BAR = 2201,
  TestDynamicExtensions_DynamicEnumType_DYNAMIC_BAZ = 2202,
};

bool TestDynamicExtensions_DynamicEnumType_IsValid(int value);
extern const uint32_t TestDynamicExtensions_DynamicEnumType_internal_data_[];
constexpr TestDynamicExtensions_DynamicEnumType TestDynamicExtensions_DynamicEnumType_DynamicEnumType_MIN = static_cast<TestDynamicExtensions_DynamicEnumType>(0);
constexpr TestDynamicExtensions_DynamicEnumType TestDynamicExtensions_DynamicEnumType_DynamicEnumType_MAX = static_cast<TestDynamicExtensions_DynamicEnumType>(2202);
constexpr int TestDynamicExtensions_DynamicEnumType_DynamicEnumType_ARRAYSIZE = 2202 + 1;
const ::google::protobuf::EnumDescriptor*
TestDynamicExtensions_DynamicEnumType_descriptor();
template <typename T>
const std::string& TestDynamicExtensions_DynamicEnumType_Name(T value) {
  static_assert(std::is_same<T, TestDynamicExtensions_DynamicEnumType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DynamicEnumType_Name().");
  return ::google::protobuf::internal::NameOfEnum(TestDynamicExtensions_DynamicEnumType_descriptor(), value);
}
inline bool TestDynamicExtensions_DynamicEnumType_Parse(absl::string_view name, TestDynamicExtensions_DynamicEnumType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestDynamicExtensions_DynamicEnumType>(
      TestDynamicExtensions_DynamicEnumType_descriptor(), name, value);
}
enum EnumParseTester_SeqSmall0 : int {
  EnumParseTester_SeqSmall0_SEQ_SMALL_0_DEFAULT = 0,
  EnumParseTester_SeqSmall0_SEQ_SMALL_0_1 = 1,
  EnumParseTester_SeqSmall0_SEQ_SMALL_0_2 = 2,
};

bool EnumParseTester_SeqSmall0_IsValid(int value);
extern const uint32_t EnumParseTester_SeqSmall0_internal_data_[];
constexpr EnumParseTester_SeqSmall0 EnumParseTester_SeqSmall0_SeqSmall0_MIN = static_cast<EnumParseTester_SeqSmall0>(0);
constexpr EnumParseTester_SeqSmall0 EnumParseTester_SeqSmall0_SeqSmall0_MAX = static_cast<EnumParseTester_SeqSmall0>(2);
constexpr int EnumParseTester_SeqSmall0_SeqSmall0_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EnumParseTester_SeqSmall0_descriptor();
template <typename T>
const std::string& EnumParseTester_SeqSmall0_Name(T value) {
  static_assert(std::is_same<T, EnumParseTester_SeqSmall0>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SeqSmall0_Name().");
  return EnumParseTester_SeqSmall0_Name(static_cast<EnumParseTester_SeqSmall0>(value));
}
template <>
inline const std::string& EnumParseTester_SeqSmall0_Name(EnumParseTester_SeqSmall0 value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EnumParseTester_SeqSmall0_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool EnumParseTester_SeqSmall0_Parse(absl::string_view name, EnumParseTester_SeqSmall0* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumParseTester_SeqSmall0>(
      EnumParseTester_SeqSmall0_descriptor(), name, value);
}
enum EnumParseTester_SeqSmall1 : int {
  EnumParseTester_SeqSmall1_UNKNOWN = 0,
  EnumParseTester_SeqSmall1_SEQ_SMALL_1_DEFAULT = 1,
  EnumParseTester_SeqSmall1_SEQ_SMALL_1_2 = 2,
  EnumParseTester_SeqSmall1_SEQ_SMALL_1_3 = 3,
};

bool EnumParseTester_SeqSmall1_IsValid(int value);
extern const uint32_t EnumParseTester_SeqSmall1_internal_data_[];
constexpr EnumParseTester_SeqSmall1 EnumParseTester_SeqSmall1_SeqSmall1_MIN = static_cast<EnumParseTester_SeqSmall1>(0);
constexpr EnumParseTester_SeqSmall1 EnumParseTester_SeqSmall1_SeqSmall1_MAX = static_cast<EnumParseTester_SeqSmall1>(3);
constexpr int EnumParseTester_SeqSmall1_SeqSmall1_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
EnumParseTester_SeqSmall1_descriptor();
template <typename T>
const std::string& EnumParseTester_SeqSmall1_Name(T value) {
  static_assert(std::is_same<T, EnumParseTester_SeqSmall1>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SeqSmall1_Name().");
  return EnumParseTester_SeqSmall1_Name(static_cast<EnumParseTester_SeqSmall1>(value));
}
template <>
inline const std::string& EnumParseTester_SeqSmall1_Name(EnumParseTester_SeqSmall1 value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EnumParseTester_SeqSmall1_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool EnumParseTester_SeqSmall1_Parse(absl::string_view name, EnumParseTester_SeqSmall1* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumParseTester_SeqSmall1>(
      EnumParseTester_SeqSmall1_descriptor(), name, value);
}
enum EnumParseTester_SeqLarge : int {
  EnumParseTester_SeqLarge_SEQ_LARGE_DEFAULT = -1,
  EnumParseTester_SeqLarge_SEQ_LARGE_0 = 0,
  EnumParseTester_SeqLarge_SEQ_LARGE_1 = 1,
  EnumParseTester_SeqLarge_SEQ_LARGE_2 = 2,
  EnumParseTester_SeqLarge_SEQ_LARGE_3 = 3,
  EnumParseTester_SeqLarge_SEQ_LARGE_4 = 4,
  EnumParseTester_SeqLarge_SEQ_LARGE_5 = 5,
  EnumParseTester_SeqLarge_SEQ_LARGE_6 = 6,
  EnumParseTester_SeqLarge_SEQ_LARGE_7 = 7,
  EnumParseTester_SeqLarge_SEQ_LARGE_8 = 8,
  EnumParseTester_SeqLarge_SEQ_LARGE_9 = 9,
  EnumParseTester_SeqLarge_SEQ_LARGE_10 = 10,
  EnumParseTester_SeqLarge_SEQ_LARGE_11 = 11,
  EnumParseTester_SeqLarge_SEQ_LARGE_12 = 12,
  EnumParseTester_SeqLarge_SEQ_LARGE_13 = 13,
  EnumParseTester_SeqLarge_SEQ_LARGE_14 = 14,
  EnumParseTester_SeqLarge_SEQ_LARGE_15 = 15,
  EnumParseTester_SeqLarge_SEQ_LARGE_16 = 16,
  EnumParseTester_SeqLarge_SEQ_LARGE_17 = 17,
  EnumParseTester_SeqLarge_SEQ_LARGE_18 = 18,
  EnumParseTester_SeqLarge_SEQ_LARGE_19 = 19,
  EnumParseTester_SeqLarge_SEQ_LARGE_20 = 20,
  EnumParseTester_SeqLarge_SEQ_LARGE_21 = 21,
  EnumParseTester_SeqLarge_SEQ_LARGE_22 = 22,
  EnumParseTester_SeqLarge_SEQ_LARGE_23 = 23,
  EnumParseTester_SeqLarge_SEQ_LARGE_24 = 24,
  EnumParseTester_SeqLarge_SEQ_LARGE_25 = 25,
  EnumParseTester_SeqLarge_SEQ_LARGE_26 = 26,
  EnumParseTester_SeqLarge_SEQ_LARGE_27 = 27,
  EnumParseTester_SeqLarge_SEQ_LARGE_28 = 28,
  EnumParseTester_SeqLarge_SEQ_LARGE_29 = 29,
  EnumParseTester_SeqLarge_SEQ_LARGE_30 = 30,
  EnumParseTester_SeqLarge_SEQ_LARGE_31 = 31,
  EnumParseTester_SeqLarge_SEQ_LARGE_32 = 32,
  EnumParseTester_SeqLarge_SEQ_LARGE_33 = 33,
};

bool EnumParseTester_SeqLarge_IsValid(int value);
extern const uint32_t EnumParseTester_SeqLarge_internal_data_[];
constexpr EnumParseTester_SeqLarge EnumParseTester_SeqLarge_SeqLarge_MIN = static_cast<EnumParseTester_SeqLarge>(-1);
constexpr EnumParseTester_SeqLarge EnumParseTester_SeqLarge_SeqLarge_MAX = static_cast<EnumParseTester_SeqLarge>(33);
constexpr int EnumParseTester_SeqLarge_SeqLarge_ARRAYSIZE = 33 + 1;
const ::google::protobuf::EnumDescriptor*
EnumParseTester_SeqLarge_descriptor();
template <typename T>
const std::string& EnumParseTester_SeqLarge_Name(T value) {
  static_assert(std::is_same<T, EnumParseTester_SeqLarge>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SeqLarge_Name().");
  return EnumParseTester_SeqLarge_Name(static_cast<EnumParseTester_SeqLarge>(value));
}
template <>
inline const std::string& EnumParseTester_SeqLarge_Name(EnumParseTester_SeqLarge value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EnumParseTester_SeqLarge_descriptor,
                                                 -1, 33>(
      static_cast<int>(value));
}
inline bool EnumParseTester_SeqLarge_Parse(absl::string_view name, EnumParseTester_SeqLarge* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumParseTester_SeqLarge>(
      EnumParseTester_SeqLarge_descriptor(), name, value);
}
enum EnumParseTester_Arbitrary : int {
  EnumParseTester_Arbitrary_ARBITRARY_DEFAULT = -123123,
  EnumParseTester_Arbitrary_ARBITRARY_1 = -123,
  EnumParseTester_Arbitrary_ARBITRARY_2 = 213,
  EnumParseTester_Arbitrary_ARBITRARY_3 = 213213,
  EnumParseTester_Arbitrary_ARBITRARY_MIN = -2147483647 - 1,
  EnumParseTester_Arbitrary_ARBITRARY_MAX = 2147483647,
};

bool EnumParseTester_Arbitrary_IsValid(int value);
extern const uint32_t EnumParseTester_Arbitrary_internal_data_[];
constexpr EnumParseTester_Arbitrary EnumParseTester_Arbitrary_Arbitrary_MIN = static_cast<EnumParseTester_Arbitrary>(-2147483648);
constexpr EnumParseTester_Arbitrary EnumParseTester_Arbitrary_Arbitrary_MAX = static_cast<EnumParseTester_Arbitrary>(2147483647);
const ::google::protobuf::EnumDescriptor*
EnumParseTester_Arbitrary_descriptor();
template <typename T>
const std::string& EnumParseTester_Arbitrary_Name(T value) {
  static_assert(std::is_same<T, EnumParseTester_Arbitrary>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Arbitrary_Name().");
  return ::google::protobuf::internal::NameOfEnum(EnumParseTester_Arbitrary_descriptor(), value);
}
inline bool EnumParseTester_Arbitrary_Parse(absl::string_view name, EnumParseTester_Arbitrary* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumParseTester_Arbitrary>(
      EnumParseTester_Arbitrary_descriptor(), name, value);
}
enum TestPackedEnumSmallRange_NestedEnum : int {
  TestPackedEnumSmallRange_NestedEnum_UNSPECIFIED = 0,
  TestPackedEnumSmallRange_NestedEnum_FOO = 1,
  TestPackedEnumSmallRange_NestedEnum_BAR = 2,
  TestPackedEnumSmallRange_NestedEnum_BAZ = 3,
};

bool TestPackedEnumSmallRange_NestedEnum_IsValid(int value);
extern const uint32_t TestPackedEnumSmallRange_NestedEnum_internal_data_[];
constexpr TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange_NestedEnum_NestedEnum_MIN = static_cast<TestPackedEnumSmallRange_NestedEnum>(0);
constexpr TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange_NestedEnum_NestedEnum_MAX = static_cast<TestPackedEnumSmallRange_NestedEnum>(3);
constexpr int TestPackedEnumSmallRange_NestedEnum_NestedEnum_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TestPackedEnumSmallRange_NestedEnum_descriptor();
template <typename T>
const std::string& TestPackedEnumSmallRange_NestedEnum_Name(T value) {
  static_assert(std::is_same<T, TestPackedEnumSmallRange_NestedEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NestedEnum_Name().");
  return TestPackedEnumSmallRange_NestedEnum_Name(static_cast<TestPackedEnumSmallRange_NestedEnum>(value));
}
template <>
inline const std::string& TestPackedEnumSmallRange_NestedEnum_Name(TestPackedEnumSmallRange_NestedEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestPackedEnumSmallRange_NestedEnum_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TestPackedEnumSmallRange_NestedEnum_Parse(absl::string_view name, TestPackedEnumSmallRange_NestedEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestPackedEnumSmallRange_NestedEnum>(
      TestPackedEnumSmallRange_NestedEnum_descriptor(), name, value);
}
enum EnumsForBenchmark_Flat : int {
  EnumsForBenchmark_Flat_A0 = 0,
  EnumsForBenchmark_Flat_A1 = 1,
  EnumsForBenchmark_Flat_A2 = 2,
  EnumsForBenchmark_Flat_A3 = 3,
  EnumsForBenchmark_Flat_A4 = 4,
  EnumsForBenchmark_Flat_A5 = 5,
  EnumsForBenchmark_Flat_A6 = 6,
  EnumsForBenchmark_Flat_A7 = 7,
  EnumsForBenchmark_Flat_A8 = 8,
  EnumsForBenchmark_Flat_A9 = 9,
  EnumsForBenchmark_Flat_A10 = 10,
  EnumsForBenchmark_Flat_A11 = 11,
  EnumsForBenchmark_Flat_A12 = 12,
  EnumsForBenchmark_Flat_A13 = 13,
  EnumsForBenchmark_Flat_A14 = 14,
  EnumsForBenchmark_Flat_A15 = 15,
};

bool EnumsForBenchmark_Flat_IsValid(int value);
extern const uint32_t EnumsForBenchmark_Flat_internal_data_[];
constexpr EnumsForBenchmark_Flat EnumsForBenchmark_Flat_Flat_MIN = static_cast<EnumsForBenchmark_Flat>(0);
constexpr EnumsForBenchmark_Flat EnumsForBenchmark_Flat_Flat_MAX = static_cast<EnumsForBenchmark_Flat>(15);
constexpr int EnumsForBenchmark_Flat_Flat_ARRAYSIZE = 15 + 1;
const ::google::protobuf::EnumDescriptor*
EnumsForBenchmark_Flat_descriptor();
template <typename T>
const std::string& EnumsForBenchmark_Flat_Name(T value) {
  static_assert(std::is_same<T, EnumsForBenchmark_Flat>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Flat_Name().");
  return EnumsForBenchmark_Flat_Name(static_cast<EnumsForBenchmark_Flat>(value));
}
template <>
inline const std::string& EnumsForBenchmark_Flat_Name(EnumsForBenchmark_Flat value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EnumsForBenchmark_Flat_descriptor,
                                                 0, 15>(
      static_cast<int>(value));
}
inline bool EnumsForBenchmark_Flat_Parse(absl::string_view name, EnumsForBenchmark_Flat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumsForBenchmark_Flat>(
      EnumsForBenchmark_Flat_descriptor(), name, value);
}
enum EnumsForBenchmark_AlmostFlat : int {
  EnumsForBenchmark_AlmostFlat_B0 = 0,
  EnumsForBenchmark_AlmostFlat_B1 = 1,
  EnumsForBenchmark_AlmostFlat_B2 = 2,
  EnumsForBenchmark_AlmostFlat_B3 = 3,
  EnumsForBenchmark_AlmostFlat_B5 = 5,
  EnumsForBenchmark_AlmostFlat_B6 = 6,
  EnumsForBenchmark_AlmostFlat_B7 = 7,
  EnumsForBenchmark_AlmostFlat_B8 = 8,
  EnumsForBenchmark_AlmostFlat_B9 = 9,
  EnumsForBenchmark_AlmostFlat_B11 = 11,
  EnumsForBenchmark_AlmostFlat_B12 = 12,
  EnumsForBenchmark_AlmostFlat_B13 = 13,
  EnumsForBenchmark_AlmostFlat_B14 = 14,
  EnumsForBenchmark_AlmostFlat_B15 = 15,
  EnumsForBenchmark_AlmostFlat_B17 = 17,
  EnumsForBenchmark_AlmostFlat_B19 = 19,
};

bool EnumsForBenchmark_AlmostFlat_IsValid(int value);
extern const uint32_t EnumsForBenchmark_AlmostFlat_internal_data_[];
constexpr EnumsForBenchmark_AlmostFlat EnumsForBenchmark_AlmostFlat_AlmostFlat_MIN = static_cast<EnumsForBenchmark_AlmostFlat>(0);
constexpr EnumsForBenchmark_AlmostFlat EnumsForBenchmark_AlmostFlat_AlmostFlat_MAX = static_cast<EnumsForBenchmark_AlmostFlat>(19);
constexpr int EnumsForBenchmark_AlmostFlat_AlmostFlat_ARRAYSIZE = 19 + 1;
const ::google::protobuf::EnumDescriptor*
EnumsForBenchmark_AlmostFlat_descriptor();
template <typename T>
const std::string& EnumsForBenchmark_AlmostFlat_Name(T value) {
  static_assert(std::is_same<T, EnumsForBenchmark_AlmostFlat>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AlmostFlat_Name().");
  return EnumsForBenchmark_AlmostFlat_Name(static_cast<EnumsForBenchmark_AlmostFlat>(value));
}
template <>
inline const std::string& EnumsForBenchmark_AlmostFlat_Name(EnumsForBenchmark_AlmostFlat value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EnumsForBenchmark_AlmostFlat_descriptor,
                                                 0, 19>(
      static_cast<int>(value));
}
inline bool EnumsForBenchmark_AlmostFlat_Parse(absl::string_view name, EnumsForBenchmark_AlmostFlat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumsForBenchmark_AlmostFlat>(
      EnumsForBenchmark_AlmostFlat_descriptor(), name, value);
}
enum EnumsForBenchmark_Sparse : int {
  EnumsForBenchmark_Sparse_C0 = 0,
  EnumsForBenchmark_Sparse_C536 = 536,
  EnumsForBenchmark_Sparse_C8387 = 8387,
  EnumsForBenchmark_Sparse_C9673 = 9673,
  EnumsForBenchmark_Sparse_C10285 = 10285,
  EnumsForBenchmark_Sparse_C13318 = 13318,
  EnumsForBenchmark_Sparse_C15963 = 15963,
  EnumsForBenchmark_Sparse_C16439 = 16439,
  EnumsForBenchmark_Sparse_C18197 = 18197,
  EnumsForBenchmark_Sparse_C19430 = 19430,
  EnumsForBenchmark_Sparse_C20361 = 20361,
  EnumsForBenchmark_Sparse_C20706 = 20706,
  EnumsForBenchmark_Sparse_C21050 = 21050,
  EnumsForBenchmark_Sparse_C21906 = 21906,
  EnumsForBenchmark_Sparse_C27265 = 27265,
  EnumsForBenchmark_Sparse_C30109 = 30109,
  EnumsForBenchmark_Sparse_C31670 = 31670,
};

bool EnumsForBenchmark_Sparse_IsValid(int value);
extern const uint32_t EnumsForBenchmark_Sparse_internal_data_[];
constexpr EnumsForBenchmark_Sparse EnumsForBenchmark_Sparse_Sparse_MIN = static_cast<EnumsForBenchmark_Sparse>(0);
constexpr EnumsForBenchmark_Sparse EnumsForBenchmark_Sparse_Sparse_MAX = static_cast<EnumsForBenchmark_Sparse>(31670);
constexpr int EnumsForBenchmark_Sparse_Sparse_ARRAYSIZE = 31670 + 1;
const ::google::protobuf::EnumDescriptor*
EnumsForBenchmark_Sparse_descriptor();
template <typename T>
const std::string& EnumsForBenchmark_Sparse_Name(T value) {
  static_assert(std::is_same<T, EnumsForBenchmark_Sparse>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Sparse_Name().");
  return ::google::protobuf::internal::NameOfEnum(EnumsForBenchmark_Sparse_descriptor(), value);
}
inline bool EnumsForBenchmark_Sparse_Parse(absl::string_view name, EnumsForBenchmark_Sparse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumsForBenchmark_Sparse>(
      EnumsForBenchmark_Sparse_descriptor(), name, value);
}
enum ForeignEnum : int {
  FOREIGN_FOO = 4,
  FOREIGN_BAR = 5,
  FOREIGN_BAZ = 6,
  FOREIGN_BAX = 32,
};

bool ForeignEnum_IsValid(int value);
extern const uint32_t ForeignEnum_internal_data_[];
constexpr ForeignEnum ForeignEnum_MIN = static_cast<ForeignEnum>(4);
constexpr ForeignEnum ForeignEnum_MAX = static_cast<ForeignEnum>(32);
constexpr int ForeignEnum_ARRAYSIZE = 32 + 1;
const ::google::protobuf::EnumDescriptor*
ForeignEnum_descriptor();
template <typename T>
const std::string& ForeignEnum_Name(T value) {
  static_assert(std::is_same<T, ForeignEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ForeignEnum_Name().");
  return ::google::protobuf::internal::NameOfEnum(ForeignEnum_descriptor(), value);
}
inline bool ForeignEnum_Parse(absl::string_view name, ForeignEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ForeignEnum>(
      ForeignEnum_descriptor(), name, value);
}
enum TestReservedEnumFields : int {
  UNKNOWN = 0,
};

bool TestReservedEnumFields_IsValid(int value);
extern const uint32_t TestReservedEnumFields_internal_data_[];
constexpr TestReservedEnumFields TestReservedEnumFields_MIN = static_cast<TestReservedEnumFields>(0);
constexpr TestReservedEnumFields TestReservedEnumFields_MAX = static_cast<TestReservedEnumFields>(0);
constexpr int TestReservedEnumFields_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
TestReservedEnumFields_descriptor();
template <typename T>
const std::string& TestReservedEnumFields_Name(T value) {
  static_assert(std::is_same<T, TestReservedEnumFields>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TestReservedEnumFields_Name().");
  return TestReservedEnumFields_Name(static_cast<TestReservedEnumFields>(value));
}
template <>
inline const std::string& TestReservedEnumFields_Name(TestReservedEnumFields value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestReservedEnumFields_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool TestReservedEnumFields_Parse(absl::string_view name, TestReservedEnumFields* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestReservedEnumFields>(
      TestReservedEnumFields_descriptor(), name, value);
}
enum TestEnumWithDupValue : int {
  DUP_UNKNOWN1 = 0,
  DUP_FOO1 = 1,
  DUP_BAR1 = 2,
  DUP_BAZ = 3,
  DUP_UNKNOWN2 = 0,
  DUP_FOO2 = 1,
  DUP_BAR2 = 2,
};

bool TestEnumWithDupValue_IsValid(int value);
extern const uint32_t TestEnumWithDupValue_internal_data_[];
constexpr TestEnumWithDupValue TestEnumWithDupValue_MIN = static_cast<TestEnumWithDupValue>(0);
constexpr TestEnumWithDupValue TestEnumWithDupValue_MAX = static_cast<TestEnumWithDupValue>(3);
constexpr int TestEnumWithDupValue_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TestEnumWithDupValue_descriptor();
template <typename T>
const std::string& TestEnumWithDupValue_Name(T value) {
  static_assert(std::is_same<T, TestEnumWithDupValue>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TestEnumWithDupValue_Name().");
  return TestEnumWithDupValue_Name(static_cast<TestEnumWithDupValue>(value));
}
template <>
inline const std::string& TestEnumWithDupValue_Name(TestEnumWithDupValue value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestEnumWithDupValue_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TestEnumWithDupValue_Parse(absl::string_view name, TestEnumWithDupValue* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestEnumWithDupValue>(
      TestEnumWithDupValue_descriptor(), name, value);
}
enum TestSparseEnum : int {
  SPARSE_A = 123,
  SPARSE_B = 62374,
  SPARSE_C = 12589234,
  SPARSE_D = -15,
  SPARSE_E = -53452,
  SPARSE_F = 0,
  SPARSE_G = 2,
};

bool TestSparseEnum_IsValid(int value);
extern const uint32_t TestSparseEnum_internal_data_[];
constexpr TestSparseEnum TestSparseEnum_MIN = static_cast<TestSparseEnum>(-53452);
constexpr TestSparseEnum TestSparseEnum_MAX = static_cast<TestSparseEnum>(12589234);
constexpr int TestSparseEnum_ARRAYSIZE = 12589234 + 1;
const ::google::protobuf::EnumDescriptor*
TestSparseEnum_descriptor();
template <typename T>
const std::string& TestSparseEnum_Name(T value) {
  static_assert(std::is_same<T, TestSparseEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TestSparseEnum_Name().");
  return ::google::protobuf::internal::NameOfEnum(TestSparseEnum_descriptor(), value);
}
inline bool TestSparseEnum_Parse(absl::string_view name, TestSparseEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestSparseEnum>(
      TestSparseEnum_descriptor(), name, value);
}
enum VeryLargeEnum : int {
  ENUM_LABEL_DEFAULT = 0,
  ENUM_LABEL_1 = 1,
  ENUM_LABEL_2 = 2,
  ENUM_LABEL_3 = 3,
  ENUM_LABEL_4 = 4,
  ENUM_LABEL_5 = 5,
  ENUM_LABEL_6 = 6,
  ENUM_LABEL_7 = 7,
  ENUM_LABEL_8 = 8,
  ENUM_LABEL_9 = 9,
  ENUM_LABEL_10 = 10,
  ENUM_LABEL_11 = 11,
  ENUM_LABEL_12 = 12,
  ENUM_LABEL_13 = 13,
  ENUM_LABEL_14 = 14,
  ENUM_LABEL_15 = 15,
  ENUM_LABEL_16 = 16,
  ENUM_LABEL_17 = 17,
  ENUM_LABEL_18 = 18,
  ENUM_LABEL_19 = 19,
  ENUM_LABEL_20 = 20,
  ENUM_LABEL_21 = 21,
  ENUM_LABEL_22 = 22,
  ENUM_LABEL_23 = 23,
  ENUM_LABEL_24 = 24,
  ENUM_LABEL_25 = 25,
  ENUM_LABEL_26 = 26,
  ENUM_LABEL_27 = 27,
  ENUM_LABEL_28 = 28,
  ENUM_LABEL_29 = 29,
  ENUM_LABEL_30 = 30,
  ENUM_LABEL_31 = 31,
  ENUM_LABEL_32 = 32,
  ENUM_LABEL_33 = 33,
  ENUM_LABEL_34 = 34,
  ENUM_LABEL_35 = 35,
  ENUM_LABEL_36 = 36,
  ENUM_LABEL_37 = 37,
  ENUM_LABEL_38 = 38,
  ENUM_LABEL_39 = 39,
  ENUM_LABEL_40 = 40,
  ENUM_LABEL_41 = 41,
  ENUM_LABEL_42 = 42,
  ENUM_LABEL_43 = 43,
  ENUM_LABEL_44 = 44,
  ENUM_LABEL_45 = 45,
  ENUM_LABEL_46 = 46,
  ENUM_LABEL_47 = 47,
  ENUM_LABEL_48 = 48,
  ENUM_LABEL_49 = 49,
  ENUM_LABEL_50 = 50,
  ENUM_LABEL_51 = 51,
  ENUM_LABEL_52 = 52,
  ENUM_LABEL_53 = 53,
  ENUM_LABEL_54 = 54,
  ENUM_LABEL_55 = 55,
  ENUM_LABEL_56 = 56,
  ENUM_LABEL_57 = 57,
  ENUM_LABEL_58 = 58,
  ENUM_LABEL_59 = 59,
  ENUM_LABEL_60 = 60,
  ENUM_LABEL_61 = 61,
  ENUM_LABEL_62 = 62,
  ENUM_LABEL_63 = 63,
  ENUM_LABEL_64 = 64,
  ENUM_LABEL_65 = 65,
  ENUM_LABEL_66 = 66,
  ENUM_LABEL_67 = 67,
  ENUM_LABEL_68 = 68,
  ENUM_LABEL_69 = 69,
  ENUM_LABEL_70 = 70,
  ENUM_LABEL_71 = 71,
  ENUM_LABEL_72 = 72,
  ENUM_LABEL_73 = 73,
  ENUM_LABEL_74 = 74,
  ENUM_LABEL_75 = 75,
  ENUM_LABEL_76 = 76,
  ENUM_LABEL_77 = 77,
  ENUM_LABEL_78 = 78,
  ENUM_LABEL_79 = 79,
  ENUM_LABEL_80 = 80,
  ENUM_LABEL_81 = 81,
  ENUM_LABEL_82 = 82,
  ENUM_LABEL_83 = 83,
  ENUM_LABEL_84 = 84,
  ENUM_LABEL_85 = 85,
  ENUM_LABEL_86 = 86,
  ENUM_LABEL_87 = 87,
  ENUM_LABEL_88 = 88,
  ENUM_LABEL_89 = 89,
  ENUM_LABEL_90 = 90,
  ENUM_LABEL_91 = 91,
  ENUM_LABEL_92 = 92,
  ENUM_LABEL_93 = 93,
  ENUM_LABEL_94 = 94,
  ENUM_LABEL_95 = 95,
  ENUM_LABEL_96 = 96,
  ENUM_LABEL_97 = 97,
  ENUM_LABEL_98 = 98,
  ENUM_LABEL_99 = 99,
  ENUM_LABEL_100 = 100,
};

bool VeryLargeEnum_IsValid(int value);
extern const uint32_t VeryLargeEnum_internal_data_[];
constexpr VeryLargeEnum VeryLargeEnum_MIN = static_cast<VeryLargeEnum>(0);
constexpr VeryLargeEnum VeryLargeEnum_MAX = static_cast<VeryLargeEnum>(100);
constexpr int VeryLargeEnum_ARRAYSIZE = 100 + 1;
const ::google::protobuf::EnumDescriptor*
VeryLargeEnum_descriptor();
template <typename T>
const std::string& VeryLargeEnum_Name(T value) {
  static_assert(std::is_same<T, VeryLargeEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to VeryLargeEnum_Name().");
  return VeryLargeEnum_Name(static_cast<VeryLargeEnum>(value));
}
template <>
inline const std::string& VeryLargeEnum_Name(VeryLargeEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<VeryLargeEnum_descriptor,
                                                 0, 100>(
      static_cast<int>(value));
}
inline bool VeryLargeEnum_Parse(absl::string_view name, VeryLargeEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VeryLargeEnum>(
      VeryLargeEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Uint64Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.Uint64Message) */ {
 public:
  inline Uint64Message() : Uint64Message(nullptr) {}
  ~Uint64Message() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Uint64Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Uint64Message(const Uint64Message& from) : Uint64Message(nullptr, from) {}
  inline Uint64Message(Uint64Message&& from) noexcept
      : Uint64Message(nullptr, std::move(from)) {}
  inline Uint64Message& operator=(const Uint64Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Uint64Message& operator=(Uint64Message&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Uint64Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const Uint64Message* internal_default_instance() {
    return reinterpret_cast<const Uint64Message*>(
        &_Uint64Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 75;
  friend void swap(Uint64Message& a, Uint64Message& b) { a.Swap(&b); }
  inline void Swap(Uint64Message* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Uint64Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Uint64Message* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Uint64Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Uint64Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Uint64Message& from) { Uint64Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Uint64Message* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.Uint64Message"; }

 protected:
  explicit Uint64Message(::google::protobuf::Arena* arena);
  Uint64Message(::google::protobuf::Arena* arena, const Uint64Message& from);
  Uint64Message(::google::protobuf::Arena* arena, Uint64Message&& from) noexcept
      : Uint64Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // uint64 data = 1;
  bool has_data() const;
  void clear_data() ;
  ::uint64_t data() const;
  void set_data(::uint64_t value);

  private:
  ::uint64_t _internal_data() const;
  void _internal_set_data(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.Uint64Message)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Uint64Message_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Uint64Message& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class Uint32Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.Uint32Message) */ {
 public:
  inline Uint32Message() : Uint32Message(nullptr) {}
  ~Uint32Message() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Uint32Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Uint32Message(const Uint32Message& from) : Uint32Message(nullptr, from) {}
  inline Uint32Message(Uint32Message&& from) noexcept
      : Uint32Message(nullptr, std::move(from)) {}
  inline Uint32Message& operator=(const Uint32Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Uint32Message& operator=(Uint32Message&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Uint32Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const Uint32Message* internal_default_instance() {
    return reinterpret_cast<const Uint32Message*>(
        &_Uint32Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 73;
  friend void swap(Uint32Message& a, Uint32Message& b) { a.Swap(&b); }
  inline void Swap(Uint32Message* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Uint32Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Uint32Message* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Uint32Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Uint32Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Uint32Message& from) { Uint32Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Uint32Message* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.Uint32Message"; }

 protected:
  explicit Uint32Message(::google::protobuf::Arena* arena);
  Uint32Message(::google::protobuf::Arena* arena, const Uint32Message& from);
  Uint32Message(::google::protobuf::Arena* arena, Uint32Message&& from) noexcept
      : Uint32Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // uint32 data = 1;
  bool has_data() const;
  void clear_data() ;
  ::uint32_t data() const;
  void set_data(::uint32_t value);

  private:
  ::uint32_t _internal_data() const;
  void _internal_set_data(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.Uint32Message)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Uint32Message_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Uint32Message& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyUint32Simple final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyUint32Simple) */ {
 public:
  inline TestVerifyUint32Simple() : TestVerifyUint32Simple(nullptr) {}
  ~TestVerifyUint32Simple() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyUint32Simple(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyUint32Simple(const TestVerifyUint32Simple& from) : TestVerifyUint32Simple(nullptr, from) {}
  inline TestVerifyUint32Simple(TestVerifyUint32Simple&& from) noexcept
      : TestVerifyUint32Simple(nullptr, std::move(from)) {}
  inline TestVerifyUint32Simple& operator=(const TestVerifyUint32Simple& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyUint32Simple& operator=(TestVerifyUint32Simple&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyUint32Simple& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyUint32Simple* internal_default_instance() {
    return reinterpret_cast<const TestVerifyUint32Simple*>(
        &_TestVerifyUint32Simple_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 124;
  friend void swap(TestVerifyUint32Simple& a, TestVerifyUint32Simple& b) { a.Swap(&b); }
  inline void Swap(TestVerifyUint32Simple* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyUint32Simple* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyUint32Simple* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyUint32Simple>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyUint32Simple& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyUint32Simple& from) { TestVerifyUint32Simple::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyUint32Simple* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyUint32Simple"; }

 protected:
  explicit TestVerifyUint32Simple(::google::protobuf::Arena* arena);
  TestVerifyUint32Simple(::google::protobuf::Arena* arena, const TestVerifyUint32Simple& from);
  TestVerifyUint32Simple(::google::protobuf::Arena* arena, TestVerifyUint32Simple&& from) noexcept
      : TestVerifyUint32Simple(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalUint321FieldNumber = 1,
    kOptionalUint322FieldNumber = 2,
    kOptionalUint3263FieldNumber = 63,
    kOptionalUint3264FieldNumber = 64,
  };
  // uint32 optional_uint32_1 = 1;
  bool has_optional_uint32_1() const;
  void clear_optional_uint32_1() ;
  ::uint32_t optional_uint32_1() const;
  void set_optional_uint32_1(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_1() const;
  void _internal_set_optional_uint32_1(::uint32_t value);

  public:
  // uint32 optional_uint32_2 = 2;
  bool has_optional_uint32_2() const;
  void clear_optional_uint32_2() ;
  ::uint32_t optional_uint32_2() const;
  void set_optional_uint32_2(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_2() const;
  void _internal_set_optional_uint32_2(::uint32_t value);

  public:
  // uint32 optional_uint32_63 = 63;
  bool has_optional_uint32_63() const;
  void clear_optional_uint32_63() ;
  ::uint32_t optional_uint32_63() const;
  void set_optional_uint32_63(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_63() const;
  void _internal_set_optional_uint32_63(::uint32_t value);

  public:
  // uint32 optional_uint32_64 = 64;
  bool has_optional_uint32_64() const;
  void clear_optional_uint32_64() ;
  ::uint32_t optional_uint32_64() const;
  void set_optional_uint32_64(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_64() const;
  void _internal_set_optional_uint32_64(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyUint32Simple)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyUint32Simple_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyUint32Simple& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t optional_uint32_1_;
    ::uint32_t optional_uint32_2_;
    ::uint32_t optional_uint32_63_;
    ::uint32_t optional_uint32_64_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyInt32Simple final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyInt32Simple) */ {
 public:
  inline TestVerifyInt32Simple() : TestVerifyInt32Simple(nullptr) {}
  ~TestVerifyInt32Simple() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyInt32Simple(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyInt32Simple(const TestVerifyInt32Simple& from) : TestVerifyInt32Simple(nullptr, from) {}
  inline TestVerifyInt32Simple(TestVerifyInt32Simple&& from) noexcept
      : TestVerifyInt32Simple(nullptr, std::move(from)) {}
  inline TestVerifyInt32Simple& operator=(const TestVerifyInt32Simple& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyInt32Simple& operator=(TestVerifyInt32Simple&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyInt32Simple& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyInt32Simple* internal_default_instance() {
    return reinterpret_cast<const TestVerifyInt32Simple*>(
        &_TestVerifyInt32Simple_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 120;
  friend void swap(TestVerifyInt32Simple& a, TestVerifyInt32Simple& b) { a.Swap(&b); }
  inline void Swap(TestVerifyInt32Simple* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyInt32Simple* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyInt32Simple* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyInt32Simple>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyInt32Simple& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyInt32Simple& from) { TestVerifyInt32Simple::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyInt32Simple* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyInt32Simple"; }

 protected:
  explicit TestVerifyInt32Simple(::google::protobuf::Arena* arena);
  TestVerifyInt32Simple(::google::protobuf::Arena* arena, const TestVerifyInt32Simple& from);
  TestVerifyInt32Simple(::google::protobuf::Arena* arena, TestVerifyInt32Simple&& from) noexcept
      : TestVerifyInt32Simple(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalInt321FieldNumber = 1,
    kOptionalInt322FieldNumber = 2,
    kOptionalInt3263FieldNumber = 63,
    kOptionalInt3264FieldNumber = 64,
  };
  // int32 optional_int32_1 = 1;
  bool has_optional_int32_1() const;
  void clear_optional_int32_1() ;
  ::int32_t optional_int32_1() const;
  void set_optional_int32_1(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_1() const;
  void _internal_set_optional_int32_1(::int32_t value);

  public:
  // int32 optional_int32_2 = 2;
  bool has_optional_int32_2() const;
  void clear_optional_int32_2() ;
  ::int32_t optional_int32_2() const;
  void set_optional_int32_2(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_2() const;
  void _internal_set_optional_int32_2(::int32_t value);

  public:
  // int32 optional_int32_63 = 63;
  bool has_optional_int32_63() const;
  void clear_optional_int32_63() ;
  ::int32_t optional_int32_63() const;
  void set_optional_int32_63(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_63() const;
  void _internal_set_optional_int32_63(::int32_t value);

  public:
  // int32 optional_int32_64 = 64;
  bool has_optional_int32_64() const;
  void clear_optional_int32_64() ;
  ::int32_t optional_int32_64() const;
  void set_optional_int32_64(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_64() const;
  void _internal_set_optional_int32_64(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyInt32Simple)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyInt32Simple_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyInt32Simple& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t optional_int32_1_;
    ::int32_t optional_int32_2_;
    ::int32_t optional_int32_63_;
    ::int32_t optional_int32_64_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyBigFieldNumberUint32_Nested final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyBigFieldNumberUint32.Nested) */ {
 public:
  inline TestVerifyBigFieldNumberUint32_Nested() : TestVerifyBigFieldNumberUint32_Nested(nullptr) {}
  ~TestVerifyBigFieldNumberUint32_Nested() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyBigFieldNumberUint32_Nested(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyBigFieldNumberUint32_Nested(const TestVerifyBigFieldNumberUint32_Nested& from) : TestVerifyBigFieldNumberUint32_Nested(nullptr, from) {}
  inline TestVerifyBigFieldNumberUint32_Nested(TestVerifyBigFieldNumberUint32_Nested&& from) noexcept
      : TestVerifyBigFieldNumberUint32_Nested(nullptr, std::move(from)) {}
  inline TestVerifyBigFieldNumberUint32_Nested& operator=(const TestVerifyBigFieldNumberUint32_Nested& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyBigFieldNumberUint32_Nested& operator=(TestVerifyBigFieldNumberUint32_Nested&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyBigFieldNumberUint32_Nested& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyBigFieldNumberUint32_Nested* internal_default_instance() {
    return reinterpret_cast<const TestVerifyBigFieldNumberUint32_Nested*>(
        &_TestVerifyBigFieldNumberUint32_Nested_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 130;
  friend void swap(TestVerifyBigFieldNumberUint32_Nested& a, TestVerifyBigFieldNumberUint32_Nested& b) { a.Swap(&b); }
  inline void Swap(TestVerifyBigFieldNumberUint32_Nested* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyBigFieldNumberUint32_Nested* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyBigFieldNumberUint32_Nested* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyBigFieldNumberUint32_Nested>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyBigFieldNumberUint32_Nested& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyBigFieldNumberUint32_Nested& from) { TestVerifyBigFieldNumberUint32_Nested::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyBigFieldNumberUint32_Nested* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyBigFieldNumberUint32.Nested"; }

 protected:
  explicit TestVerifyBigFieldNumberUint32_Nested(::google::protobuf::Arena* arena);
  TestVerifyBigFieldNumberUint32_Nested(::google::protobuf::Arena* arena, const TestVerifyBigFieldNumberUint32_Nested& from);
  TestVerifyBigFieldNumberUint32_Nested(::google::protobuf::Arena* arena, TestVerifyBigFieldNumberUint32_Nested&& from) noexcept
      : TestVerifyBigFieldNumberUint32_Nested(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedNestedFieldNumber = 10,
    kOptionalNestedFieldNumber = 9,
    kOptionalUint321FieldNumber = 1,
    kOptionalUint322FieldNumber = 2,
    kOptionalUint3263FieldNumber = 63,
    kOptionalUint3264FieldNumber = 64,
    kOptionalUint3265FieldNumber = 65,
    kOptionalUint3266FieldNumber = 66,
    kOptionalUint321000FieldNumber = 1000,
    kOptionalUint325000FieldNumber = 5000,
  };
  // repeated .edition_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
  int repeated_nested_size() const;
  private:
  int _internal_repeated_nested_size() const;

  public:
  void clear_repeated_nested() ;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* mutable_repeated_nested(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>* mutable_repeated_nested();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>& _internal_repeated_nested() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>* _internal_mutable_repeated_nested();
  public:
  const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& repeated_nested(int index) const;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* add_repeated_nested();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>& repeated_nested() const;
  // .edition_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
  bool has_optional_nested() const;
  void clear_optional_nested() ;
  const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& optional_nested() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* release_optional_nested();
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* mutable_optional_nested();
  void set_allocated_optional_nested(::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* value);
  void unsafe_arena_set_allocated_optional_nested(::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* value);
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* unsafe_arena_release_optional_nested();

  private:
  const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& _internal_optional_nested() const;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* _internal_mutable_optional_nested();

  public:
  // uint32 optional_uint32_1 = 1;
  bool has_optional_uint32_1() const;
  void clear_optional_uint32_1() ;
  ::uint32_t optional_uint32_1() const;
  void set_optional_uint32_1(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_1() const;
  void _internal_set_optional_uint32_1(::uint32_t value);

  public:
  // uint32 optional_uint32_2 = 2;
  bool has_optional_uint32_2() const;
  void clear_optional_uint32_2() ;
  ::uint32_t optional_uint32_2() const;
  void set_optional_uint32_2(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_2() const;
  void _internal_set_optional_uint32_2(::uint32_t value);

  public:
  // uint32 optional_uint32_63 = 63;
  bool has_optional_uint32_63() const;
  void clear_optional_uint32_63() ;
  ::uint32_t optional_uint32_63() const;
  void set_optional_uint32_63(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_63() const;
  void _internal_set_optional_uint32_63(::uint32_t value);

  public:
  // uint32 optional_uint32_64 = 64;
  bool has_optional_uint32_64() const;
  void clear_optional_uint32_64() ;
  ::uint32_t optional_uint32_64() const;
  void set_optional_uint32_64(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_64() const;
  void _internal_set_optional_uint32_64(::uint32_t value);

  public:
  // uint32 optional_uint32_65 = 65;
  bool has_optional_uint32_65() const;
  void clear_optional_uint32_65() ;
  ::uint32_t optional_uint32_65() const;
  void set_optional_uint32_65(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_65() const;
  void _internal_set_optional_uint32_65(::uint32_t value);

  public:
  // uint32 optional_uint32_66 = 66;
  bool has_optional_uint32_66() const;
  void clear_optional_uint32_66() ;
  ::uint32_t optional_uint32_66() const;
  void set_optional_uint32_66(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_66() const;
  void _internal_set_optional_uint32_66(::uint32_t value);

  public:
  // uint32 optional_uint32_1000 = 1000;
  bool has_optional_uint32_1000() const;
  void clear_optional_uint32_1000() ;
  ::uint32_t optional_uint32_1000() const;
  void set_optional_uint32_1000(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_1000() const;
  void _internal_set_optional_uint32_1000(::uint32_t value);

  public:
  // uint32 optional_uint32_5000 = 5000;
  bool has_optional_uint32_5000() const;
  void clear_optional_uint32_5000() ;
  ::uint32_t optional_uint32_5000() const;
  void set_optional_uint32_5000(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_5000() const;
  void _internal_set_optional_uint32_5000(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyBigFieldNumberUint32.Nested)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 2,
      0, 17>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyBigFieldNumberUint32_Nested_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyBigFieldNumberUint32_Nested& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested > repeated_nested_;
    ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* optional_nested_;
    ::uint32_t optional_uint32_1_;
    ::uint32_t optional_uint32_2_;
    ::uint32_t optional_uint32_63_;
    ::uint32_t optional_uint32_64_;
    ::uint32_t optional_uint32_65_;
    ::uint32_t optional_uint32_66_;
    ::uint32_t optional_uint32_1000_;
    ::uint32_t optional_uint32_5000_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestUnpackedTypes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestUnpackedTypes) */ {
 public:
  inline TestUnpackedTypes() : TestUnpackedTypes(nullptr) {}
  ~TestUnpackedTypes() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestUnpackedTypes(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestUnpackedTypes(const TestUnpackedTypes& from) : TestUnpackedTypes(nullptr, from) {}
  inline TestUnpackedTypes(TestUnpackedTypes&& from) noexcept
      : TestUnpackedTypes(nullptr, std::move(from)) {}
  inline TestUnpackedTypes& operator=(const TestUnpackedTypes& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestUnpackedTypes& operator=(TestUnpackedTypes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestUnpackedTypes& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestUnpackedTypes* internal_default_instance() {
    return reinterpret_cast<const TestUnpackedTypes*>(
        &_TestUnpackedTypes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 87;
  friend void swap(TestUnpackedTypes& a, TestUnpackedTypes& b) { a.Swap(&b); }
  inline void Swap(TestUnpackedTypes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestUnpackedTypes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestUnpackedTypes* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestUnpackedTypes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestUnpackedTypes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestUnpackedTypes& from) { TestUnpackedTypes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestUnpackedTypes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestUnpackedTypes"; }

 protected:
  explicit TestUnpackedTypes(::google::protobuf::Arena* arena);
  TestUnpackedTypes(::google::protobuf::Arena* arena, const TestUnpackedTypes& from);
  TestUnpackedTypes(::google::protobuf::Arena* arena, TestUnpackedTypes&& from) noexcept
      : TestUnpackedTypes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUnpackedInt32FieldNumber = 90,
    kUnpackedInt64FieldNumber = 91,
    kUnpackedUint32FieldNumber = 92,
    kUnpackedUint64FieldNumber = 93,
    kUnpackedSint32FieldNumber = 94,
    kUnpackedSint64FieldNumber = 95,
    kUnpackedFixed32FieldNumber = 96,
    kUnpackedFixed64FieldNumber = 97,
    kUnpackedSfixed32FieldNumber = 98,
    kUnpackedSfixed64FieldNumber = 99,
    kUnpackedFloatFieldNumber = 100,
    kUnpackedDoubleFieldNumber = 101,
    kUnpackedBoolFieldNumber = 102,
    kUnpackedEnumFieldNumber = 103,
  };
  // repeated int32 unpacked_int32 = 90 [features = {
  int unpacked_int32_size() const;
  private:
  int _internal_unpacked_int32_size() const;

  public:
  void clear_unpacked_int32() ;
  ::int32_t unpacked_int32(int index) const;
  void set_unpacked_int32(int index, ::int32_t value);
  void add_unpacked_int32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& unpacked_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_unpacked_int32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_unpacked_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_unpacked_int32();

  public:
  // repeated int64 unpacked_int64 = 91 [features = {
  int unpacked_int64_size() const;
  private:
  int _internal_unpacked_int64_size() const;

  public:
  void clear_unpacked_int64() ;
  ::int64_t unpacked_int64(int index) const;
  void set_unpacked_int64(int index, ::int64_t value);
  void add_unpacked_int64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& unpacked_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_unpacked_int64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_unpacked_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_unpacked_int64();

  public:
  // repeated uint32 unpacked_uint32 = 92 [features = {
  int unpacked_uint32_size() const;
  private:
  int _internal_unpacked_uint32_size() const;

  public:
  void clear_unpacked_uint32() ;
  ::uint32_t unpacked_uint32(int index) const;
  void set_unpacked_uint32(int index, ::uint32_t value);
  void add_unpacked_uint32(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& unpacked_uint32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_unpacked_uint32();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_unpacked_uint32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_unpacked_uint32();

  public:
  // repeated uint64 unpacked_uint64 = 93 [features = {
  int unpacked_uint64_size() const;
  private:
  int _internal_unpacked_uint64_size() const;

  public:
  void clear_unpacked_uint64() ;
  ::uint64_t unpacked_uint64(int index) const;
  void set_unpacked_uint64(int index, ::uint64_t value);
  void add_unpacked_uint64(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& unpacked_uint64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_unpacked_uint64();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_unpacked_uint64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_unpacked_uint64();

  public:
  // repeated sint32 unpacked_sint32 = 94 [features = {
  int unpacked_sint32_size() const;
  private:
  int _internal_unpacked_sint32_size() const;

  public:
  void clear_unpacked_sint32() ;
  ::int32_t unpacked_sint32(int index) const;
  void set_unpacked_sint32(int index, ::int32_t value);
  void add_unpacked_sint32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& unpacked_sint32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_unpacked_sint32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_unpacked_sint32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_unpacked_sint32();

  public:
  // repeated sint64 unpacked_sint64 = 95 [features = {
  int unpacked_sint64_size() const;
  private:
  int _internal_unpacked_sint64_size() const;

  public:
  void clear_unpacked_sint64() ;
  ::int64_t unpacked_sint64(int index) const;
  void set_unpacked_sint64(int index, ::int64_t value);
  void add_unpacked_sint64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& unpacked_sint64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_unpacked_sint64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_unpacked_sint64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_unpacked_sint64();

  public:
  // repeated fixed32 unpacked_fixed32 = 96 [features = {
  int unpacked_fixed32_size() const;
  private:
  int _internal_unpacked_fixed32_size() const;

  public:
  void clear_unpacked_fixed32() ;
  ::uint32_t unpacked_fixed32(int index) const;
  void set_unpacked_fixed32(int index, ::uint32_t value);
  void add_unpacked_fixed32(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& unpacked_fixed32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_unpacked_fixed32();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_unpacked_fixed32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_unpacked_fixed32();

  public:
  // repeated fixed64 unpacked_fixed64 = 97 [features = {
  int unpacked_fixed64_size() const;
  private:
  int _internal_unpacked_fixed64_size() const;

  public:
  void clear_unpacked_fixed64() ;
  ::uint64_t unpacked_fixed64(int index) const;
  void set_unpacked_fixed64(int index, ::uint64_t value);
  void add_unpacked_fixed64(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& unpacked_fixed64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_unpacked_fixed64();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_unpacked_fixed64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_unpacked_fixed64();

  public:
  // repeated sfixed32 unpacked_sfixed32 = 98 [features = {
  int unpacked_sfixed32_size() const;
  private:
  int _internal_unpacked_sfixed32_size() const;

  public:
  void clear_unpacked_sfixed32() ;
  ::int32_t unpacked_sfixed32(int index) const;
  void set_unpacked_sfixed32(int index, ::int32_t value);
  void add_unpacked_sfixed32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& unpacked_sfixed32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_unpacked_sfixed32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_unpacked_sfixed32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_unpacked_sfixed32();

  public:
  // repeated sfixed64 unpacked_sfixed64 = 99 [features = {
  int unpacked_sfixed64_size() const;
  private:
  int _internal_unpacked_sfixed64_size() const;

  public:
  void clear_unpacked_sfixed64() ;
  ::int64_t unpacked_sfixed64(int index) const;
  void set_unpacked_sfixed64(int index, ::int64_t value);
  void add_unpacked_sfixed64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& unpacked_sfixed64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_unpacked_sfixed64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_unpacked_sfixed64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_unpacked_sfixed64();

  public:
  // repeated float unpacked_float = 100 [features = {
  int unpacked_float_size() const;
  private:
  int _internal_unpacked_float_size() const;

  public:
  void clear_unpacked_float() ;
  float unpacked_float(int index) const;
  void set_unpacked_float(int index, float value);
  void add_unpacked_float(float value);
  const ::google::protobuf::RepeatedField<float>& unpacked_float() const;
  ::google::protobuf::RepeatedField<float>* mutable_unpacked_float();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_unpacked_float() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_unpacked_float();

  public:
  // repeated double unpacked_double = 101 [features = {
  int unpacked_double_size() const;
  private:
  int _internal_unpacked_double_size() const;

  public:
  void clear_unpacked_double() ;
  double unpacked_double(int index) const;
  void set_unpacked_double(int index, double value);
  void add_unpacked_double(double value);
  const ::google::protobuf::RepeatedField<double>& unpacked_double() const;
  ::google::protobuf::RepeatedField<double>* mutable_unpacked_double();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_unpacked_double() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_unpacked_double();

  public:
  // repeated bool unpacked_bool = 102 [features = {
  int unpacked_bool_size() const;
  private:
  int _internal_unpacked_bool_size() const;

  public:
  void clear_unpacked_bool() ;
  bool unpacked_bool(int index) const;
  void set_unpacked_bool(int index, bool value);
  void add_unpacked_bool(bool value);
  const ::google::protobuf::RepeatedField<bool>& unpacked_bool() const;
  ::google::protobuf::RepeatedField<bool>* mutable_unpacked_bool();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_unpacked_bool() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_unpacked_bool();

  public:
  // repeated .edition_unittest.ForeignEnum unpacked_enum = 103 [features = {
  int unpacked_enum_size() const;
  private:
  int _internal_unpacked_enum_size() const;

  public:
  void clear_unpacked_enum() ;
  public:
  ::edition_unittest::ForeignEnum unpacked_enum(int index) const;
  void set_unpacked_enum(int index, ::edition_unittest::ForeignEnum value);
  void add_unpacked_enum(::edition_unittest::ForeignEnum value);
  const ::google::protobuf::RepeatedField<int>& unpacked_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_unpacked_enum();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_unpacked_enum() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_unpacked_enum();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestUnpackedTypes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 1,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestUnpackedTypes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestUnpackedTypes& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> unpacked_int32_;
    ::google::protobuf::RepeatedField<::int64_t> unpacked_int64_;
    ::google::protobuf::RepeatedField<::uint32_t> unpacked_uint32_;
    ::google::protobuf::RepeatedField<::uint64_t> unpacked_uint64_;
    ::google::protobuf::RepeatedField<::int32_t> unpacked_sint32_;
    ::google::protobuf::RepeatedField<::int64_t> unpacked_sint64_;
    ::google::protobuf::RepeatedField<::uint32_t> unpacked_fixed32_;
    ::google::protobuf::RepeatedField<::uint64_t> unpacked_fixed64_;
    ::google::protobuf::RepeatedField<::int32_t> unpacked_sfixed32_;
    ::google::protobuf::RepeatedField<::int64_t> unpacked_sfixed64_;
    ::google::protobuf::RepeatedField<float> unpacked_float_;
    ::google::protobuf::RepeatedField<double> unpacked_double_;
    ::google::protobuf::RepeatedField<bool> unpacked_bool_;
    ::google::protobuf::RepeatedField<int> unpacked_enum_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestUnpackedExtensions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestUnpackedExtensions) */ {
 public:
  inline TestUnpackedExtensions() : TestUnpackedExtensions(nullptr) {}
  ~TestUnpackedExtensions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestUnpackedExtensions(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestUnpackedExtensions(const TestUnpackedExtensions& from) : TestUnpackedExtensions(nullptr, from) {}
  inline TestUnpackedExtensions(TestUnpackedExtensions&& from) noexcept
      : TestUnpackedExtensions(nullptr, std::move(from)) {}
  inline TestUnpackedExtensions& operator=(const TestUnpackedExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestUnpackedExtensions& operator=(TestUnpackedExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestUnpackedExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestUnpackedExtensions* internal_default_instance() {
    return reinterpret_cast<const TestUnpackedExtensions*>(
        &_TestUnpackedExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 89;
  friend void swap(TestUnpackedExtensions& a, TestUnpackedExtensions& b) { a.Swap(&b); }
  inline void Swap(TestUnpackedExtensions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestUnpackedExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestUnpackedExtensions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestUnpackedExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestUnpackedExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestUnpackedExtensions& from) { TestUnpackedExtensions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestUnpackedExtensions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestUnpackedExtensions"; }

 protected:
  explicit TestUnpackedExtensions(::google::protobuf::Arena* arena);
  TestUnpackedExtensions(::google::protobuf::Arena* arena, const TestUnpackedExtensions& from);
  TestUnpackedExtensions(::google::protobuf::Arena* arena, TestUnpackedExtensions&& from) noexcept
      : TestUnpackedExtensions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestUnpackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestUnpackedExtensions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestUnpackedExtensions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestUnpackedExtensions& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestReservedFields final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.TestReservedFields) */ {
 public:
  inline TestReservedFields() : TestReservedFields(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestReservedFields(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestReservedFields(const TestReservedFields& from) : TestReservedFields(nullptr, from) {}
  inline TestReservedFields(TestReservedFields&& from) noexcept
      : TestReservedFields(nullptr, std::move(from)) {}
  inline TestReservedFields& operator=(const TestReservedFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestReservedFields& operator=(TestReservedFields&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestReservedFields& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestReservedFields* internal_default_instance() {
    return reinterpret_cast<const TestReservedFields*>(
        &_TestReservedFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(TestReservedFields& a, TestReservedFields& b) { a.Swap(&b); }
  inline void Swap(TestReservedFields* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestReservedFields* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestReservedFields* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestReservedFields>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestReservedFields& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestReservedFields& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestReservedFields"; }

 protected:
  explicit TestReservedFields(::google::protobuf::Arena* arena);
  TestReservedFields(::google::protobuf::Arena* arena, const TestReservedFields& from);
  TestReservedFields(::google::protobuf::Arena* arena, TestReservedFields&& from) noexcept
      : TestReservedFields(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.TestReservedFields)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestReservedFields_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestReservedFields& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequiredOneof_NestedMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequiredOneof.NestedMessage) */ {
 public:
  inline TestRequiredOneof_NestedMessage() : TestRequiredOneof_NestedMessage(nullptr) {}
  ~TestRequiredOneof_NestedMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredOneof_NestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredOneof_NestedMessage(const TestRequiredOneof_NestedMessage& from) : TestRequiredOneof_NestedMessage(nullptr, from) {}
  inline TestRequiredOneof_NestedMessage(TestRequiredOneof_NestedMessage&& from) noexcept
      : TestRequiredOneof_NestedMessage(nullptr, std::move(from)) {}
  inline TestRequiredOneof_NestedMessage& operator=(const TestRequiredOneof_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredOneof_NestedMessage& operator=(TestRequiredOneof_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredOneof_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredOneof_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestRequiredOneof_NestedMessage*>(
        &_TestRequiredOneof_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 84;
  friend void swap(TestRequiredOneof_NestedMessage& a, TestRequiredOneof_NestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestRequiredOneof_NestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredOneof_NestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredOneof_NestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequiredOneof_NestedMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredOneof_NestedMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequiredOneof_NestedMessage& from) { TestRequiredOneof_NestedMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredOneof_NestedMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequiredOneof.NestedMessage"; }

 protected:
  explicit TestRequiredOneof_NestedMessage(::google::protobuf::Arena* arena);
  TestRequiredOneof_NestedMessage(::google::protobuf::Arena* arena, const TestRequiredOneof_NestedMessage& from);
  TestRequiredOneof_NestedMessage(::google::protobuf::Arena* arena, TestRequiredOneof_NestedMessage&& from) noexcept
      : TestRequiredOneof_NestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequiredDoubleFieldNumber = 1,
  };
  // double required_double = 1 [features = {
  bool has_required_double() const;
  void clear_required_double() ;
  double required_double() const;
  void set_required_double(double value);

  private:
  double _internal_required_double() const;
  void _internal_set_required_double(double value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequiredOneof.NestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredOneof_NestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredOneof_NestedMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double required_double_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequiredNoMaskMulti final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequiredNoMaskMulti) */ {
 public:
  inline TestRequiredNoMaskMulti() : TestRequiredNoMaskMulti(nullptr) {}
  ~TestRequiredNoMaskMulti() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredNoMaskMulti(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredNoMaskMulti(const TestRequiredNoMaskMulti& from) : TestRequiredNoMaskMulti(nullptr, from) {}
  inline TestRequiredNoMaskMulti(TestRequiredNoMaskMulti&& from) noexcept
      : TestRequiredNoMaskMulti(nullptr, std::move(from)) {}
  inline TestRequiredNoMaskMulti& operator=(const TestRequiredNoMaskMulti& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredNoMaskMulti& operator=(TestRequiredNoMaskMulti&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredNoMaskMulti& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredNoMaskMulti* internal_default_instance() {
    return reinterpret_cast<const TestRequiredNoMaskMulti*>(
        &_TestRequiredNoMaskMulti_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(TestRequiredNoMaskMulti& a, TestRequiredNoMaskMulti& b) { a.Swap(&b); }
  inline void Swap(TestRequiredNoMaskMulti* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredNoMaskMulti* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredNoMaskMulti* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequiredNoMaskMulti>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredNoMaskMulti& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequiredNoMaskMulti& from) { TestRequiredNoMaskMulti::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredNoMaskMulti* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequiredNoMaskMulti"; }

 protected:
  explicit TestRequiredNoMaskMulti(::google::protobuf::Arena* arena);
  TestRequiredNoMaskMulti(::google::protobuf::Arena* arena, const TestRequiredNoMaskMulti& from);
  TestRequiredNoMaskMulti(::google::protobuf::Arena* arena, TestRequiredNoMaskMulti&& from) noexcept
      : TestRequiredNoMaskMulti(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedEnum = TestRequiredNoMaskMulti_NestedEnum;
  static constexpr NestedEnum UNSPECIFIED = TestRequiredNoMaskMulti_NestedEnum_UNSPECIFIED;
  static constexpr NestedEnum FOO = TestRequiredNoMaskMulti_NestedEnum_FOO;
  static constexpr NestedEnum BAR = TestRequiredNoMaskMulti_NestedEnum_BAR;
  static constexpr NestedEnum BAZ = TestRequiredNoMaskMulti_NestedEnum_BAZ;
  static inline bool NestedEnum_IsValid(int value) {
    return TestRequiredNoMaskMulti_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN = TestRequiredNoMaskMulti_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX = TestRequiredNoMaskMulti_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE = TestRequiredNoMaskMulti_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NestedEnum_descriptor() {
    return TestRequiredNoMaskMulti_NestedEnum_descriptor();
  }
  template <typename T>
  static inline const std::string& NestedEnum_Name(T value) {
    return TestRequiredNoMaskMulti_NestedEnum_Name(value);
  }
  static inline bool NestedEnum_Parse(absl::string_view name, NestedEnum* value) {
    return TestRequiredNoMaskMulti_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRequiredEnum2FieldNumber = 2,
    kA3FieldNumber = 3,
    kRequiredEnum4FieldNumber = 4,
    kRequiredEnum64FieldNumber = 64,
    kRequiredFixed3270FieldNumber = 70,
    kRequiredFixed3280FieldNumber = 80,
    kRequiredEnum1FieldNumber = 1,
  };
  // .edition_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_2 = 2 [features = {
  bool has_required_enum_2() const;
  void clear_required_enum_2() ;
  ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum required_enum_2() const;
  void set_required_enum_2(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value);

  private:
  ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum _internal_required_enum_2() const;
  void _internal_set_required_enum_2(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value);

  public:
  // int32 a_3 = 3;
  bool has_a_3() const;
  void clear_a_3() ;
  ::int32_t a_3() const;
  void set_a_3(::int32_t value);

  private:
  ::int32_t _internal_a_3() const;
  void _internal_set_a_3(::int32_t value);

  public:
  // .edition_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_4 = 4 [features = {
  bool has_required_enum_4() const;
  void clear_required_enum_4() ;
  ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum required_enum_4() const;
  void set_required_enum_4(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value);

  private:
  ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum _internal_required_enum_4() const;
  void _internal_set_required_enum_4(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value);

  public:
  // .edition_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_64 = 64 [features = {
  bool has_required_enum_64() const;
  void clear_required_enum_64() ;
  ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum required_enum_64() const;
  void set_required_enum_64(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value);

  private:
  ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum _internal_required_enum_64() const;
  void _internal_set_required_enum_64(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value);

  public:
  // fixed32 required_fixed32_70 = 70 [features = {
  bool has_required_fixed32_70() const;
  void clear_required_fixed32_70() ;
  ::uint32_t required_fixed32_70() const;
  void set_required_fixed32_70(::uint32_t value);

  private:
  ::uint32_t _internal_required_fixed32_70() const;
  void _internal_set_required_fixed32_70(::uint32_t value);

  public:
  // fixed32 required_fixed32_80 = 80 [features = {
  bool has_required_fixed32_80() const;
  void clear_required_fixed32_80() ;
  ::uint32_t required_fixed32_80() const;
  void set_required_fixed32_80(::uint32_t value);

  private:
  ::uint32_t _internal_required_fixed32_80() const;
  void _internal_set_required_fixed32_80(::uint32_t value);

  public:
  // .edition_unittest.ForeignEnum required_enum_1 = 1 [features = {
  bool has_required_enum_1() const;
  void clear_required_enum_1() ;
  ::edition_unittest::ForeignEnum required_enum_1() const;
  void set_required_enum_1(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_required_enum_1() const;
  void _internal_set_required_enum_1(::edition_unittest::ForeignEnum value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequiredNoMaskMulti)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      0, 9>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredNoMaskMulti_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredNoMaskMulti& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int required_enum_2_;
    ::int32_t a_3_;
    int required_enum_4_;
    int required_enum_64_;
    ::uint32_t required_fixed32_70_;
    ::uint32_t required_fixed32_80_;
    int required_enum_1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequiredEnumNoMask final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequiredEnumNoMask) */ {
 public:
  inline TestRequiredEnumNoMask() : TestRequiredEnumNoMask(nullptr) {}
  ~TestRequiredEnumNoMask() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredEnumNoMask(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredEnumNoMask(const TestRequiredEnumNoMask& from) : TestRequiredEnumNoMask(nullptr, from) {}
  inline TestRequiredEnumNoMask(TestRequiredEnumNoMask&& from) noexcept
      : TestRequiredEnumNoMask(nullptr, std::move(from)) {}
  inline TestRequiredEnumNoMask& operator=(const TestRequiredEnumNoMask& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredEnumNoMask& operator=(TestRequiredEnumNoMask&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredEnumNoMask& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredEnumNoMask* internal_default_instance() {
    return reinterpret_cast<const TestRequiredEnumNoMask*>(
        &_TestRequiredEnumNoMask_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(TestRequiredEnumNoMask& a, TestRequiredEnumNoMask& b) { a.Swap(&b); }
  inline void Swap(TestRequiredEnumNoMask* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredEnumNoMask* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredEnumNoMask* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequiredEnumNoMask>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredEnumNoMask& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequiredEnumNoMask& from) { TestRequiredEnumNoMask::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredEnumNoMask* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequiredEnumNoMask"; }

 protected:
  explicit TestRequiredEnumNoMask(::google::protobuf::Arena* arena);
  TestRequiredEnumNoMask(::google::protobuf::Arena* arena, const TestRequiredEnumNoMask& from);
  TestRequiredEnumNoMask(::google::protobuf::Arena* arena, TestRequiredEnumNoMask&& from) noexcept
      : TestRequiredEnumNoMask(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedEnum = TestRequiredEnumNoMask_NestedEnum;
  static constexpr NestedEnum UNSPECIFIED = TestRequiredEnumNoMask_NestedEnum_UNSPECIFIED;
  static constexpr NestedEnum FOO = TestRequiredEnumNoMask_NestedEnum_FOO;
  static constexpr NestedEnum BAR = TestRequiredEnumNoMask_NestedEnum_BAR;
  static constexpr NestedEnum BAZ = TestRequiredEnumNoMask_NestedEnum_BAZ;
  static inline bool NestedEnum_IsValid(int value) {
    return TestRequiredEnumNoMask_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN = TestRequiredEnumNoMask_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX = TestRequiredEnumNoMask_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE = TestRequiredEnumNoMask_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NestedEnum_descriptor() {
    return TestRequiredEnumNoMask_NestedEnum_descriptor();
  }
  template <typename T>
  static inline const std::string& NestedEnum_Name(T value) {
    return TestRequiredEnumNoMask_NestedEnum_Name(value);
  }
  static inline bool NestedEnum_Parse(absl::string_view name, NestedEnum* value) {
    return TestRequiredEnumNoMask_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRequiredEnumFieldNumber = 1,
    kAFieldNumber = 2,
  };
  // .edition_unittest.TestRequiredEnumNoMask.NestedEnum required_enum = 1 [features = {
  bool has_required_enum() const;
  void clear_required_enum() ;
  ::edition_unittest::TestRequiredEnumNoMask_NestedEnum required_enum() const;
  void set_required_enum(::edition_unittest::TestRequiredEnumNoMask_NestedEnum value);

  private:
  ::edition_unittest::TestRequiredEnumNoMask_NestedEnum _internal_required_enum() const;
  void _internal_set_required_enum(::edition_unittest::TestRequiredEnumNoMask_NestedEnum value);

  public:
  // int32 a = 2;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequiredEnumNoMask)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredEnumNoMask_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredEnumNoMask& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int required_enum_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequiredEnumMulti final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequiredEnumMulti) */ {
 public:
  inline TestRequiredEnumMulti() : TestRequiredEnumMulti(nullptr) {}
  ~TestRequiredEnumMulti() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredEnumMulti(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredEnumMulti(const TestRequiredEnumMulti& from) : TestRequiredEnumMulti(nullptr, from) {}
  inline TestRequiredEnumMulti(TestRequiredEnumMulti&& from) noexcept
      : TestRequiredEnumMulti(nullptr, std::move(from)) {}
  inline TestRequiredEnumMulti& operator=(const TestRequiredEnumMulti& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredEnumMulti& operator=(TestRequiredEnumMulti&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredEnumMulti& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredEnumMulti* internal_default_instance() {
    return reinterpret_cast<const TestRequiredEnumMulti*>(
        &_TestRequiredEnumMulti_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(TestRequiredEnumMulti& a, TestRequiredEnumMulti& b) { a.Swap(&b); }
  inline void Swap(TestRequiredEnumMulti* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredEnumMulti* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredEnumMulti* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequiredEnumMulti>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredEnumMulti& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequiredEnumMulti& from) { TestRequiredEnumMulti::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredEnumMulti* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequiredEnumMulti"; }

 protected:
  explicit TestRequiredEnumMulti(::google::protobuf::Arena* arena);
  TestRequiredEnumMulti(::google::protobuf::Arena* arena, const TestRequiredEnumMulti& from);
  TestRequiredEnumMulti(::google::protobuf::Arena* arena, TestRequiredEnumMulti&& from) noexcept
      : TestRequiredEnumMulti(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedEnum = TestRequiredEnumMulti_NestedEnum;
  static constexpr NestedEnum UNSPECIFIED = TestRequiredEnumMulti_NestedEnum_UNSPECIFIED;
  static constexpr NestedEnum FOO = TestRequiredEnumMulti_NestedEnum_FOO;
  static constexpr NestedEnum BAR = TestRequiredEnumMulti_NestedEnum_BAR;
  static constexpr NestedEnum BAZ = TestRequiredEnumMulti_NestedEnum_BAZ;
  static inline bool NestedEnum_IsValid(int value) {
    return TestRequiredEnumMulti_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN = TestRequiredEnumMulti_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX = TestRequiredEnumMulti_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE = TestRequiredEnumMulti_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NestedEnum_descriptor() {
    return TestRequiredEnumMulti_NestedEnum_descriptor();
  }
  template <typename T>
  static inline const std::string& NestedEnum_Name(T value) {
    return TestRequiredEnumMulti_NestedEnum_Name(value);
  }
  static inline bool NestedEnum_Parse(absl::string_view name, NestedEnum* value) {
    return TestRequiredEnumMulti_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRequiredEnum2FieldNumber = 2,
    kA3FieldNumber = 3,
    kRequiredEnum4FieldNumber = 4,
    kRequiredEnum1FieldNumber = 1,
  };
  // .edition_unittest.TestRequiredEnumMulti.NestedEnum required_enum_2 = 2 [features = {
  bool has_required_enum_2() const;
  void clear_required_enum_2() ;
  ::edition_unittest::TestRequiredEnumMulti_NestedEnum required_enum_2() const;
  void set_required_enum_2(::edition_unittest::TestRequiredEnumMulti_NestedEnum value);

  private:
  ::edition_unittest::TestRequiredEnumMulti_NestedEnum _internal_required_enum_2() const;
  void _internal_set_required_enum_2(::edition_unittest::TestRequiredEnumMulti_NestedEnum value);

  public:
  // int32 a_3 = 3;
  bool has_a_3() const;
  void clear_a_3() ;
  ::int32_t a_3() const;
  void set_a_3(::int32_t value);

  private:
  ::int32_t _internal_a_3() const;
  void _internal_set_a_3(::int32_t value);

  public:
  // .edition_unittest.TestRequiredEnumMulti.NestedEnum required_enum_4 = 4 [features = {
  bool has_required_enum_4() const;
  void clear_required_enum_4() ;
  ::edition_unittest::TestRequiredEnumMulti_NestedEnum required_enum_4() const;
  void set_required_enum_4(::edition_unittest::TestRequiredEnumMulti_NestedEnum value);

  private:
  ::edition_unittest::TestRequiredEnumMulti_NestedEnum _internal_required_enum_4() const;
  void _internal_set_required_enum_4(::edition_unittest::TestRequiredEnumMulti_NestedEnum value);

  public:
  // .edition_unittest.ForeignEnum required_enum_1 = 1 [features = {
  bool has_required_enum_1() const;
  void clear_required_enum_1() ;
  ::edition_unittest::ForeignEnum required_enum_1() const;
  void set_required_enum_1(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_required_enum_1() const;
  void _internal_set_required_enum_1(::edition_unittest::ForeignEnum value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequiredEnumMulti)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredEnumMulti_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredEnumMulti& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int required_enum_2_;
    ::int32_t a_3_;
    int required_enum_4_;
    int required_enum_1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequiredEnum final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequiredEnum) */ {
 public:
  inline TestRequiredEnum() : TestRequiredEnum(nullptr) {}
  ~TestRequiredEnum() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredEnum(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredEnum(const TestRequiredEnum& from) : TestRequiredEnum(nullptr, from) {}
  inline TestRequiredEnum(TestRequiredEnum&& from) noexcept
      : TestRequiredEnum(nullptr, std::move(from)) {}
  inline TestRequiredEnum& operator=(const TestRequiredEnum& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredEnum& operator=(TestRequiredEnum&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredEnum& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredEnum* internal_default_instance() {
    return reinterpret_cast<const TestRequiredEnum*>(
        &_TestRequiredEnum_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(TestRequiredEnum& a, TestRequiredEnum& b) { a.Swap(&b); }
  inline void Swap(TestRequiredEnum* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredEnum* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredEnum* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequiredEnum>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredEnum& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequiredEnum& from) { TestRequiredEnum::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredEnum* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequiredEnum"; }

 protected:
  explicit TestRequiredEnum(::google::protobuf::Arena* arena);
  TestRequiredEnum(::google::protobuf::Arena* arena, const TestRequiredEnum& from);
  TestRequiredEnum(::google::protobuf::Arena* arena, TestRequiredEnum&& from) noexcept
      : TestRequiredEnum(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 2,
    kRequiredEnumFieldNumber = 1,
  };
  // int32 a = 2;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // .edition_unittest.ForeignEnum required_enum = 1 [features = {
  bool has_required_enum() const;
  void clear_required_enum() ;
  ::edition_unittest::ForeignEnum required_enum() const;
  void set_required_enum(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_required_enum() const;
  void _internal_set_required_enum(::edition_unittest::ForeignEnum value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequiredEnum)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredEnum_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredEnum& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    int required_enum_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRepeatedString final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRepeatedString) */ {
 public:
  inline TestRepeatedString() : TestRepeatedString(nullptr) {}
  ~TestRepeatedString() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRepeatedString(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRepeatedString(const TestRepeatedString& from) : TestRepeatedString(nullptr, from) {}
  inline TestRepeatedString(TestRepeatedString&& from) noexcept
      : TestRepeatedString(nullptr, std::move(from)) {}
  inline TestRepeatedString& operator=(const TestRepeatedString& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRepeatedString& operator=(TestRepeatedString&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRepeatedString& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRepeatedString* internal_default_instance() {
    return reinterpret_cast<const TestRepeatedString*>(
        &_TestRepeatedString_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 92;
  friend void swap(TestRepeatedString& a, TestRepeatedString& b) { a.Swap(&b); }
  inline void Swap(TestRepeatedString* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRepeatedString* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRepeatedString* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRepeatedString>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRepeatedString& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRepeatedString& from) { TestRepeatedString::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRepeatedString* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRepeatedString"; }

 protected:
  explicit TestRepeatedString(::google::protobuf::Arena* arena);
  TestRepeatedString(::google::protobuf::Arena* arena, const TestRepeatedString& from);
  TestRepeatedString(::google::protobuf::Arena* arena, TestRepeatedString&& from) noexcept
      : TestRepeatedString(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedString1FieldNumber = 1,
    kRepeatedString2FieldNumber = 2,
    kRepeatedBytes11FieldNumber = 11,
    kRepeatedBytes12FieldNumber = 12,
  };
  // repeated string repeated_string1 = 1;
  int repeated_string1_size() const;
  private:
  int _internal_repeated_string1_size() const;

  public:
  void clear_repeated_string1() ;
  absl::string_view repeated_string1(int index) const;
  void set_repeated_string1(int index, const std::string& value);
  void set_repeated_string1(int index, std::string&& value);
  void set_repeated_string1(int index, const char* value);
  void set_repeated_string1(int index, absl::string_view value);
  void add_repeated_string1(const std::string& value);
  void add_repeated_string1(std::string&& value);
  void add_repeated_string1(const char* value);
  void add_repeated_string1(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string1() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string1();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string1() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string1();

  public:
  // repeated string repeated_string2 = 2;
  int repeated_string2_size() const;
  private:
  int _internal_repeated_string2_size() const;

  public:
  void clear_repeated_string2() ;
  absl::string_view repeated_string2(int index) const;
  void set_repeated_string2(int index, const std::string& value);
  void set_repeated_string2(int index, std::string&& value);
  void set_repeated_string2(int index, const char* value);
  void set_repeated_string2(int index, absl::string_view value);
  void add_repeated_string2(const std::string& value);
  void add_repeated_string2(std::string&& value);
  void add_repeated_string2(const char* value);
  void add_repeated_string2(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string2() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string2();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string2() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string2();

  public:
  // repeated bytes repeated_bytes11 = 11;
  int repeated_bytes11_size() const;
  private:
  int _internal_repeated_bytes11_size() const;

  public:
  void clear_repeated_bytes11() ;
  absl::string_view repeated_bytes11(int index) const;
  void set_repeated_bytes11(int index, const std::string& value);
  void set_repeated_bytes11(int index, std::string&& value);
  void set_repeated_bytes11(int index, const char* value);
  void set_repeated_bytes11(int index, absl::string_view value);
  void add_repeated_bytes11(const std::string& value);
  void add_repeated_bytes11(std::string&& value);
  void add_repeated_bytes11(const char* value);
  void add_repeated_bytes11(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_bytes11() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_bytes11();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_bytes11() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_bytes11();

  public:
  // repeated bytes repeated_bytes12 = 12;
  int repeated_bytes12_size() const;
  private:
  int _internal_repeated_bytes12_size() const;

  public:
  void clear_repeated_bytes12() ;
  absl::string_view repeated_bytes12(int index) const;
  void set_repeated_bytes12(int index, const std::string& value);
  void set_repeated_bytes12(int index, std::string&& value);
  void set_repeated_bytes12(int index, const char* value);
  void set_repeated_bytes12(int index, absl::string_view value);
  void add_repeated_bytes12(const std::string& value);
  void add_repeated_bytes12(std::string&& value);
  void add_repeated_bytes12(const char* value);
  void add_repeated_bytes12(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_bytes12() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_bytes12();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_bytes12() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_bytes12();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRepeatedString)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      76, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRepeatedString_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRepeatedString& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string1_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string2_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_bytes11_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_bytes12_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRepeatedScalarDifferentTagSizes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRepeatedScalarDifferentTagSizes) */ {
 public:
  inline TestRepeatedScalarDifferentTagSizes() : TestRepeatedScalarDifferentTagSizes(nullptr) {}
  ~TestRepeatedScalarDifferentTagSizes() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRepeatedScalarDifferentTagSizes(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRepeatedScalarDifferentTagSizes(const TestRepeatedScalarDifferentTagSizes& from) : TestRepeatedScalarDifferentTagSizes(nullptr, from) {}
  inline TestRepeatedScalarDifferentTagSizes(TestRepeatedScalarDifferentTagSizes&& from) noexcept
      : TestRepeatedScalarDifferentTagSizes(nullptr, std::move(from)) {}
  inline TestRepeatedScalarDifferentTagSizes& operator=(const TestRepeatedScalarDifferentTagSizes& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRepeatedScalarDifferentTagSizes& operator=(TestRepeatedScalarDifferentTagSizes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRepeatedScalarDifferentTagSizes& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRepeatedScalarDifferentTagSizes* internal_default_instance() {
    return reinterpret_cast<const TestRepeatedScalarDifferentTagSizes*>(
        &_TestRepeatedScalarDifferentTagSizes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 93;
  friend void swap(TestRepeatedScalarDifferentTagSizes& a, TestRepeatedScalarDifferentTagSizes& b) { a.Swap(&b); }
  inline void Swap(TestRepeatedScalarDifferentTagSizes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRepeatedScalarDifferentTagSizes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRepeatedScalarDifferentTagSizes* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRepeatedScalarDifferentTagSizes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRepeatedScalarDifferentTagSizes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRepeatedScalarDifferentTagSizes& from) { TestRepeatedScalarDifferentTagSizes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRepeatedScalarDifferentTagSizes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRepeatedScalarDifferentTagSizes"; }

 protected:
  explicit TestRepeatedScalarDifferentTagSizes(::google::protobuf::Arena* arena);
  TestRepeatedScalarDifferentTagSizes(::google::protobuf::Arena* arena, const TestRepeatedScalarDifferentTagSizes& from);
  TestRepeatedScalarDifferentTagSizes(::google::protobuf::Arena* arena, TestRepeatedScalarDifferentTagSizes&& from) noexcept
      : TestRepeatedScalarDifferentTagSizes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedFixed32FieldNumber = 12,
    kRepeatedInt32FieldNumber = 13,
    kRepeatedFixed64FieldNumber = 2046,
    kRepeatedInt64FieldNumber = 2047,
    kRepeatedFloatFieldNumber = 262142,
    kRepeatedUint64FieldNumber = 262143,
  };
  // repeated fixed32 repeated_fixed32 = 12;
  int repeated_fixed32_size() const;
  private:
  int _internal_repeated_fixed32_size() const;

  public:
  void clear_repeated_fixed32() ;
  ::uint32_t repeated_fixed32(int index) const;
  void set_repeated_fixed32(int index, ::uint32_t value);
  void add_repeated_fixed32(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& repeated_fixed32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_repeated_fixed32();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_repeated_fixed32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_repeated_fixed32();

  public:
  // repeated int32 repeated_int32 = 13;
  int repeated_int32_size() const;
  private:
  int _internal_repeated_int32_size() const;

  public:
  void clear_repeated_int32() ;
  ::int32_t repeated_int32(int index) const;
  void set_repeated_int32(int index, ::int32_t value);
  void add_repeated_int32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeated_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeated_int32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeated_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeated_int32();

  public:
  // repeated fixed64 repeated_fixed64 = 2046;
  int repeated_fixed64_size() const;
  private:
  int _internal_repeated_fixed64_size() const;

  public:
  void clear_repeated_fixed64() ;
  ::uint64_t repeated_fixed64(int index) const;
  void set_repeated_fixed64(int index, ::uint64_t value);
  void add_repeated_fixed64(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& repeated_fixed64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_repeated_fixed64();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_repeated_fixed64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_repeated_fixed64();

  public:
  // repeated int64 repeated_int64 = 2047;
  int repeated_int64_size() const;
  private:
  int _internal_repeated_int64_size() const;

  public:
  void clear_repeated_int64() ;
  ::int64_t repeated_int64(int index) const;
  void set_repeated_int64(int index, ::int64_t value);
  void add_repeated_int64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& repeated_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_repeated_int64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_repeated_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_repeated_int64();

  public:
  // repeated float repeated_float = 262142;
  int repeated_float_size() const;
  private:
  int _internal_repeated_float_size() const;

  public:
  void clear_repeated_float() ;
  float repeated_float(int index) const;
  void set_repeated_float(int index, float value);
  void add_repeated_float(float value);
  const ::google::protobuf::RepeatedField<float>& repeated_float() const;
  ::google::protobuf::RepeatedField<float>* mutable_repeated_float();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_repeated_float() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_repeated_float();

  public:
  // repeated uint64 repeated_uint64 = 262143;
  int repeated_uint64_size() const;
  private:
  int _internal_repeated_uint64_size() const;

  public:
  void clear_repeated_uint64() ;
  ::uint64_t repeated_uint64(int index) const;
  void set_repeated_uint64(int index, ::uint64_t value);
  void add_repeated_uint64(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& repeated_uint64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_repeated_uint64();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_repeated_uint64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_repeated_uint64();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRepeatedScalarDifferentTagSizes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 0,
      0, 12>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRepeatedScalarDifferentTagSizes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRepeatedScalarDifferentTagSizes& from_msg);
    ::google::protobuf::RepeatedField<::uint32_t> repeated_fixed32_;
    ::google::protobuf::RepeatedField<::int32_t> repeated_int32_;
    ::google::protobuf::internal::CachedSize _repeated_int32_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint64_t> repeated_fixed64_;
    ::google::protobuf::RepeatedField<::int64_t> repeated_int64_;
    ::google::protobuf::internal::CachedSize _repeated_int64_cached_byte_size_;
    ::google::protobuf::RepeatedField<float> repeated_float_;
    ::google::protobuf::RepeatedField<::uint64_t> repeated_uint64_;
    ::google::protobuf::internal::CachedSize _repeated_uint64_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRecursiveMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRecursiveMessage) */ {
 public:
  inline TestRecursiveMessage() : TestRecursiveMessage(nullptr) {}
  ~TestRecursiveMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRecursiveMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRecursiveMessage(const TestRecursiveMessage& from) : TestRecursiveMessage(nullptr, from) {}
  inline TestRecursiveMessage(TestRecursiveMessage&& from) noexcept
      : TestRecursiveMessage(nullptr, std::move(from)) {}
  inline TestRecursiveMessage& operator=(const TestRecursiveMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRecursiveMessage& operator=(TestRecursiveMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRecursiveMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRecursiveMessage* internal_default_instance() {
    return reinterpret_cast<const TestRecursiveMessage*>(
        &_TestRecursiveMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(TestRecursiveMessage& a, TestRecursiveMessage& b) { a.Swap(&b); }
  inline void Swap(TestRecursiveMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRecursiveMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRecursiveMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRecursiveMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRecursiveMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRecursiveMessage& from) { TestRecursiveMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRecursiveMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRecursiveMessage"; }

 protected:
  explicit TestRecursiveMessage(::google::protobuf::Arena* arena);
  TestRecursiveMessage(::google::protobuf::Arena* arena, const TestRecursiveMessage& from);
  TestRecursiveMessage(::google::protobuf::Arena* arena, TestRecursiveMessage&& from) noexcept
      : TestRecursiveMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kIFieldNumber = 2,
  };
  // .edition_unittest.TestRecursiveMessage a = 1;
  bool has_a() const;
  void clear_a() ;
  const ::edition_unittest::TestRecursiveMessage& a() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRecursiveMessage* release_a();
  ::edition_unittest::TestRecursiveMessage* mutable_a();
  void set_allocated_a(::edition_unittest::TestRecursiveMessage* value);
  void unsafe_arena_set_allocated_a(::edition_unittest::TestRecursiveMessage* value);
  ::edition_unittest::TestRecursiveMessage* unsafe_arena_release_a();

  private:
  const ::edition_unittest::TestRecursiveMessage& _internal_a() const;
  ::edition_unittest::TestRecursiveMessage* _internal_mutable_a();

  public:
  // int32 i = 2;
  bool has_i() const;
  void clear_i() ;
  ::int32_t i() const;
  void set_i(::int32_t value);

  private:
  ::int32_t _internal_i() const;
  void _internal_set_i(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRecursiveMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRecursiveMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRecursiveMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestRecursiveMessage* a_;
    ::int32_t i_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestReallyLargeTagNumber final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestReallyLargeTagNumber) */ {
 public:
  inline TestReallyLargeTagNumber() : TestReallyLargeTagNumber(nullptr) {}
  ~TestReallyLargeTagNumber() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestReallyLargeTagNumber(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestReallyLargeTagNumber(const TestReallyLargeTagNumber& from) : TestReallyLargeTagNumber(nullptr, from) {}
  inline TestReallyLargeTagNumber(TestReallyLargeTagNumber&& from) noexcept
      : TestReallyLargeTagNumber(nullptr, std::move(from)) {}
  inline TestReallyLargeTagNumber& operator=(const TestReallyLargeTagNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestReallyLargeTagNumber& operator=(TestReallyLargeTagNumber&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestReallyLargeTagNumber& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestReallyLargeTagNumber* internal_default_instance() {
    return reinterpret_cast<const TestReallyLargeTagNumber*>(
        &_TestReallyLargeTagNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(TestReallyLargeTagNumber& a, TestReallyLargeTagNumber& b) { a.Swap(&b); }
  inline void Swap(TestReallyLargeTagNumber* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestReallyLargeTagNumber* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestReallyLargeTagNumber* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestReallyLargeTagNumber>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestReallyLargeTagNumber& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestReallyLargeTagNumber& from) { TestReallyLargeTagNumber::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestReallyLargeTagNumber* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestReallyLargeTagNumber"; }

 protected:
  explicit TestReallyLargeTagNumber(::google::protobuf::Arena* arena);
  TestReallyLargeTagNumber(::google::protobuf::Arena* arena, const TestReallyLargeTagNumber& from);
  TestReallyLargeTagNumber(::google::protobuf::Arena* arena, TestReallyLargeTagNumber&& from) noexcept
      : TestReallyLargeTagNumber(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBbFieldNumber = 268435455,
  };
  // int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // int32 bb = 268435455;
  bool has_bb() const;
  void clear_bb() ;
  ::int32_t bb() const;
  void set_bb(::int32_t value);

  private:
  ::int32_t _internal_bb() const;
  void _internal_set_bb(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestReallyLargeTagNumber)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestReallyLargeTagNumber_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestReallyLargeTagNumber& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    ::int32_t bb_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestPickleNestedMessage_NestedMessage_NestedNestedMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage) */ {
 public:
  inline TestPickleNestedMessage_NestedMessage_NestedNestedMessage() : TestPickleNestedMessage_NestedMessage_NestedNestedMessage(nullptr) {}
  ~TestPickleNestedMessage_NestedMessage_NestedNestedMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessage_NestedNestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestPickleNestedMessage_NestedMessage_NestedNestedMessage(const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from) : TestPickleNestedMessage_NestedMessage_NestedNestedMessage(nullptr, from) {}
  inline TestPickleNestedMessage_NestedMessage_NestedNestedMessage(TestPickleNestedMessage_NestedMessage_NestedNestedMessage&& from) noexcept
      : TestPickleNestedMessage_NestedMessage_NestedNestedMessage(nullptr, std::move(from)) {}
  inline TestPickleNestedMessage_NestedMessage_NestedNestedMessage& operator=(const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestPickleNestedMessage_NestedMessage_NestedNestedMessage& operator=(TestPickleNestedMessage_NestedMessage_NestedNestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestPickleNestedMessage_NestedMessage_NestedNestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestPickleNestedMessage_NestedMessage_NestedNestedMessage*>(
        &_TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(TestPickleNestedMessage_NestedMessage_NestedNestedMessage& a, TestPickleNestedMessage_NestedMessage_NestedNestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestPickleNestedMessage_NestedMessage_NestedNestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestPickleNestedMessage_NestedMessage_NestedNestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestPickleNestedMessage_NestedMessage_NestedNestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestPickleNestedMessage_NestedMessage_NestedNestedMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from) { TestPickleNestedMessage_NestedMessage_NestedNestedMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestPickleNestedMessage_NestedMessage_NestedNestedMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage"; }

 protected:
  explicit TestPickleNestedMessage_NestedMessage_NestedNestedMessage(::google::protobuf::Arena* arena);
  TestPickleNestedMessage_NestedMessage_NestedNestedMessage(::google::protobuf::Arena* arena, const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from);
  TestPickleNestedMessage_NestedMessage_NestedNestedMessage(::google::protobuf::Arena* arena, TestPickleNestedMessage_NestedMessage_NestedNestedMessage&& from) noexcept
      : TestPickleNestedMessage_NestedMessage_NestedNestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCcFieldNumber = 1,
  };
  // int32 cc = 1;
  bool has_cc() const;
  void clear_cc() ;
  ::int32_t cc() const;
  void set_cc(::int32_t value);

  private:
  ::int32_t _internal_cc() const;
  void _internal_set_cc(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t cc_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestPickleNestedMessage_NestedMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestPickleNestedMessage.NestedMessage) */ {
 public:
  inline TestPickleNestedMessage_NestedMessage() : TestPickleNestedMessage_NestedMessage(nullptr) {}
  ~TestPickleNestedMessage_NestedMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestPickleNestedMessage_NestedMessage(const TestPickleNestedMessage_NestedMessage& from) : TestPickleNestedMessage_NestedMessage(nullptr, from) {}
  inline TestPickleNestedMessage_NestedMessage(TestPickleNestedMessage_NestedMessage&& from) noexcept
      : TestPickleNestedMessage_NestedMessage(nullptr, std::move(from)) {}
  inline TestPickleNestedMessage_NestedMessage& operator=(const TestPickleNestedMessage_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestPickleNestedMessage_NestedMessage& operator=(TestPickleNestedMessage_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestPickleNestedMessage_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestPickleNestedMessage_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestPickleNestedMessage_NestedMessage*>(
        &_TestPickleNestedMessage_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(TestPickleNestedMessage_NestedMessage& a, TestPickleNestedMessage_NestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestPickleNestedMessage_NestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestPickleNestedMessage_NestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestPickleNestedMessage_NestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestPickleNestedMessage_NestedMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestPickleNestedMessage_NestedMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestPickleNestedMessage_NestedMessage& from) { TestPickleNestedMessage_NestedMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestPickleNestedMessage_NestedMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestPickleNestedMessage.NestedMessage"; }

 protected:
  explicit TestPickleNestedMessage_NestedMessage(::google::protobuf::Arena* arena);
  TestPickleNestedMessage_NestedMessage(::google::protobuf::Arena* arena, const TestPickleNestedMessage_NestedMessage& from);
  TestPickleNestedMessage_NestedMessage(::google::protobuf::Arena* arena, TestPickleNestedMessage_NestedMessage&& from) noexcept
      : TestPickleNestedMessage_NestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedNestedMessage = TestPickleNestedMessage_NestedMessage_NestedNestedMessage;

  // accessors -------------------------------------------------------
  enum : int {
    kBbFieldNumber = 1,
  };
  // int32 bb = 1;
  bool has_bb() const;
  void clear_bb() ;
  ::int32_t bb() const;
  void set_bb(::int32_t value);

  private:
  ::int32_t _internal_bb() const;
  void _internal_set_bb(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestPickleNestedMessage.NestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestPickleNestedMessage_NestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestPickleNestedMessage_NestedMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t bb_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestPickleNestedMessage final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.TestPickleNestedMessage) */ {
 public:
  inline TestPickleNestedMessage() : TestPickleNestedMessage(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestPickleNestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestPickleNestedMessage(const TestPickleNestedMessage& from) : TestPickleNestedMessage(nullptr, from) {}
  inline TestPickleNestedMessage(TestPickleNestedMessage&& from) noexcept
      : TestPickleNestedMessage(nullptr, std::move(from)) {}
  inline TestPickleNestedMessage& operator=(const TestPickleNestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestPickleNestedMessage& operator=(TestPickleNestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestPickleNestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestPickleNestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestPickleNestedMessage*>(
        &_TestPickleNestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(TestPickleNestedMessage& a, TestPickleNestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestPickleNestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestPickleNestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestPickleNestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestPickleNestedMessage>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestPickleNestedMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestPickleNestedMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestPickleNestedMessage"; }

 protected:
  explicit TestPickleNestedMessage(::google::protobuf::Arena* arena);
  TestPickleNestedMessage(::google::protobuf::Arena* arena, const TestPickleNestedMessage& from);
  TestPickleNestedMessage(::google::protobuf::Arena* arena, TestPickleNestedMessage&& from) noexcept
      : TestPickleNestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedMessage = TestPickleNestedMessage_NestedMessage;

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.TestPickleNestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestPickleNestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestPickleNestedMessage& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestPackedTypes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestPackedTypes) */ {
 public:
  inline TestPackedTypes() : TestPackedTypes(nullptr) {}
  ~TestPackedTypes() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestPackedTypes(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestPackedTypes(const TestPackedTypes& from) : TestPackedTypes(nullptr, from) {}
  inline TestPackedTypes(TestPackedTypes&& from) noexcept
      : TestPackedTypes(nullptr, std::move(from)) {}
  inline TestPackedTypes& operator=(const TestPackedTypes& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestPackedTypes& operator=(TestPackedTypes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestPackedTypes& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestPackedTypes* internal_default_instance() {
    return reinterpret_cast<const TestPackedTypes*>(
        &_TestPackedTypes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 86;
  friend void swap(TestPackedTypes& a, TestPackedTypes& b) { a.Swap(&b); }
  inline void Swap(TestPackedTypes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestPackedTypes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestPackedTypes* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestPackedTypes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestPackedTypes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestPackedTypes& from) { TestPackedTypes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestPackedTypes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestPackedTypes"; }

 protected:
  explicit TestPackedTypes(::google::protobuf::Arena* arena);
  TestPackedTypes(::google::protobuf::Arena* arena, const TestPackedTypes& from);
  TestPackedTypes(::google::protobuf::Arena* arena, TestPackedTypes&& from) noexcept
      : TestPackedTypes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPackedInt32FieldNumber = 90,
    kPackedInt64FieldNumber = 91,
    kPackedUint32FieldNumber = 92,
    kPackedUint64FieldNumber = 93,
    kPackedSint32FieldNumber = 94,
    kPackedSint64FieldNumber = 95,
    kPackedFixed32FieldNumber = 96,
    kPackedFixed64FieldNumber = 97,
    kPackedSfixed32FieldNumber = 98,
    kPackedSfixed64FieldNumber = 99,
    kPackedFloatFieldNumber = 100,
    kPackedDoubleFieldNumber = 101,
    kPackedBoolFieldNumber = 102,
    kPackedEnumFieldNumber = 103,
  };
  // repeated int32 packed_int32 = 90 [features = {
  int packed_int32_size() const;
  private:
  int _internal_packed_int32_size() const;

  public:
  void clear_packed_int32() ;
  ::int32_t packed_int32(int index) const;
  void set_packed_int32(int index, ::int32_t value);
  void add_packed_int32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& packed_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_packed_int32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_packed_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_packed_int32();

  public:
  // repeated int64 packed_int64 = 91 [features = {
  int packed_int64_size() const;
  private:
  int _internal_packed_int64_size() const;

  public:
  void clear_packed_int64() ;
  ::int64_t packed_int64(int index) const;
  void set_packed_int64(int index, ::int64_t value);
  void add_packed_int64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& packed_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_packed_int64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_packed_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_packed_int64();

  public:
  // repeated uint32 packed_uint32 = 92 [features = {
  int packed_uint32_size() const;
  private:
  int _internal_packed_uint32_size() const;

  public:
  void clear_packed_uint32() ;
  ::uint32_t packed_uint32(int index) const;
  void set_packed_uint32(int index, ::uint32_t value);
  void add_packed_uint32(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& packed_uint32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_packed_uint32();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_packed_uint32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_packed_uint32();

  public:
  // repeated uint64 packed_uint64 = 93 [features = {
  int packed_uint64_size() const;
  private:
  int _internal_packed_uint64_size() const;

  public:
  void clear_packed_uint64() ;
  ::uint64_t packed_uint64(int index) const;
  void set_packed_uint64(int index, ::uint64_t value);
  void add_packed_uint64(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& packed_uint64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_packed_uint64();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_packed_uint64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_packed_uint64();

  public:
  // repeated sint32 packed_sint32 = 94 [features = {
  int packed_sint32_size() const;
  private:
  int _internal_packed_sint32_size() const;

  public:
  void clear_packed_sint32() ;
  ::int32_t packed_sint32(int index) const;
  void set_packed_sint32(int index, ::int32_t value);
  void add_packed_sint32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& packed_sint32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_packed_sint32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_packed_sint32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_packed_sint32();

  public:
  // repeated sint64 packed_sint64 = 95 [features = {
  int packed_sint64_size() const;
  private:
  int _internal_packed_sint64_size() const;

  public:
  void clear_packed_sint64() ;
  ::int64_t packed_sint64(int index) const;
  void set_packed_sint64(int index, ::int64_t value);
  void add_packed_sint64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& packed_sint64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_packed_sint64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_packed_sint64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_packed_sint64();

  public:
  // repeated fixed32 packed_fixed32 = 96 [features = {
  int packed_fixed32_size() const;
  private:
  int _internal_packed_fixed32_size() const;

  public:
  void clear_packed_fixed32() ;
  ::uint32_t packed_fixed32(int index) const;
  void set_packed_fixed32(int index, ::uint32_t value);
  void add_packed_fixed32(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& packed_fixed32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_packed_fixed32();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_packed_fixed32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_packed_fixed32();

  public:
  // repeated fixed64 packed_fixed64 = 97 [features = {
  int packed_fixed64_size() const;
  private:
  int _internal_packed_fixed64_size() const;

  public:
  void clear_packed_fixed64() ;
  ::uint64_t packed_fixed64(int index) const;
  void set_packed_fixed64(int index, ::uint64_t value);
  void add_packed_fixed64(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& packed_fixed64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_packed_fixed64();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_packed_fixed64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_packed_fixed64();

  public:
  // repeated sfixed32 packed_sfixed32 = 98 [features = {
  int packed_sfixed32_size() const;
  private:
  int _internal_packed_sfixed32_size() const;

  public:
  void clear_packed_sfixed32() ;
  ::int32_t packed_sfixed32(int index) const;
  void set_packed_sfixed32(int index, ::int32_t value);
  void add_packed_sfixed32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& packed_sfixed32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_packed_sfixed32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_packed_sfixed32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_packed_sfixed32();

  public:
  // repeated sfixed64 packed_sfixed64 = 99 [features = {
  int packed_sfixed64_size() const;
  private:
  int _internal_packed_sfixed64_size() const;

  public:
  void clear_packed_sfixed64() ;
  ::int64_t packed_sfixed64(int index) const;
  void set_packed_sfixed64(int index, ::int64_t value);
  void add_packed_sfixed64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& packed_sfixed64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_packed_sfixed64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_packed_sfixed64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_packed_sfixed64();

  public:
  // repeated float packed_float = 100 [features = {
  int packed_float_size() const;
  private:
  int _internal_packed_float_size() const;

  public:
  void clear_packed_float() ;
  float packed_float(int index) const;
  void set_packed_float(int index, float value);
  void add_packed_float(float value);
  const ::google::protobuf::RepeatedField<float>& packed_float() const;
  ::google::protobuf::RepeatedField<float>* mutable_packed_float();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_packed_float() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_packed_float();

  public:
  // repeated double packed_double = 101 [features = {
  int packed_double_size() const;
  private:
  int _internal_packed_double_size() const;

  public:
  void clear_packed_double() ;
  double packed_double(int index) const;
  void set_packed_double(int index, double value);
  void add_packed_double(double value);
  const ::google::protobuf::RepeatedField<double>& packed_double() const;
  ::google::protobuf::RepeatedField<double>* mutable_packed_double();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_packed_double() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_packed_double();

  public:
  // repeated bool packed_bool = 102 [features = {
  int packed_bool_size() const;
  private:
  int _internal_packed_bool_size() const;

  public:
  void clear_packed_bool() ;
  bool packed_bool(int index) const;
  void set_packed_bool(int index, bool value);
  void add_packed_bool(bool value);
  const ::google::protobuf::RepeatedField<bool>& packed_bool() const;
  ::google::protobuf::RepeatedField<bool>* mutable_packed_bool();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_packed_bool() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_packed_bool();

  public:
  // repeated .edition_unittest.ForeignEnum packed_enum = 103 [features = {
  int packed_enum_size() const;
  private:
  int _internal_packed_enum_size() const;

  public:
  void clear_packed_enum() ;
  public:
  ::edition_unittest::ForeignEnum packed_enum(int index) const;
  void set_packed_enum(int index, ::edition_unittest::ForeignEnum value);
  void add_packed_enum(::edition_unittest::ForeignEnum value);
  const ::google::protobuf::RepeatedField<int>& packed_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_enum();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_enum() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_enum();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestPackedTypes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 1,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestPackedTypes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestPackedTypes& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> packed_int32_;
    ::google::protobuf::internal::CachedSize _packed_int32_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> packed_int64_;
    ::google::protobuf::internal::CachedSize _packed_int64_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> packed_uint32_;
    ::google::protobuf::internal::CachedSize _packed_uint32_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint64_t> packed_uint64_;
    ::google::protobuf::internal::CachedSize _packed_uint64_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> packed_sint32_;
    ::google::protobuf::internal::CachedSize _packed_sint32_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> packed_sint64_;
    ::google::protobuf::internal::CachedSize _packed_sint64_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> packed_fixed32_;
    ::google::protobuf::RepeatedField<::uint64_t> packed_fixed64_;
    ::google::protobuf::RepeatedField<::int32_t> packed_sfixed32_;
    ::google::protobuf::RepeatedField<::int64_t> packed_sfixed64_;
    ::google::protobuf::RepeatedField<float> packed_float_;
    ::google::protobuf::RepeatedField<double> packed_double_;
    ::google::protobuf::RepeatedField<bool> packed_bool_;
    ::google::protobuf::RepeatedField<int> packed_enum_;
    ::google::protobuf::internal::CachedSize _packed_enum_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestPackedExtensions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestPackedExtensions) */ {
 public:
  inline TestPackedExtensions() : TestPackedExtensions(nullptr) {}
  ~TestPackedExtensions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestPackedExtensions(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestPackedExtensions(const TestPackedExtensions& from) : TestPackedExtensions(nullptr, from) {}
  inline TestPackedExtensions(TestPackedExtensions&& from) noexcept
      : TestPackedExtensions(nullptr, std::move(from)) {}
  inline TestPackedExtensions& operator=(const TestPackedExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestPackedExtensions& operator=(TestPackedExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestPackedExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestPackedExtensions* internal_default_instance() {
    return reinterpret_cast<const TestPackedExtensions*>(
        &_TestPackedExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 88;
  friend void swap(TestPackedExtensions& a, TestPackedExtensions& b) { a.Swap(&b); }
  inline void Swap(TestPackedExtensions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestPackedExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestPackedExtensions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestPackedExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestPackedExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestPackedExtensions& from) { TestPackedExtensions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestPackedExtensions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestPackedExtensions"; }

 protected:
  explicit TestPackedExtensions(::google::protobuf::Arena* arena);
  TestPackedExtensions(::google::protobuf::Arena* arena, const TestPackedExtensions& from);
  TestPackedExtensions(::google::protobuf::Arena* arena, TestPackedExtensions&& from) noexcept
      : TestPackedExtensions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestPackedExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestPackedExtensions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestPackedExtensions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestPackedExtensions& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestPackedEnumSmallRange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestPackedEnumSmallRange) */ {
 public:
  inline TestPackedEnumSmallRange() : TestPackedEnumSmallRange(nullptr) {}
  ~TestPackedEnumSmallRange() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestPackedEnumSmallRange(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestPackedEnumSmallRange(const TestPackedEnumSmallRange& from) : TestPackedEnumSmallRange(nullptr, from) {}
  inline TestPackedEnumSmallRange(TestPackedEnumSmallRange&& from) noexcept
      : TestPackedEnumSmallRange(nullptr, std::move(from)) {}
  inline TestPackedEnumSmallRange& operator=(const TestPackedEnumSmallRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestPackedEnumSmallRange& operator=(TestPackedEnumSmallRange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestPackedEnumSmallRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestPackedEnumSmallRange* internal_default_instance() {
    return reinterpret_cast<const TestPackedEnumSmallRange*>(
        &_TestPackedEnumSmallRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 144;
  friend void swap(TestPackedEnumSmallRange& a, TestPackedEnumSmallRange& b) { a.Swap(&b); }
  inline void Swap(TestPackedEnumSmallRange* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestPackedEnumSmallRange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestPackedEnumSmallRange* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestPackedEnumSmallRange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestPackedEnumSmallRange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestPackedEnumSmallRange& from) { TestPackedEnumSmallRange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestPackedEnumSmallRange* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestPackedEnumSmallRange"; }

 protected:
  explicit TestPackedEnumSmallRange(::google::protobuf::Arena* arena);
  TestPackedEnumSmallRange(::google::protobuf::Arena* arena, const TestPackedEnumSmallRange& from);
  TestPackedEnumSmallRange(::google::protobuf::Arena* arena, TestPackedEnumSmallRange&& from) noexcept
      : TestPackedEnumSmallRange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedEnum = TestPackedEnumSmallRange_NestedEnum;
  static constexpr NestedEnum UNSPECIFIED = TestPackedEnumSmallRange_NestedEnum_UNSPECIFIED;
  static constexpr NestedEnum FOO = TestPackedEnumSmallRange_NestedEnum_FOO;
  static constexpr NestedEnum BAR = TestPackedEnumSmallRange_NestedEnum_BAR;
  static constexpr NestedEnum BAZ = TestPackedEnumSmallRange_NestedEnum_BAZ;
  static inline bool NestedEnum_IsValid(int value) {
    return TestPackedEnumSmallRange_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN = TestPackedEnumSmallRange_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX = TestPackedEnumSmallRange_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE = TestPackedEnumSmallRange_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NestedEnum_descriptor() {
    return TestPackedEnumSmallRange_NestedEnum_descriptor();
  }
  template <typename T>
  static inline const std::string& NestedEnum_Name(T value) {
    return TestPackedEnumSmallRange_NestedEnum_Name(value);
  }
  static inline bool NestedEnum_Parse(absl::string_view name, NestedEnum* value) {
    return TestPackedEnumSmallRange_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kValsFieldNumber = 1,
  };
  // repeated .edition_unittest.TestPackedEnumSmallRange.NestedEnum vals = 1 [features = {
  int vals_size() const;
  private:
  int _internal_vals_size() const;

  public:
  void clear_vals() ;
  public:
  ::edition_unittest::TestPackedEnumSmallRange_NestedEnum vals(int index) const;
  void set_vals(int index, ::edition_unittest::TestPackedEnumSmallRange_NestedEnum value);
  void add_vals(::edition_unittest::TestPackedEnumSmallRange_NestedEnum value);
  const ::google::protobuf::RepeatedField<int>& vals() const;
  ::google::protobuf::RepeatedField<int>* mutable_vals();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_vals() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_vals();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestPackedEnumSmallRange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestPackedEnumSmallRange_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestPackedEnumSmallRange& from_msg);
    ::google::protobuf::RepeatedField<int> vals_;
    ::google::protobuf::internal::CachedSize _vals_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestOneofBackwardsCompatible_FooGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestOneofBackwardsCompatible.FooGroup) */ {
 public:
  inline TestOneofBackwardsCompatible_FooGroup() : TestOneofBackwardsCompatible_FooGroup(nullptr) {}
  ~TestOneofBackwardsCompatible_FooGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestOneofBackwardsCompatible_FooGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestOneofBackwardsCompatible_FooGroup(const TestOneofBackwardsCompatible_FooGroup& from) : TestOneofBackwardsCompatible_FooGroup(nullptr, from) {}
  inline TestOneofBackwardsCompatible_FooGroup(TestOneofBackwardsCompatible_FooGroup&& from) noexcept
      : TestOneofBackwardsCompatible_FooGroup(nullptr, std::move(from)) {}
  inline TestOneofBackwardsCompatible_FooGroup& operator=(const TestOneofBackwardsCompatible_FooGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestOneofBackwardsCompatible_FooGroup& operator=(TestOneofBackwardsCompatible_FooGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestOneofBackwardsCompatible_FooGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestOneofBackwardsCompatible_FooGroup* internal_default_instance() {
    return reinterpret_cast<const TestOneofBackwardsCompatible_FooGroup*>(
        &_TestOneofBackwardsCompatible_FooGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 79;
  friend void swap(TestOneofBackwardsCompatible_FooGroup& a, TestOneofBackwardsCompatible_FooGroup& b) { a.Swap(&b); }
  inline void Swap(TestOneofBackwardsCompatible_FooGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestOneofBackwardsCompatible_FooGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestOneofBackwardsCompatible_FooGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestOneofBackwardsCompatible_FooGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestOneofBackwardsCompatible_FooGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestOneofBackwardsCompatible_FooGroup& from) { TestOneofBackwardsCompatible_FooGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestOneofBackwardsCompatible_FooGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestOneofBackwardsCompatible.FooGroup"; }

 protected:
  explicit TestOneofBackwardsCompatible_FooGroup(::google::protobuf::Arena* arena);
  TestOneofBackwardsCompatible_FooGroup(::google::protobuf::Arena* arena, const TestOneofBackwardsCompatible_FooGroup& from);
  TestOneofBackwardsCompatible_FooGroup(::google::protobuf::Arena* arena, TestOneofBackwardsCompatible_FooGroup&& from) noexcept
      : TestOneofBackwardsCompatible_FooGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBFieldNumber = 6,
    kAFieldNumber = 5,
  };
  // string b = 6;
  bool has_b() const;
  void clear_b() ;
  absl::string_view b() const;
  template <typename Arg_ = std::string&&>
  void set_b(Arg_&& arg);

  private:
  const std::string& _internal_b() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_b(
      absl::string_view value);

  public:
  // int32 a = 5;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestOneofBackwardsCompatible.FooGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestOneofBackwardsCompatible_FooGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestOneofBackwardsCompatible_FooGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr b_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestOneof2_NestedMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestOneof2.NestedMessage) */ {
 public:
  inline TestOneof2_NestedMessage() : TestOneof2_NestedMessage(nullptr) {}
  ~TestOneof2_NestedMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestOneof2_NestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestOneof2_NestedMessage(const TestOneof2_NestedMessage& from) : TestOneof2_NestedMessage(nullptr, from) {}
  inline TestOneof2_NestedMessage(TestOneof2_NestedMessage&& from) noexcept
      : TestOneof2_NestedMessage(nullptr, std::move(from)) {}
  inline TestOneof2_NestedMessage& operator=(const TestOneof2_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestOneof2_NestedMessage& operator=(TestOneof2_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestOneof2_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestOneof2_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestOneof2_NestedMessage*>(
        &_TestOneof2_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 82;
  friend void swap(TestOneof2_NestedMessage& a, TestOneof2_NestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestOneof2_NestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestOneof2_NestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestOneof2_NestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestOneof2_NestedMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestOneof2_NestedMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestOneof2_NestedMessage& from) { TestOneof2_NestedMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestOneof2_NestedMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestOneof2.NestedMessage"; }

 protected:
  explicit TestOneof2_NestedMessage(::google::protobuf::Arena* arena);
  TestOneof2_NestedMessage(::google::protobuf::Arena* arena, const TestOneof2_NestedMessage& from);
  TestOneof2_NestedMessage(::google::protobuf::Arena* arena, TestOneof2_NestedMessage&& from) noexcept
      : TestOneof2_NestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCorgeIntFieldNumber = 2,
    kMooIntFieldNumber = 1,
  };
  // repeated int32 corge_int = 2;
  int corge_int_size() const;
  private:
  int _internal_corge_int_size() const;

  public:
  void clear_corge_int() ;
  ::int32_t corge_int(int index) const;
  void set_corge_int(int index, ::int32_t value);
  void add_corge_int(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& corge_int() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_corge_int();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_corge_int() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_corge_int();

  public:
  // int64 moo_int = 1;
  bool has_moo_int() const;
  void clear_moo_int() ;
  ::int64_t moo_int() const;
  void set_moo_int(::int64_t value);

  private:
  ::int64_t _internal_moo_int() const;
  void _internal_set_moo_int(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestOneof2.NestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestOneof2_NestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestOneof2_NestedMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> corge_int_;
    ::google::protobuf::internal::CachedSize _corge_int_cached_byte_size_;
    ::int64_t moo_int_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestOneof2_FooGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestOneof2.FooGroup) */ {
 public:
  inline TestOneof2_FooGroup() : TestOneof2_FooGroup(nullptr) {}
  ~TestOneof2_FooGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestOneof2_FooGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestOneof2_FooGroup(const TestOneof2_FooGroup& from) : TestOneof2_FooGroup(nullptr, from) {}
  inline TestOneof2_FooGroup(TestOneof2_FooGroup&& from) noexcept
      : TestOneof2_FooGroup(nullptr, std::move(from)) {}
  inline TestOneof2_FooGroup& operator=(const TestOneof2_FooGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestOneof2_FooGroup& operator=(TestOneof2_FooGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestOneof2_FooGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestOneof2_FooGroup* internal_default_instance() {
    return reinterpret_cast<const TestOneof2_FooGroup*>(
        &_TestOneof2_FooGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 81;
  friend void swap(TestOneof2_FooGroup& a, TestOneof2_FooGroup& b) { a.Swap(&b); }
  inline void Swap(TestOneof2_FooGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestOneof2_FooGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestOneof2_FooGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestOneof2_FooGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestOneof2_FooGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestOneof2_FooGroup& from) { TestOneof2_FooGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestOneof2_FooGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestOneof2.FooGroup"; }

 protected:
  explicit TestOneof2_FooGroup(::google::protobuf::Arena* arena);
  TestOneof2_FooGroup(::google::protobuf::Arena* arena, const TestOneof2_FooGroup& from);
  TestOneof2_FooGroup(::google::protobuf::Arena* arena, TestOneof2_FooGroup&& from) noexcept
      : TestOneof2_FooGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBFieldNumber = 10,
    kAFieldNumber = 9,
  };
  // string b = 10;
  bool has_b() const;
  void clear_b() ;
  absl::string_view b() const;
  template <typename Arg_ = std::string&&>
  void set_b(Arg_&& arg);

  private:
  const std::string& _internal_b() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_b(
      absl::string_view value);

  public:
  // int32 a = 9;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestOneof2.FooGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestOneof2_FooGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestOneof2_FooGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr b_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestOneof_FooGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestOneof.FooGroup) */ {
 public:
  inline TestOneof_FooGroup() : TestOneof_FooGroup(nullptr) {}
  ~TestOneof_FooGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestOneof_FooGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestOneof_FooGroup(const TestOneof_FooGroup& from) : TestOneof_FooGroup(nullptr, from) {}
  inline TestOneof_FooGroup(TestOneof_FooGroup&& from) noexcept
      : TestOneof_FooGroup(nullptr, std::move(from)) {}
  inline TestOneof_FooGroup& operator=(const TestOneof_FooGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestOneof_FooGroup& operator=(TestOneof_FooGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestOneof_FooGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestOneof_FooGroup* internal_default_instance() {
    return reinterpret_cast<const TestOneof_FooGroup*>(
        &_TestOneof_FooGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 77;
  friend void swap(TestOneof_FooGroup& a, TestOneof_FooGroup& b) { a.Swap(&b); }
  inline void Swap(TestOneof_FooGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestOneof_FooGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestOneof_FooGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestOneof_FooGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestOneof_FooGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestOneof_FooGroup& from) { TestOneof_FooGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestOneof_FooGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestOneof.FooGroup"; }

 protected:
  explicit TestOneof_FooGroup(::google::protobuf::Arena* arena);
  TestOneof_FooGroup(::google::protobuf::Arena* arena, const TestOneof_FooGroup& from);
  TestOneof_FooGroup(::google::protobuf::Arena* arena, TestOneof_FooGroup&& from) noexcept
      : TestOneof_FooGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBFieldNumber = 6,
    kAFieldNumber = 5,
  };
  // string b = 6;
  bool has_b() const;
  void clear_b() ;
  absl::string_view b() const;
  template <typename Arg_ = std::string&&>
  void set_b(Arg_&& arg);

  private:
  const std::string& _internal_b() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_b(
      absl::string_view value);

  public:
  // int32 a = 5;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestOneof.FooGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestOneof_FooGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestOneof_FooGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr b_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedMessageRedaction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedMessageRedaction) */ {
 public:
  inline TestNestedMessageRedaction() : TestNestedMessageRedaction(nullptr) {}
  ~TestNestedMessageRedaction() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedMessageRedaction(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedMessageRedaction(const TestNestedMessageRedaction& from) : TestNestedMessageRedaction(nullptr, from) {}
  inline TestNestedMessageRedaction(TestNestedMessageRedaction&& from) noexcept
      : TestNestedMessageRedaction(nullptr, std::move(from)) {}
  inline TestNestedMessageRedaction& operator=(const TestNestedMessageRedaction& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedMessageRedaction& operator=(TestNestedMessageRedaction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedMessageRedaction& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedMessageRedaction* internal_default_instance() {
    return reinterpret_cast<const TestNestedMessageRedaction*>(
        &_TestNestedMessageRedaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 139;
  friend void swap(TestNestedMessageRedaction& a, TestNestedMessageRedaction& b) { a.Swap(&b); }
  inline void Swap(TestNestedMessageRedaction* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedMessageRedaction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedMessageRedaction* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedMessageRedaction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedMessageRedaction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedMessageRedaction& from) { TestNestedMessageRedaction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedMessageRedaction* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedMessageRedaction"; }

 protected:
  explicit TestNestedMessageRedaction(::google::protobuf::Arena* arena);
  TestNestedMessageRedaction(::google::protobuf::Arena* arena, const TestNestedMessageRedaction& from);
  TestNestedMessageRedaction(::google::protobuf::Arena* arena, TestNestedMessageRedaction&& from) noexcept
      : TestNestedMessageRedaction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalUnredactedNestedStringFieldNumber = 1,
    kOptionalRedactedNestedStringFieldNumber = 2,
  };
  // string optional_unredacted_nested_string = 1;
  bool has_optional_unredacted_nested_string() const;
  void clear_optional_unredacted_nested_string() ;
  absl::string_view optional_unredacted_nested_string() const;
  template <typename Arg_ = std::string&&>
  void set_optional_unredacted_nested_string(Arg_&& arg);

  private:
  const std::string& _internal_optional_unredacted_nested_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_unredacted_nested_string(
      absl::string_view value);

  public:
  // string optional_redacted_nested_string = 2 [debug_redact = true];
  bool has_optional_redacted_nested_string() const;
  void clear_optional_redacted_nested_string() ;
  absl::string_view optional_redacted_nested_string() const;
  template <typename Arg_ = std::string&&>
  void set_optional_redacted_nested_string(Arg_&& arg);

  private:
  const std::string& _internal_optional_redacted_nested_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_redacted_nested_string(
      absl::string_view value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedMessageRedaction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      116, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedMessageRedaction_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedMessageRedaction& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr optional_unredacted_nested_string_;
    ::google::protobuf::internal::ArenaStringPtr optional_redacted_nested_string_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup) */ {
 public:
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup() : TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(nullptr) {}
  ~TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& from) : TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(nullptr, from) {}
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup&& from) noexcept
      : TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(nullptr, std::move(from)) {}
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& operator=(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& operator=(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* internal_default_instance() {
    return reinterpret_cast<const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup*>(
        &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 114;
  friend void swap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& a, TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& b) { a.Swap(&b); }
  inline void Swap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& from) { TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup"; }

 protected:
  explicit TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(::google::protobuf::Arena* arena);
  TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(::google::protobuf::Arena* arena, const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& from);
  TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(::google::protobuf::Arena* arena, TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup&& from) noexcept
      : TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnotherFieldFieldNumber = 6,
  };
  // string another_field = 6;
  bool has_another_field() const;
  void clear_another_field() ;
  absl::string_view another_field() const;
  template <typename Arg_ = std::string&&>
  void set_another_field(Arg_&& arg);

  private:
  const std::string& _internal_another_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_another_field(
      absl::string_view value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 1, 0,
      108, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr another_field_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup) */ {
 public:
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup() : TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(nullptr) {}
  ~TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& from) : TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(nullptr, from) {}
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup&& from) noexcept
      : TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(nullptr, std::move(from)) {}
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& operator=(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& operator=(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* internal_default_instance() {
    return reinterpret_cast<const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup*>(
        &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 115;
  friend void swap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& a, TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& b) { a.Swap(&b); }
  inline void Swap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& from) { TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup"; }

 protected:
  explicit TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(::google::protobuf::Arena* arena);
  TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(::google::protobuf::Arena* arena, const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& from);
  TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(::google::protobuf::Arena* arena, TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup&& from) noexcept
      : TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kButWhyThoFieldNumber = 5,
  };
  // string but_why_tho = 5;
  bool has_but_why_tho() const;
  void clear_but_why_tho() ;
  absl::string_view but_why_tho() const;
  template <typename Arg_ = std::string&&>
  void set_but_why_tho(Arg_&& arg);

  private:
  const std::string& _internal_but_why_tho() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_but_why_tho(
      absl::string_view value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 0,
      121, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr but_why_tho_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedGroupExtensionInnerExtension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedGroupExtensionInnerExtension) */ {
 public:
  inline TestNestedGroupExtensionInnerExtension() : TestNestedGroupExtensionInnerExtension(nullptr) {}
  ~TestNestedGroupExtensionInnerExtension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedGroupExtensionInnerExtension(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedGroupExtensionInnerExtension(const TestNestedGroupExtensionInnerExtension& from) : TestNestedGroupExtensionInnerExtension(nullptr, from) {}
  inline TestNestedGroupExtensionInnerExtension(TestNestedGroupExtensionInnerExtension&& from) noexcept
      : TestNestedGroupExtensionInnerExtension(nullptr, std::move(from)) {}
  inline TestNestedGroupExtensionInnerExtension& operator=(const TestNestedGroupExtensionInnerExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedGroupExtensionInnerExtension& operator=(TestNestedGroupExtensionInnerExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedGroupExtensionInnerExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedGroupExtensionInnerExtension* internal_default_instance() {
    return reinterpret_cast<const TestNestedGroupExtensionInnerExtension*>(
        &_TestNestedGroupExtensionInnerExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 118;
  friend void swap(TestNestedGroupExtensionInnerExtension& a, TestNestedGroupExtensionInnerExtension& b) { a.Swap(&b); }
  inline void Swap(TestNestedGroupExtensionInnerExtension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedGroupExtensionInnerExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedGroupExtensionInnerExtension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedGroupExtensionInnerExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedGroupExtensionInnerExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedGroupExtensionInnerExtension& from) { TestNestedGroupExtensionInnerExtension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedGroupExtensionInnerExtension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedGroupExtensionInnerExtension"; }

 protected:
  explicit TestNestedGroupExtensionInnerExtension(::google::protobuf::Arena* arena);
  TestNestedGroupExtensionInnerExtension(::google::protobuf::Arena* arena, const TestNestedGroupExtensionInnerExtension& from);
  TestNestedGroupExtensionInnerExtension(::google::protobuf::Arena* arena, TestNestedGroupExtensionInnerExtension&& from) noexcept
      : TestNestedGroupExtensionInnerExtension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInnerNameFieldNumber = 1,
  };
  // string inner_name = 1;
  bool has_inner_name() const;
  void clear_inner_name() ;
  absl::string_view inner_name() const;
  template <typename Arg_ = std::string&&>
  void set_inner_name(Arg_&& arg);

  private:
  const std::string& _internal_inner_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_inner_name(
      absl::string_view value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedGroupExtensionInnerExtension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedGroupExtensionInnerExtension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedGroupExtensionInnerExtension& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr inner_name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedExtension_OptionalGroup_extension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedExtension.OptionalGroup_extension) */ {
 public:
  inline TestNestedExtension_OptionalGroup_extension() : TestNestedExtension_OptionalGroup_extension(nullptr) {}
  ~TestNestedExtension_OptionalGroup_extension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedExtension_OptionalGroup_extension(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedExtension_OptionalGroup_extension(const TestNestedExtension_OptionalGroup_extension& from) : TestNestedExtension_OptionalGroup_extension(nullptr, from) {}
  inline TestNestedExtension_OptionalGroup_extension(TestNestedExtension_OptionalGroup_extension&& from) noexcept
      : TestNestedExtension_OptionalGroup_extension(nullptr, std::move(from)) {}
  inline TestNestedExtension_OptionalGroup_extension& operator=(const TestNestedExtension_OptionalGroup_extension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedExtension_OptionalGroup_extension& operator=(TestNestedExtension_OptionalGroup_extension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedExtension_OptionalGroup_extension& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedExtension_OptionalGroup_extension* internal_default_instance() {
    return reinterpret_cast<const TestNestedExtension_OptionalGroup_extension*>(
        &_TestNestedExtension_OptionalGroup_extension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(TestNestedExtension_OptionalGroup_extension& a, TestNestedExtension_OptionalGroup_extension& b) { a.Swap(&b); }
  inline void Swap(TestNestedExtension_OptionalGroup_extension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedExtension_OptionalGroup_extension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedExtension_OptionalGroup_extension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedExtension_OptionalGroup_extension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedExtension_OptionalGroup_extension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedExtension_OptionalGroup_extension& from) { TestNestedExtension_OptionalGroup_extension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedExtension_OptionalGroup_extension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedExtension.OptionalGroup_extension"; }

 protected:
  explicit TestNestedExtension_OptionalGroup_extension(::google::protobuf::Arena* arena);
  TestNestedExtension_OptionalGroup_extension(::google::protobuf::Arena* arena, const TestNestedExtension_OptionalGroup_extension& from);
  TestNestedExtension_OptionalGroup_extension(::google::protobuf::Arena* arena, TestNestedExtension_OptionalGroup_extension&& from) noexcept
      : TestNestedExtension_OptionalGroup_extension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 17,
  };
  // int32 a = 17;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedExtension.OptionalGroup_extension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedExtension_OptionalGroup_extension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedExtension_OptionalGroup_extension& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedExtension final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedExtension) */ {
 public:
  inline TestNestedExtension() : TestNestedExtension(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedExtension(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedExtension(const TestNestedExtension& from) : TestNestedExtension(nullptr, from) {}
  inline TestNestedExtension(TestNestedExtension&& from) noexcept
      : TestNestedExtension(nullptr, std::move(from)) {}
  inline TestNestedExtension& operator=(const TestNestedExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedExtension& operator=(TestNestedExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedExtension* internal_default_instance() {
    return reinterpret_cast<const TestNestedExtension*>(
        &_TestNestedExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(TestNestedExtension& a, TestNestedExtension& b) { a.Swap(&b); }
  inline void Swap(TestNestedExtension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedExtension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestNestedExtension>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestNestedExtension& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestNestedExtension& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedExtension"; }

 protected:
  explicit TestNestedExtension(::google::protobuf::Arena* arena);
  TestNestedExtension(::google::protobuf::Arena* arena, const TestNestedExtension& from);
  TestNestedExtension(::google::protobuf::Arena* arena, TestNestedExtension&& from) noexcept
      : TestNestedExtension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OptionalGroup_extension = TestNestedExtension_OptionalGroup_extension;

  // accessors -------------------------------------------------------
  static const int kTestFieldNumber = 1002;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
      false>
      test;
  static const int kNestedStringExtensionFieldNumber = 1003;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
      false>
      nested_string_extension;
  static const int kOptionalgroupExtensionFieldNumber = 16;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestGroupExtension, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestNestedExtension_OptionalGroup_extension >, 10,
      false>
      optionalgroup_extension;
  static const int kOptionalForeignEnumExtensionFieldNumber = 22;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestGroupExtension, ::google::protobuf::internal::EnumTypeTraits< ::edition_unittest::ForeignEnum, ::edition_unittest::ForeignEnum_IsValid>, 14,
      false>
      optional_foreign_enum_extension;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedExtension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedExtension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedExtension& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMultipleExtensionRanges final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMultipleExtensionRanges) */ {
 public:
  inline TestMultipleExtensionRanges() : TestMultipleExtensionRanges(nullptr) {}
  ~TestMultipleExtensionRanges() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMultipleExtensionRanges(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMultipleExtensionRanges(const TestMultipleExtensionRanges& from) : TestMultipleExtensionRanges(nullptr, from) {}
  inline TestMultipleExtensionRanges(TestMultipleExtensionRanges&& from) noexcept
      : TestMultipleExtensionRanges(nullptr, std::move(from)) {}
  inline TestMultipleExtensionRanges& operator=(const TestMultipleExtensionRanges& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMultipleExtensionRanges& operator=(TestMultipleExtensionRanges&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMultipleExtensionRanges& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMultipleExtensionRanges* internal_default_instance() {
    return reinterpret_cast<const TestMultipleExtensionRanges*>(
        &_TestMultipleExtensionRanges_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(TestMultipleExtensionRanges& a, TestMultipleExtensionRanges& b) { a.Swap(&b); }
  inline void Swap(TestMultipleExtensionRanges* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMultipleExtensionRanges* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMultipleExtensionRanges* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMultipleExtensionRanges>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMultipleExtensionRanges& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMultipleExtensionRanges& from) { TestMultipleExtensionRanges::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMultipleExtensionRanges* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMultipleExtensionRanges"; }

 protected:
  explicit TestMultipleExtensionRanges(::google::protobuf::Arena* arena);
  TestMultipleExtensionRanges(::google::protobuf::Arena* arena, const TestMultipleExtensionRanges& from);
  TestMultipleExtensionRanges(::google::protobuf::Arena* arena, TestMultipleExtensionRanges&& from) noexcept
      : TestMultipleExtensionRanges(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMultipleExtensionRanges, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMultipleExtensionRanges)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMultipleExtensionRanges_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMultipleExtensionRanges& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMixedFieldsAndExtensions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMixedFieldsAndExtensions) */ {
 public:
  inline TestMixedFieldsAndExtensions() : TestMixedFieldsAndExtensions(nullptr) {}
  ~TestMixedFieldsAndExtensions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMixedFieldsAndExtensions(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMixedFieldsAndExtensions(const TestMixedFieldsAndExtensions& from) : TestMixedFieldsAndExtensions(nullptr, from) {}
  inline TestMixedFieldsAndExtensions(TestMixedFieldsAndExtensions&& from) noexcept
      : TestMixedFieldsAndExtensions(nullptr, std::move(from)) {}
  inline TestMixedFieldsAndExtensions& operator=(const TestMixedFieldsAndExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMixedFieldsAndExtensions& operator=(TestMixedFieldsAndExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMixedFieldsAndExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMixedFieldsAndExtensions* internal_default_instance() {
    return reinterpret_cast<const TestMixedFieldsAndExtensions*>(
        &_TestMixedFieldsAndExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(TestMixedFieldsAndExtensions& a, TestMixedFieldsAndExtensions& b) { a.Swap(&b); }
  inline void Swap(TestMixedFieldsAndExtensions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMixedFieldsAndExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMixedFieldsAndExtensions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMixedFieldsAndExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMixedFieldsAndExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMixedFieldsAndExtensions& from) { TestMixedFieldsAndExtensions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMixedFieldsAndExtensions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMixedFieldsAndExtensions"; }

 protected:
  explicit TestMixedFieldsAndExtensions(::google::protobuf::Arena* arena);
  TestMixedFieldsAndExtensions(::google::protobuf::Arena* arena, const TestMixedFieldsAndExtensions& from);
  TestMixedFieldsAndExtensions(::google::protobuf::Arena* arena, TestMixedFieldsAndExtensions&& from) noexcept
      : TestMixedFieldsAndExtensions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBFieldNumber = 3,
    kAFieldNumber = 1,
  };
  // repeated fixed32 b = 3;
  int b_size() const;
  private:
  int _internal_b_size() const;

  public:
  void clear_b() ;
  ::uint32_t b(int index) const;
  void set_b(int index, ::uint32_t value);
  void add_b(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& b() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_b();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_b() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_b();

  public:
  // int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestMixedFieldsAndExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  static const int kCFieldNumber = 2;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestMixedFieldsAndExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
      false>
      c;
  static const int kDFieldNumber = 4;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestMixedFieldsAndExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7,
      true>
      d;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMixedFieldsAndExtensions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMixedFieldsAndExtensions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMixedFieldsAndExtensions& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> b_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMessageWithManyRepeatedPtrFields final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMessageWithManyRepeatedPtrFields) */ {
 public:
  inline TestMessageWithManyRepeatedPtrFields() : TestMessageWithManyRepeatedPtrFields(nullptr) {}
  ~TestMessageWithManyRepeatedPtrFields() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageWithManyRepeatedPtrFields(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMessageWithManyRepeatedPtrFields(const TestMessageWithManyRepeatedPtrFields& from) : TestMessageWithManyRepeatedPtrFields(nullptr, from) {}
  inline TestMessageWithManyRepeatedPtrFields(TestMessageWithManyRepeatedPtrFields&& from) noexcept
      : TestMessageWithManyRepeatedPtrFields(nullptr, std::move(from)) {}
  inline TestMessageWithManyRepeatedPtrFields& operator=(const TestMessageWithManyRepeatedPtrFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageWithManyRepeatedPtrFields& operator=(TestMessageWithManyRepeatedPtrFields&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageWithManyRepeatedPtrFields& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageWithManyRepeatedPtrFields* internal_default_instance() {
    return reinterpret_cast<const TestMessageWithManyRepeatedPtrFields*>(
        &_TestMessageWithManyRepeatedPtrFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 146;
  friend void swap(TestMessageWithManyRepeatedPtrFields& a, TestMessageWithManyRepeatedPtrFields& b) { a.Swap(&b); }
  inline void Swap(TestMessageWithManyRepeatedPtrFields* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageWithManyRepeatedPtrFields* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageWithManyRepeatedPtrFields* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMessageWithManyRepeatedPtrFields>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessageWithManyRepeatedPtrFields& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMessageWithManyRepeatedPtrFields& from) { TestMessageWithManyRepeatedPtrFields::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageWithManyRepeatedPtrFields* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMessageWithManyRepeatedPtrFields"; }

 protected:
  explicit TestMessageWithManyRepeatedPtrFields(::google::protobuf::Arena* arena);
  TestMessageWithManyRepeatedPtrFields(::google::protobuf::Arena* arena, const TestMessageWithManyRepeatedPtrFields& from);
  TestMessageWithManyRepeatedPtrFields(::google::protobuf::Arena* arena, TestMessageWithManyRepeatedPtrFields&& from) noexcept
      : TestMessageWithManyRepeatedPtrFields(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedString1FieldNumber = 1,
    kRepeatedString2FieldNumber = 2,
    kRepeatedString3FieldNumber = 3,
    kRepeatedString4FieldNumber = 4,
    kRepeatedString5FieldNumber = 5,
    kRepeatedString6FieldNumber = 6,
    kRepeatedString7FieldNumber = 7,
    kRepeatedString8FieldNumber = 8,
    kRepeatedString9FieldNumber = 9,
    kRepeatedString10FieldNumber = 10,
    kRepeatedString11FieldNumber = 11,
    kRepeatedString12FieldNumber = 12,
    kRepeatedString13FieldNumber = 13,
    kRepeatedString14FieldNumber = 14,
    kRepeatedString15FieldNumber = 15,
    kRepeatedString16FieldNumber = 16,
    kRepeatedString17FieldNumber = 17,
    kRepeatedString18FieldNumber = 18,
    kRepeatedString19FieldNumber = 19,
    kRepeatedString20FieldNumber = 20,
    kRepeatedString21FieldNumber = 21,
    kRepeatedString22FieldNumber = 22,
    kRepeatedString23FieldNumber = 23,
    kRepeatedString24FieldNumber = 24,
    kRepeatedString25FieldNumber = 25,
    kRepeatedString26FieldNumber = 26,
    kRepeatedString27FieldNumber = 27,
    kRepeatedString28FieldNumber = 28,
    kRepeatedString29FieldNumber = 29,
    kRepeatedString30FieldNumber = 30,
    kRepeatedString31FieldNumber = 31,
    kRepeatedString32FieldNumber = 32,
  };
  // repeated string repeated_string_1 = 1;
  int repeated_string_1_size() const;
  private:
  int _internal_repeated_string_1_size() const;

  public:
  void clear_repeated_string_1() ;
  absl::string_view repeated_string_1(int index) const;
  void set_repeated_string_1(int index, const std::string& value);
  void set_repeated_string_1(int index, std::string&& value);
  void set_repeated_string_1(int index, const char* value);
  void set_repeated_string_1(int index, absl::string_view value);
  void add_repeated_string_1(const std::string& value);
  void add_repeated_string_1(std::string&& value);
  void add_repeated_string_1(const char* value);
  void add_repeated_string_1(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_1() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_1();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_1() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_1();

  public:
  // repeated string repeated_string_2 = 2;
  int repeated_string_2_size() const;
  private:
  int _internal_repeated_string_2_size() const;

  public:
  void clear_repeated_string_2() ;
  absl::string_view repeated_string_2(int index) const;
  void set_repeated_string_2(int index, const std::string& value);
  void set_repeated_string_2(int index, std::string&& value);
  void set_repeated_string_2(int index, const char* value);
  void set_repeated_string_2(int index, absl::string_view value);
  void add_repeated_string_2(const std::string& value);
  void add_repeated_string_2(std::string&& value);
  void add_repeated_string_2(const char* value);
  void add_repeated_string_2(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_2() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_2();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_2() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_2();

  public:
  // repeated string repeated_string_3 = 3;
  int repeated_string_3_size() const;
  private:
  int _internal_repeated_string_3_size() const;

  public:
  void clear_repeated_string_3() ;
  absl::string_view repeated_string_3(int index) const;
  void set_repeated_string_3(int index, const std::string& value);
  void set_repeated_string_3(int index, std::string&& value);
  void set_repeated_string_3(int index, const char* value);
  void set_repeated_string_3(int index, absl::string_view value);
  void add_repeated_string_3(const std::string& value);
  void add_repeated_string_3(std::string&& value);
  void add_repeated_string_3(const char* value);
  void add_repeated_string_3(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_3() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_3();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_3() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_3();

  public:
  // repeated string repeated_string_4 = 4;
  int repeated_string_4_size() const;
  private:
  int _internal_repeated_string_4_size() const;

  public:
  void clear_repeated_string_4() ;
  absl::string_view repeated_string_4(int index) const;
  void set_repeated_string_4(int index, const std::string& value);
  void set_repeated_string_4(int index, std::string&& value);
  void set_repeated_string_4(int index, const char* value);
  void set_repeated_string_4(int index, absl::string_view value);
  void add_repeated_string_4(const std::string& value);
  void add_repeated_string_4(std::string&& value);
  void add_repeated_string_4(const char* value);
  void add_repeated_string_4(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_4() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_4();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_4() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_4();

  public:
  // repeated string repeated_string_5 = 5;
  int repeated_string_5_size() const;
  private:
  int _internal_repeated_string_5_size() const;

  public:
  void clear_repeated_string_5() ;
  absl::string_view repeated_string_5(int index) const;
  void set_repeated_string_5(int index, const std::string& value);
  void set_repeated_string_5(int index, std::string&& value);
  void set_repeated_string_5(int index, const char* value);
  void set_repeated_string_5(int index, absl::string_view value);
  void add_repeated_string_5(const std::string& value);
  void add_repeated_string_5(std::string&& value);
  void add_repeated_string_5(const char* value);
  void add_repeated_string_5(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_5() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_5();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_5() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_5();

  public:
  // repeated string repeated_string_6 = 6;
  int repeated_string_6_size() const;
  private:
  int _internal_repeated_string_6_size() const;

  public:
  void clear_repeated_string_6() ;
  absl::string_view repeated_string_6(int index) const;
  void set_repeated_string_6(int index, const std::string& value);
  void set_repeated_string_6(int index, std::string&& value);
  void set_repeated_string_6(int index, const char* value);
  void set_repeated_string_6(int index, absl::string_view value);
  void add_repeated_string_6(const std::string& value);
  void add_repeated_string_6(std::string&& value);
  void add_repeated_string_6(const char* value);
  void add_repeated_string_6(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_6() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_6();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_6() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_6();

  public:
  // repeated string repeated_string_7 = 7;
  int repeated_string_7_size() const;
  private:
  int _internal_repeated_string_7_size() const;

  public:
  void clear_repeated_string_7() ;
  absl::string_view repeated_string_7(int index) const;
  void set_repeated_string_7(int index, const std::string& value);
  void set_repeated_string_7(int index, std::string&& value);
  void set_repeated_string_7(int index, const char* value);
  void set_repeated_string_7(int index, absl::string_view value);
  void add_repeated_string_7(const std::string& value);
  void add_repeated_string_7(std::string&& value);
  void add_repeated_string_7(const char* value);
  void add_repeated_string_7(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_7() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_7();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_7() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_7();

  public:
  // repeated string repeated_string_8 = 8;
  int repeated_string_8_size() const;
  private:
  int _internal_repeated_string_8_size() const;

  public:
  void clear_repeated_string_8() ;
  absl::string_view repeated_string_8(int index) const;
  void set_repeated_string_8(int index, const std::string& value);
  void set_repeated_string_8(int index, std::string&& value);
  void set_repeated_string_8(int index, const char* value);
  void set_repeated_string_8(int index, absl::string_view value);
  void add_repeated_string_8(const std::string& value);
  void add_repeated_string_8(std::string&& value);
  void add_repeated_string_8(const char* value);
  void add_repeated_string_8(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_8() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_8();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_8() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_8();

  public:
  // repeated string repeated_string_9 = 9;
  int repeated_string_9_size() const;
  private:
  int _internal_repeated_string_9_size() const;

  public:
  void clear_repeated_string_9() ;
  absl::string_view repeated_string_9(int index) const;
  void set_repeated_string_9(int index, const std::string& value);
  void set_repeated_string_9(int index, std::string&& value);
  void set_repeated_string_9(int index, const char* value);
  void set_repeated_string_9(int index, absl::string_view value);
  void add_repeated_string_9(const std::string& value);
  void add_repeated_string_9(std::string&& value);
  void add_repeated_string_9(const char* value);
  void add_repeated_string_9(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_9() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_9();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_9() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_9();

  public:
  // repeated string repeated_string_10 = 10;
  int repeated_string_10_size() const;
  private:
  int _internal_repeated_string_10_size() const;

  public:
  void clear_repeated_string_10() ;
  absl::string_view repeated_string_10(int index) const;
  void set_repeated_string_10(int index, const std::string& value);
  void set_repeated_string_10(int index, std::string&& value);
  void set_repeated_string_10(int index, const char* value);
  void set_repeated_string_10(int index, absl::string_view value);
  void add_repeated_string_10(const std::string& value);
  void add_repeated_string_10(std::string&& value);
  void add_repeated_string_10(const char* value);
  void add_repeated_string_10(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_10() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_10();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_10() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_10();

  public:
  // repeated string repeated_string_11 = 11;
  int repeated_string_11_size() const;
  private:
  int _internal_repeated_string_11_size() const;

  public:
  void clear_repeated_string_11() ;
  absl::string_view repeated_string_11(int index) const;
  void set_repeated_string_11(int index, const std::string& value);
  void set_repeated_string_11(int index, std::string&& value);
  void set_repeated_string_11(int index, const char* value);
  void set_repeated_string_11(int index, absl::string_view value);
  void add_repeated_string_11(const std::string& value);
  void add_repeated_string_11(std::string&& value);
  void add_repeated_string_11(const char* value);
  void add_repeated_string_11(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_11() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_11();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_11() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_11();

  public:
  // repeated string repeated_string_12 = 12;
  int repeated_string_12_size() const;
  private:
  int _internal_repeated_string_12_size() const;

  public:
  void clear_repeated_string_12() ;
  absl::string_view repeated_string_12(int index) const;
  void set_repeated_string_12(int index, const std::string& value);
  void set_repeated_string_12(int index, std::string&& value);
  void set_repeated_string_12(int index, const char* value);
  void set_repeated_string_12(int index, absl::string_view value);
  void add_repeated_string_12(const std::string& value);
  void add_repeated_string_12(std::string&& value);
  void add_repeated_string_12(const char* value);
  void add_repeated_string_12(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_12() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_12();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_12() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_12();

  public:
  // repeated string repeated_string_13 = 13;
  int repeated_string_13_size() const;
  private:
  int _internal_repeated_string_13_size() const;

  public:
  void clear_repeated_string_13() ;
  absl::string_view repeated_string_13(int index) const;
  void set_repeated_string_13(int index, const std::string& value);
  void set_repeated_string_13(int index, std::string&& value);
  void set_repeated_string_13(int index, const char* value);
  void set_repeated_string_13(int index, absl::string_view value);
  void add_repeated_string_13(const std::string& value);
  void add_repeated_string_13(std::string&& value);
  void add_repeated_string_13(const char* value);
  void add_repeated_string_13(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_13() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_13();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_13() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_13();

  public:
  // repeated string repeated_string_14 = 14;
  int repeated_string_14_size() const;
  private:
  int _internal_repeated_string_14_size() const;

  public:
  void clear_repeated_string_14() ;
  absl::string_view repeated_string_14(int index) const;
  void set_repeated_string_14(int index, const std::string& value);
  void set_repeated_string_14(int index, std::string&& value);
  void set_repeated_string_14(int index, const char* value);
  void set_repeated_string_14(int index, absl::string_view value);
  void add_repeated_string_14(const std::string& value);
  void add_repeated_string_14(std::string&& value);
  void add_repeated_string_14(const char* value);
  void add_repeated_string_14(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_14() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_14();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_14() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_14();

  public:
  // repeated string repeated_string_15 = 15;
  int repeated_string_15_size() const;
  private:
  int _internal_repeated_string_15_size() const;

  public:
  void clear_repeated_string_15() ;
  absl::string_view repeated_string_15(int index) const;
  void set_repeated_string_15(int index, const std::string& value);
  void set_repeated_string_15(int index, std::string&& value);
  void set_repeated_string_15(int index, const char* value);
  void set_repeated_string_15(int index, absl::string_view value);
  void add_repeated_string_15(const std::string& value);
  void add_repeated_string_15(std::string&& value);
  void add_repeated_string_15(const char* value);
  void add_repeated_string_15(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_15() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_15();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_15() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_15();

  public:
  // repeated string repeated_string_16 = 16;
  int repeated_string_16_size() const;
  private:
  int _internal_repeated_string_16_size() const;

  public:
  void clear_repeated_string_16() ;
  absl::string_view repeated_string_16(int index) const;
  void set_repeated_string_16(int index, const std::string& value);
  void set_repeated_string_16(int index, std::string&& value);
  void set_repeated_string_16(int index, const char* value);
  void set_repeated_string_16(int index, absl::string_view value);
  void add_repeated_string_16(const std::string& value);
  void add_repeated_string_16(std::string&& value);
  void add_repeated_string_16(const char* value);
  void add_repeated_string_16(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_16() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_16();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_16() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_16();

  public:
  // repeated string repeated_string_17 = 17;
  int repeated_string_17_size() const;
  private:
  int _internal_repeated_string_17_size() const;

  public:
  void clear_repeated_string_17() ;
  absl::string_view repeated_string_17(int index) const;
  void set_repeated_string_17(int index, const std::string& value);
  void set_repeated_string_17(int index, std::string&& value);
  void set_repeated_string_17(int index, const char* value);
  void set_repeated_string_17(int index, absl::string_view value);
  void add_repeated_string_17(const std::string& value);
  void add_repeated_string_17(std::string&& value);
  void add_repeated_string_17(const char* value);
  void add_repeated_string_17(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_17() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_17();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_17() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_17();

  public:
  // repeated string repeated_string_18 = 18;
  int repeated_string_18_size() const;
  private:
  int _internal_repeated_string_18_size() const;

  public:
  void clear_repeated_string_18() ;
  absl::string_view repeated_string_18(int index) const;
  void set_repeated_string_18(int index, const std::string& value);
  void set_repeated_string_18(int index, std::string&& value);
  void set_repeated_string_18(int index, const char* value);
  void set_repeated_string_18(int index, absl::string_view value);
  void add_repeated_string_18(const std::string& value);
  void add_repeated_string_18(std::string&& value);
  void add_repeated_string_18(const char* value);
  void add_repeated_string_18(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_18() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_18();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_18() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_18();

  public:
  // repeated string repeated_string_19 = 19;
  int repeated_string_19_size() const;
  private:
  int _internal_repeated_string_19_size() const;

  public:
  void clear_repeated_string_19() ;
  absl::string_view repeated_string_19(int index) const;
  void set_repeated_string_19(int index, const std::string& value);
  void set_repeated_string_19(int index, std::string&& value);
  void set_repeated_string_19(int index, const char* value);
  void set_repeated_string_19(int index, absl::string_view value);
  void add_repeated_string_19(const std::string& value);
  void add_repeated_string_19(std::string&& value);
  void add_repeated_string_19(const char* value);
  void add_repeated_string_19(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_19() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_19();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_19() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_19();

  public:
  // repeated string repeated_string_20 = 20;
  int repeated_string_20_size() const;
  private:
  int _internal_repeated_string_20_size() const;

  public:
  void clear_repeated_string_20() ;
  absl::string_view repeated_string_20(int index) const;
  void set_repeated_string_20(int index, const std::string& value);
  void set_repeated_string_20(int index, std::string&& value);
  void set_repeated_string_20(int index, const char* value);
  void set_repeated_string_20(int index, absl::string_view value);
  void add_repeated_string_20(const std::string& value);
  void add_repeated_string_20(std::string&& value);
  void add_repeated_string_20(const char* value);
  void add_repeated_string_20(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_20() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_20();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_20() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_20();

  public:
  // repeated string repeated_string_21 = 21;
  int repeated_string_21_size() const;
  private:
  int _internal_repeated_string_21_size() const;

  public:
  void clear_repeated_string_21() ;
  absl::string_view repeated_string_21(int index) const;
  void set_repeated_string_21(int index, const std::string& value);
  void set_repeated_string_21(int index, std::string&& value);
  void set_repeated_string_21(int index, const char* value);
  void set_repeated_string_21(int index, absl::string_view value);
  void add_repeated_string_21(const std::string& value);
  void add_repeated_string_21(std::string&& value);
  void add_repeated_string_21(const char* value);
  void add_repeated_string_21(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_21() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_21();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_21() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_21();

  public:
  // repeated string repeated_string_22 = 22;
  int repeated_string_22_size() const;
  private:
  int _internal_repeated_string_22_size() const;

  public:
  void clear_repeated_string_22() ;
  absl::string_view repeated_string_22(int index) const;
  void set_repeated_string_22(int index, const std::string& value);
  void set_repeated_string_22(int index, std::string&& value);
  void set_repeated_string_22(int index, const char* value);
  void set_repeated_string_22(int index, absl::string_view value);
  void add_repeated_string_22(const std::string& value);
  void add_repeated_string_22(std::string&& value);
  void add_repeated_string_22(const char* value);
  void add_repeated_string_22(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_22() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_22();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_22() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_22();

  public:
  // repeated string repeated_string_23 = 23;
  int repeated_string_23_size() const;
  private:
  int _internal_repeated_string_23_size() const;

  public:
  void clear_repeated_string_23() ;
  absl::string_view repeated_string_23(int index) const;
  void set_repeated_string_23(int index, const std::string& value);
  void set_repeated_string_23(int index, std::string&& value);
  void set_repeated_string_23(int index, const char* value);
  void set_repeated_string_23(int index, absl::string_view value);
  void add_repeated_string_23(const std::string& value);
  void add_repeated_string_23(std::string&& value);
  void add_repeated_string_23(const char* value);
  void add_repeated_string_23(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_23() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_23();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_23() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_23();

  public:
  // repeated string repeated_string_24 = 24;
  int repeated_string_24_size() const;
  private:
  int _internal_repeated_string_24_size() const;

  public:
  void clear_repeated_string_24() ;
  absl::string_view repeated_string_24(int index) const;
  void set_repeated_string_24(int index, const std::string& value);
  void set_repeated_string_24(int index, std::string&& value);
  void set_repeated_string_24(int index, const char* value);
  void set_repeated_string_24(int index, absl::string_view value);
  void add_repeated_string_24(const std::string& value);
  void add_repeated_string_24(std::string&& value);
  void add_repeated_string_24(const char* value);
  void add_repeated_string_24(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_24() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_24();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_24() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_24();

  public:
  // repeated string repeated_string_25 = 25;
  int repeated_string_25_size() const;
  private:
  int _internal_repeated_string_25_size() const;

  public:
  void clear_repeated_string_25() ;
  absl::string_view repeated_string_25(int index) const;
  void set_repeated_string_25(int index, const std::string& value);
  void set_repeated_string_25(int index, std::string&& value);
  void set_repeated_string_25(int index, const char* value);
  void set_repeated_string_25(int index, absl::string_view value);
  void add_repeated_string_25(const std::string& value);
  void add_repeated_string_25(std::string&& value);
  void add_repeated_string_25(const char* value);
  void add_repeated_string_25(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_25() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_25();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_25() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_25();

  public:
  // repeated string repeated_string_26 = 26;
  int repeated_string_26_size() const;
  private:
  int _internal_repeated_string_26_size() const;

  public:
  void clear_repeated_string_26() ;
  absl::string_view repeated_string_26(int index) const;
  void set_repeated_string_26(int index, const std::string& value);
  void set_repeated_string_26(int index, std::string&& value);
  void set_repeated_string_26(int index, const char* value);
  void set_repeated_string_26(int index, absl::string_view value);
  void add_repeated_string_26(const std::string& value);
  void add_repeated_string_26(std::string&& value);
  void add_repeated_string_26(const char* value);
  void add_repeated_string_26(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_26() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_26();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_26() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_26();

  public:
  // repeated string repeated_string_27 = 27;
  int repeated_string_27_size() const;
  private:
  int _internal_repeated_string_27_size() const;

  public:
  void clear_repeated_string_27() ;
  absl::string_view repeated_string_27(int index) const;
  void set_repeated_string_27(int index, const std::string& value);
  void set_repeated_string_27(int index, std::string&& value);
  void set_repeated_string_27(int index, const char* value);
  void set_repeated_string_27(int index, absl::string_view value);
  void add_repeated_string_27(const std::string& value);
  void add_repeated_string_27(std::string&& value);
  void add_repeated_string_27(const char* value);
  void add_repeated_string_27(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_27() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_27();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_27() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_27();

  public:
  // repeated string repeated_string_28 = 28;
  int repeated_string_28_size() const;
  private:
  int _internal_repeated_string_28_size() const;

  public:
  void clear_repeated_string_28() ;
  absl::string_view repeated_string_28(int index) const;
  void set_repeated_string_28(int index, const std::string& value);
  void set_repeated_string_28(int index, std::string&& value);
  void set_repeated_string_28(int index, const char* value);
  void set_repeated_string_28(int index, absl::string_view value);
  void add_repeated_string_28(const std::string& value);
  void add_repeated_string_28(std::string&& value);
  void add_repeated_string_28(const char* value);
  void add_repeated_string_28(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_28() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_28();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_28() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_28();

  public:
  // repeated string repeated_string_29 = 29;
  int repeated_string_29_size() const;
  private:
  int _internal_repeated_string_29_size() const;

  public:
  void clear_repeated_string_29() ;
  absl::string_view repeated_string_29(int index) const;
  void set_repeated_string_29(int index, const std::string& value);
  void set_repeated_string_29(int index, std::string&& value);
  void set_repeated_string_29(int index, const char* value);
  void set_repeated_string_29(int index, absl::string_view value);
  void add_repeated_string_29(const std::string& value);
  void add_repeated_string_29(std::string&& value);
  void add_repeated_string_29(const char* value);
  void add_repeated_string_29(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_29() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_29();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_29() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_29();

  public:
  // repeated string repeated_string_30 = 30;
  int repeated_string_30_size() const;
  private:
  int _internal_repeated_string_30_size() const;

  public:
  void clear_repeated_string_30() ;
  absl::string_view repeated_string_30(int index) const;
  void set_repeated_string_30(int index, const std::string& value);
  void set_repeated_string_30(int index, std::string&& value);
  void set_repeated_string_30(int index, const char* value);
  void set_repeated_string_30(int index, absl::string_view value);
  void add_repeated_string_30(const std::string& value);
  void add_repeated_string_30(std::string&& value);
  void add_repeated_string_30(const char* value);
  void add_repeated_string_30(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_30() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_30();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_30() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_30();

  public:
  // repeated string repeated_string_31 = 31;
  int repeated_string_31_size() const;
  private:
  int _internal_repeated_string_31_size() const;

  public:
  void clear_repeated_string_31() ;
  absl::string_view repeated_string_31(int index) const;
  void set_repeated_string_31(int index, const std::string& value);
  void set_repeated_string_31(int index, std::string&& value);
  void set_repeated_string_31(int index, const char* value);
  void set_repeated_string_31(int index, absl::string_view value);
  void add_repeated_string_31(const std::string& value);
  void add_repeated_string_31(std::string&& value);
  void add_repeated_string_31(const char* value);
  void add_repeated_string_31(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_31() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_31();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_31() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_31();

  public:
  // repeated string repeated_string_32 = 32;
  int repeated_string_32_size() const;
  private:
  int _internal_repeated_string_32_size() const;

  public:
  void clear_repeated_string_32() ;
  absl::string_view repeated_string_32(int index) const;
  void set_repeated_string_32(int index, const std::string& value);
  void set_repeated_string_32(int index, std::string&& value);
  void set_repeated_string_32(int index, const char* value);
  void set_repeated_string_32(int index, absl::string_view value);
  void add_repeated_string_32(const std::string& value);
  void add_repeated_string_32(std::string&& value);
  void add_repeated_string_32(const char* value);
  void add_repeated_string_32(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_32() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_32();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_32() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_32();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMessageWithManyRepeatedPtrFields)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 32, 0,
      661, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMessageWithManyRepeatedPtrFields_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMessageWithManyRepeatedPtrFields& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_1_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_2_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_3_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_4_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_5_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_6_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_7_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_8_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_9_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_10_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_11_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_12_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_13_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_14_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_15_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_16_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_17_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_18_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_19_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_20_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_21_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_22_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_23_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_24_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_25_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_26_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_27_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_28_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_29_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_30_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_31_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_32_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMessageSize final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMessageSize) */ {
 public:
  inline TestMessageSize() : TestMessageSize(nullptr) {}
  ~TestMessageSize() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageSize(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMessageSize(const TestMessageSize& from) : TestMessageSize(nullptr, from) {}
  inline TestMessageSize(TestMessageSize&& from) noexcept
      : TestMessageSize(nullptr, std::move(from)) {}
  inline TestMessageSize& operator=(const TestMessageSize& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageSize& operator=(TestMessageSize&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageSize& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageSize* internal_default_instance() {
    return reinterpret_cast<const TestMessageSize*>(
        &_TestMessageSize_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 102;
  friend void swap(TestMessageSize& a, TestMessageSize& b) { a.Swap(&b); }
  inline void Swap(TestMessageSize* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageSize* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageSize* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMessageSize>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessageSize& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMessageSize& from) { TestMessageSize::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageSize* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMessageSize"; }

 protected:
  explicit TestMessageSize(::google::protobuf::Arena* arena);
  TestMessageSize(::google::protobuf::Arena* arena, const TestMessageSize& from);
  TestMessageSize(::google::protobuf::Arena* arena, TestMessageSize&& from) noexcept
      : TestMessageSize(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kM4FieldNumber = 4,
    kM2FieldNumber = 2,
    kM1FieldNumber = 1,
    kM3FieldNumber = 3,
    kM5FieldNumber = 5,
    kM6FieldNumber = 6,
  };
  // string m4 = 4;
  bool has_m4() const;
  void clear_m4() ;
  absl::string_view m4() const;
  template <typename Arg_ = std::string&&>
  void set_m4(Arg_&& arg);

  private:
  const std::string& _internal_m4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_m4(
      absl::string_view value);

  public:
  // int64 m2 = 2;
  bool has_m2() const;
  void clear_m2() ;
  ::int64_t m2() const;
  void set_m2(::int64_t value);

  private:
  ::int64_t _internal_m2() const;
  void _internal_set_m2(::int64_t value);

  public:
  // bool m1 = 1;
  bool has_m1() const;
  void clear_m1() ;
  bool m1() const;
  void set_m1(bool value);

  private:
  bool _internal_m1() const;
  void _internal_set_m1(bool value);

  public:
  // bool m3 = 3;
  bool has_m3() const;
  void clear_m3() ;
  bool m3() const;
  void set_m3(bool value);

  private:
  bool _internal_m3() const;
  void _internal_set_m3(bool value);

  public:
  // int32 m5 = 5;
  bool has_m5() const;
  void clear_m5() ;
  ::int32_t m5() const;
  void set_m5(::int32_t value);

  private:
  ::int32_t _internal_m5() const;
  void _internal_set_m5(::int32_t value);

  public:
  // int64 m6 = 6;
  bool has_m6() const;
  void clear_m6() ;
  ::int64_t m6() const;
  void set_m6(::int64_t value);

  private:
  ::int64_t _internal_m6() const;
  void _internal_set_m6(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMessageSize)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMessageSize_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMessageSize& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr m4_;
    ::int64_t m2_;
    bool m1_;
    bool m3_;
    ::int32_t m5_;
    ::int64_t m6_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestJsonName final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestJsonName) */ {
 public:
  inline TestJsonName() : TestJsonName(nullptr) {}
  ~TestJsonName() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestJsonName(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestJsonName(const TestJsonName& from) : TestJsonName(nullptr, from) {}
  inline TestJsonName(TestJsonName&& from) noexcept
      : TestJsonName(nullptr, std::move(from)) {}
  inline TestJsonName& operator=(const TestJsonName& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestJsonName& operator=(TestJsonName&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestJsonName& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestJsonName* internal_default_instance() {
    return reinterpret_cast<const TestJsonName*>(
        &_TestJsonName_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 109;
  friend void swap(TestJsonName& a, TestJsonName& b) { a.Swap(&b); }
  inline void Swap(TestJsonName* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestJsonName* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestJsonName* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestJsonName>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestJsonName& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestJsonName& from) { TestJsonName::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestJsonName* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestJsonName"; }

 protected:
  explicit TestJsonName(::google::protobuf::Arena* arena);
  TestJsonName(::google::protobuf::Arena* arena, const TestJsonName& from);
  TestJsonName(::google::protobuf::Arena* arena, TestJsonName&& from) noexcept
      : TestJsonName(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldName1FieldNumber = 1,
    kFieldName2FieldNumber = 2,
    kFieldName3FieldNumber = 3,
    kFieldName4FieldNumber = 4,
    kFIELDNAME5FieldNumber = 5,
    kFieldName6FieldNumber = 6,
    kFieldname7FieldNumber = 7,
  };
  // int32 field_name1 = 1;
  bool has_field_name1() const;
  void clear_field_name1() ;
  ::int32_t field_name1() const;
  void set_field_name1(::int32_t value);

  private:
  ::int32_t _internal_field_name1() const;
  void _internal_set_field_name1(::int32_t value);

  public:
  // int32 fieldName2 = 2;
  bool has_fieldname2() const;
  void clear_fieldname2() ;
  ::int32_t fieldname2() const;
  void set_fieldname2(::int32_t value);

  private:
  ::int32_t _internal_fieldname2() const;
  void _internal_set_fieldname2(::int32_t value);

  public:
  // int32 FieldName3 = 3;
  bool has_fieldname3() const;
  void clear_fieldname3() ;
  ::int32_t fieldname3() const;
  void set_fieldname3(::int32_t value);

  private:
  ::int32_t _internal_fieldname3() const;
  void _internal_set_fieldname3(::int32_t value);

  public:
  // int32 _field_name4 = 4;
  bool has__field_name4() const;
  void clear__field_name4() ;
  ::int32_t _field_name4() const;
  void set__field_name4(::int32_t value);

  private:
  ::int32_t _internal__field_name4() const;
  void _internal_set__field_name4(::int32_t value);

  public:
  // int32 FIELD_NAME5 = 5;
  bool has_field_name5() const;
  void clear_field_name5() ;
  ::int32_t field_name5() const;
  void set_field_name5(::int32_t value);

  private:
  ::int32_t _internal_field_name5() const;
  void _internal_set_field_name5(::int32_t value);

  public:
  // int32 field_name6 = 6 [json_name = "@type"];
  bool has_field_name6() const;
  void clear_field_name6() ;
  ::int32_t field_name6() const;
  void set_field_name6(::int32_t value);

  private:
  ::int32_t _internal_field_name6() const;
  void _internal_set_field_name6(::int32_t value);

  public:
  // int32 fieldname7 = 7;
  bool has_fieldname7() const;
  void clear_fieldname7() ;
  ::int32_t fieldname7() const;
  void set_fieldname7(::int32_t value);

  private:
  ::int32_t _internal_fieldname7() const;
  void _internal_set_fieldname7(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestJsonName)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestJsonName_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestJsonName& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t field_name1_;
    ::int32_t fieldname2_;
    ::int32_t fieldname3_;
    ::int32_t _field_name4_;
    ::int32_t field_name5_;
    ::int32_t field_name6_;
    ::int32_t fieldname7_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestIsInitialized_SubMessage_SubGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestIsInitialized.SubMessage.SubGroup) */ {
 public:
  inline TestIsInitialized_SubMessage_SubGroup() : TestIsInitialized_SubMessage_SubGroup(nullptr) {}
  ~TestIsInitialized_SubMessage_SubGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestIsInitialized_SubMessage_SubGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestIsInitialized_SubMessage_SubGroup(const TestIsInitialized_SubMessage_SubGroup& from) : TestIsInitialized_SubMessage_SubGroup(nullptr, from) {}
  inline TestIsInitialized_SubMessage_SubGroup(TestIsInitialized_SubMessage_SubGroup&& from) noexcept
      : TestIsInitialized_SubMessage_SubGroup(nullptr, std::move(from)) {}
  inline TestIsInitialized_SubMessage_SubGroup& operator=(const TestIsInitialized_SubMessage_SubGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestIsInitialized_SubMessage_SubGroup& operator=(TestIsInitialized_SubMessage_SubGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestIsInitialized_SubMessage_SubGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestIsInitialized_SubMessage_SubGroup* internal_default_instance() {
    return reinterpret_cast<const TestIsInitialized_SubMessage_SubGroup*>(
        &_TestIsInitialized_SubMessage_SubGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(TestIsInitialized_SubMessage_SubGroup& a, TestIsInitialized_SubMessage_SubGroup& b) { a.Swap(&b); }
  inline void Swap(TestIsInitialized_SubMessage_SubGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestIsInitialized_SubMessage_SubGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestIsInitialized_SubMessage_SubGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestIsInitialized_SubMessage_SubGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestIsInitialized_SubMessage_SubGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestIsInitialized_SubMessage_SubGroup& from) { TestIsInitialized_SubMessage_SubGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestIsInitialized_SubMessage_SubGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestIsInitialized.SubMessage.SubGroup"; }

 protected:
  explicit TestIsInitialized_SubMessage_SubGroup(::google::protobuf::Arena* arena);
  TestIsInitialized_SubMessage_SubGroup(::google::protobuf::Arena* arena, const TestIsInitialized_SubMessage_SubGroup& from);
  TestIsInitialized_SubMessage_SubGroup(::google::protobuf::Arena* arena, TestIsInitialized_SubMessage_SubGroup&& from) noexcept
      : TestIsInitialized_SubMessage_SubGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIFieldNumber = 2,
  };
  // int32 i = 2 [features = {
  bool has_i() const;
  void clear_i() ;
  ::int32_t i() const;
  void set_i(::int32_t value);

  private:
  ::int32_t _internal_i() const;
  void _internal_set_i(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestIsInitialized.SubMessage.SubGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestIsInitialized_SubMessage_SubGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestIsInitialized_SubMessage_SubGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t i_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestHugeFieldNumbers_StringStringMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestHugeFieldNumbers_StringStringMapEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestHugeFieldNumbers_StringStringMapEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TestHugeFieldNumbers_StringStringMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestHugeFieldNumbers_StringStringMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestHugeFieldNumbers_StringStringMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestHugeFieldNumbers_StringStringMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestHugeFieldNumbers_StringStringMapEntry_DoNotUse*>(
        &_TestHugeFieldNumbers_StringStringMapEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestHugeFieldNumbers_OptionalGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestHugeFieldNumbers.OptionalGroup) */ {
 public:
  inline TestHugeFieldNumbers_OptionalGroup() : TestHugeFieldNumbers_OptionalGroup(nullptr) {}
  ~TestHugeFieldNumbers_OptionalGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestHugeFieldNumbers_OptionalGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestHugeFieldNumbers_OptionalGroup(const TestHugeFieldNumbers_OptionalGroup& from) : TestHugeFieldNumbers_OptionalGroup(nullptr, from) {}
  inline TestHugeFieldNumbers_OptionalGroup(TestHugeFieldNumbers_OptionalGroup&& from) noexcept
      : TestHugeFieldNumbers_OptionalGroup(nullptr, std::move(from)) {}
  inline TestHugeFieldNumbers_OptionalGroup& operator=(const TestHugeFieldNumbers_OptionalGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestHugeFieldNumbers_OptionalGroup& operator=(TestHugeFieldNumbers_OptionalGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestHugeFieldNumbers_OptionalGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestHugeFieldNumbers_OptionalGroup* internal_default_instance() {
    return reinterpret_cast<const TestHugeFieldNumbers_OptionalGroup*>(
        &_TestHugeFieldNumbers_OptionalGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 110;
  friend void swap(TestHugeFieldNumbers_OptionalGroup& a, TestHugeFieldNumbers_OptionalGroup& b) { a.Swap(&b); }
  inline void Swap(TestHugeFieldNumbers_OptionalGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestHugeFieldNumbers_OptionalGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestHugeFieldNumbers_OptionalGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestHugeFieldNumbers_OptionalGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestHugeFieldNumbers_OptionalGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestHugeFieldNumbers_OptionalGroup& from) { TestHugeFieldNumbers_OptionalGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestHugeFieldNumbers_OptionalGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestHugeFieldNumbers.OptionalGroup"; }

 protected:
  explicit TestHugeFieldNumbers_OptionalGroup(::google::protobuf::Arena* arena);
  TestHugeFieldNumbers_OptionalGroup(::google::protobuf::Arena* arena, const TestHugeFieldNumbers_OptionalGroup& from);
  TestHugeFieldNumbers_OptionalGroup(::google::protobuf::Arena* arena, TestHugeFieldNumbers_OptionalGroup&& from) noexcept
      : TestHugeFieldNumbers_OptionalGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupAFieldNumber = 536870009,
  };
  // int32 group_a = 536870009;
  bool has_group_a() const;
  void clear_group_a() ;
  ::int32_t group_a() const;
  void set_group_a(::int32_t value);

  private:
  ::int32_t _internal_group_a() const;
  void _internal_set_group_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestHugeFieldNumbers.OptionalGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestHugeFieldNumbers_OptionalGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestHugeFieldNumbers_OptionalGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t group_a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestGroupExtension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestGroupExtension) */ {
 public:
  inline TestGroupExtension() : TestGroupExtension(nullptr) {}
  ~TestGroupExtension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestGroupExtension(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestGroupExtension(const TestGroupExtension& from) : TestGroupExtension(nullptr, from) {}
  inline TestGroupExtension(TestGroupExtension&& from) noexcept
      : TestGroupExtension(nullptr, std::move(from)) {}
  inline TestGroupExtension& operator=(const TestGroupExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestGroupExtension& operator=(TestGroupExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestGroupExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestGroupExtension* internal_default_instance() {
    return reinterpret_cast<const TestGroupExtension*>(
        &_TestGroupExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(TestGroupExtension& a, TestGroupExtension& b) { a.Swap(&b); }
  inline void Swap(TestGroupExtension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestGroupExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestGroupExtension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestGroupExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestGroupExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestGroupExtension& from) { TestGroupExtension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestGroupExtension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestGroupExtension"; }

 protected:
  explicit TestGroupExtension(::google::protobuf::Arena* arena);
  TestGroupExtension(::google::protobuf::Arena* arena, const TestGroupExtension& from);
  TestGroupExtension(::google::protobuf::Arena* arena, TestGroupExtension&& from) noexcept
      : TestGroupExtension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestGroupExtension, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestGroupExtension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestGroupExtension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestGroupExtension& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestGroup_OptionalGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestGroup.OptionalGroup) */ {
 public:
  inline TestGroup_OptionalGroup() : TestGroup_OptionalGroup(nullptr) {}
  ~TestGroup_OptionalGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestGroup_OptionalGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestGroup_OptionalGroup(const TestGroup_OptionalGroup& from) : TestGroup_OptionalGroup(nullptr, from) {}
  inline TestGroup_OptionalGroup(TestGroup_OptionalGroup&& from) noexcept
      : TestGroup_OptionalGroup(nullptr, std::move(from)) {}
  inline TestGroup_OptionalGroup& operator=(const TestGroup_OptionalGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestGroup_OptionalGroup& operator=(TestGroup_OptionalGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestGroup_OptionalGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestGroup_OptionalGroup* internal_default_instance() {
    return reinterpret_cast<const TestGroup_OptionalGroup*>(
        &_TestGroup_OptionalGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(TestGroup_OptionalGroup& a, TestGroup_OptionalGroup& b) { a.Swap(&b); }
  inline void Swap(TestGroup_OptionalGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestGroup_OptionalGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestGroup_OptionalGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestGroup_OptionalGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestGroup_OptionalGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestGroup_OptionalGroup& from) { TestGroup_OptionalGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestGroup_OptionalGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestGroup.OptionalGroup"; }

 protected:
  explicit TestGroup_OptionalGroup(::google::protobuf::Arena* arena);
  TestGroup_OptionalGroup(::google::protobuf::Arena* arena, const TestGroup_OptionalGroup& from);
  TestGroup_OptionalGroup(::google::protobuf::Arena* arena, TestGroup_OptionalGroup&& from) noexcept
      : TestGroup_OptionalGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 17,
    kZzFieldNumber = 89,
  };
  // int32 a = 17;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // int32 zz = 89;
  bool has_zz() const;
  void clear_zz() ;
  ::int32_t zz() const;
  void set_zz(::int32_t value);

  private:
  ::int32_t _internal_zz() const;
  void _internal_set_zz(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestGroup.OptionalGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 2, 0,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestGroup_OptionalGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestGroup_OptionalGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    ::int32_t zz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestFieldOrderings_NestedMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestFieldOrderings.NestedMessage) */ {
 public:
  inline TestFieldOrderings_NestedMessage() : TestFieldOrderings_NestedMessage(nullptr) {}
  ~TestFieldOrderings_NestedMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestFieldOrderings_NestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestFieldOrderings_NestedMessage(const TestFieldOrderings_NestedMessage& from) : TestFieldOrderings_NestedMessage(nullptr, from) {}
  inline TestFieldOrderings_NestedMessage(TestFieldOrderings_NestedMessage&& from) noexcept
      : TestFieldOrderings_NestedMessage(nullptr, std::move(from)) {}
  inline TestFieldOrderings_NestedMessage& operator=(const TestFieldOrderings_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestFieldOrderings_NestedMessage& operator=(TestFieldOrderings_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestFieldOrderings_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestFieldOrderings_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestFieldOrderings_NestedMessage*>(
        &_TestFieldOrderings_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(TestFieldOrderings_NestedMessage& a, TestFieldOrderings_NestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestFieldOrderings_NestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestFieldOrderings_NestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestFieldOrderings_NestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestFieldOrderings_NestedMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestFieldOrderings_NestedMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestFieldOrderings_NestedMessage& from) { TestFieldOrderings_NestedMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestFieldOrderings_NestedMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestFieldOrderings.NestedMessage"; }

 protected:
  explicit TestFieldOrderings_NestedMessage(::google::protobuf::Arena* arena);
  TestFieldOrderings_NestedMessage(::google::protobuf::Arena* arena, const TestFieldOrderings_NestedMessage& from);
  TestFieldOrderings_NestedMessage(::google::protobuf::Arena* arena, TestFieldOrderings_NestedMessage&& from) noexcept
      : TestFieldOrderings_NestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOoFieldNumber = 2,
    kBbFieldNumber = 1,
  };
  // int64 oo = 2;
  bool has_oo() const;
  void clear_oo() ;
  ::int64_t oo() const;
  void set_oo(::int64_t value);

  private:
  ::int64_t _internal_oo() const;
  void _internal_set_oo(::int64_t value);

  public:
  // int32 bb = 1;
  bool has_bb() const;
  void clear_bb() ;
  ::int32_t bb() const;
  void set_bb(::int32_t value);

  private:
  ::int32_t _internal_bb() const;
  void _internal_set_bb(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestFieldOrderings.NestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestFieldOrderings_NestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestFieldOrderings_NestedMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t oo_;
    ::int32_t bb_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestExtremeDefaultValues final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestExtremeDefaultValues) */ {
 public:
  inline TestExtremeDefaultValues() : TestExtremeDefaultValues(nullptr) {}
  ~TestExtremeDefaultValues() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestExtremeDefaultValues(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestExtremeDefaultValues(const TestExtremeDefaultValues& from) : TestExtremeDefaultValues(nullptr, from) {}
  inline TestExtremeDefaultValues(TestExtremeDefaultValues&& from) noexcept
      : TestExtremeDefaultValues(nullptr, std::move(from)) {}
  inline TestExtremeDefaultValues& operator=(const TestExtremeDefaultValues& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestExtremeDefaultValues& operator=(TestExtremeDefaultValues&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestExtremeDefaultValues& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestExtremeDefaultValues* internal_default_instance() {
    return reinterpret_cast<const TestExtremeDefaultValues*>(
        &_TestExtremeDefaultValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 65;
  friend void swap(TestExtremeDefaultValues& a, TestExtremeDefaultValues& b) { a.Swap(&b); }
  inline void Swap(TestExtremeDefaultValues* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestExtremeDefaultValues* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestExtremeDefaultValues* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestExtremeDefaultValues>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestExtremeDefaultValues& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestExtremeDefaultValues& from) { TestExtremeDefaultValues::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestExtremeDefaultValues* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestExtremeDefaultValues"; }

 protected:
  explicit TestExtremeDefaultValues(::google::protobuf::Arena* arena);
  TestExtremeDefaultValues(::google::protobuf::Arena* arena, const TestExtremeDefaultValues& from);
  TestExtremeDefaultValues(::google::protobuf::Arena* arena, TestExtremeDefaultValues&& from) noexcept
      : TestExtremeDefaultValues(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEscapedBytesFieldNumber = 1,
    kUtf8StringFieldNumber = 6,
    kCppTrigraphFieldNumber = 20,
    kStringWithZeroFieldNumber = 23,
    kBytesWithZeroFieldNumber = 24,
    kStringPieceWithZeroFieldNumber = 25,
    kCordWithZeroFieldNumber = 26,
    kReplacementStringFieldNumber = 27,
    kZeroFloatFieldNumber = 7,
    kLargeUint64FieldNumber = 3,
    kLargeUint32FieldNumber = 2,
    kSmallInt32FieldNumber = 4,
    kSmallInt64FieldNumber = 5,
    kOneFloatFieldNumber = 8,
    kSmallFloatFieldNumber = 9,
    kNegativeOneFloatFieldNumber = 10,
    kNegativeFloatFieldNumber = 11,
    kLargeFloatFieldNumber = 12,
    kSmallNegativeFloatFieldNumber = 13,
    kInfDoubleFieldNumber = 14,
    kNegInfDoubleFieldNumber = 15,
    kNanDoubleFieldNumber = 16,
    kInfFloatFieldNumber = 17,
    kNegInfFloatFieldNumber = 18,
    kNanFloatFieldNumber = 19,
    kReallySmallInt32FieldNumber = 21,
    kReallySmallInt64FieldNumber = 22,
  };
  // bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
  bool has_escaped_bytes() const;
  void clear_escaped_bytes() ;
  absl::string_view escaped_bytes() const;
  template <typename Arg_ = std::string&&>
  void set_escaped_bytes(Arg_&& arg);

  private:
  const std::string& _internal_escaped_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escaped_bytes(
      absl::string_view value);

  public:
  // string utf8_string = 6 [default = "\341\210\264"];
  bool has_utf8_string() const;
  void clear_utf8_string() ;
  absl::string_view utf8_string() const;
  template <typename Arg_ = std::string&&>
  void set_utf8_string(Arg_&& arg);

  private:
  const std::string& _internal_utf8_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_utf8_string(
      absl::string_view value);

  public:
  // string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
  bool has_cpp_trigraph() const;
  void clear_cpp_trigraph() ;
  absl::string_view cpp_trigraph() const;
  template <typename Arg_ = std::string&&>
  void set_cpp_trigraph(Arg_&& arg);

  private:
  const std::string& _internal_cpp_trigraph() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cpp_trigraph(
      absl::string_view value);

  public:
  // string string_with_zero = 23 [default = "hel\000lo"];
  bool has_string_with_zero() const;
  void clear_string_with_zero() ;
  absl::string_view string_with_zero() const;
  template <typename Arg_ = std::string&&>
  void set_string_with_zero(Arg_&& arg);

  private:
  const std::string& _internal_string_with_zero() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_with_zero(
      absl::string_view value);

  public:
  // bytes bytes_with_zero = 24 [default = "wor\000ld"];
  bool has_bytes_with_zero() const;
  void clear_bytes_with_zero() ;
  absl::string_view bytes_with_zero() const;
  template <typename Arg_ = std::string&&>
  void set_bytes_with_zero(Arg_&& arg);

  private:
  const std::string& _internal_bytes_with_zero() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bytes_with_zero(
      absl::string_view value);

  public:
  // string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
  bool has_string_piece_with_zero() const;
  void clear_string_piece_with_zero() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& string_piece_with_zero() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string_piece_with_zero(Arg_&& arg, Args_... args);
  std::string* mutable_string_piece_with_zero();
  PROTOBUF_NODISCARD std::string* release_string_piece_with_zero();
  void set_allocated_string_piece_with_zero(std::string* value);

  private:
  const std::string& _internal_string_piece_with_zero() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_piece_with_zero(
      const std::string& value);
  std::string* _internal_mutable_string_piece_with_zero();

  public:
  // string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
  bool has_cord_with_zero() const;
  void clear_cord_with_zero() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& cord_with_zero() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cord_with_zero(Arg_&& arg, Args_... args);
  std::string* mutable_cord_with_zero();
  PROTOBUF_NODISCARD std::string* release_cord_with_zero();
  void set_allocated_cord_with_zero(std::string* value);

  private:
  const std::string& _internal_cord_with_zero() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cord_with_zero(
      const std::string& value);
  std::string* _internal_mutable_cord_with_zero();

  public:
  // string replacement_string = 27 [default = "${unknown}"];
  bool has_replacement_string() const;
  void clear_replacement_string() ;
  absl::string_view replacement_string() const;
  template <typename Arg_ = std::string&&>
  void set_replacement_string(Arg_&& arg);

  private:
  const std::string& _internal_replacement_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_replacement_string(
      absl::string_view value);

  public:
  // float zero_float = 7 [default = 0];
  bool has_zero_float() const;
  void clear_zero_float() ;
  float zero_float() const;
  void set_zero_float(float value);

  private:
  float _internal_zero_float() const;
  void _internal_set_zero_float(float value);

  public:
  // uint64 large_uint64 = 3 [default = 18446744073709551615];
  bool has_large_uint64() const;
  void clear_large_uint64() ;
  ::uint64_t large_uint64() const;
  void set_large_uint64(::uint64_t value);

  private:
  ::uint64_t _internal_large_uint64() const;
  void _internal_set_large_uint64(::uint64_t value);

  public:
  // uint32 large_uint32 = 2 [default = 4294967295];
  bool has_large_uint32() const;
  void clear_large_uint32() ;
  ::uint32_t large_uint32() const;
  void set_large_uint32(::uint32_t value);

  private:
  ::uint32_t _internal_large_uint32() const;
  void _internal_set_large_uint32(::uint32_t value);

  public:
  // int32 small_int32 = 4 [default = -2147483647];
  bool has_small_int32() const;
  void clear_small_int32() ;
  ::int32_t small_int32() const;
  void set_small_int32(::int32_t value);

  private:
  ::int32_t _internal_small_int32() const;
  void _internal_set_small_int32(::int32_t value);

  public:
  // int64 small_int64 = 5 [default = -9223372036854775807];
  bool has_small_int64() const;
  void clear_small_int64() ;
  ::int64_t small_int64() const;
  void set_small_int64(::int64_t value);

  private:
  ::int64_t _internal_small_int64() const;
  void _internal_set_small_int64(::int64_t value);

  public:
  // float one_float = 8 [default = 1];
  bool has_one_float() const;
  void clear_one_float() ;
  float one_float() const;
  void set_one_float(float value);

  private:
  float _internal_one_float() const;
  void _internal_set_one_float(float value);

  public:
  // float small_float = 9 [default = 1.5];
  bool has_small_float() const;
  void clear_small_float() ;
  float small_float() const;
  void set_small_float(float value);

  private:
  float _internal_small_float() const;
  void _internal_set_small_float(float value);

  public:
  // float negative_one_float = 10 [default = -1];
  bool has_negative_one_float() const;
  void clear_negative_one_float() ;
  float negative_one_float() const;
  void set_negative_one_float(float value);

  private:
  float _internal_negative_one_float() const;
  void _internal_set_negative_one_float(float value);

  public:
  // float negative_float = 11 [default = -1.5];
  bool has_negative_float() const;
  void clear_negative_float() ;
  float negative_float() const;
  void set_negative_float(float value);

  private:
  float _internal_negative_float() const;
  void _internal_set_negative_float(float value);

  public:
  // float large_float = 12 [default = 2e+08];
  bool has_large_float() const;
  void clear_large_float() ;
  float large_float() const;
  void set_large_float(float value);

  private:
  float _internal_large_float() const;
  void _internal_set_large_float(float value);

  public:
  // float small_negative_float = 13 [default = -8e-28];
  bool has_small_negative_float() const;
  void clear_small_negative_float() ;
  float small_negative_float() const;
  void set_small_negative_float(float value);

  private:
  float _internal_small_negative_float() const;
  void _internal_set_small_negative_float(float value);

  public:
  // double inf_double = 14 [default = inf];
  bool has_inf_double() const;
  void clear_inf_double() ;
  double inf_double() const;
  void set_inf_double(double value);

  private:
  double _internal_inf_double() const;
  void _internal_set_inf_double(double value);

  public:
  // double neg_inf_double = 15 [default = -inf];
  bool has_neg_inf_double() const;
  void clear_neg_inf_double() ;
  double neg_inf_double() const;
  void set_neg_inf_double(double value);

  private:
  double _internal_neg_inf_double() const;
  void _internal_set_neg_inf_double(double value);

  public:
  // double nan_double = 16 [default = nan];
  bool has_nan_double() const;
  void clear_nan_double() ;
  double nan_double() const;
  void set_nan_double(double value);

  private:
  double _internal_nan_double() const;
  void _internal_set_nan_double(double value);

  public:
  // float inf_float = 17 [default = inf];
  bool has_inf_float() const;
  void clear_inf_float() ;
  float inf_float() const;
  void set_inf_float(float value);

  private:
  float _internal_inf_float() const;
  void _internal_set_inf_float(float value);

  public:
  // float neg_inf_float = 18 [default = -inf];
  bool has_neg_inf_float() const;
  void clear_neg_inf_float() ;
  float neg_inf_float() const;
  void set_neg_inf_float(float value);

  private:
  float _internal_neg_inf_float() const;
  void _internal_set_neg_inf_float(float value);

  public:
  // float nan_float = 19 [default = nan];
  bool has_nan_float() const;
  void clear_nan_float() ;
  float nan_float() const;
  void set_nan_float(float value);

  private:
  float _internal_nan_float() const;
  void _internal_set_nan_float(float value);

  public:
  // int32 really_small_int32 = 21 [default = -2147483648];
  bool has_really_small_int32() const;
  void clear_really_small_int32() ;
  ::int32_t really_small_int32() const;
  void set_really_small_int32(::int32_t value);

  private:
  ::int32_t _internal_really_small_int32() const;
  void _internal_set_really_small_int32(::int32_t value);

  public:
  // int64 really_small_int64 = 22 [default = -9223372036854775808];
  bool has_really_small_int64() const;
  void clear_really_small_int64() ;
  ::int64_t really_small_int64() const;
  void set_really_small_int64(::int64_t value);

  private:
  ::int64_t _internal_really_small_int64() const;
  void _internal_set_really_small_int64(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestExtremeDefaultValues)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 27, 0,
      167, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestExtremeDefaultValues_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestExtremeDefaultValues& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_escaped_bytes_;
    ::google::protobuf::internal::ArenaStringPtr escaped_bytes_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_utf8_string_;
    ::google::protobuf::internal::ArenaStringPtr utf8_string_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_cpp_trigraph_;
    ::google::protobuf::internal::ArenaStringPtr cpp_trigraph_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_string_with_zero_;
    ::google::protobuf::internal::ArenaStringPtr string_with_zero_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_bytes_with_zero_;
    ::google::protobuf::internal::ArenaStringPtr bytes_with_zero_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_string_piece_with_zero_;
    ::google::protobuf::internal::ArenaStringPtr string_piece_with_zero_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_cord_with_zero_;
    ::google::protobuf::internal::ArenaStringPtr cord_with_zero_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_replacement_string_;
    ::google::protobuf::internal::ArenaStringPtr replacement_string_;
    float zero_float_;
    ::uint64_t large_uint64_;
    ::uint32_t large_uint32_;
    ::int32_t small_int32_;
    ::int64_t small_int64_;
    float one_float_;
    float small_float_;
    float negative_one_float_;
    float negative_float_;
    float large_float_;
    float small_negative_float_;
    double inf_double_;
    double neg_inf_double_;
    double nan_double_;
    float inf_float_;
    float neg_inf_float_;
    float nan_float_;
    ::int32_t really_small_int32_;
    ::int64_t really_small_int64_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestExtensionRangeSerialize final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestExtensionRangeSerialize) */ {
 public:
  inline TestExtensionRangeSerialize() : TestExtensionRangeSerialize(nullptr) {}
  ~TestExtensionRangeSerialize() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestExtensionRangeSerialize(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestExtensionRangeSerialize(const TestExtensionRangeSerialize& from) : TestExtensionRangeSerialize(nullptr, from) {}
  inline TestExtensionRangeSerialize(TestExtensionRangeSerialize&& from) noexcept
      : TestExtensionRangeSerialize(nullptr, std::move(from)) {}
  inline TestExtensionRangeSerialize& operator=(const TestExtensionRangeSerialize& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestExtensionRangeSerialize& operator=(TestExtensionRangeSerialize&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestExtensionRangeSerialize& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestExtensionRangeSerialize* internal_default_instance() {
    return reinterpret_cast<const TestExtensionRangeSerialize*>(
        &_TestExtensionRangeSerialize_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 119;
  friend void swap(TestExtensionRangeSerialize& a, TestExtensionRangeSerialize& b) { a.Swap(&b); }
  inline void Swap(TestExtensionRangeSerialize* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestExtensionRangeSerialize* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestExtensionRangeSerialize* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestExtensionRangeSerialize>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestExtensionRangeSerialize& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestExtensionRangeSerialize& from) { TestExtensionRangeSerialize::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestExtensionRangeSerialize* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestExtensionRangeSerialize"; }

 protected:
  explicit TestExtensionRangeSerialize(::google::protobuf::Arena* arena);
  TestExtensionRangeSerialize(::google::protobuf::Arena* arena, const TestExtensionRangeSerialize& from);
  TestExtensionRangeSerialize(::google::protobuf::Arena* arena, TestExtensionRangeSerialize&& from) noexcept
      : TestExtensionRangeSerialize(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFooOneFieldNumber = 1,
    kFooTwoFieldNumber = 6,
    kFooThreeFieldNumber = 7,
    kFooFourFieldNumber = 13,
  };
  // int32 foo_one = 1;
  bool has_foo_one() const;
  void clear_foo_one() ;
  ::int32_t foo_one() const;
  void set_foo_one(::int32_t value);

  private:
  ::int32_t _internal_foo_one() const;
  void _internal_set_foo_one(::int32_t value);

  public:
  // int32 foo_two = 6;
  bool has_foo_two() const;
  void clear_foo_two() ;
  ::int32_t foo_two() const;
  void set_foo_two(::int32_t value);

  private:
  ::int32_t _internal_foo_two() const;
  void _internal_set_foo_two(::int32_t value);

  public:
  // int32 foo_three = 7;
  bool has_foo_three() const;
  void clear_foo_three() ;
  ::int32_t foo_three() const;
  void set_foo_three(::int32_t value);

  private:
  ::int32_t _internal_foo_three() const;
  void _internal_set_foo_three(::int32_t value);

  public:
  // int32 foo_four = 13;
  bool has_foo_four() const;
  void clear_foo_four() ;
  ::int32_t foo_four() const;
  void set_foo_four(::int32_t value);

  private:
  ::int32_t _internal_foo_four() const;
  void _internal_set_foo_four(::int32_t value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionRangeSerialize, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  static const int kBarOneFieldNumber = 2;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestExtensionRangeSerialize, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
      false>
      bar_one;
  static const int kBarTwoFieldNumber = 4;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestExtensionRangeSerialize, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
      false>
      bar_two;
  static const int kBarThreeFieldNumber = 10;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestExtensionRangeSerialize, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
      false>
      bar_three;
  static const int kBarFourFieldNumber = 15;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestExtensionRangeSerialize, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
      false>
      bar_four;
  static const int kBarFiveFieldNumber = 19;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestExtensionRangeSerialize, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
      false>
      bar_five;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestExtensionRangeSerialize)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestExtensionRangeSerialize_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestExtensionRangeSerialize& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t foo_one_;
    ::int32_t foo_two_;
    ::int32_t foo_three_;
    ::int32_t foo_four_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestExtensionOrderings2_TestExtensionOrderings3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestExtensionOrderings2.TestExtensionOrderings3) */ {
 public:
  inline TestExtensionOrderings2_TestExtensionOrderings3() : TestExtensionOrderings2_TestExtensionOrderings3(nullptr) {}
  ~TestExtensionOrderings2_TestExtensionOrderings3() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestExtensionOrderings2_TestExtensionOrderings3(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestExtensionOrderings2_TestExtensionOrderings3(const TestExtensionOrderings2_TestExtensionOrderings3& from) : TestExtensionOrderings2_TestExtensionOrderings3(nullptr, from) {}
  inline TestExtensionOrderings2_TestExtensionOrderings3(TestExtensionOrderings2_TestExtensionOrderings3&& from) noexcept
      : TestExtensionOrderings2_TestExtensionOrderings3(nullptr, std::move(from)) {}
  inline TestExtensionOrderings2_TestExtensionOrderings3& operator=(const TestExtensionOrderings2_TestExtensionOrderings3& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestExtensionOrderings2_TestExtensionOrderings3& operator=(TestExtensionOrderings2_TestExtensionOrderings3&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestExtensionOrderings2_TestExtensionOrderings3& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestExtensionOrderings2_TestExtensionOrderings3* internal_default_instance() {
    return reinterpret_cast<const TestExtensionOrderings2_TestExtensionOrderings3*>(
        &_TestExtensionOrderings2_TestExtensionOrderings3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(TestExtensionOrderings2_TestExtensionOrderings3& a, TestExtensionOrderings2_TestExtensionOrderings3& b) { a.Swap(&b); }
  inline void Swap(TestExtensionOrderings2_TestExtensionOrderings3* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestExtensionOrderings2_TestExtensionOrderings3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestExtensionOrderings2_TestExtensionOrderings3* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestExtensionOrderings2_TestExtensionOrderings3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestExtensionOrderings2_TestExtensionOrderings3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestExtensionOrderings2_TestExtensionOrderings3& from) { TestExtensionOrderings2_TestExtensionOrderings3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestExtensionOrderings2_TestExtensionOrderings3* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestExtensionOrderings2.TestExtensionOrderings3"; }

 protected:
  explicit TestExtensionOrderings2_TestExtensionOrderings3(::google::protobuf::Arena* arena);
  TestExtensionOrderings2_TestExtensionOrderings3(::google::protobuf::Arena* arena, const TestExtensionOrderings2_TestExtensionOrderings3& from);
  TestExtensionOrderings2_TestExtensionOrderings3(::google::protobuf::Arena* arena, TestExtensionOrderings2_TestExtensionOrderings3&& from) noexcept
      : TestExtensionOrderings2_TestExtensionOrderings3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMyStringFieldNumber = 1,
  };
  // string my_string = 1;
  bool has_my_string() const;
  void clear_my_string() ;
  absl::string_view my_string() const;
  template <typename Arg_ = std::string&&>
  void set_my_string(Arg_&& arg);

  private:
  const std::string& _internal_my_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_my_string(
      absl::string_view value);

  public:
  static const int kTestExtOrderings3FieldNumber = 14;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestFieldOrderings, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestExtensionOrderings2_TestExtensionOrderings3 >, 11,
      false>
      test_ext_orderings3;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      82, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestExtensionOrderings2_TestExtensionOrderings3_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestExtensionOrderings2_TestExtensionOrderings3& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr my_string_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestExtensionOrderings2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestExtensionOrderings2) */ {
 public:
  inline TestExtensionOrderings2() : TestExtensionOrderings2(nullptr) {}
  ~TestExtensionOrderings2() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestExtensionOrderings2(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestExtensionOrderings2(const TestExtensionOrderings2& from) : TestExtensionOrderings2(nullptr, from) {}
  inline TestExtensionOrderings2(TestExtensionOrderings2&& from) noexcept
      : TestExtensionOrderings2(nullptr, std::move(from)) {}
  inline TestExtensionOrderings2& operator=(const TestExtensionOrderings2& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestExtensionOrderings2& operator=(TestExtensionOrderings2&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestExtensionOrderings2& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestExtensionOrderings2* internal_default_instance() {
    return reinterpret_cast<const TestExtensionOrderings2*>(
        &_TestExtensionOrderings2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 64;
  friend void swap(TestExtensionOrderings2& a, TestExtensionOrderings2& b) { a.Swap(&b); }
  inline void Swap(TestExtensionOrderings2* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestExtensionOrderings2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestExtensionOrderings2* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestExtensionOrderings2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestExtensionOrderings2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestExtensionOrderings2& from) { TestExtensionOrderings2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestExtensionOrderings2* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestExtensionOrderings2"; }

 protected:
  explicit TestExtensionOrderings2(::google::protobuf::Arena* arena);
  TestExtensionOrderings2(::google::protobuf::Arena* arena, const TestExtensionOrderings2& from);
  TestExtensionOrderings2(::google::protobuf::Arena* arena, TestExtensionOrderings2&& from) noexcept
      : TestExtensionOrderings2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TestExtensionOrderings3 = TestExtensionOrderings2_TestExtensionOrderings3;

  // accessors -------------------------------------------------------
  enum : int {
    kMyStringFieldNumber = 1,
  };
  // string my_string = 1;
  bool has_my_string() const;
  void clear_my_string() ;
  absl::string_view my_string() const;
  template <typename Arg_ = std::string&&>
  void set_my_string(Arg_&& arg);

  private:
  const std::string& _internal_my_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_my_string(
      absl::string_view value);

  public:
  static const int kTestExtOrderings2FieldNumber = 12;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestFieldOrderings, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestExtensionOrderings2 >, 11,
      false>
      test_ext_orderings2;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestExtensionOrderings2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestExtensionOrderings2_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestExtensionOrderings2& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr my_string_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestExtensionOrderings1 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestExtensionOrderings1) */ {
 public:
  inline TestExtensionOrderings1() : TestExtensionOrderings1(nullptr) {}
  ~TestExtensionOrderings1() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestExtensionOrderings1(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestExtensionOrderings1(const TestExtensionOrderings1& from) : TestExtensionOrderings1(nullptr, from) {}
  inline TestExtensionOrderings1(TestExtensionOrderings1&& from) noexcept
      : TestExtensionOrderings1(nullptr, std::move(from)) {}
  inline TestExtensionOrderings1& operator=(const TestExtensionOrderings1& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestExtensionOrderings1& operator=(TestExtensionOrderings1&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestExtensionOrderings1& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestExtensionOrderings1* internal_default_instance() {
    return reinterpret_cast<const TestExtensionOrderings1*>(
        &_TestExtensionOrderings1_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(TestExtensionOrderings1& a, TestExtensionOrderings1& b) { a.Swap(&b); }
  inline void Swap(TestExtensionOrderings1* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestExtensionOrderings1* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestExtensionOrderings1* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestExtensionOrderings1>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestExtensionOrderings1& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestExtensionOrderings1& from) { TestExtensionOrderings1::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestExtensionOrderings1* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestExtensionOrderings1"; }

 protected:
  explicit TestExtensionOrderings1(::google::protobuf::Arena* arena);
  TestExtensionOrderings1(::google::protobuf::Arena* arena, const TestExtensionOrderings1& from);
  TestExtensionOrderings1(::google::protobuf::Arena* arena, TestExtensionOrderings1&& from) noexcept
      : TestExtensionOrderings1(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMyStringFieldNumber = 1,
  };
  // string my_string = 1;
  bool has_my_string() const;
  void clear_my_string() ;
  absl::string_view my_string() const;
  template <typename Arg_ = std::string&&>
  void set_my_string(Arg_&& arg);

  private:
  const std::string& _internal_my_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_my_string(
      absl::string_view value);

  public:
  static const int kTestExtOrderings1FieldNumber = 13;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestFieldOrderings, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestExtensionOrderings1 >, 11,
      false>
      test_ext_orderings1;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestExtensionOrderings1)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestExtensionOrderings1_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestExtensionOrderings1& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr my_string_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestExtensionInsideTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestExtensionInsideTable) */ {
 public:
  inline TestExtensionInsideTable() : TestExtensionInsideTable(nullptr) {}
  ~TestExtensionInsideTable() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestExtensionInsideTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestExtensionInsideTable(const TestExtensionInsideTable& from) : TestExtensionInsideTable(nullptr, from) {}
  inline TestExtensionInsideTable(TestExtensionInsideTable&& from) noexcept
      : TestExtensionInsideTable(nullptr, std::move(from)) {}
  inline TestExtensionInsideTable& operator=(const TestExtensionInsideTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestExtensionInsideTable& operator=(TestExtensionInsideTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestExtensionInsideTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestExtensionInsideTable* internal_default_instance() {
    return reinterpret_cast<const TestExtensionInsideTable*>(
        &_TestExtensionInsideTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 113;
  friend void swap(TestExtensionInsideTable& a, TestExtensionInsideTable& b) { a.Swap(&b); }
  inline void Swap(TestExtensionInsideTable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestExtensionInsideTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestExtensionInsideTable* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestExtensionInsideTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestExtensionInsideTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestExtensionInsideTable& from) { TestExtensionInsideTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestExtensionInsideTable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestExtensionInsideTable"; }

 protected:
  explicit TestExtensionInsideTable(::google::protobuf::Arena* arena);
  TestExtensionInsideTable(::google::protobuf::Arena* arena, const TestExtensionInsideTable& from);
  TestExtensionInsideTable(::google::protobuf::Arena* arena, TestExtensionInsideTable&& from) noexcept
      : TestExtensionInsideTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kField1FieldNumber = 1,
    kField2FieldNumber = 2,
    kField3FieldNumber = 3,
    kField4FieldNumber = 4,
    kField6FieldNumber = 6,
    kField7FieldNumber = 7,
    kField8FieldNumber = 8,
    kField9FieldNumber = 9,
    kField10FieldNumber = 10,
  };
  // int32 field1 = 1;
  bool has_field1() const;
  void clear_field1() ;
  ::int32_t field1() const;
  void set_field1(::int32_t value);

  private:
  ::int32_t _internal_field1() const;
  void _internal_set_field1(::int32_t value);

  public:
  // int32 field2 = 2;
  bool has_field2() const;
  void clear_field2() ;
  ::int32_t field2() const;
  void set_field2(::int32_t value);

  private:
  ::int32_t _internal_field2() const;
  void _internal_set_field2(::int32_t value);

  public:
  // int32 field3 = 3;
  bool has_field3() const;
  void clear_field3() ;
  ::int32_t field3() const;
  void set_field3(::int32_t value);

  private:
  ::int32_t _internal_field3() const;
  void _internal_set_field3(::int32_t value);

  public:
  // int32 field4 = 4;
  bool has_field4() const;
  void clear_field4() ;
  ::int32_t field4() const;
  void set_field4(::int32_t value);

  private:
  ::int32_t _internal_field4() const;
  void _internal_set_field4(::int32_t value);

  public:
  // int32 field6 = 6;
  bool has_field6() const;
  void clear_field6() ;
  ::int32_t field6() const;
  void set_field6(::int32_t value);

  private:
  ::int32_t _internal_field6() const;
  void _internal_set_field6(::int32_t value);

  public:
  // int32 field7 = 7;
  bool has_field7() const;
  void clear_field7() ;
  ::int32_t field7() const;
  void set_field7(::int32_t value);

  private:
  ::int32_t _internal_field7() const;
  void _internal_set_field7(::int32_t value);

  public:
  // int32 field8 = 8;
  bool has_field8() const;
  void clear_field8() ;
  ::int32_t field8() const;
  void set_field8(::int32_t value);

  private:
  ::int32_t _internal_field8() const;
  void _internal_set_field8(::int32_t value);

  public:
  // int32 field9 = 9;
  bool has_field9() const;
  void clear_field9() ;
  ::int32_t field9() const;
  void set_field9(::int32_t value);

  private:
  ::int32_t _internal_field9() const;
  void _internal_set_field9(::int32_t value);

  public:
  // int32 field10 = 10;
  bool has_field10() const;
  void clear_field10() ;
  ::int32_t field10() const;
  void set_field10(::int32_t value);

  private:
  ::int32_t _internal_field10() const;
  void _internal_set_field10(::int32_t value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestExtensionInsideTable, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestExtensionInsideTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestExtensionInsideTable_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestExtensionInsideTable& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t field1_;
    ::int32_t field2_;
    ::int32_t field3_;
    ::int32_t field4_;
    ::int32_t field6_;
    ::int32_t field7_;
    ::int32_t field8_;
    ::int32_t field9_;
    ::int32_t field10_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestEmptyMessageWithExtensions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestEmptyMessageWithExtensions) */ {
 public:
  inline TestEmptyMessageWithExtensions() : TestEmptyMessageWithExtensions(nullptr) {}
  ~TestEmptyMessageWithExtensions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestEmptyMessageWithExtensions(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestEmptyMessageWithExtensions(const TestEmptyMessageWithExtensions& from) : TestEmptyMessageWithExtensions(nullptr, from) {}
  inline TestEmptyMessageWithExtensions(TestEmptyMessageWithExtensions&& from) noexcept
      : TestEmptyMessageWithExtensions(nullptr, std::move(from)) {}
  inline TestEmptyMessageWithExtensions& operator=(const TestEmptyMessageWithExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEmptyMessageWithExtensions& operator=(TestEmptyMessageWithExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestEmptyMessageWithExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestEmptyMessageWithExtensions* internal_default_instance() {
    return reinterpret_cast<const TestEmptyMessageWithExtensions*>(
        &_TestEmptyMessageWithExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(TestEmptyMessageWithExtensions& a, TestEmptyMessageWithExtensions& b) { a.Swap(&b); }
  inline void Swap(TestEmptyMessageWithExtensions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEmptyMessageWithExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestEmptyMessageWithExtensions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestEmptyMessageWithExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestEmptyMessageWithExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestEmptyMessageWithExtensions& from) { TestEmptyMessageWithExtensions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestEmptyMessageWithExtensions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestEmptyMessageWithExtensions"; }

 protected:
  explicit TestEmptyMessageWithExtensions(::google::protobuf::Arena* arena);
  TestEmptyMessageWithExtensions(::google::protobuf::Arena* arena, const TestEmptyMessageWithExtensions& from);
  TestEmptyMessageWithExtensions(::google::protobuf::Arena* arena, TestEmptyMessageWithExtensions&& from) noexcept
      : TestEmptyMessageWithExtensions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestEmptyMessageWithExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestEmptyMessageWithExtensions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestEmptyMessageWithExtensions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestEmptyMessageWithExtensions& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestEmptyMessage final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.TestEmptyMessage) */ {
 public:
  inline TestEmptyMessage() : TestEmptyMessage(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestEmptyMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestEmptyMessage(const TestEmptyMessage& from) : TestEmptyMessage(nullptr, from) {}
  inline TestEmptyMessage(TestEmptyMessage&& from) noexcept
      : TestEmptyMessage(nullptr, std::move(from)) {}
  inline TestEmptyMessage& operator=(const TestEmptyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEmptyMessage& operator=(TestEmptyMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestEmptyMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestEmptyMessage* internal_default_instance() {
    return reinterpret_cast<const TestEmptyMessage*>(
        &_TestEmptyMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(TestEmptyMessage& a, TestEmptyMessage& b) { a.Swap(&b); }
  inline void Swap(TestEmptyMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEmptyMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestEmptyMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestEmptyMessage>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestEmptyMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestEmptyMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestEmptyMessage"; }

 protected:
  explicit TestEmptyMessage(::google::protobuf::Arena* arena);
  TestEmptyMessage(::google::protobuf::Arena* arena, const TestEmptyMessage& from);
  TestEmptyMessage(::google::protobuf::Arena* arena, TestEmptyMessage&& from) noexcept
      : TestEmptyMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.TestEmptyMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestEmptyMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestEmptyMessage& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDynamicExtensions_DynamicMessageType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestDynamicExtensions.DynamicMessageType) */ {
 public:
  inline TestDynamicExtensions_DynamicMessageType() : TestDynamicExtensions_DynamicMessageType(nullptr) {}
  ~TestDynamicExtensions_DynamicMessageType() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDynamicExtensions_DynamicMessageType(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDynamicExtensions_DynamicMessageType(const TestDynamicExtensions_DynamicMessageType& from) : TestDynamicExtensions_DynamicMessageType(nullptr, from) {}
  inline TestDynamicExtensions_DynamicMessageType(TestDynamicExtensions_DynamicMessageType&& from) noexcept
      : TestDynamicExtensions_DynamicMessageType(nullptr, std::move(from)) {}
  inline TestDynamicExtensions_DynamicMessageType& operator=(const TestDynamicExtensions_DynamicMessageType& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDynamicExtensions_DynamicMessageType& operator=(TestDynamicExtensions_DynamicMessageType&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDynamicExtensions_DynamicMessageType& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDynamicExtensions_DynamicMessageType* internal_default_instance() {
    return reinterpret_cast<const TestDynamicExtensions_DynamicMessageType*>(
        &_TestDynamicExtensions_DynamicMessageType_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 90;
  friend void swap(TestDynamicExtensions_DynamicMessageType& a, TestDynamicExtensions_DynamicMessageType& b) { a.Swap(&b); }
  inline void Swap(TestDynamicExtensions_DynamicMessageType* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDynamicExtensions_DynamicMessageType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDynamicExtensions_DynamicMessageType* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDynamicExtensions_DynamicMessageType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDynamicExtensions_DynamicMessageType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDynamicExtensions_DynamicMessageType& from) { TestDynamicExtensions_DynamicMessageType::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDynamicExtensions_DynamicMessageType* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestDynamicExtensions.DynamicMessageType"; }

 protected:
  explicit TestDynamicExtensions_DynamicMessageType(::google::protobuf::Arena* arena);
  TestDynamicExtensions_DynamicMessageType(::google::protobuf::Arena* arena, const TestDynamicExtensions_DynamicMessageType& from);
  TestDynamicExtensions_DynamicMessageType(::google::protobuf::Arena* arena, TestDynamicExtensions_DynamicMessageType&& from) noexcept
      : TestDynamicExtensions_DynamicMessageType(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDynamicFieldFieldNumber = 2100,
  };
  // int32 dynamic_field = 2100;
  bool has_dynamic_field() const;
  void clear_dynamic_field() ;
  ::int32_t dynamic_field() const;
  void set_dynamic_field(::int32_t value);

  private:
  ::int32_t _internal_dynamic_field() const;
  void _internal_set_dynamic_field(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestDynamicExtensions.DynamicMessageType)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDynamicExtensions_DynamicMessageType_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDynamicExtensions_DynamicMessageType& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t dynamic_field_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDupFieldNumber_Foo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestDupFieldNumber.Foo) */ {
 public:
  inline TestDupFieldNumber_Foo() : TestDupFieldNumber_Foo(nullptr) {}
  ~TestDupFieldNumber_Foo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDupFieldNumber_Foo(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDupFieldNumber_Foo(const TestDupFieldNumber_Foo& from) : TestDupFieldNumber_Foo(nullptr, from) {}
  inline TestDupFieldNumber_Foo(TestDupFieldNumber_Foo&& from) noexcept
      : TestDupFieldNumber_Foo(nullptr, std::move(from)) {}
  inline TestDupFieldNumber_Foo& operator=(const TestDupFieldNumber_Foo& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDupFieldNumber_Foo& operator=(TestDupFieldNumber_Foo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDupFieldNumber_Foo& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDupFieldNumber_Foo* internal_default_instance() {
    return reinterpret_cast<const TestDupFieldNumber_Foo*>(
        &_TestDupFieldNumber_Foo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(TestDupFieldNumber_Foo& a, TestDupFieldNumber_Foo& b) { a.Swap(&b); }
  inline void Swap(TestDupFieldNumber_Foo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDupFieldNumber_Foo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDupFieldNumber_Foo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDupFieldNumber_Foo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDupFieldNumber_Foo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDupFieldNumber_Foo& from) { TestDupFieldNumber_Foo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDupFieldNumber_Foo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestDupFieldNumber.Foo"; }

 protected:
  explicit TestDupFieldNumber_Foo(::google::protobuf::Arena* arena);
  TestDupFieldNumber_Foo(::google::protobuf::Arena* arena, const TestDupFieldNumber_Foo& from);
  TestDupFieldNumber_Foo(::google::protobuf::Arena* arena, TestDupFieldNumber_Foo&& from) noexcept
      : TestDupFieldNumber_Foo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
  };
  // int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestDupFieldNumber.Foo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDupFieldNumber_Foo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDupFieldNumber_Foo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDupFieldNumber_Bar final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestDupFieldNumber.Bar) */ {
 public:
  inline TestDupFieldNumber_Bar() : TestDupFieldNumber_Bar(nullptr) {}
  ~TestDupFieldNumber_Bar() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDupFieldNumber_Bar(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDupFieldNumber_Bar(const TestDupFieldNumber_Bar& from) : TestDupFieldNumber_Bar(nullptr, from) {}
  inline TestDupFieldNumber_Bar(TestDupFieldNumber_Bar&& from) noexcept
      : TestDupFieldNumber_Bar(nullptr, std::move(from)) {}
  inline TestDupFieldNumber_Bar& operator=(const TestDupFieldNumber_Bar& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDupFieldNumber_Bar& operator=(TestDupFieldNumber_Bar&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDupFieldNumber_Bar& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDupFieldNumber_Bar* internal_default_instance() {
    return reinterpret_cast<const TestDupFieldNumber_Bar*>(
        &_TestDupFieldNumber_Bar_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(TestDupFieldNumber_Bar& a, TestDupFieldNumber_Bar& b) { a.Swap(&b); }
  inline void Swap(TestDupFieldNumber_Bar* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDupFieldNumber_Bar* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDupFieldNumber_Bar* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDupFieldNumber_Bar>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDupFieldNumber_Bar& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDupFieldNumber_Bar& from) { TestDupFieldNumber_Bar::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDupFieldNumber_Bar* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestDupFieldNumber.Bar"; }

 protected:
  explicit TestDupFieldNumber_Bar(::google::protobuf::Arena* arena);
  TestDupFieldNumber_Bar(::google::protobuf::Arena* arena, const TestDupFieldNumber_Bar& from);
  TestDupFieldNumber_Bar(::google::protobuf::Arena* arena, TestDupFieldNumber_Bar&& from) noexcept
      : TestDupFieldNumber_Bar(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
  };
  // int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestDupFieldNumber.Bar)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDupFieldNumber_Bar_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDupFieldNumber_Bar& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDeprecatedMessage final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.TestDeprecatedMessage) */ {
 public:
  inline TestDeprecatedMessage() : TestDeprecatedMessage(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDeprecatedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDeprecatedMessage(const TestDeprecatedMessage& from) : TestDeprecatedMessage(nullptr, from) {}
  inline TestDeprecatedMessage(TestDeprecatedMessage&& from) noexcept
      : TestDeprecatedMessage(nullptr, std::move(from)) {}
  inline TestDeprecatedMessage& operator=(const TestDeprecatedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDeprecatedMessage& operator=(TestDeprecatedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDeprecatedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDeprecatedMessage* internal_default_instance() {
    return reinterpret_cast<const TestDeprecatedMessage*>(
        &_TestDeprecatedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(TestDeprecatedMessage& a, TestDeprecatedMessage& b) { a.Swap(&b); }
  inline void Swap(TestDeprecatedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDeprecatedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDeprecatedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestDeprecatedMessage>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestDeprecatedMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestDeprecatedMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestDeprecatedMessage"; }

 protected:
  explicit TestDeprecatedMessage(::google::protobuf::Arena* arena);
  TestDeprecatedMessage(::google::protobuf::Arena* arena, const TestDeprecatedMessage& from);
  TestDeprecatedMessage(::google::protobuf::Arena* arena, TestDeprecatedMessage&& from) noexcept
      : TestDeprecatedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.TestDeprecatedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDeprecatedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDeprecatedMessage& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestCord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestCord) */ {
 public:
  inline TestCord() : TestCord(nullptr) {}
  ~TestCord() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestCord(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestCord(const TestCord& from) : TestCord(nullptr, from) {}
  inline TestCord(TestCord&& from) noexcept
      : TestCord(nullptr, std::move(from)) {}
  inline TestCord& operator=(const TestCord& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestCord& operator=(TestCord&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestCord& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestCord* internal_default_instance() {
    return reinterpret_cast<const TestCord*>(
        &_TestCord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 143;
  friend void swap(TestCord& a, TestCord& b) { a.Swap(&b); }
  inline void Swap(TestCord* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestCord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestCord* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestCord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestCord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestCord& from) { TestCord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestCord* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestCord"; }

 protected:
  explicit TestCord(::google::protobuf::Arena* arena);
  TestCord(::google::protobuf::Arena* arena, const TestCord& from);
  TestCord(::google::protobuf::Arena* arena, TestCord&& from) noexcept
      : TestCord(arena) {
    *this = ::std::move(from);
  }
  private:
  static void ArenaDtor(void* object);
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalBytesCordFieldNumber = 1,
    kOptionalBytesCordDefaultFieldNumber = 2,
  };
  // bytes optional_bytes_cord = 1 [ctype = CORD];
  bool has_optional_bytes_cord() const;
  void clear_optional_bytes_cord() ;
  const ::absl::Cord& optional_bytes_cord() const;
  void set_optional_bytes_cord(const ::absl::Cord& value);
  void set_optional_bytes_cord(::absl::string_view value);
  private:
  const ::absl::Cord& _internal_optional_bytes_cord() const;
  void _internal_set_optional_bytes_cord(const ::absl::Cord& value);
  ::absl::Cord* _internal_mutable_optional_bytes_cord();
  public:
  // bytes optional_bytes_cord_default = 2 [default = "hello", ctype = CORD];
  bool has_optional_bytes_cord_default() const;
  void clear_optional_bytes_cord_default() ;
  const ::absl::Cord& optional_bytes_cord_default() const;
  void set_optional_bytes_cord_default(const ::absl::Cord& value);
  void set_optional_bytes_cord_default(::absl::string_view value);
  private:
  const ::absl::Cord& _internal_optional_bytes_cord_default() const;
  void _internal_set_optional_bytes_cord_default(const ::absl::Cord& value);
  ::absl::Cord* _internal_mutable_optional_bytes_cord_default();
  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestCord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestCord_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestCord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::absl::Cord optional_bytes_cord_;
    ::absl::Cord optional_bytes_cord_default_;
    struct _default_optional_bytes_cord_default_func_ {
      constexpr absl::string_view operator()() const {
        return absl::string_view("hello", 5);
      }
    };
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestCommentInjectionMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestCommentInjectionMessage) */ {
 public:
  inline TestCommentInjectionMessage() : TestCommentInjectionMessage(nullptr) {}
  ~TestCommentInjectionMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestCommentInjectionMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestCommentInjectionMessage(const TestCommentInjectionMessage& from) : TestCommentInjectionMessage(nullptr, from) {}
  inline TestCommentInjectionMessage(TestCommentInjectionMessage&& from) noexcept
      : TestCommentInjectionMessage(nullptr, std::move(from)) {}
  inline TestCommentInjectionMessage& operator=(const TestCommentInjectionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestCommentInjectionMessage& operator=(TestCommentInjectionMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestCommentInjectionMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestCommentInjectionMessage* internal_default_instance() {
    return reinterpret_cast<const TestCommentInjectionMessage*>(
        &_TestCommentInjectionMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 101;
  friend void swap(TestCommentInjectionMessage& a, TestCommentInjectionMessage& b) { a.Swap(&b); }
  inline void Swap(TestCommentInjectionMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestCommentInjectionMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestCommentInjectionMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestCommentInjectionMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestCommentInjectionMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestCommentInjectionMessage& from) { TestCommentInjectionMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestCommentInjectionMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestCommentInjectionMessage"; }

 protected:
  explicit TestCommentInjectionMessage(::google::protobuf::Arena* arena);
  TestCommentInjectionMessage(::google::protobuf::Arena* arena, const TestCommentInjectionMessage& from);
  TestCommentInjectionMessage(::google::protobuf::Arena* arena, TestCommentInjectionMessage&& from) noexcept
      : TestCommentInjectionMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
  };
  // string a = 1 [default = "*/ <- Neither should this."];
  bool has_a() const;
  void clear_a() ;
  absl::string_view a() const;
  template <typename Arg_ = std::string&&>
  void set_a(Arg_&& arg);

  private:
  const std::string& _internal_a() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_a(
      absl::string_view value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestCommentInjectionMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestCommentInjectionMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestCommentInjectionMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_a_;
    ::google::protobuf::internal::ArenaStringPtr a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions) */ {
 public:
  inline TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions() : TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(nullptr) {}
  ~TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& from) : TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(nullptr, from) {}
  inline TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions&& from) noexcept
      : TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(nullptr, std::move(from)) {}
  inline TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& operator=(const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& operator=(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* internal_default_instance() {
    return reinterpret_cast<const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions*>(
        &_TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& a, TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& b) { a.Swap(&b); }
  inline void Swap(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& from) { TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions"; }

 protected:
  explicit TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(::google::protobuf::Arena* arena);
  TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(::google::protobuf::Arena* arena, const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& from);
  TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(::google::protobuf::Arena* arena, TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions&& from) noexcept
      : TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
  };
  // int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // int32 b = 2;
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    ::int32_t b_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestAllTypes_RepeatedGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestAllTypes.RepeatedGroup) */ {
 public:
  inline TestAllTypes_RepeatedGroup() : TestAllTypes_RepeatedGroup(nullptr) {}
  ~TestAllTypes_RepeatedGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestAllTypes_RepeatedGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestAllTypes_RepeatedGroup(const TestAllTypes_RepeatedGroup& from) : TestAllTypes_RepeatedGroup(nullptr, from) {}
  inline TestAllTypes_RepeatedGroup(TestAllTypes_RepeatedGroup&& from) noexcept
      : TestAllTypes_RepeatedGroup(nullptr, std::move(from)) {}
  inline TestAllTypes_RepeatedGroup& operator=(const TestAllTypes_RepeatedGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestAllTypes_RepeatedGroup& operator=(TestAllTypes_RepeatedGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestAllTypes_RepeatedGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestAllTypes_RepeatedGroup* internal_default_instance() {
    return reinterpret_cast<const TestAllTypes_RepeatedGroup*>(
        &_TestAllTypes_RepeatedGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TestAllTypes_RepeatedGroup& a, TestAllTypes_RepeatedGroup& b) { a.Swap(&b); }
  inline void Swap(TestAllTypes_RepeatedGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestAllTypes_RepeatedGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestAllTypes_RepeatedGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestAllTypes_RepeatedGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestAllTypes_RepeatedGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestAllTypes_RepeatedGroup& from) { TestAllTypes_RepeatedGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestAllTypes_RepeatedGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestAllTypes.RepeatedGroup"; }

 protected:
  explicit TestAllTypes_RepeatedGroup(::google::protobuf::Arena* arena);
  TestAllTypes_RepeatedGroup(::google::protobuf::Arena* arena, const TestAllTypes_RepeatedGroup& from);
  TestAllTypes_RepeatedGroup(::google::protobuf::Arena* arena, TestAllTypes_RepeatedGroup&& from) noexcept
      : TestAllTypes_RepeatedGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 47,
  };
  // int32 a = 47;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestAllTypes.RepeatedGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 0,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestAllTypes_RepeatedGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestAllTypes_RepeatedGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestAllTypes_OptionalGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestAllTypes.OptionalGroup) */ {
 public:
  inline TestAllTypes_OptionalGroup() : TestAllTypes_OptionalGroup(nullptr) {}
  ~TestAllTypes_OptionalGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestAllTypes_OptionalGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestAllTypes_OptionalGroup(const TestAllTypes_OptionalGroup& from) : TestAllTypes_OptionalGroup(nullptr, from) {}
  inline TestAllTypes_OptionalGroup(TestAllTypes_OptionalGroup&& from) noexcept
      : TestAllTypes_OptionalGroup(nullptr, std::move(from)) {}
  inline TestAllTypes_OptionalGroup& operator=(const TestAllTypes_OptionalGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestAllTypes_OptionalGroup& operator=(TestAllTypes_OptionalGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestAllTypes_OptionalGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestAllTypes_OptionalGroup* internal_default_instance() {
    return reinterpret_cast<const TestAllTypes_OptionalGroup*>(
        &_TestAllTypes_OptionalGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TestAllTypes_OptionalGroup& a, TestAllTypes_OptionalGroup& b) { a.Swap(&b); }
  inline void Swap(TestAllTypes_OptionalGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestAllTypes_OptionalGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestAllTypes_OptionalGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestAllTypes_OptionalGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestAllTypes_OptionalGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestAllTypes_OptionalGroup& from) { TestAllTypes_OptionalGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestAllTypes_OptionalGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestAllTypes.OptionalGroup"; }

 protected:
  explicit TestAllTypes_OptionalGroup(::google::protobuf::Arena* arena);
  TestAllTypes_OptionalGroup(::google::protobuf::Arena* arena, const TestAllTypes_OptionalGroup& from);
  TestAllTypes_OptionalGroup(::google::protobuf::Arena* arena, TestAllTypes_OptionalGroup&& from) noexcept
      : TestAllTypes_OptionalGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 17,
  };
  // int32 a = 17;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestAllTypes.OptionalGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestAllTypes_OptionalGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestAllTypes_OptionalGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestAllTypes_NestedMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestAllTypes.NestedMessage) */ {
 public:
  inline TestAllTypes_NestedMessage() : TestAllTypes_NestedMessage(nullptr) {}
  ~TestAllTypes_NestedMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestAllTypes_NestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestAllTypes_NestedMessage(const TestAllTypes_NestedMessage& from) : TestAllTypes_NestedMessage(nullptr, from) {}
  inline TestAllTypes_NestedMessage(TestAllTypes_NestedMessage&& from) noexcept
      : TestAllTypes_NestedMessage(nullptr, std::move(from)) {}
  inline TestAllTypes_NestedMessage& operator=(const TestAllTypes_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestAllTypes_NestedMessage& operator=(TestAllTypes_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestAllTypes_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestAllTypes_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestAllTypes_NestedMessage*>(
        &_TestAllTypes_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestAllTypes_NestedMessage& a, TestAllTypes_NestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestAllTypes_NestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestAllTypes_NestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestAllTypes_NestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestAllTypes_NestedMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestAllTypes_NestedMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestAllTypes_NestedMessage& from) { TestAllTypes_NestedMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestAllTypes_NestedMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestAllTypes.NestedMessage"; }

 protected:
  explicit TestAllTypes_NestedMessage(::google::protobuf::Arena* arena);
  TestAllTypes_NestedMessage(::google::protobuf::Arena* arena, const TestAllTypes_NestedMessage& from);
  TestAllTypes_NestedMessage(::google::protobuf::Arena* arena, TestAllTypes_NestedMessage&& from) noexcept
      : TestAllTypes_NestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBbFieldNumber = 1,
  };
  // int32 bb = 1;
  bool has_bb() const;
  void clear_bb() ;
  ::int32_t bb() const;
  void set_bb(::int32_t value);

  private:
  ::int32_t _internal_bb() const;
  void _internal_set_bb(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestAllTypes.NestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestAllTypes_NestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestAllTypes_NestedMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t bb_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestAllExtensions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestAllExtensions) */ {
 public:
  inline TestAllExtensions() : TestAllExtensions(nullptr) {}
  ~TestAllExtensions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestAllExtensions(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestAllExtensions(const TestAllExtensions& from) : TestAllExtensions(nullptr, from) {}
  inline TestAllExtensions(TestAllExtensions&& from) noexcept
      : TestAllExtensions(nullptr, std::move(from)) {}
  inline TestAllExtensions& operator=(const TestAllExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestAllExtensions& operator=(TestAllExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestAllExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestAllExtensions* internal_default_instance() {
    return reinterpret_cast<const TestAllExtensions*>(
        &_TestAllExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(TestAllExtensions& a, TestAllExtensions& b) { a.Swap(&b); }
  inline void Swap(TestAllExtensions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestAllExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestAllExtensions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestAllExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestAllExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestAllExtensions& from) { TestAllExtensions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestAllExtensions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestAllExtensions"; }

 protected:
  explicit TestAllExtensions(::google::protobuf::Arena* arena);
  TestAllExtensions(::google::protobuf::Arena* arena, const TestAllExtensions& from);
  TestAllExtensions(::google::protobuf::Arena* arena, TestAllExtensions&& from) noexcept
      : TestAllExtensions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestAllExtensions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestAllExtensions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestAllExtensions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestAllExtensions& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class StringParseTester final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.StringParseTester) */ {
 public:
  inline StringParseTester() : StringParseTester(nullptr) {}
  ~StringParseTester() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StringParseTester(
      ::google::protobuf::internal::ConstantInitialized);

  inline StringParseTester(const StringParseTester& from) : StringParseTester(nullptr, from) {}
  inline StringParseTester(StringParseTester&& from) noexcept
      : StringParseTester(nullptr, std::move(from)) {}
  inline StringParseTester& operator=(const StringParseTester& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringParseTester& operator=(StringParseTester&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StringParseTester& default_instance() {
    return *internal_default_instance();
  }
  static inline const StringParseTester* internal_default_instance() {
    return reinterpret_cast<const StringParseTester*>(
        &_StringParseTester_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 137;
  friend void swap(StringParseTester& a, StringParseTester& b) { a.Swap(&b); }
  inline void Swap(StringParseTester* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StringParseTester* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StringParseTester* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StringParseTester>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StringParseTester& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StringParseTester& from) { StringParseTester::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StringParseTester* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.StringParseTester"; }

 protected:
  explicit StringParseTester(::google::protobuf::Arena* arena);
  StringParseTester(::google::protobuf::Arena* arena, const StringParseTester& from);
  StringParseTester(::google::protobuf::Arena* arena, StringParseTester&& from) noexcept
      : StringParseTester(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedStringLowfieldFieldNumber = 2,
    kRepeatedStringMidfieldFieldNumber = 1002,
    kRepeatedStringHifieldFieldNumber = 1000002,
    kOptionalStringLowfieldFieldNumber = 1,
    kOptionalStringMidfieldFieldNumber = 1001,
    kOptionalStringHifieldFieldNumber = 1000001,
  };
  // repeated string repeated_string_lowfield = 2;
  int repeated_string_lowfield_size() const;
  private:
  int _internal_repeated_string_lowfield_size() const;

  public:
  void clear_repeated_string_lowfield() ;
  absl::string_view repeated_string_lowfield(int index) const;
  void set_repeated_string_lowfield(int index, const std::string& value);
  void set_repeated_string_lowfield(int index, std::string&& value);
  void set_repeated_string_lowfield(int index, const char* value);
  void set_repeated_string_lowfield(int index, absl::string_view value);
  void add_repeated_string_lowfield(const std::string& value);
  void add_repeated_string_lowfield(std::string&& value);
  void add_repeated_string_lowfield(const char* value);
  void add_repeated_string_lowfield(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_lowfield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_lowfield();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_lowfield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_lowfield();

  public:
  // repeated string repeated_string_midfield = 1002;
  int repeated_string_midfield_size() const;
  private:
  int _internal_repeated_string_midfield_size() const;

  public:
  void clear_repeated_string_midfield() ;
  absl::string_view repeated_string_midfield(int index) const;
  void set_repeated_string_midfield(int index, const std::string& value);
  void set_repeated_string_midfield(int index, std::string&& value);
  void set_repeated_string_midfield(int index, const char* value);
  void set_repeated_string_midfield(int index, absl::string_view value);
  void add_repeated_string_midfield(const std::string& value);
  void add_repeated_string_midfield(std::string&& value);
  void add_repeated_string_midfield(const char* value);
  void add_repeated_string_midfield(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_midfield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_midfield();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_midfield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_midfield();

  public:
  // repeated string repeated_string_hifield = 1000002;
  int repeated_string_hifield_size() const;
  private:
  int _internal_repeated_string_hifield_size() const;

  public:
  void clear_repeated_string_hifield() ;
  absl::string_view repeated_string_hifield(int index) const;
  void set_repeated_string_hifield(int index, const std::string& value);
  void set_repeated_string_hifield(int index, std::string&& value);
  void set_repeated_string_hifield(int index, const char* value);
  void set_repeated_string_hifield(int index, absl::string_view value);
  void add_repeated_string_hifield(const std::string& value);
  void add_repeated_string_hifield(std::string&& value);
  void add_repeated_string_hifield(const char* value);
  void add_repeated_string_hifield(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_hifield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_hifield();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_hifield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_hifield();

  public:
  // string optional_string_lowfield = 1;
  bool has_optional_string_lowfield() const;
  void clear_optional_string_lowfield() ;
  absl::string_view optional_string_lowfield() const;
  template <typename Arg_ = std::string&&>
  void set_optional_string_lowfield(Arg_&& arg);

  private:
  const std::string& _internal_optional_string_lowfield() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string_lowfield(
      absl::string_view value);

  public:
  // string optional_string_midfield = 1001;
  bool has_optional_string_midfield() const;
  void clear_optional_string_midfield() ;
  absl::string_view optional_string_midfield() const;
  template <typename Arg_ = std::string&&>
  void set_optional_string_midfield(Arg_&& arg);

  private:
  const std::string& _internal_optional_string_midfield() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string_midfield(
      absl::string_view value);

  public:
  // string optional_string_hifield = 1000001;
  bool has_optional_string_hifield() const;
  void clear_optional_string_hifield() ;
  absl::string_view optional_string_hifield() const;
  template <typename Arg_ = std::string&&>
  void set_optional_string_hifield(Arg_&& arg);

  private:
  const std::string& _internal_optional_string_hifield() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string_hifield(
      absl::string_view value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<StringParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  static const int kOptionalStringExtFieldNumber = 2000000;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::StringParseTester, ::google::protobuf::internal::StringTypeTraits, 9,
      false>
      optional_string_ext;
  static const int kRepeatedStringExtFieldNumber = 2000001;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::StringParseTester, ::google::protobuf::internal::RepeatedStringTypeTraits, 9,
      false>
      repeated_string_ext;
  // @@protoc_insertion_point(class_scope:edition_unittest.StringParseTester)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 6, 0,
      185, 12>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StringParseTester_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StringParseTester& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_lowfield_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_midfield_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_hifield_;
    ::google::protobuf::internal::ArenaStringPtr optional_string_lowfield_;
    ::google::protobuf::internal::ArenaStringPtr optional_string_midfield_;
    ::google::protobuf::internal::ArenaStringPtr optional_string_hifield_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class SparseEnumMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.SparseEnumMessage) */ {
 public:
  inline SparseEnumMessage() : SparseEnumMessage(nullptr) {}
  ~SparseEnumMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SparseEnumMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline SparseEnumMessage(const SparseEnumMessage& from) : SparseEnumMessage(nullptr, from) {}
  inline SparseEnumMessage(SparseEnumMessage&& from) noexcept
      : SparseEnumMessage(nullptr, std::move(from)) {}
  inline SparseEnumMessage& operator=(const SparseEnumMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SparseEnumMessage& operator=(SparseEnumMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SparseEnumMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const SparseEnumMessage* internal_default_instance() {
    return reinterpret_cast<const SparseEnumMessage*>(
        &_SparseEnumMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 66;
  friend void swap(SparseEnumMessage& a, SparseEnumMessage& b) { a.Swap(&b); }
  inline void Swap(SparseEnumMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SparseEnumMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SparseEnumMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SparseEnumMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SparseEnumMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SparseEnumMessage& from) { SparseEnumMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SparseEnumMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.SparseEnumMessage"; }

 protected:
  explicit SparseEnumMessage(::google::protobuf::Arena* arena);
  SparseEnumMessage(::google::protobuf::Arena* arena, const SparseEnumMessage& from);
  SparseEnumMessage(::google::protobuf::Arena* arena, SparseEnumMessage&& from) noexcept
      : SparseEnumMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSparseEnumFieldNumber = 1,
  };
  // .edition_unittest.TestSparseEnum sparse_enum = 1;
  bool has_sparse_enum() const;
  void clear_sparse_enum() ;
  ::edition_unittest::TestSparseEnum sparse_enum() const;
  void set_sparse_enum(::edition_unittest::TestSparseEnum value);

  private:
  ::edition_unittest::TestSparseEnum _internal_sparse_enum() const;
  void _internal_set_sparse_enum(::edition_unittest::TestSparseEnum value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.SparseEnumMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SparseEnumMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SparseEnumMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int sparse_enum_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class RepeatedGroup_extension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.RepeatedGroup_extension) */ {
 public:
  inline RepeatedGroup_extension() : RepeatedGroup_extension(nullptr) {}
  ~RepeatedGroup_extension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RepeatedGroup_extension(
      ::google::protobuf::internal::ConstantInitialized);

  inline RepeatedGroup_extension(const RepeatedGroup_extension& from) : RepeatedGroup_extension(nullptr, from) {}
  inline RepeatedGroup_extension(RepeatedGroup_extension&& from) noexcept
      : RepeatedGroup_extension(nullptr, std::move(from)) {}
  inline RepeatedGroup_extension& operator=(const RepeatedGroup_extension& from) {
    CopyFrom(from);
    return *this;
  }
  inline RepeatedGroup_extension& operator=(RepeatedGroup_extension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RepeatedGroup_extension& default_instance() {
    return *internal_default_instance();
  }
  static inline const RepeatedGroup_extension* internal_default_instance() {
    return reinterpret_cast<const RepeatedGroup_extension*>(
        &_RepeatedGroup_extension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(RepeatedGroup_extension& a, RepeatedGroup_extension& b) { a.Swap(&b); }
  inline void Swap(RepeatedGroup_extension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RepeatedGroup_extension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RepeatedGroup_extension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RepeatedGroup_extension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RepeatedGroup_extension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RepeatedGroup_extension& from) { RepeatedGroup_extension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RepeatedGroup_extension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.RepeatedGroup_extension"; }

 protected:
  explicit RepeatedGroup_extension(::google::protobuf::Arena* arena);
  RepeatedGroup_extension(::google::protobuf::Arena* arena, const RepeatedGroup_extension& from);
  RepeatedGroup_extension(::google::protobuf::Arena* arena, RepeatedGroup_extension&& from) noexcept
      : RepeatedGroup_extension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 47,
  };
  // int32 a = 47;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.RepeatedGroup_extension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RepeatedGroup_extension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RepeatedGroup_extension& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class RedactedFields_MapUnredactedStringEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          RedactedFields_MapUnredactedStringEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      RedactedFields_MapUnredactedStringEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  RedactedFields_MapUnredactedStringEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RedactedFields_MapUnredactedStringEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit RedactedFields_MapUnredactedStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const RedactedFields_MapUnredactedStringEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const RedactedFields_MapUnredactedStringEntry_DoNotUse*>(
        &_RedactedFields_MapUnredactedStringEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class RedactedFields_MapRedactedStringEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          RedactedFields_MapRedactedStringEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      RedactedFields_MapRedactedStringEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  RedactedFields_MapRedactedStringEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RedactedFields_MapRedactedStringEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit RedactedFields_MapRedactedStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const RedactedFields_MapRedactedStringEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const RedactedFields_MapRedactedStringEntry_DoNotUse*>(
        &_RedactedFields_MapRedactedStringEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class OptionalGroup_extension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.OptionalGroup_extension) */ {
 public:
  inline OptionalGroup_extension() : OptionalGroup_extension(nullptr) {}
  ~OptionalGroup_extension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OptionalGroup_extension(
      ::google::protobuf::internal::ConstantInitialized);

  inline OptionalGroup_extension(const OptionalGroup_extension& from) : OptionalGroup_extension(nullptr, from) {}
  inline OptionalGroup_extension(OptionalGroup_extension&& from) noexcept
      : OptionalGroup_extension(nullptr, std::move(from)) {}
  inline OptionalGroup_extension& operator=(const OptionalGroup_extension& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptionalGroup_extension& operator=(OptionalGroup_extension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OptionalGroup_extension& default_instance() {
    return *internal_default_instance();
  }
  static inline const OptionalGroup_extension* internal_default_instance() {
    return reinterpret_cast<const OptionalGroup_extension*>(
        &_OptionalGroup_extension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(OptionalGroup_extension& a, OptionalGroup_extension& b) { a.Swap(&b); }
  inline void Swap(OptionalGroup_extension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptionalGroup_extension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OptionalGroup_extension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OptionalGroup_extension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OptionalGroup_extension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OptionalGroup_extension& from) { OptionalGroup_extension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OptionalGroup_extension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.OptionalGroup_extension"; }

 protected:
  explicit OptionalGroup_extension(::google::protobuf::Arena* arena);
  OptionalGroup_extension(::google::protobuf::Arena* arena, const OptionalGroup_extension& from);
  OptionalGroup_extension(::google::protobuf::Arena* arena, OptionalGroup_extension&& from) noexcept
      : OptionalGroup_extension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 17,
  };
  // int32 a = 17;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.OptionalGroup_extension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OptionalGroup_extension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OptionalGroup_extension& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class OneString final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.OneString) */ {
 public:
  inline OneString() : OneString(nullptr) {}
  ~OneString() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OneString(
      ::google::protobuf::internal::ConstantInitialized);

  inline OneString(const OneString& from) : OneString(nullptr, from) {}
  inline OneString(OneString&& from) noexcept
      : OneString(nullptr, std::move(from)) {}
  inline OneString& operator=(const OneString& from) {
    CopyFrom(from);
    return *this;
  }
  inline OneString& operator=(OneString&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OneString& default_instance() {
    return *internal_default_instance();
  }
  static inline const OneString* internal_default_instance() {
    return reinterpret_cast<const OneString*>(
        &_OneString_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 67;
  friend void swap(OneString& a, OneString& b) { a.Swap(&b); }
  inline void Swap(OneString* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OneString* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OneString* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OneString>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OneString& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OneString& from) { OneString::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OneString* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.OneString"; }

 protected:
  explicit OneString(::google::protobuf::Arena* arena);
  OneString(::google::protobuf::Arena* arena, const OneString& from);
  OneString(::google::protobuf::Arena* arena, OneString&& from) noexcept
      : OneString(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // string data = 1;
  bool has_data() const;
  void clear_data() ;
  absl::string_view data() const;
  template <typename Arg_ = std::string&&>
  void set_data(Arg_&& arg);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      absl::string_view value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.OneString)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OneString_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OneString& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class OneBytes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.OneBytes) */ {
 public:
  inline OneBytes() : OneBytes(nullptr) {}
  ~OneBytes() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OneBytes(
      ::google::protobuf::internal::ConstantInitialized);

  inline OneBytes(const OneBytes& from) : OneBytes(nullptr, from) {}
  inline OneBytes(OneBytes&& from) noexcept
      : OneBytes(nullptr, std::move(from)) {}
  inline OneBytes& operator=(const OneBytes& from) {
    CopyFrom(from);
    return *this;
  }
  inline OneBytes& operator=(OneBytes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OneBytes& default_instance() {
    return *internal_default_instance();
  }
  static inline const OneBytes* internal_default_instance() {
    return reinterpret_cast<const OneBytes*>(
        &_OneBytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 69;
  friend void swap(OneBytes& a, OneBytes& b) { a.Swap(&b); }
  inline void Swap(OneBytes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OneBytes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OneBytes* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OneBytes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OneBytes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OneBytes& from) { OneBytes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OneBytes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.OneBytes"; }

 protected:
  explicit OneBytes(::google::protobuf::Arena* arena);
  OneBytes(::google::protobuf::Arena* arena, const OneBytes& from);
  OneBytes(::google::protobuf::Arena* arena, OneBytes&& from) noexcept
      : OneBytes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  bool has_data() const;
  void clear_data() ;
  absl::string_view data() const;
  template <typename Arg_ = std::string&&>
  void set_data(Arg_&& arg);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      absl::string_view value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.OneBytes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OneBytes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OneBytes& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class MoreString final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.MoreString) */ {
 public:
  inline MoreString() : MoreString(nullptr) {}
  ~MoreString() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MoreString(
      ::google::protobuf::internal::ConstantInitialized);

  inline MoreString(const MoreString& from) : MoreString(nullptr, from) {}
  inline MoreString(MoreString&& from) noexcept
      : MoreString(nullptr, std::move(from)) {}
  inline MoreString& operator=(const MoreString& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoreString& operator=(MoreString&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoreString& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoreString* internal_default_instance() {
    return reinterpret_cast<const MoreString*>(
        &_MoreString_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 68;
  friend void swap(MoreString& a, MoreString& b) { a.Swap(&b); }
  inline void Swap(MoreString* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoreString* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoreString* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MoreString>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoreString& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MoreString& from) { MoreString::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MoreString* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.MoreString"; }

 protected:
  explicit MoreString(::google::protobuf::Arena* arena);
  MoreString(::google::protobuf::Arena* arena, const MoreString& from);
  MoreString(::google::protobuf::Arena* arena, MoreString&& from) noexcept
      : MoreString(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated string data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  absl::string_view data(int index) const;
  void set_data(int index, const std::string& value);
  void set_data(int index, std::string&& value);
  void set_data(int index, const char* value);
  void set_data(int index, absl::string_view value);
  void add_data(const std::string& value);
  void add_data(std::string&& value);
  void add_data(const char* value);
  void add_data(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.MoreString)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MoreString_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MoreString& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class MoreBytes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.MoreBytes) */ {
 public:
  inline MoreBytes() : MoreBytes(nullptr) {}
  ~MoreBytes() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MoreBytes(
      ::google::protobuf::internal::ConstantInitialized);

  inline MoreBytes(const MoreBytes& from) : MoreBytes(nullptr, from) {}
  inline MoreBytes(MoreBytes&& from) noexcept
      : MoreBytes(nullptr, std::move(from)) {}
  inline MoreBytes& operator=(const MoreBytes& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoreBytes& operator=(MoreBytes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoreBytes& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoreBytes* internal_default_instance() {
    return reinterpret_cast<const MoreBytes*>(
        &_MoreBytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 70;
  friend void swap(MoreBytes& a, MoreBytes& b) { a.Swap(&b); }
  inline void Swap(MoreBytes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoreBytes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoreBytes* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MoreBytes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoreBytes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MoreBytes& from) { MoreBytes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MoreBytes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.MoreBytes"; }

 protected:
  explicit MoreBytes(::google::protobuf::Arena* arena);
  MoreBytes(::google::protobuf::Arena* arena, const MoreBytes& from);
  MoreBytes(::google::protobuf::Arena* arena, MoreBytes&& from) noexcept
      : MoreBytes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated bytes data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  absl::string_view data(int index) const;
  void set_data(int index, const std::string& value);
  void set_data(int index, std::string&& value);
  void set_data(int index, const char* value);
  void set_data(int index, absl::string_view value);
  void add_data(const std::string& value);
  void add_data(std::string&& value);
  void add_data(const char* value);
  void add_data(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.MoreBytes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MoreBytes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MoreBytes& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class ManyOptionalString final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.ManyOptionalString) */ {
 public:
  inline ManyOptionalString() : ManyOptionalString(nullptr) {}
  ~ManyOptionalString() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ManyOptionalString(
      ::google::protobuf::internal::ConstantInitialized);

  inline ManyOptionalString(const ManyOptionalString& from) : ManyOptionalString(nullptr, from) {}
  inline ManyOptionalString(ManyOptionalString&& from) noexcept
      : ManyOptionalString(nullptr, std::move(from)) {}
  inline ManyOptionalString& operator=(const ManyOptionalString& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManyOptionalString& operator=(ManyOptionalString&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ManyOptionalString& default_instance() {
    return *internal_default_instance();
  }
  static inline const ManyOptionalString* internal_default_instance() {
    return reinterpret_cast<const ManyOptionalString*>(
        &_ManyOptionalString_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 71;
  friend void swap(ManyOptionalString& a, ManyOptionalString& b) { a.Swap(&b); }
  inline void Swap(ManyOptionalString* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManyOptionalString* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ManyOptionalString* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ManyOptionalString>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ManyOptionalString& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ManyOptionalString& from) { ManyOptionalString::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ManyOptionalString* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.ManyOptionalString"; }

 protected:
  explicit ManyOptionalString(::google::protobuf::Arena* arena);
  ManyOptionalString(::google::protobuf::Arena* arena, const ManyOptionalString& from);
  ManyOptionalString(::google::protobuf::Arena* arena, ManyOptionalString&& from) noexcept
      : ManyOptionalString(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStr1FieldNumber = 1,
    kStr2FieldNumber = 2,
    kStr3FieldNumber = 3,
    kStr4FieldNumber = 4,
    kStr5FieldNumber = 5,
    kStr6FieldNumber = 6,
    kStr7FieldNumber = 7,
    kStr8FieldNumber = 8,
    kStr9FieldNumber = 9,
    kStr10FieldNumber = 10,
    kStr11FieldNumber = 11,
    kStr12FieldNumber = 12,
    kStr13FieldNumber = 13,
    kStr14FieldNumber = 14,
    kStr15FieldNumber = 15,
    kStr16FieldNumber = 16,
    kStr17FieldNumber = 17,
    kStr18FieldNumber = 18,
    kStr19FieldNumber = 19,
    kStr20FieldNumber = 20,
    kStr21FieldNumber = 21,
    kStr22FieldNumber = 22,
    kStr23FieldNumber = 23,
    kStr24FieldNumber = 24,
    kStr25FieldNumber = 25,
    kStr26FieldNumber = 26,
    kStr27FieldNumber = 27,
    kStr28FieldNumber = 28,
    kStr29FieldNumber = 29,
    kStr30FieldNumber = 30,
    kStr31FieldNumber = 31,
    kStr32FieldNumber = 32,
  };
  // string str1 = 1;
  bool has_str1() const;
  void clear_str1() ;
  absl::string_view str1() const;
  template <typename Arg_ = std::string&&>
  void set_str1(Arg_&& arg);

  private:
  const std::string& _internal_str1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str1(
      absl::string_view value);

  public:
  // string str2 = 2;
  bool has_str2() const;
  void clear_str2() ;
  absl::string_view str2() const;
  template <typename Arg_ = std::string&&>
  void set_str2(Arg_&& arg);

  private:
  const std::string& _internal_str2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str2(
      absl::string_view value);

  public:
  // string str3 = 3;
  bool has_str3() const;
  void clear_str3() ;
  absl::string_view str3() const;
  template <typename Arg_ = std::string&&>
  void set_str3(Arg_&& arg);

  private:
  const std::string& _internal_str3() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str3(
      absl::string_view value);

  public:
  // string str4 = 4;
  bool has_str4() const;
  void clear_str4() ;
  absl::string_view str4() const;
  template <typename Arg_ = std::string&&>
  void set_str4(Arg_&& arg);

  private:
  const std::string& _internal_str4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str4(
      absl::string_view value);

  public:
  // string str5 = 5;
  bool has_str5() const;
  void clear_str5() ;
  absl::string_view str5() const;
  template <typename Arg_ = std::string&&>
  void set_str5(Arg_&& arg);

  private:
  const std::string& _internal_str5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str5(
      absl::string_view value);

  public:
  // string str6 = 6;
  bool has_str6() const;
  void clear_str6() ;
  absl::string_view str6() const;
  template <typename Arg_ = std::string&&>
  void set_str6(Arg_&& arg);

  private:
  const std::string& _internal_str6() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str6(
      absl::string_view value);

  public:
  // string str7 = 7;
  bool has_str7() const;
  void clear_str7() ;
  absl::string_view str7() const;
  template <typename Arg_ = std::string&&>
  void set_str7(Arg_&& arg);

  private:
  const std::string& _internal_str7() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str7(
      absl::string_view value);

  public:
  // string str8 = 8;
  bool has_str8() const;
  void clear_str8() ;
  absl::string_view str8() const;
  template <typename Arg_ = std::string&&>
  void set_str8(Arg_&& arg);

  private:
  const std::string& _internal_str8() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str8(
      absl::string_view value);

  public:
  // string str9 = 9;
  bool has_str9() const;
  void clear_str9() ;
  absl::string_view str9() const;
  template <typename Arg_ = std::string&&>
  void set_str9(Arg_&& arg);

  private:
  const std::string& _internal_str9() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str9(
      absl::string_view value);

  public:
  // string str10 = 10;
  bool has_str10() const;
  void clear_str10() ;
  absl::string_view str10() const;
  template <typename Arg_ = std::string&&>
  void set_str10(Arg_&& arg);

  private:
  const std::string& _internal_str10() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str10(
      absl::string_view value);

  public:
  // string str11 = 11;
  bool has_str11() const;
  void clear_str11() ;
  absl::string_view str11() const;
  template <typename Arg_ = std::string&&>
  void set_str11(Arg_&& arg);

  private:
  const std::string& _internal_str11() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str11(
      absl::string_view value);

  public:
  // string str12 = 12;
  bool has_str12() const;
  void clear_str12() ;
  absl::string_view str12() const;
  template <typename Arg_ = std::string&&>
  void set_str12(Arg_&& arg);

  private:
  const std::string& _internal_str12() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str12(
      absl::string_view value);

  public:
  // string str13 = 13;
  bool has_str13() const;
  void clear_str13() ;
  absl::string_view str13() const;
  template <typename Arg_ = std::string&&>
  void set_str13(Arg_&& arg);

  private:
  const std::string& _internal_str13() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str13(
      absl::string_view value);

  public:
  // string str14 = 14;
  bool has_str14() const;
  void clear_str14() ;
  absl::string_view str14() const;
  template <typename Arg_ = std::string&&>
  void set_str14(Arg_&& arg);

  private:
  const std::string& _internal_str14() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str14(
      absl::string_view value);

  public:
  // string str15 = 15;
  bool has_str15() const;
  void clear_str15() ;
  absl::string_view str15() const;
  template <typename Arg_ = std::string&&>
  void set_str15(Arg_&& arg);

  private:
  const std::string& _internal_str15() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str15(
      absl::string_view value);

  public:
  // string str16 = 16;
  bool has_str16() const;
  void clear_str16() ;
  absl::string_view str16() const;
  template <typename Arg_ = std::string&&>
  void set_str16(Arg_&& arg);

  private:
  const std::string& _internal_str16() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str16(
      absl::string_view value);

  public:
  // string str17 = 17;
  bool has_str17() const;
  void clear_str17() ;
  absl::string_view str17() const;
  template <typename Arg_ = std::string&&>
  void set_str17(Arg_&& arg);

  private:
  const std::string& _internal_str17() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str17(
      absl::string_view value);

  public:
  // string str18 = 18;
  bool has_str18() const;
  void clear_str18() ;
  absl::string_view str18() const;
  template <typename Arg_ = std::string&&>
  void set_str18(Arg_&& arg);

  private:
  const std::string& _internal_str18() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str18(
      absl::string_view value);

  public:
  // string str19 = 19;
  bool has_str19() const;
  void clear_str19() ;
  absl::string_view str19() const;
  template <typename Arg_ = std::string&&>
  void set_str19(Arg_&& arg);

  private:
  const std::string& _internal_str19() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str19(
      absl::string_view value);

  public:
  // string str20 = 20;
  bool has_str20() const;
  void clear_str20() ;
  absl::string_view str20() const;
  template <typename Arg_ = std::string&&>
  void set_str20(Arg_&& arg);

  private:
  const std::string& _internal_str20() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str20(
      absl::string_view value);

  public:
  // string str21 = 21;
  bool has_str21() const;
  void clear_str21() ;
  absl::string_view str21() const;
  template <typename Arg_ = std::string&&>
  void set_str21(Arg_&& arg);

  private:
  const std::string& _internal_str21() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str21(
      absl::string_view value);

  public:
  // string str22 = 22;
  bool has_str22() const;
  void clear_str22() ;
  absl::string_view str22() const;
  template <typename Arg_ = std::string&&>
  void set_str22(Arg_&& arg);

  private:
  const std::string& _internal_str22() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str22(
      absl::string_view value);

  public:
  // string str23 = 23;
  bool has_str23() const;
  void clear_str23() ;
  absl::string_view str23() const;
  template <typename Arg_ = std::string&&>
  void set_str23(Arg_&& arg);

  private:
  const std::string& _internal_str23() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str23(
      absl::string_view value);

  public:
  // string str24 = 24;
  bool has_str24() const;
  void clear_str24() ;
  absl::string_view str24() const;
  template <typename Arg_ = std::string&&>
  void set_str24(Arg_&& arg);

  private:
  const std::string& _internal_str24() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str24(
      absl::string_view value);

  public:
  // string str25 = 25;
  bool has_str25() const;
  void clear_str25() ;
  absl::string_view str25() const;
  template <typename Arg_ = std::string&&>
  void set_str25(Arg_&& arg);

  private:
  const std::string& _internal_str25() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str25(
      absl::string_view value);

  public:
  // string str26 = 26;
  bool has_str26() const;
  void clear_str26() ;
  absl::string_view str26() const;
  template <typename Arg_ = std::string&&>
  void set_str26(Arg_&& arg);

  private:
  const std::string& _internal_str26() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str26(
      absl::string_view value);

  public:
  // string str27 = 27;
  bool has_str27() const;
  void clear_str27() ;
  absl::string_view str27() const;
  template <typename Arg_ = std::string&&>
  void set_str27(Arg_&& arg);

  private:
  const std::string& _internal_str27() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str27(
      absl::string_view value);

  public:
  // string str28 = 28;
  bool has_str28() const;
  void clear_str28() ;
  absl::string_view str28() const;
  template <typename Arg_ = std::string&&>
  void set_str28(Arg_&& arg);

  private:
  const std::string& _internal_str28() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str28(
      absl::string_view value);

  public:
  // string str29 = 29;
  bool has_str29() const;
  void clear_str29() ;
  absl::string_view str29() const;
  template <typename Arg_ = std::string&&>
  void set_str29(Arg_&& arg);

  private:
  const std::string& _internal_str29() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str29(
      absl::string_view value);

  public:
  // string str30 = 30;
  bool has_str30() const;
  void clear_str30() ;
  absl::string_view str30() const;
  template <typename Arg_ = std::string&&>
  void set_str30(Arg_&& arg);

  private:
  const std::string& _internal_str30() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str30(
      absl::string_view value);

  public:
  // string str31 = 31;
  bool has_str31() const;
  void clear_str31() ;
  absl::string_view str31() const;
  template <typename Arg_ = std::string&&>
  void set_str31(Arg_&& arg);

  private:
  const std::string& _internal_str31() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str31(
      absl::string_view value);

  public:
  // string str32 = 32;
  bool has_str32() const;
  void clear_str32() ;
  absl::string_view str32() const;
  template <typename Arg_ = std::string&&>
  void set_str32(Arg_&& arg);

  private:
  const std::string& _internal_str32() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str32(
      absl::string_view value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.ManyOptionalString)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 32, 0,
      227, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ManyOptionalString_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ManyOptionalString& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr str1_;
    ::google::protobuf::internal::ArenaStringPtr str2_;
    ::google::protobuf::internal::ArenaStringPtr str3_;
    ::google::protobuf::internal::ArenaStringPtr str4_;
    ::google::protobuf::internal::ArenaStringPtr str5_;
    ::google::protobuf::internal::ArenaStringPtr str6_;
    ::google::protobuf::internal::ArenaStringPtr str7_;
    ::google::protobuf::internal::ArenaStringPtr str8_;
    ::google::protobuf::internal::ArenaStringPtr str9_;
    ::google::protobuf::internal::ArenaStringPtr str10_;
    ::google::protobuf::internal::ArenaStringPtr str11_;
    ::google::protobuf::internal::ArenaStringPtr str12_;
    ::google::protobuf::internal::ArenaStringPtr str13_;
    ::google::protobuf::internal::ArenaStringPtr str14_;
    ::google::protobuf::internal::ArenaStringPtr str15_;
    ::google::protobuf::internal::ArenaStringPtr str16_;
    ::google::protobuf::internal::ArenaStringPtr str17_;
    ::google::protobuf::internal::ArenaStringPtr str18_;
    ::google::protobuf::internal::ArenaStringPtr str19_;
    ::google::protobuf::internal::ArenaStringPtr str20_;
    ::google::protobuf::internal::ArenaStringPtr str21_;
    ::google::protobuf::internal::ArenaStringPtr str22_;
    ::google::protobuf::internal::ArenaStringPtr str23_;
    ::google::protobuf::internal::ArenaStringPtr str24_;
    ::google::protobuf::internal::ArenaStringPtr str25_;
    ::google::protobuf::internal::ArenaStringPtr str26_;
    ::google::protobuf::internal::ArenaStringPtr str27_;
    ::google::protobuf::internal::ArenaStringPtr str28_;
    ::google::protobuf::internal::ArenaStringPtr str29_;
    ::google::protobuf::internal::ArenaStringPtr str30_;
    ::google::protobuf::internal::ArenaStringPtr str31_;
    ::google::protobuf::internal::ArenaStringPtr str32_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class Int64ParseTester final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.Int64ParseTester) */ {
 public:
  inline Int64ParseTester() : Int64ParseTester(nullptr) {}
  ~Int64ParseTester() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Int64ParseTester(
      ::google::protobuf::internal::ConstantInitialized);

  inline Int64ParseTester(const Int64ParseTester& from) : Int64ParseTester(nullptr, from) {}
  inline Int64ParseTester(Int64ParseTester&& from) noexcept
      : Int64ParseTester(nullptr, std::move(from)) {}
  inline Int64ParseTester& operator=(const Int64ParseTester& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int64ParseTester& operator=(Int64ParseTester&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Int64ParseTester& default_instance() {
    return *internal_default_instance();
  }
  static inline const Int64ParseTester* internal_default_instance() {
    return reinterpret_cast<const Int64ParseTester*>(
        &_Int64ParseTester_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 135;
  friend void swap(Int64ParseTester& a, Int64ParseTester& b) { a.Swap(&b); }
  inline void Swap(Int64ParseTester* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Int64ParseTester* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Int64ParseTester* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Int64ParseTester>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Int64ParseTester& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Int64ParseTester& from) { Int64ParseTester::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Int64ParseTester* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.Int64ParseTester"; }

 protected:
  explicit Int64ParseTester(::google::protobuf::Arena* arena);
  Int64ParseTester(::google::protobuf::Arena* arena, const Int64ParseTester& from);
  Int64ParseTester(::google::protobuf::Arena* arena, Int64ParseTester&& from) noexcept
      : Int64ParseTester(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedInt64LowfieldFieldNumber = 2,
    kPackedInt64LowfieldFieldNumber = 3,
    kRepeatedInt64MidfieldFieldNumber = 1002,
    kPackedInt64MidfieldFieldNumber = 1003,
    kRepeatedInt64HifieldFieldNumber = 1000002,
    kPackedInt64HifieldFieldNumber = 1000003,
    kOptionalInt64LowfieldFieldNumber = 1,
    kOptionalInt64MidfieldFieldNumber = 1001,
    kOptionalInt64HifieldFieldNumber = 1000001,
    kOtherFieldFieldNumber = 99,
  };
  // repeated int64 repeated_int64_lowfield = 2;
  int repeated_int64_lowfield_size() const;
  private:
  int _internal_repeated_int64_lowfield_size() const;

  public:
  void clear_repeated_int64_lowfield() ;
  ::int64_t repeated_int64_lowfield(int index) const;
  void set_repeated_int64_lowfield(int index, ::int64_t value);
  void add_repeated_int64_lowfield(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& repeated_int64_lowfield() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_repeated_int64_lowfield();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_repeated_int64_lowfield() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_repeated_int64_lowfield();

  public:
  // repeated int64 packed_int64_lowfield = 3 [features = {
  int packed_int64_lowfield_size() const;
  private:
  int _internal_packed_int64_lowfield_size() const;

  public:
  void clear_packed_int64_lowfield() ;
  ::int64_t packed_int64_lowfield(int index) const;
  void set_packed_int64_lowfield(int index, ::int64_t value);
  void add_packed_int64_lowfield(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& packed_int64_lowfield() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_packed_int64_lowfield();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_packed_int64_lowfield() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_packed_int64_lowfield();

  public:
  // repeated int64 repeated_int64_midfield = 1002;
  int repeated_int64_midfield_size() const;
  private:
  int _internal_repeated_int64_midfield_size() const;

  public:
  void clear_repeated_int64_midfield() ;
  ::int64_t repeated_int64_midfield(int index) const;
  void set_repeated_int64_midfield(int index, ::int64_t value);
  void add_repeated_int64_midfield(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& repeated_int64_midfield() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_repeated_int64_midfield();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_repeated_int64_midfield() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_repeated_int64_midfield();

  public:
  // repeated int64 packed_int64_midfield = 1003 [features = {
  int packed_int64_midfield_size() const;
  private:
  int _internal_packed_int64_midfield_size() const;

  public:
  void clear_packed_int64_midfield() ;
  ::int64_t packed_int64_midfield(int index) const;
  void set_packed_int64_midfield(int index, ::int64_t value);
  void add_packed_int64_midfield(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& packed_int64_midfield() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_packed_int64_midfield();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_packed_int64_midfield() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_packed_int64_midfield();

  public:
  // repeated int64 repeated_int64_hifield = 1000002;
  int repeated_int64_hifield_size() const;
  private:
  int _internal_repeated_int64_hifield_size() const;

  public:
  void clear_repeated_int64_hifield() ;
  ::int64_t repeated_int64_hifield(int index) const;
  void set_repeated_int64_hifield(int index, ::int64_t value);
  void add_repeated_int64_hifield(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& repeated_int64_hifield() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_repeated_int64_hifield();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_repeated_int64_hifield() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_repeated_int64_hifield();

  public:
  // repeated int64 packed_int64_hifield = 1000003 [features = {
  int packed_int64_hifield_size() const;
  private:
  int _internal_packed_int64_hifield_size() const;

  public:
  void clear_packed_int64_hifield() ;
  ::int64_t packed_int64_hifield(int index) const;
  void set_packed_int64_hifield(int index, ::int64_t value);
  void add_packed_int64_hifield(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& packed_int64_hifield() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_packed_int64_hifield();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_packed_int64_hifield() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_packed_int64_hifield();

  public:
  // int64 optional_int64_lowfield = 1;
  bool has_optional_int64_lowfield() const;
  void clear_optional_int64_lowfield() ;
  ::int64_t optional_int64_lowfield() const;
  void set_optional_int64_lowfield(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_lowfield() const;
  void _internal_set_optional_int64_lowfield(::int64_t value);

  public:
  // int64 optional_int64_midfield = 1001;
  bool has_optional_int64_midfield() const;
  void clear_optional_int64_midfield() ;
  ::int64_t optional_int64_midfield() const;
  void set_optional_int64_midfield(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_midfield() const;
  void _internal_set_optional_int64_midfield(::int64_t value);

  public:
  // int64 optional_int64_hifield = 1000001;
  bool has_optional_int64_hifield() const;
  void clear_optional_int64_hifield() ;
  ::int64_t optional_int64_hifield() const;
  void set_optional_int64_hifield(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_hifield() const;
  void _internal_set_optional_int64_hifield(::int64_t value);

  public:
  // int32 other_field = 99;
  bool has_other_field() const;
  void clear_other_field() ;
  ::int32_t other_field() const;
  void set_other_field(::int32_t value);

  private:
  ::int32_t _internal_other_field() const;
  void _internal_set_other_field(::int32_t value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int64ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  static const int kOptionalInt64ExtFieldNumber = 2000000;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::Int64ParseTester, ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 3,
      false>
      optional_int64_ext;
  static const int kRepeatedInt64ExtFieldNumber = 2000001;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::Int64ParseTester, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3,
      true>
      repeated_int64_ext;
  static const int kPackedInt64ExtFieldNumber = 2000002;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::Int64ParseTester, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3,
      true>
      packed_int64_ext;
  // @@protoc_insertion_point(class_scope:edition_unittest.Int64ParseTester)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 17>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Int64ParseTester_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Int64ParseTester& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int64_t> repeated_int64_lowfield_;
    ::google::protobuf::internal::CachedSize _repeated_int64_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> packed_int64_lowfield_;
    ::google::protobuf::internal::CachedSize _packed_int64_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> repeated_int64_midfield_;
    ::google::protobuf::internal::CachedSize _repeated_int64_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> packed_int64_midfield_;
    ::google::protobuf::internal::CachedSize _packed_int64_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> repeated_int64_hifield_;
    ::google::protobuf::internal::CachedSize _repeated_int64_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> packed_int64_hifield_;
    ::google::protobuf::internal::CachedSize _packed_int64_hifield_cached_byte_size_;
    ::int64_t optional_int64_lowfield_;
    ::int64_t optional_int64_midfield_;
    ::int64_t optional_int64_hifield_;
    ::int32_t other_field_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class Int64Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.Int64Message) */ {
 public:
  inline Int64Message() : Int64Message(nullptr) {}
  ~Int64Message() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Int64Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Int64Message(const Int64Message& from) : Int64Message(nullptr, from) {}
  inline Int64Message(Int64Message&& from) noexcept
      : Int64Message(nullptr, std::move(from)) {}
  inline Int64Message& operator=(const Int64Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int64Message& operator=(Int64Message&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Int64Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const Int64Message* internal_default_instance() {
    return reinterpret_cast<const Int64Message*>(
        &_Int64Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 74;
  friend void swap(Int64Message& a, Int64Message& b) { a.Swap(&b); }
  inline void Swap(Int64Message* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Int64Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Int64Message* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Int64Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Int64Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Int64Message& from) { Int64Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Int64Message* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.Int64Message"; }

 protected:
  explicit Int64Message(::google::protobuf::Arena* arena);
  Int64Message(::google::protobuf::Arena* arena, const Int64Message& from);
  Int64Message(::google::protobuf::Arena* arena, Int64Message&& from) noexcept
      : Int64Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // int64 data = 1;
  bool has_data() const;
  void clear_data() ;
  ::int64_t data() const;
  void set_data(::int64_t value);

  private:
  ::int64_t _internal_data() const;
  void _internal_set_data(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.Int64Message)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Int64Message_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Int64Message& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class Int32ParseTester final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.Int32ParseTester) */ {
 public:
  inline Int32ParseTester() : Int32ParseTester(nullptr) {}
  ~Int32ParseTester() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Int32ParseTester(
      ::google::protobuf::internal::ConstantInitialized);

  inline Int32ParseTester(const Int32ParseTester& from) : Int32ParseTester(nullptr, from) {}
  inline Int32ParseTester(Int32ParseTester&& from) noexcept
      : Int32ParseTester(nullptr, std::move(from)) {}
  inline Int32ParseTester& operator=(const Int32ParseTester& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int32ParseTester& operator=(Int32ParseTester&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Int32ParseTester& default_instance() {
    return *internal_default_instance();
  }
  static inline const Int32ParseTester* internal_default_instance() {
    return reinterpret_cast<const Int32ParseTester*>(
        &_Int32ParseTester_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 134;
  friend void swap(Int32ParseTester& a, Int32ParseTester& b) { a.Swap(&b); }
  inline void Swap(Int32ParseTester* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Int32ParseTester* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Int32ParseTester* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Int32ParseTester>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Int32ParseTester& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Int32ParseTester& from) { Int32ParseTester::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Int32ParseTester* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.Int32ParseTester"; }

 protected:
  explicit Int32ParseTester(::google::protobuf::Arena* arena);
  Int32ParseTester(::google::protobuf::Arena* arena, const Int32ParseTester& from);
  Int32ParseTester(::google::protobuf::Arena* arena, Int32ParseTester&& from) noexcept
      : Int32ParseTester(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedInt32LowfieldFieldNumber = 2,
    kPackedInt32LowfieldFieldNumber = 3,
    kRepeatedInt32MidfieldFieldNumber = 1002,
    kPackedInt32MidfieldFieldNumber = 1003,
    kRepeatedInt32HifieldFieldNumber = 1000002,
    kPackedInt32HifieldFieldNumber = 1000003,
    kOptionalInt32LowfieldFieldNumber = 1,
    kOtherFieldFieldNumber = 99,
    kOptionalInt32MidfieldFieldNumber = 1001,
    kOptionalInt32HifieldFieldNumber = 1000001,
  };
  // repeated int32 repeated_int32_lowfield = 2;
  int repeated_int32_lowfield_size() const;
  private:
  int _internal_repeated_int32_lowfield_size() const;

  public:
  void clear_repeated_int32_lowfield() ;
  ::int32_t repeated_int32_lowfield(int index) const;
  void set_repeated_int32_lowfield(int index, ::int32_t value);
  void add_repeated_int32_lowfield(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeated_int32_lowfield() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeated_int32_lowfield();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeated_int32_lowfield() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeated_int32_lowfield();

  public:
  // repeated int32 packed_int32_lowfield = 3 [features = {
  int packed_int32_lowfield_size() const;
  private:
  int _internal_packed_int32_lowfield_size() const;

  public:
  void clear_packed_int32_lowfield() ;
  ::int32_t packed_int32_lowfield(int index) const;
  void set_packed_int32_lowfield(int index, ::int32_t value);
  void add_packed_int32_lowfield(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& packed_int32_lowfield() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_packed_int32_lowfield();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_packed_int32_lowfield() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_packed_int32_lowfield();

  public:
  // repeated int32 repeated_int32_midfield = 1002;
  int repeated_int32_midfield_size() const;
  private:
  int _internal_repeated_int32_midfield_size() const;

  public:
  void clear_repeated_int32_midfield() ;
  ::int32_t repeated_int32_midfield(int index) const;
  void set_repeated_int32_midfield(int index, ::int32_t value);
  void add_repeated_int32_midfield(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeated_int32_midfield() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeated_int32_midfield();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeated_int32_midfield() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeated_int32_midfield();

  public:
  // repeated int32 packed_int32_midfield = 1003 [features = {
  int packed_int32_midfield_size() const;
  private:
  int _internal_packed_int32_midfield_size() const;

  public:
  void clear_packed_int32_midfield() ;
  ::int32_t packed_int32_midfield(int index) const;
  void set_packed_int32_midfield(int index, ::int32_t value);
  void add_packed_int32_midfield(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& packed_int32_midfield() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_packed_int32_midfield();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_packed_int32_midfield() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_packed_int32_midfield();

  public:
  // repeated int32 repeated_int32_hifield = 1000002;
  int repeated_int32_hifield_size() const;
  private:
  int _internal_repeated_int32_hifield_size() const;

  public:
  void clear_repeated_int32_hifield() ;
  ::int32_t repeated_int32_hifield(int index) const;
  void set_repeated_int32_hifield(int index, ::int32_t value);
  void add_repeated_int32_hifield(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeated_int32_hifield() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeated_int32_hifield();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeated_int32_hifield() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeated_int32_hifield();

  public:
  // repeated int32 packed_int32_hifield = 1000003 [features = {
  int packed_int32_hifield_size() const;
  private:
  int _internal_packed_int32_hifield_size() const;

  public:
  void clear_packed_int32_hifield() ;
  ::int32_t packed_int32_hifield(int index) const;
  void set_packed_int32_hifield(int index, ::int32_t value);
  void add_packed_int32_hifield(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& packed_int32_hifield() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_packed_int32_hifield();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_packed_int32_hifield() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_packed_int32_hifield();

  public:
  // int32 optional_int32_lowfield = 1;
  bool has_optional_int32_lowfield() const;
  void clear_optional_int32_lowfield() ;
  ::int32_t optional_int32_lowfield() const;
  void set_optional_int32_lowfield(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_lowfield() const;
  void _internal_set_optional_int32_lowfield(::int32_t value);

  public:
  // int32 other_field = 99;
  bool has_other_field() const;
  void clear_other_field() ;
  ::int32_t other_field() const;
  void set_other_field(::int32_t value);

  private:
  ::int32_t _internal_other_field() const;
  void _internal_set_other_field(::int32_t value);

  public:
  // int32 optional_int32_midfield = 1001;
  bool has_optional_int32_midfield() const;
  void clear_optional_int32_midfield() ;
  ::int32_t optional_int32_midfield() const;
  void set_optional_int32_midfield(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_midfield() const;
  void _internal_set_optional_int32_midfield(::int32_t value);

  public:
  // int32 optional_int32_hifield = 1000001;
  bool has_optional_int32_hifield() const;
  void clear_optional_int32_hifield() ;
  ::int32_t optional_int32_hifield() const;
  void set_optional_int32_hifield(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_hifield() const;
  void _internal_set_optional_int32_hifield(::int32_t value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<Int32ParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  static const int kOptionalInt32ExtFieldNumber = 2000000;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::Int32ParseTester, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
      false>
      optional_int32_ext;
  static const int kRepeatedInt32ExtFieldNumber = 2000001;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::Int32ParseTester, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5,
      true>
      repeated_int32_ext;
  static const int kPackedInt32ExtFieldNumber = 2000002;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::Int32ParseTester, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5,
      true>
      packed_int32_ext;
  // @@protoc_insertion_point(class_scope:edition_unittest.Int32ParseTester)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 17>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Int32ParseTester_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Int32ParseTester& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> repeated_int32_lowfield_;
    ::google::protobuf::internal::CachedSize _repeated_int32_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> packed_int32_lowfield_;
    ::google::protobuf::internal::CachedSize _packed_int32_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> repeated_int32_midfield_;
    ::google::protobuf::internal::CachedSize _repeated_int32_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> packed_int32_midfield_;
    ::google::protobuf::internal::CachedSize _packed_int32_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> repeated_int32_hifield_;
    ::google::protobuf::internal::CachedSize _repeated_int32_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> packed_int32_hifield_;
    ::google::protobuf::internal::CachedSize _packed_int32_hifield_cached_byte_size_;
    ::int32_t optional_int32_lowfield_;
    ::int32_t other_field_;
    ::int32_t optional_int32_midfield_;
    ::int32_t optional_int32_hifield_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class Int32Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.Int32Message) */ {
 public:
  inline Int32Message() : Int32Message(nullptr) {}
  ~Int32Message() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Int32Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Int32Message(const Int32Message& from) : Int32Message(nullptr, from) {}
  inline Int32Message(Int32Message&& from) noexcept
      : Int32Message(nullptr, std::move(from)) {}
  inline Int32Message& operator=(const Int32Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int32Message& operator=(Int32Message&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Int32Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const Int32Message* internal_default_instance() {
    return reinterpret_cast<const Int32Message*>(
        &_Int32Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 72;
  friend void swap(Int32Message& a, Int32Message& b) { a.Swap(&b); }
  inline void Swap(Int32Message* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Int32Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Int32Message* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Int32Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Int32Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Int32Message& from) { Int32Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Int32Message* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.Int32Message"; }

 protected:
  explicit Int32Message(::google::protobuf::Arena* arena);
  Int32Message(::google::protobuf::Arena* arena, const Int32Message& from);
  Int32Message(::google::protobuf::Arena* arena, Int32Message&& from) noexcept
      : Int32Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // int32 data = 1;
  bool has_data() const;
  void clear_data() ;
  ::int32_t data() const;
  void set_data(::int32_t value);

  private:
  ::int32_t _internal_data() const;
  void _internal_set_data(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.Int32Message)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Int32Message_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Int32Message& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class InlinedStringIdxRegressionProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.InlinedStringIdxRegressionProto) */ {
 public:
  inline InlinedStringIdxRegressionProto() : InlinedStringIdxRegressionProto(nullptr) {}
  ~InlinedStringIdxRegressionProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InlinedStringIdxRegressionProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline InlinedStringIdxRegressionProto(const InlinedStringIdxRegressionProto& from) : InlinedStringIdxRegressionProto(nullptr, from) {}
  inline InlinedStringIdxRegressionProto(InlinedStringIdxRegressionProto&& from) noexcept
      : InlinedStringIdxRegressionProto(nullptr, std::move(from)) {}
  inline InlinedStringIdxRegressionProto& operator=(const InlinedStringIdxRegressionProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InlinedStringIdxRegressionProto& operator=(InlinedStringIdxRegressionProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InlinedStringIdxRegressionProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const InlinedStringIdxRegressionProto* internal_default_instance() {
    return reinterpret_cast<const InlinedStringIdxRegressionProto*>(
        &_InlinedStringIdxRegressionProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 136;
  friend void swap(InlinedStringIdxRegressionProto& a, InlinedStringIdxRegressionProto& b) { a.Swap(&b); }
  inline void Swap(InlinedStringIdxRegressionProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InlinedStringIdxRegressionProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InlinedStringIdxRegressionProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InlinedStringIdxRegressionProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InlinedStringIdxRegressionProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InlinedStringIdxRegressionProto& from) { InlinedStringIdxRegressionProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InlinedStringIdxRegressionProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.InlinedStringIdxRegressionProto"; }

 protected:
  explicit InlinedStringIdxRegressionProto(::google::protobuf::Arena* arena);
  InlinedStringIdxRegressionProto(::google::protobuf::Arena* arena, const InlinedStringIdxRegressionProto& from);
  InlinedStringIdxRegressionProto(::google::protobuf::Arena* arena, InlinedStringIdxRegressionProto&& from) noexcept
      : InlinedStringIdxRegressionProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStr1FieldNumber = 1,
    kStr2FieldNumber = 3,
    kStr3FieldNumber = 4,
    kSubFieldNumber = 2,
  };
  // string str1 = 1;
  bool has_str1() const;
  void clear_str1() ;
  absl::string_view str1() const;
  template <typename Arg_ = std::string&&>
  void set_str1(Arg_&& arg);

  private:
  const std::string& _internal_str1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str1(
      absl::string_view value);

  public:
  // string str2 = 3;
  bool has_str2() const;
  void clear_str2() ;
  absl::string_view str2() const;
  template <typename Arg_ = std::string&&>
  void set_str2(Arg_&& arg);

  private:
  const std::string& _internal_str2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str2(
      absl::string_view value);

  public:
  // bytes str3 = 4;
  bool has_str3() const;
  void clear_str3() ;
  absl::string_view str3() const;
  template <typename Arg_ = std::string&&>
  void set_str3(Arg_&& arg);

  private:
  const std::string& _internal_str3() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str3(
      absl::string_view value);

  public:
  // .edition_unittest.InlinedStringIdxRegressionProto sub = 2;
  bool has_sub() const;
  void clear_sub() ;
  const ::edition_unittest::InlinedStringIdxRegressionProto& sub() const;
  PROTOBUF_NODISCARD ::edition_unittest::InlinedStringIdxRegressionProto* release_sub();
  ::edition_unittest::InlinedStringIdxRegressionProto* mutable_sub();
  void set_allocated_sub(::edition_unittest::InlinedStringIdxRegressionProto* value);
  void unsafe_arena_set_allocated_sub(::edition_unittest::InlinedStringIdxRegressionProto* value);
  ::edition_unittest::InlinedStringIdxRegressionProto* unsafe_arena_release_sub();

  private:
  const ::edition_unittest::InlinedStringIdxRegressionProto& _internal_sub() const;
  ::edition_unittest::InlinedStringIdxRegressionProto* _internal_mutable_sub();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.InlinedStringIdxRegressionProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InlinedStringIdxRegressionProto_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InlinedStringIdxRegressionProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr str1_;
    ::google::protobuf::internal::ArenaStringPtr str2_;
    ::google::protobuf::internal::ArenaStringPtr str3_;
    ::edition_unittest::InlinedStringIdxRegressionProto* sub_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class ForeignMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.ForeignMessage) */ {
 public:
  inline ForeignMessage() : ForeignMessage(nullptr) {}
  ~ForeignMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ForeignMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline ForeignMessage(const ForeignMessage& from) : ForeignMessage(nullptr, from) {}
  inline ForeignMessage(ForeignMessage&& from) noexcept
      : ForeignMessage(nullptr, std::move(from)) {}
  inline ForeignMessage& operator=(const ForeignMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForeignMessage& operator=(ForeignMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ForeignMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ForeignMessage* internal_default_instance() {
    return reinterpret_cast<const ForeignMessage*>(
        &_ForeignMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ForeignMessage& a, ForeignMessage& b) { a.Swap(&b); }
  inline void Swap(ForeignMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForeignMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForeignMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ForeignMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ForeignMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ForeignMessage& from) { ForeignMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ForeignMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.ForeignMessage"; }

 protected:
  explicit ForeignMessage(::google::protobuf::Arena* arena);
  ForeignMessage(::google::protobuf::Arena* arena, const ForeignMessage& from);
  ForeignMessage(::google::protobuf::Arena* arena, ForeignMessage&& from) noexcept
      : ForeignMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCFieldNumber = 1,
    kDFieldNumber = 2,
  };
  // int32 c = 1;
  bool has_c() const;
  void clear_c() ;
  ::int32_t c() const;
  void set_c(::int32_t value);

  private:
  ::int32_t _internal_c() const;
  void _internal_set_c(::int32_t value);

  public:
  // int32 d = 2;
  bool has_d() const;
  void clear_d() ;
  ::int32_t d() const;
  void set_d(::int32_t value);

  private:
  ::int32_t _internal_d() const;
  void _internal_set_d(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.ForeignMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ForeignMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ForeignMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t c_;
    ::int32_t d_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class FooServerMessage final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.FooServerMessage) */ {
 public:
  inline FooServerMessage() : FooServerMessage(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FooServerMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline FooServerMessage(const FooServerMessage& from) : FooServerMessage(nullptr, from) {}
  inline FooServerMessage(FooServerMessage&& from) noexcept
      : FooServerMessage(nullptr, std::move(from)) {}
  inline FooServerMessage& operator=(const FooServerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline FooServerMessage& operator=(FooServerMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FooServerMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const FooServerMessage* internal_default_instance() {
    return reinterpret_cast<const FooServerMessage*>(
        &_FooServerMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 106;
  friend void swap(FooServerMessage& a, FooServerMessage& b) { a.Swap(&b); }
  inline void Swap(FooServerMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FooServerMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FooServerMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<FooServerMessage>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const FooServerMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const FooServerMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.FooServerMessage"; }

 protected:
  explicit FooServerMessage(::google::protobuf::Arena* arena);
  FooServerMessage(::google::protobuf::Arena* arena, const FooServerMessage& from);
  FooServerMessage(::google::protobuf::Arena* arena, FooServerMessage&& from) noexcept
      : FooServerMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.FooServerMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FooServerMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FooServerMessage& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class FooResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.FooResponse) */ {
 public:
  inline FooResponse() : FooResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FooResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FooResponse(const FooResponse& from) : FooResponse(nullptr, from) {}
  inline FooResponse(FooResponse&& from) noexcept
      : FooResponse(nullptr, std::move(from)) {}
  inline FooResponse& operator=(const FooResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FooResponse& operator=(FooResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FooResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FooResponse* internal_default_instance() {
    return reinterpret_cast<const FooResponse*>(
        &_FooResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 104;
  friend void swap(FooResponse& a, FooResponse& b) { a.Swap(&b); }
  inline void Swap(FooResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FooResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FooResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<FooResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const FooResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const FooResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.FooResponse"; }

 protected:
  explicit FooResponse(::google::protobuf::Arena* arena);
  FooResponse(::google::protobuf::Arena* arena, const FooResponse& from);
  FooResponse(::google::protobuf::Arena* arena, FooResponse&& from) noexcept
      : FooResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.FooResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FooResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FooResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class FooRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.FooRequest) */ {
 public:
  inline FooRequest() : FooRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FooRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FooRequest(const FooRequest& from) : FooRequest(nullptr, from) {}
  inline FooRequest(FooRequest&& from) noexcept
      : FooRequest(nullptr, std::move(from)) {}
  inline FooRequest& operator=(const FooRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FooRequest& operator=(FooRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FooRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FooRequest* internal_default_instance() {
    return reinterpret_cast<const FooRequest*>(
        &_FooRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 103;
  friend void swap(FooRequest& a, FooRequest& b) { a.Swap(&b); }
  inline void Swap(FooRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FooRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FooRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<FooRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const FooRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const FooRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.FooRequest"; }

 protected:
  explicit FooRequest(::google::protobuf::Arena* arena);
  FooRequest(::google::protobuf::Arena* arena, const FooRequest& from);
  FooRequest(::google::protobuf::Arena* arena, FooRequest&& from) noexcept
      : FooRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.FooRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FooRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FooRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class FooClientMessage final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.FooClientMessage) */ {
 public:
  inline FooClientMessage() : FooClientMessage(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FooClientMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline FooClientMessage(const FooClientMessage& from) : FooClientMessage(nullptr, from) {}
  inline FooClientMessage(FooClientMessage&& from) noexcept
      : FooClientMessage(nullptr, std::move(from)) {}
  inline FooClientMessage& operator=(const FooClientMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline FooClientMessage& operator=(FooClientMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FooClientMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const FooClientMessage* internal_default_instance() {
    return reinterpret_cast<const FooClientMessage*>(
        &_FooClientMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 105;
  friend void swap(FooClientMessage& a, FooClientMessage& b) { a.Swap(&b); }
  inline void Swap(FooClientMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FooClientMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FooClientMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<FooClientMessage>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const FooClientMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const FooClientMessage& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.FooClientMessage"; }

 protected:
  explicit FooClientMessage(::google::protobuf::Arena* arena);
  FooClientMessage(::google::protobuf::Arena* arena, const FooClientMessage& from);
  FooClientMessage(::google::protobuf::Arena* arena, FooClientMessage&& from) noexcept
      : FooClientMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.FooClientMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FooClientMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FooClientMessage& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class EnumsForBenchmark final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.EnumsForBenchmark) */ {
 public:
  inline EnumsForBenchmark() : EnumsForBenchmark(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnumsForBenchmark(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnumsForBenchmark(const EnumsForBenchmark& from) : EnumsForBenchmark(nullptr, from) {}
  inline EnumsForBenchmark(EnumsForBenchmark&& from) noexcept
      : EnumsForBenchmark(nullptr, std::move(from)) {}
  inline EnumsForBenchmark& operator=(const EnumsForBenchmark& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnumsForBenchmark& operator=(EnumsForBenchmark&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnumsForBenchmark& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnumsForBenchmark* internal_default_instance() {
    return reinterpret_cast<const EnumsForBenchmark*>(
        &_EnumsForBenchmark_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 145;
  friend void swap(EnumsForBenchmark& a, EnumsForBenchmark& b) { a.Swap(&b); }
  inline void Swap(EnumsForBenchmark* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnumsForBenchmark* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnumsForBenchmark* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<EnumsForBenchmark>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EnumsForBenchmark& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EnumsForBenchmark& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.EnumsForBenchmark"; }

 protected:
  explicit EnumsForBenchmark(::google::protobuf::Arena* arena);
  EnumsForBenchmark(::google::protobuf::Arena* arena, const EnumsForBenchmark& from);
  EnumsForBenchmark(::google::protobuf::Arena* arena, EnumsForBenchmark&& from) noexcept
      : EnumsForBenchmark(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Flat = EnumsForBenchmark_Flat;
  static constexpr Flat A0 = EnumsForBenchmark_Flat_A0;
  static constexpr Flat A1 = EnumsForBenchmark_Flat_A1;
  static constexpr Flat A2 = EnumsForBenchmark_Flat_A2;
  static constexpr Flat A3 = EnumsForBenchmark_Flat_A3;
  static constexpr Flat A4 = EnumsForBenchmark_Flat_A4;
  static constexpr Flat A5 = EnumsForBenchmark_Flat_A5;
  static constexpr Flat A6 = EnumsForBenchmark_Flat_A6;
  static constexpr Flat A7 = EnumsForBenchmark_Flat_A7;
  static constexpr Flat A8 = EnumsForBenchmark_Flat_A8;
  static constexpr Flat A9 = EnumsForBenchmark_Flat_A9;
  static constexpr Flat A10 = EnumsForBenchmark_Flat_A10;
  static constexpr Flat A11 = EnumsForBenchmark_Flat_A11;
  static constexpr Flat A12 = EnumsForBenchmark_Flat_A12;
  static constexpr Flat A13 = EnumsForBenchmark_Flat_A13;
  static constexpr Flat A14 = EnumsForBenchmark_Flat_A14;
  static constexpr Flat A15 = EnumsForBenchmark_Flat_A15;
  static inline bool Flat_IsValid(int value) {
    return EnumsForBenchmark_Flat_IsValid(value);
  }
  static constexpr Flat Flat_MIN = EnumsForBenchmark_Flat_Flat_MIN;
  static constexpr Flat Flat_MAX = EnumsForBenchmark_Flat_Flat_MAX;
  static constexpr int Flat_ARRAYSIZE = EnumsForBenchmark_Flat_Flat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Flat_descriptor() {
    return EnumsForBenchmark_Flat_descriptor();
  }
  template <typename T>
  static inline const std::string& Flat_Name(T value) {
    return EnumsForBenchmark_Flat_Name(value);
  }
  static inline bool Flat_Parse(absl::string_view name, Flat* value) {
    return EnumsForBenchmark_Flat_Parse(name, value);
  }
  using AlmostFlat = EnumsForBenchmark_AlmostFlat;
  static constexpr AlmostFlat B0 = EnumsForBenchmark_AlmostFlat_B0;
  static constexpr AlmostFlat B1 = EnumsForBenchmark_AlmostFlat_B1;
  static constexpr AlmostFlat B2 = EnumsForBenchmark_AlmostFlat_B2;
  static constexpr AlmostFlat B3 = EnumsForBenchmark_AlmostFlat_B3;
  static constexpr AlmostFlat B5 = EnumsForBenchmark_AlmostFlat_B5;
  static constexpr AlmostFlat B6 = EnumsForBenchmark_AlmostFlat_B6;
  static constexpr AlmostFlat B7 = EnumsForBenchmark_AlmostFlat_B7;
  static constexpr AlmostFlat B8 = EnumsForBenchmark_AlmostFlat_B8;
  static constexpr AlmostFlat B9 = EnumsForBenchmark_AlmostFlat_B9;
  static constexpr AlmostFlat B11 = EnumsForBenchmark_AlmostFlat_B11;
  static constexpr AlmostFlat B12 = EnumsForBenchmark_AlmostFlat_B12;
  static constexpr AlmostFlat B13 = EnumsForBenchmark_AlmostFlat_B13;
  static constexpr AlmostFlat B14 = EnumsForBenchmark_AlmostFlat_B14;
  static constexpr AlmostFlat B15 = EnumsForBenchmark_AlmostFlat_B15;
  static constexpr AlmostFlat B17 = EnumsForBenchmark_AlmostFlat_B17;
  static constexpr AlmostFlat B19 = EnumsForBenchmark_AlmostFlat_B19;
  static inline bool AlmostFlat_IsValid(int value) {
    return EnumsForBenchmark_AlmostFlat_IsValid(value);
  }
  static constexpr AlmostFlat AlmostFlat_MIN = EnumsForBenchmark_AlmostFlat_AlmostFlat_MIN;
  static constexpr AlmostFlat AlmostFlat_MAX = EnumsForBenchmark_AlmostFlat_AlmostFlat_MAX;
  static constexpr int AlmostFlat_ARRAYSIZE = EnumsForBenchmark_AlmostFlat_AlmostFlat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AlmostFlat_descriptor() {
    return EnumsForBenchmark_AlmostFlat_descriptor();
  }
  template <typename T>
  static inline const std::string& AlmostFlat_Name(T value) {
    return EnumsForBenchmark_AlmostFlat_Name(value);
  }
  static inline bool AlmostFlat_Parse(absl::string_view name, AlmostFlat* value) {
    return EnumsForBenchmark_AlmostFlat_Parse(name, value);
  }
  using Sparse = EnumsForBenchmark_Sparse;
  static constexpr Sparse C0 = EnumsForBenchmark_Sparse_C0;
  static constexpr Sparse C536 = EnumsForBenchmark_Sparse_C536;
  static constexpr Sparse C8387 = EnumsForBenchmark_Sparse_C8387;
  static constexpr Sparse C9673 = EnumsForBenchmark_Sparse_C9673;
  static constexpr Sparse C10285 = EnumsForBenchmark_Sparse_C10285;
  static constexpr Sparse C13318 = EnumsForBenchmark_Sparse_C13318;
  static constexpr Sparse C15963 = EnumsForBenchmark_Sparse_C15963;
  static constexpr Sparse C16439 = EnumsForBenchmark_Sparse_C16439;
  static constexpr Sparse C18197 = EnumsForBenchmark_Sparse_C18197;
  static constexpr Sparse C19430 = EnumsForBenchmark_Sparse_C19430;
  static constexpr Sparse C20361 = EnumsForBenchmark_Sparse_C20361;
  static constexpr Sparse C20706 = EnumsForBenchmark_Sparse_C20706;
  static constexpr Sparse C21050 = EnumsForBenchmark_Sparse_C21050;
  static constexpr Sparse C21906 = EnumsForBenchmark_Sparse_C21906;
  static constexpr Sparse C27265 = EnumsForBenchmark_Sparse_C27265;
  static constexpr Sparse C30109 = EnumsForBenchmark_Sparse_C30109;
  static constexpr Sparse C31670 = EnumsForBenchmark_Sparse_C31670;
  static inline bool Sparse_IsValid(int value) {
    return EnumsForBenchmark_Sparse_IsValid(value);
  }
  static constexpr Sparse Sparse_MIN = EnumsForBenchmark_Sparse_Sparse_MIN;
  static constexpr Sparse Sparse_MAX = EnumsForBenchmark_Sparse_Sparse_MAX;
  static constexpr int Sparse_ARRAYSIZE = EnumsForBenchmark_Sparse_Sparse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Sparse_descriptor() {
    return EnumsForBenchmark_Sparse_descriptor();
  }
  template <typename T>
  static inline const std::string& Sparse_Name(T value) {
    return EnumsForBenchmark_Sparse_Name(value);
  }
  static inline bool Sparse_Parse(absl::string_view name, Sparse* value) {
    return EnumsForBenchmark_Sparse_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.EnumsForBenchmark)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EnumsForBenchmark_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnumsForBenchmark& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class EnumParseTester final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.EnumParseTester) */ {
 public:
  inline EnumParseTester() : EnumParseTester(nullptr) {}
  ~EnumParseTester() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnumParseTester(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnumParseTester(const EnumParseTester& from) : EnumParseTester(nullptr, from) {}
  inline EnumParseTester(EnumParseTester&& from) noexcept
      : EnumParseTester(nullptr, std::move(from)) {}
  inline EnumParseTester& operator=(const EnumParseTester& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnumParseTester& operator=(EnumParseTester&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnumParseTester& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnumParseTester* internal_default_instance() {
    return reinterpret_cast<const EnumParseTester*>(
        &_EnumParseTester_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 132;
  friend void swap(EnumParseTester& a, EnumParseTester& b) { a.Swap(&b); }
  inline void Swap(EnumParseTester* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnumParseTester* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnumParseTester* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EnumParseTester>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnumParseTester& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnumParseTester& from) { EnumParseTester::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EnumParseTester* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.EnumParseTester"; }

 protected:
  explicit EnumParseTester(::google::protobuf::Arena* arena);
  EnumParseTester(::google::protobuf::Arena* arena, const EnumParseTester& from);
  EnumParseTester(::google::protobuf::Arena* arena, EnumParseTester&& from) noexcept
      : EnumParseTester(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SeqSmall0 = EnumParseTester_SeqSmall0;
  static constexpr SeqSmall0 SEQ_SMALL_0_DEFAULT = EnumParseTester_SeqSmall0_SEQ_SMALL_0_DEFAULT;
  static constexpr SeqSmall0 SEQ_SMALL_0_1 = EnumParseTester_SeqSmall0_SEQ_SMALL_0_1;
  static constexpr SeqSmall0 SEQ_SMALL_0_2 = EnumParseTester_SeqSmall0_SEQ_SMALL_0_2;
  static inline bool SeqSmall0_IsValid(int value) {
    return EnumParseTester_SeqSmall0_IsValid(value);
  }
  static constexpr SeqSmall0 SeqSmall0_MIN = EnumParseTester_SeqSmall0_SeqSmall0_MIN;
  static constexpr SeqSmall0 SeqSmall0_MAX = EnumParseTester_SeqSmall0_SeqSmall0_MAX;
  static constexpr int SeqSmall0_ARRAYSIZE = EnumParseTester_SeqSmall0_SeqSmall0_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* SeqSmall0_descriptor() {
    return EnumParseTester_SeqSmall0_descriptor();
  }
  template <typename T>
  static inline const std::string& SeqSmall0_Name(T value) {
    return EnumParseTester_SeqSmall0_Name(value);
  }
  static inline bool SeqSmall0_Parse(absl::string_view name, SeqSmall0* value) {
    return EnumParseTester_SeqSmall0_Parse(name, value);
  }
  using SeqSmall1 = EnumParseTester_SeqSmall1;
  static constexpr SeqSmall1 UNKNOWN = EnumParseTester_SeqSmall1_UNKNOWN;
  static constexpr SeqSmall1 SEQ_SMALL_1_DEFAULT = EnumParseTester_SeqSmall1_SEQ_SMALL_1_DEFAULT;
  static constexpr SeqSmall1 SEQ_SMALL_1_2 = EnumParseTester_SeqSmall1_SEQ_SMALL_1_2;
  static constexpr SeqSmall1 SEQ_SMALL_1_3 = EnumParseTester_SeqSmall1_SEQ_SMALL_1_3;
  static inline bool SeqSmall1_IsValid(int value) {
    return EnumParseTester_SeqSmall1_IsValid(value);
  }
  static constexpr SeqSmall1 SeqSmall1_MIN = EnumParseTester_SeqSmall1_SeqSmall1_MIN;
  static constexpr SeqSmall1 SeqSmall1_MAX = EnumParseTester_SeqSmall1_SeqSmall1_MAX;
  static constexpr int SeqSmall1_ARRAYSIZE = EnumParseTester_SeqSmall1_SeqSmall1_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* SeqSmall1_descriptor() {
    return EnumParseTester_SeqSmall1_descriptor();
  }
  template <typename T>
  static inline const std::string& SeqSmall1_Name(T value) {
    return EnumParseTester_SeqSmall1_Name(value);
  }
  static inline bool SeqSmall1_Parse(absl::string_view name, SeqSmall1* value) {
    return EnumParseTester_SeqSmall1_Parse(name, value);
  }
  using SeqLarge = EnumParseTester_SeqLarge;
  static constexpr SeqLarge SEQ_LARGE_DEFAULT = EnumParseTester_SeqLarge_SEQ_LARGE_DEFAULT;
  static constexpr SeqLarge SEQ_LARGE_0 = EnumParseTester_SeqLarge_SEQ_LARGE_0;
  static constexpr SeqLarge SEQ_LARGE_1 = EnumParseTester_SeqLarge_SEQ_LARGE_1;
  static constexpr SeqLarge SEQ_LARGE_2 = EnumParseTester_SeqLarge_SEQ_LARGE_2;
  static constexpr SeqLarge SEQ_LARGE_3 = EnumParseTester_SeqLarge_SEQ_LARGE_3;
  static constexpr SeqLarge SEQ_LARGE_4 = EnumParseTester_SeqLarge_SEQ_LARGE_4;
  static constexpr SeqLarge SEQ_LARGE_5 = EnumParseTester_SeqLarge_SEQ_LARGE_5;
  static constexpr SeqLarge SEQ_LARGE_6 = EnumParseTester_SeqLarge_SEQ_LARGE_6;
  static constexpr SeqLarge SEQ_LARGE_7 = EnumParseTester_SeqLarge_SEQ_LARGE_7;
  static constexpr SeqLarge SEQ_LARGE_8 = EnumParseTester_SeqLarge_SEQ_LARGE_8;
  static constexpr SeqLarge SEQ_LARGE_9 = EnumParseTester_SeqLarge_SEQ_LARGE_9;
  static constexpr SeqLarge SEQ_LARGE_10 = EnumParseTester_SeqLarge_SEQ_LARGE_10;
  static constexpr SeqLarge SEQ_LARGE_11 = EnumParseTester_SeqLarge_SEQ_LARGE_11;
  static constexpr SeqLarge SEQ_LARGE_12 = EnumParseTester_SeqLarge_SEQ_LARGE_12;
  static constexpr SeqLarge SEQ_LARGE_13 = EnumParseTester_SeqLarge_SEQ_LARGE_13;
  static constexpr SeqLarge SEQ_LARGE_14 = EnumParseTester_SeqLarge_SEQ_LARGE_14;
  static constexpr SeqLarge SEQ_LARGE_15 = EnumParseTester_SeqLarge_SEQ_LARGE_15;
  static constexpr SeqLarge SEQ_LARGE_16 = EnumParseTester_SeqLarge_SEQ_LARGE_16;
  static constexpr SeqLarge SEQ_LARGE_17 = EnumParseTester_SeqLarge_SEQ_LARGE_17;
  static constexpr SeqLarge SEQ_LARGE_18 = EnumParseTester_SeqLarge_SEQ_LARGE_18;
  static constexpr SeqLarge SEQ_LARGE_19 = EnumParseTester_SeqLarge_SEQ_LARGE_19;
  static constexpr SeqLarge SEQ_LARGE_20 = EnumParseTester_SeqLarge_SEQ_LARGE_20;
  static constexpr SeqLarge SEQ_LARGE_21 = EnumParseTester_SeqLarge_SEQ_LARGE_21;
  static constexpr SeqLarge SEQ_LARGE_22 = EnumParseTester_SeqLarge_SEQ_LARGE_22;
  static constexpr SeqLarge SEQ_LARGE_23 = EnumParseTester_SeqLarge_SEQ_LARGE_23;
  static constexpr SeqLarge SEQ_LARGE_24 = EnumParseTester_SeqLarge_SEQ_LARGE_24;
  static constexpr SeqLarge SEQ_LARGE_25 = EnumParseTester_SeqLarge_SEQ_LARGE_25;
  static constexpr SeqLarge SEQ_LARGE_26 = EnumParseTester_SeqLarge_SEQ_LARGE_26;
  static constexpr SeqLarge SEQ_LARGE_27 = EnumParseTester_SeqLarge_SEQ_LARGE_27;
  static constexpr SeqLarge SEQ_LARGE_28 = EnumParseTester_SeqLarge_SEQ_LARGE_28;
  static constexpr SeqLarge SEQ_LARGE_29 = EnumParseTester_SeqLarge_SEQ_LARGE_29;
  static constexpr SeqLarge SEQ_LARGE_30 = EnumParseTester_SeqLarge_SEQ_LARGE_30;
  static constexpr SeqLarge SEQ_LARGE_31 = EnumParseTester_SeqLarge_SEQ_LARGE_31;
  static constexpr SeqLarge SEQ_LARGE_32 = EnumParseTester_SeqLarge_SEQ_LARGE_32;
  static constexpr SeqLarge SEQ_LARGE_33 = EnumParseTester_SeqLarge_SEQ_LARGE_33;
  static inline bool SeqLarge_IsValid(int value) {
    return EnumParseTester_SeqLarge_IsValid(value);
  }
  static constexpr SeqLarge SeqLarge_MIN = EnumParseTester_SeqLarge_SeqLarge_MIN;
  static constexpr SeqLarge SeqLarge_MAX = EnumParseTester_SeqLarge_SeqLarge_MAX;
  static constexpr int SeqLarge_ARRAYSIZE = EnumParseTester_SeqLarge_SeqLarge_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* SeqLarge_descriptor() {
    return EnumParseTester_SeqLarge_descriptor();
  }
  template <typename T>
  static inline const std::string& SeqLarge_Name(T value) {
    return EnumParseTester_SeqLarge_Name(value);
  }
  static inline bool SeqLarge_Parse(absl::string_view name, SeqLarge* value) {
    return EnumParseTester_SeqLarge_Parse(name, value);
  }
  using Arbitrary = EnumParseTester_Arbitrary;
  static constexpr Arbitrary ARBITRARY_DEFAULT = EnumParseTester_Arbitrary_ARBITRARY_DEFAULT;
  static constexpr Arbitrary ARBITRARY_1 = EnumParseTester_Arbitrary_ARBITRARY_1;
  static constexpr Arbitrary ARBITRARY_2 = EnumParseTester_Arbitrary_ARBITRARY_2;
  static constexpr Arbitrary ARBITRARY_3 = EnumParseTester_Arbitrary_ARBITRARY_3;
  static constexpr Arbitrary ARBITRARY_MIN = EnumParseTester_Arbitrary_ARBITRARY_MIN;
  static constexpr Arbitrary ARBITRARY_MAX = EnumParseTester_Arbitrary_ARBITRARY_MAX;
  static inline bool Arbitrary_IsValid(int value) {
    return EnumParseTester_Arbitrary_IsValid(value);
  }
  static constexpr Arbitrary Arbitrary_MIN = EnumParseTester_Arbitrary_Arbitrary_MIN;
  static constexpr Arbitrary Arbitrary_MAX = EnumParseTester_Arbitrary_Arbitrary_MAX;
  static inline const ::google::protobuf::EnumDescriptor* Arbitrary_descriptor() {
    return EnumParseTester_Arbitrary_descriptor();
  }
  template <typename T>
  static inline const std::string& Arbitrary_Name(T value) {
    return EnumParseTester_Arbitrary_Name(value);
  }
  static inline bool Arbitrary_Parse(absl::string_view name, Arbitrary* value) {
    return EnumParseTester_Arbitrary_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedSeqSmall0LowfieldFieldNumber = 2,
    kPackedSeqSmall0LowfieldFieldNumber = 3,
    kRepeatedSeqSmall1LowfieldFieldNumber = 5,
    kPackedSeqSmall1LowfieldFieldNumber = 6,
    kRepeatedSeqLargeLowfieldFieldNumber = 8,
    kPackedSeqLargeLowfieldFieldNumber = 9,
    kRepeatedArbitraryLowfieldFieldNumber = 11,
    kPackedArbitraryLowfieldFieldNumber = 12,
    kRepeatedSeqSmall0MidfieldFieldNumber = 1002,
    kPackedSeqSmall0MidfieldFieldNumber = 1003,
    kRepeatedSeqSmall1MidfieldFieldNumber = 1005,
    kPackedSeqSmall1MidfieldFieldNumber = 1006,
    kRepeatedSeqLargeMidfieldFieldNumber = 1008,
    kPackedSeqLargeMidfieldFieldNumber = 1009,
    kRepeatedArbitraryMidfieldFieldNumber = 1011,
    kPackedArbitraryMidfieldFieldNumber = 1012,
    kRepeatedSeqSmall0HifieldFieldNumber = 1000002,
    kPackedSeqSmall0HifieldFieldNumber = 1000003,
    kRepeatedSeqSmall1HifieldFieldNumber = 1000005,
    kPackedSeqSmall1HifieldFieldNumber = 1000006,
    kRepeatedSeqLargeHifieldFieldNumber = 1000008,
    kPackedSeqLargeHifieldFieldNumber = 1000009,
    kRepeatedArbitraryHifieldFieldNumber = 1000011,
    kPackedArbitraryHifieldFieldNumber = 1000012,
    kOptionalSeqSmall0LowfieldFieldNumber = 1,
    kOptionalSeqSmall1LowfieldFieldNumber = 4,
    kOtherFieldFieldNumber = 99,
    kOptionalSeqSmall0MidfieldFieldNumber = 1001,
    kOptionalSeqSmall1MidfieldFieldNumber = 1004,
    kOptionalSeqSmall0HifieldFieldNumber = 1000001,
    kOptionalSeqSmall1HifieldFieldNumber = 1000004,
    kOptionalSeqLargeLowfieldFieldNumber = 7,
    kOptionalArbitraryLowfieldFieldNumber = 10,
    kOptionalSeqLargeMidfieldFieldNumber = 1007,
    kOptionalArbitraryMidfieldFieldNumber = 1010,
    kOptionalSeqLargeHifieldFieldNumber = 1000007,
    kOptionalArbitraryHifieldFieldNumber = 1000010,
  };
  // repeated .edition_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_lowfield = 2;
  int repeated_seq_small_0_lowfield_size() const;
  private:
  int _internal_repeated_seq_small_0_lowfield_size() const;

  public:
  void clear_repeated_seq_small_0_lowfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall0 repeated_seq_small_0_lowfield(int index) const;
  void set_repeated_seq_small_0_lowfield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value);
  void add_repeated_seq_small_0_lowfield(::edition_unittest::EnumParseTester_SeqSmall0 value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_small_0_lowfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_small_0_lowfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_small_0_lowfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_small_0_lowfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_lowfield = 3 [features = {
  int packed_seq_small_0_lowfield_size() const;
  private:
  int _internal_packed_seq_small_0_lowfield_size() const;

  public:
  void clear_packed_seq_small_0_lowfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall0 packed_seq_small_0_lowfield(int index) const;
  void set_packed_seq_small_0_lowfield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value);
  void add_packed_seq_small_0_lowfield(::edition_unittest::EnumParseTester_SeqSmall0 value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_small_0_lowfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_small_0_lowfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_small_0_lowfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_small_0_lowfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_lowfield = 5;
  int repeated_seq_small_1_lowfield_size() const;
  private:
  int _internal_repeated_seq_small_1_lowfield_size() const;

  public:
  void clear_repeated_seq_small_1_lowfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall1 repeated_seq_small_1_lowfield(int index) const;
  void set_repeated_seq_small_1_lowfield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value);
  void add_repeated_seq_small_1_lowfield(::edition_unittest::EnumParseTester_SeqSmall1 value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_small_1_lowfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_small_1_lowfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_small_1_lowfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_small_1_lowfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_lowfield = 6 [features = {
  int packed_seq_small_1_lowfield_size() const;
  private:
  int _internal_packed_seq_small_1_lowfield_size() const;

  public:
  void clear_packed_seq_small_1_lowfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall1 packed_seq_small_1_lowfield(int index) const;
  void set_packed_seq_small_1_lowfield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value);
  void add_packed_seq_small_1_lowfield(::edition_unittest::EnumParseTester_SeqSmall1 value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_small_1_lowfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_small_1_lowfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_small_1_lowfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_small_1_lowfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqLarge repeated_seq_large_lowfield = 8;
  int repeated_seq_large_lowfield_size() const;
  private:
  int _internal_repeated_seq_large_lowfield_size() const;

  public:
  void clear_repeated_seq_large_lowfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqLarge repeated_seq_large_lowfield(int index) const;
  void set_repeated_seq_large_lowfield(int index, ::edition_unittest::EnumParseTester_SeqLarge value);
  void add_repeated_seq_large_lowfield(::edition_unittest::EnumParseTester_SeqLarge value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_large_lowfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_large_lowfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_large_lowfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_large_lowfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqLarge packed_seq_large_lowfield = 9 [features = {
  int packed_seq_large_lowfield_size() const;
  private:
  int _internal_packed_seq_large_lowfield_size() const;

  public:
  void clear_packed_seq_large_lowfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqLarge packed_seq_large_lowfield(int index) const;
  void set_packed_seq_large_lowfield(int index, ::edition_unittest::EnumParseTester_SeqLarge value);
  void add_packed_seq_large_lowfield(::edition_unittest::EnumParseTester_SeqLarge value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_large_lowfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_large_lowfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_large_lowfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_large_lowfield();

  public:
  // repeated .edition_unittest.EnumParseTester.Arbitrary repeated_arbitrary_lowfield = 11;
  int repeated_arbitrary_lowfield_size() const;
  private:
  int _internal_repeated_arbitrary_lowfield_size() const;

  public:
  void clear_repeated_arbitrary_lowfield() ;
  public:
  ::edition_unittest::EnumParseTester_Arbitrary repeated_arbitrary_lowfield(int index) const;
  void set_repeated_arbitrary_lowfield(int index, ::edition_unittest::EnumParseTester_Arbitrary value);
  void add_repeated_arbitrary_lowfield(::edition_unittest::EnumParseTester_Arbitrary value);
  const ::google::protobuf::RepeatedField<int>& repeated_arbitrary_lowfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_arbitrary_lowfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_arbitrary_lowfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_arbitrary_lowfield();

  public:
  // repeated .edition_unittest.EnumParseTester.Arbitrary packed_arbitrary_lowfield = 12 [features = {
  int packed_arbitrary_lowfield_size() const;
  private:
  int _internal_packed_arbitrary_lowfield_size() const;

  public:
  void clear_packed_arbitrary_lowfield() ;
  public:
  ::edition_unittest::EnumParseTester_Arbitrary packed_arbitrary_lowfield(int index) const;
  void set_packed_arbitrary_lowfield(int index, ::edition_unittest::EnumParseTester_Arbitrary value);
  void add_packed_arbitrary_lowfield(::edition_unittest::EnumParseTester_Arbitrary value);
  const ::google::protobuf::RepeatedField<int>& packed_arbitrary_lowfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_arbitrary_lowfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_arbitrary_lowfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_arbitrary_lowfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_midfield = 1002;
  int repeated_seq_small_0_midfield_size() const;
  private:
  int _internal_repeated_seq_small_0_midfield_size() const;

  public:
  void clear_repeated_seq_small_0_midfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall0 repeated_seq_small_0_midfield(int index) const;
  void set_repeated_seq_small_0_midfield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value);
  void add_repeated_seq_small_0_midfield(::edition_unittest::EnumParseTester_SeqSmall0 value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_small_0_midfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_small_0_midfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_small_0_midfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_small_0_midfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_midfield = 1003 [features = {
  int packed_seq_small_0_midfield_size() const;
  private:
  int _internal_packed_seq_small_0_midfield_size() const;

  public:
  void clear_packed_seq_small_0_midfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall0 packed_seq_small_0_midfield(int index) const;
  void set_packed_seq_small_0_midfield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value);
  void add_packed_seq_small_0_midfield(::edition_unittest::EnumParseTester_SeqSmall0 value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_small_0_midfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_small_0_midfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_small_0_midfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_small_0_midfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_midfield = 1005;
  int repeated_seq_small_1_midfield_size() const;
  private:
  int _internal_repeated_seq_small_1_midfield_size() const;

  public:
  void clear_repeated_seq_small_1_midfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall1 repeated_seq_small_1_midfield(int index) const;
  void set_repeated_seq_small_1_midfield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value);
  void add_repeated_seq_small_1_midfield(::edition_unittest::EnumParseTester_SeqSmall1 value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_small_1_midfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_small_1_midfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_small_1_midfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_small_1_midfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_midfield = 1006 [features = {
  int packed_seq_small_1_midfield_size() const;
  private:
  int _internal_packed_seq_small_1_midfield_size() const;

  public:
  void clear_packed_seq_small_1_midfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall1 packed_seq_small_1_midfield(int index) const;
  void set_packed_seq_small_1_midfield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value);
  void add_packed_seq_small_1_midfield(::edition_unittest::EnumParseTester_SeqSmall1 value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_small_1_midfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_small_1_midfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_small_1_midfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_small_1_midfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqLarge repeated_seq_large_midfield = 1008;
  int repeated_seq_large_midfield_size() const;
  private:
  int _internal_repeated_seq_large_midfield_size() const;

  public:
  void clear_repeated_seq_large_midfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqLarge repeated_seq_large_midfield(int index) const;
  void set_repeated_seq_large_midfield(int index, ::edition_unittest::EnumParseTester_SeqLarge value);
  void add_repeated_seq_large_midfield(::edition_unittest::EnumParseTester_SeqLarge value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_large_midfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_large_midfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_large_midfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_large_midfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqLarge packed_seq_large_midfield = 1009 [features = {
  int packed_seq_large_midfield_size() const;
  private:
  int _internal_packed_seq_large_midfield_size() const;

  public:
  void clear_packed_seq_large_midfield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqLarge packed_seq_large_midfield(int index) const;
  void set_packed_seq_large_midfield(int index, ::edition_unittest::EnumParseTester_SeqLarge value);
  void add_packed_seq_large_midfield(::edition_unittest::EnumParseTester_SeqLarge value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_large_midfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_large_midfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_large_midfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_large_midfield();

  public:
  // repeated .edition_unittest.EnumParseTester.Arbitrary repeated_arbitrary_midfield = 1011;
  int repeated_arbitrary_midfield_size() const;
  private:
  int _internal_repeated_arbitrary_midfield_size() const;

  public:
  void clear_repeated_arbitrary_midfield() ;
  public:
  ::edition_unittest::EnumParseTester_Arbitrary repeated_arbitrary_midfield(int index) const;
  void set_repeated_arbitrary_midfield(int index, ::edition_unittest::EnumParseTester_Arbitrary value);
  void add_repeated_arbitrary_midfield(::edition_unittest::EnumParseTester_Arbitrary value);
  const ::google::protobuf::RepeatedField<int>& repeated_arbitrary_midfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_arbitrary_midfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_arbitrary_midfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_arbitrary_midfield();

  public:
  // repeated .edition_unittest.EnumParseTester.Arbitrary packed_arbitrary_midfield = 1012 [features = {
  int packed_arbitrary_midfield_size() const;
  private:
  int _internal_packed_arbitrary_midfield_size() const;

  public:
  void clear_packed_arbitrary_midfield() ;
  public:
  ::edition_unittest::EnumParseTester_Arbitrary packed_arbitrary_midfield(int index) const;
  void set_packed_arbitrary_midfield(int index, ::edition_unittest::EnumParseTester_Arbitrary value);
  void add_packed_arbitrary_midfield(::edition_unittest::EnumParseTester_Arbitrary value);
  const ::google::protobuf::RepeatedField<int>& packed_arbitrary_midfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_arbitrary_midfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_arbitrary_midfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_arbitrary_midfield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_hifield = 1000002;
  int repeated_seq_small_0_hifield_size() const;
  private:
  int _internal_repeated_seq_small_0_hifield_size() const;

  public:
  void clear_repeated_seq_small_0_hifield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall0 repeated_seq_small_0_hifield(int index) const;
  void set_repeated_seq_small_0_hifield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value);
  void add_repeated_seq_small_0_hifield(::edition_unittest::EnumParseTester_SeqSmall0 value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_small_0_hifield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_small_0_hifield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_small_0_hifield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_small_0_hifield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_hifield = 1000003 [features = {
  int packed_seq_small_0_hifield_size() const;
  private:
  int _internal_packed_seq_small_0_hifield_size() const;

  public:
  void clear_packed_seq_small_0_hifield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall0 packed_seq_small_0_hifield(int index) const;
  void set_packed_seq_small_0_hifield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value);
  void add_packed_seq_small_0_hifield(::edition_unittest::EnumParseTester_SeqSmall0 value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_small_0_hifield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_small_0_hifield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_small_0_hifield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_small_0_hifield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_hifield = 1000005;
  int repeated_seq_small_1_hifield_size() const;
  private:
  int _internal_repeated_seq_small_1_hifield_size() const;

  public:
  void clear_repeated_seq_small_1_hifield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall1 repeated_seq_small_1_hifield(int index) const;
  void set_repeated_seq_small_1_hifield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value);
  void add_repeated_seq_small_1_hifield(::edition_unittest::EnumParseTester_SeqSmall1 value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_small_1_hifield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_small_1_hifield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_small_1_hifield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_small_1_hifield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_hifield = 1000006 [features = {
  int packed_seq_small_1_hifield_size() const;
  private:
  int _internal_packed_seq_small_1_hifield_size() const;

  public:
  void clear_packed_seq_small_1_hifield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqSmall1 packed_seq_small_1_hifield(int index) const;
  void set_packed_seq_small_1_hifield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value);
  void add_packed_seq_small_1_hifield(::edition_unittest::EnumParseTester_SeqSmall1 value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_small_1_hifield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_small_1_hifield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_small_1_hifield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_small_1_hifield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqLarge repeated_seq_large_hifield = 1000008;
  int repeated_seq_large_hifield_size() const;
  private:
  int _internal_repeated_seq_large_hifield_size() const;

  public:
  void clear_repeated_seq_large_hifield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqLarge repeated_seq_large_hifield(int index) const;
  void set_repeated_seq_large_hifield(int index, ::edition_unittest::EnumParseTester_SeqLarge value);
  void add_repeated_seq_large_hifield(::edition_unittest::EnumParseTester_SeqLarge value);
  const ::google::protobuf::RepeatedField<int>& repeated_seq_large_hifield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_seq_large_hifield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_seq_large_hifield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_seq_large_hifield();

  public:
  // repeated .edition_unittest.EnumParseTester.SeqLarge packed_seq_large_hifield = 1000009 [features = {
  int packed_seq_large_hifield_size() const;
  private:
  int _internal_packed_seq_large_hifield_size() const;

  public:
  void clear_packed_seq_large_hifield() ;
  public:
  ::edition_unittest::EnumParseTester_SeqLarge packed_seq_large_hifield(int index) const;
  void set_packed_seq_large_hifield(int index, ::edition_unittest::EnumParseTester_SeqLarge value);
  void add_packed_seq_large_hifield(::edition_unittest::EnumParseTester_SeqLarge value);
  const ::google::protobuf::RepeatedField<int>& packed_seq_large_hifield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_seq_large_hifield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_seq_large_hifield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_seq_large_hifield();

  public:
  // repeated .edition_unittest.EnumParseTester.Arbitrary repeated_arbitrary_hifield = 1000011;
  int repeated_arbitrary_hifield_size() const;
  private:
  int _internal_repeated_arbitrary_hifield_size() const;

  public:
  void clear_repeated_arbitrary_hifield() ;
  public:
  ::edition_unittest::EnumParseTester_Arbitrary repeated_arbitrary_hifield(int index) const;
  void set_repeated_arbitrary_hifield(int index, ::edition_unittest::EnumParseTester_Arbitrary value);
  void add_repeated_arbitrary_hifield(::edition_unittest::EnumParseTester_Arbitrary value);
  const ::google::protobuf::RepeatedField<int>& repeated_arbitrary_hifield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_arbitrary_hifield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_arbitrary_hifield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_arbitrary_hifield();

  public:
  // repeated .edition_unittest.EnumParseTester.Arbitrary packed_arbitrary_hifield = 1000012 [features = {
  int packed_arbitrary_hifield_size() const;
  private:
  int _internal_packed_arbitrary_hifield_size() const;

  public:
  void clear_packed_arbitrary_hifield() ;
  public:
  ::edition_unittest::EnumParseTester_Arbitrary packed_arbitrary_hifield(int index) const;
  void set_packed_arbitrary_hifield(int index, ::edition_unittest::EnumParseTester_Arbitrary value);
  void add_packed_arbitrary_hifield(::edition_unittest::EnumParseTester_Arbitrary value);
  const ::google::protobuf::RepeatedField<int>& packed_arbitrary_hifield() const;
  ::google::protobuf::RepeatedField<int>* mutable_packed_arbitrary_hifield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_packed_arbitrary_hifield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_packed_arbitrary_hifield();

  public:
  // .edition_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_lowfield = 1;
  bool has_optional_seq_small_0_lowfield() const;
  void clear_optional_seq_small_0_lowfield() ;
  ::edition_unittest::EnumParseTester_SeqSmall0 optional_seq_small_0_lowfield() const;
  void set_optional_seq_small_0_lowfield(::edition_unittest::EnumParseTester_SeqSmall0 value);

  private:
  ::edition_unittest::EnumParseTester_SeqSmall0 _internal_optional_seq_small_0_lowfield() const;
  void _internal_set_optional_seq_small_0_lowfield(::edition_unittest::EnumParseTester_SeqSmall0 value);

  public:
  // .edition_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_lowfield = 4;
  bool has_optional_seq_small_1_lowfield() const;
  void clear_optional_seq_small_1_lowfield() ;
  ::edition_unittest::EnumParseTester_SeqSmall1 optional_seq_small_1_lowfield() const;
  void set_optional_seq_small_1_lowfield(::edition_unittest::EnumParseTester_SeqSmall1 value);

  private:
  ::edition_unittest::EnumParseTester_SeqSmall1 _internal_optional_seq_small_1_lowfield() const;
  void _internal_set_optional_seq_small_1_lowfield(::edition_unittest::EnumParseTester_SeqSmall1 value);

  public:
  // int32 other_field = 99;
  bool has_other_field() const;
  void clear_other_field() ;
  ::int32_t other_field() const;
  void set_other_field(::int32_t value);

  private:
  ::int32_t _internal_other_field() const;
  void _internal_set_other_field(::int32_t value);

  public:
  // .edition_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_midfield = 1001;
  bool has_optional_seq_small_0_midfield() const;
  void clear_optional_seq_small_0_midfield() ;
  ::edition_unittest::EnumParseTester_SeqSmall0 optional_seq_small_0_midfield() const;
  void set_optional_seq_small_0_midfield(::edition_unittest::EnumParseTester_SeqSmall0 value);

  private:
  ::edition_unittest::EnumParseTester_SeqSmall0 _internal_optional_seq_small_0_midfield() const;
  void _internal_set_optional_seq_small_0_midfield(::edition_unittest::EnumParseTester_SeqSmall0 value);

  public:
  // .edition_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_midfield = 1004;
  bool has_optional_seq_small_1_midfield() const;
  void clear_optional_seq_small_1_midfield() ;
  ::edition_unittest::EnumParseTester_SeqSmall1 optional_seq_small_1_midfield() const;
  void set_optional_seq_small_1_midfield(::edition_unittest::EnumParseTester_SeqSmall1 value);

  private:
  ::edition_unittest::EnumParseTester_SeqSmall1 _internal_optional_seq_small_1_midfield() const;
  void _internal_set_optional_seq_small_1_midfield(::edition_unittest::EnumParseTester_SeqSmall1 value);

  public:
  // .edition_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_hifield = 1000001;
  bool has_optional_seq_small_0_hifield() const;
  void clear_optional_seq_small_0_hifield() ;
  ::edition_unittest::EnumParseTester_SeqSmall0 optional_seq_small_0_hifield() const;
  void set_optional_seq_small_0_hifield(::edition_unittest::EnumParseTester_SeqSmall0 value);

  private:
  ::edition_unittest::EnumParseTester_SeqSmall0 _internal_optional_seq_small_0_hifield() const;
  void _internal_set_optional_seq_small_0_hifield(::edition_unittest::EnumParseTester_SeqSmall0 value);

  public:
  // .edition_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_hifield = 1000004;
  bool has_optional_seq_small_1_hifield() const;
  void clear_optional_seq_small_1_hifield() ;
  ::edition_unittest::EnumParseTester_SeqSmall1 optional_seq_small_1_hifield() const;
  void set_optional_seq_small_1_hifield(::edition_unittest::EnumParseTester_SeqSmall1 value);

  private:
  ::edition_unittest::EnumParseTester_SeqSmall1 _internal_optional_seq_small_1_hifield() const;
  void _internal_set_optional_seq_small_1_hifield(::edition_unittest::EnumParseTester_SeqSmall1 value);

  public:
  // .edition_unittest.EnumParseTester.SeqLarge optional_seq_large_lowfield = 7;
  bool has_optional_seq_large_lowfield() const;
  void clear_optional_seq_large_lowfield() ;
  ::edition_unittest::EnumParseTester_SeqLarge optional_seq_large_lowfield() const;
  void set_optional_seq_large_lowfield(::edition_unittest::EnumParseTester_SeqLarge value);

  private:
  ::edition_unittest::EnumParseTester_SeqLarge _internal_optional_seq_large_lowfield() const;
  void _internal_set_optional_seq_large_lowfield(::edition_unittest::EnumParseTester_SeqLarge value);

  public:
  // .edition_unittest.EnumParseTester.Arbitrary optional_arbitrary_lowfield = 10;
  bool has_optional_arbitrary_lowfield() const;
  void clear_optional_arbitrary_lowfield() ;
  ::edition_unittest::EnumParseTester_Arbitrary optional_arbitrary_lowfield() const;
  void set_optional_arbitrary_lowfield(::edition_unittest::EnumParseTester_Arbitrary value);

  private:
  ::edition_unittest::EnumParseTester_Arbitrary _internal_optional_arbitrary_lowfield() const;
  void _internal_set_optional_arbitrary_lowfield(::edition_unittest::EnumParseTester_Arbitrary value);

  public:
  // .edition_unittest.EnumParseTester.SeqLarge optional_seq_large_midfield = 1007;
  bool has_optional_seq_large_midfield() const;
  void clear_optional_seq_large_midfield() ;
  ::edition_unittest::EnumParseTester_SeqLarge optional_seq_large_midfield() const;
  void set_optional_seq_large_midfield(::edition_unittest::EnumParseTester_SeqLarge value);

  private:
  ::edition_unittest::EnumParseTester_SeqLarge _internal_optional_seq_large_midfield() const;
  void _internal_set_optional_seq_large_midfield(::edition_unittest::EnumParseTester_SeqLarge value);

  public:
  // .edition_unittest.EnumParseTester.Arbitrary optional_arbitrary_midfield = 1010;
  bool has_optional_arbitrary_midfield() const;
  void clear_optional_arbitrary_midfield() ;
  ::edition_unittest::EnumParseTester_Arbitrary optional_arbitrary_midfield() const;
  void set_optional_arbitrary_midfield(::edition_unittest::EnumParseTester_Arbitrary value);

  private:
  ::edition_unittest::EnumParseTester_Arbitrary _internal_optional_arbitrary_midfield() const;
  void _internal_set_optional_arbitrary_midfield(::edition_unittest::EnumParseTester_Arbitrary value);

  public:
  // .edition_unittest.EnumParseTester.SeqLarge optional_seq_large_hifield = 1000007;
  bool has_optional_seq_large_hifield() const;
  void clear_optional_seq_large_hifield() ;
  ::edition_unittest::EnumParseTester_SeqLarge optional_seq_large_hifield() const;
  void set_optional_seq_large_hifield(::edition_unittest::EnumParseTester_SeqLarge value);

  private:
  ::edition_unittest::EnumParseTester_SeqLarge _internal_optional_seq_large_hifield() const;
  void _internal_set_optional_seq_large_hifield(::edition_unittest::EnumParseTester_SeqLarge value);

  public:
  // .edition_unittest.EnumParseTester.Arbitrary optional_arbitrary_hifield = 1000010;
  bool has_optional_arbitrary_hifield() const;
  void clear_optional_arbitrary_hifield() ;
  ::edition_unittest::EnumParseTester_Arbitrary optional_arbitrary_hifield() const;
  void set_optional_arbitrary_hifield(::edition_unittest::EnumParseTester_Arbitrary value);

  private:
  ::edition_unittest::EnumParseTester_Arbitrary _internal_optional_arbitrary_hifield() const;
  void _internal_set_optional_arbitrary_hifield(::edition_unittest::EnumParseTester_Arbitrary value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<EnumParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  static const int kOptionalArbitraryExtFieldNumber = 2000000;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::EnumParseTester, ::google::protobuf::internal::EnumTypeTraits< ::edition_unittest::EnumParseTester_Arbitrary, ::edition_unittest::EnumParseTester_Arbitrary_IsValid>, 14,
      false>
      optional_arbitrary_ext;
  static const int kRepeatedArbitraryExtFieldNumber = 2000001;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::EnumParseTester, ::google::protobuf::internal::RepeatedEnumTypeTraits< ::edition_unittest::EnumParseTester_Arbitrary, ::edition_unittest::EnumParseTester_Arbitrary_IsValid>, 14,
      true>
      repeated_arbitrary_ext;
  static const int kPackedArbitraryExtFieldNumber = 2000002;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::EnumParseTester, ::google::protobuf::internal::RepeatedEnumTypeTraits< ::edition_unittest::EnumParseTester_Arbitrary, ::edition_unittest::EnumParseTester_Arbitrary_IsValid>, 14,
      true>
      packed_arbitrary_ext;
  // @@protoc_insertion_point(class_scope:edition_unittest.EnumParseTester)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 37, 36,
      0, 17>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EnumParseTester_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnumParseTester& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_small_0_lowfield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_small_0_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_small_0_lowfield_;
    ::google::protobuf::internal::CachedSize _packed_seq_small_0_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_small_1_lowfield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_small_1_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_small_1_lowfield_;
    ::google::protobuf::internal::CachedSize _packed_seq_small_1_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_large_lowfield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_large_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_large_lowfield_;
    ::google::protobuf::internal::CachedSize _packed_seq_large_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_arbitrary_lowfield_;
    ::google::protobuf::internal::CachedSize _repeated_arbitrary_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_arbitrary_lowfield_;
    ::google::protobuf::internal::CachedSize _packed_arbitrary_lowfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_small_0_midfield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_small_0_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_small_0_midfield_;
    ::google::protobuf::internal::CachedSize _packed_seq_small_0_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_small_1_midfield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_small_1_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_small_1_midfield_;
    ::google::protobuf::internal::CachedSize _packed_seq_small_1_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_large_midfield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_large_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_large_midfield_;
    ::google::protobuf::internal::CachedSize _packed_seq_large_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_arbitrary_midfield_;
    ::google::protobuf::internal::CachedSize _repeated_arbitrary_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_arbitrary_midfield_;
    ::google::protobuf::internal::CachedSize _packed_arbitrary_midfield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_small_0_hifield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_small_0_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_small_0_hifield_;
    ::google::protobuf::internal::CachedSize _packed_seq_small_0_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_small_1_hifield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_small_1_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_small_1_hifield_;
    ::google::protobuf::internal::CachedSize _packed_seq_small_1_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_seq_large_hifield_;
    ::google::protobuf::internal::CachedSize _repeated_seq_large_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_seq_large_hifield_;
    ::google::protobuf::internal::CachedSize _packed_seq_large_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_arbitrary_hifield_;
    ::google::protobuf::internal::CachedSize _repeated_arbitrary_hifield_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> packed_arbitrary_hifield_;
    ::google::protobuf::internal::CachedSize _packed_arbitrary_hifield_cached_byte_size_;
    int optional_seq_small_0_lowfield_;
    int optional_seq_small_1_lowfield_;
    ::int32_t other_field_;
    int optional_seq_small_0_midfield_;
    int optional_seq_small_1_midfield_;
    int optional_seq_small_0_hifield_;
    int optional_seq_small_1_hifield_;
    int optional_seq_large_lowfield_;
    int optional_arbitrary_lowfield_;
    int optional_seq_large_midfield_;
    int optional_arbitrary_midfield_;
    int optional_seq_large_hifield_;
    int optional_arbitrary_hifield_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class BoolParseTester final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.BoolParseTester) */ {
 public:
  inline BoolParseTester() : BoolParseTester(nullptr) {}
  ~BoolParseTester() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BoolParseTester(
      ::google::protobuf::internal::ConstantInitialized);

  inline BoolParseTester(const BoolParseTester& from) : BoolParseTester(nullptr, from) {}
  inline BoolParseTester(BoolParseTester&& from) noexcept
      : BoolParseTester(nullptr, std::move(from)) {}
  inline BoolParseTester& operator=(const BoolParseTester& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoolParseTester& operator=(BoolParseTester&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoolParseTester& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoolParseTester* internal_default_instance() {
    return reinterpret_cast<const BoolParseTester*>(
        &_BoolParseTester_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 133;
  friend void swap(BoolParseTester& a, BoolParseTester& b) { a.Swap(&b); }
  inline void Swap(BoolParseTester* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoolParseTester* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoolParseTester* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BoolParseTester>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BoolParseTester& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BoolParseTester& from) { BoolParseTester::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BoolParseTester* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.BoolParseTester"; }

 protected:
  explicit BoolParseTester(::google::protobuf::Arena* arena);
  BoolParseTester(::google::protobuf::Arena* arena, const BoolParseTester& from);
  BoolParseTester(::google::protobuf::Arena* arena, BoolParseTester&& from) noexcept
      : BoolParseTester(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedBoolLowfieldFieldNumber = 2,
    kPackedBoolLowfieldFieldNumber = 3,
    kRepeatedBoolMidfieldFieldNumber = 1002,
    kPackedBoolMidfieldFieldNumber = 1003,
    kRepeatedBoolHifieldFieldNumber = 1000002,
    kPackedBoolHifieldFieldNumber = 1000003,
    kOtherFieldFieldNumber = 99,
    kOptionalBoolLowfieldFieldNumber = 1,
    kOptionalBoolMidfieldFieldNumber = 1001,
    kOptionalBoolHifieldFieldNumber = 1000001,
  };
  // repeated bool repeated_bool_lowfield = 2;
  int repeated_bool_lowfield_size() const;
  private:
  int _internal_repeated_bool_lowfield_size() const;

  public:
  void clear_repeated_bool_lowfield() ;
  bool repeated_bool_lowfield(int index) const;
  void set_repeated_bool_lowfield(int index, bool value);
  void add_repeated_bool_lowfield(bool value);
  const ::google::protobuf::RepeatedField<bool>& repeated_bool_lowfield() const;
  ::google::protobuf::RepeatedField<bool>* mutable_repeated_bool_lowfield();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_repeated_bool_lowfield() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_repeated_bool_lowfield();

  public:
  // repeated bool packed_bool_lowfield = 3 [features = {
  int packed_bool_lowfield_size() const;
  private:
  int _internal_packed_bool_lowfield_size() const;

  public:
  void clear_packed_bool_lowfield() ;
  bool packed_bool_lowfield(int index) const;
  void set_packed_bool_lowfield(int index, bool value);
  void add_packed_bool_lowfield(bool value);
  const ::google::protobuf::RepeatedField<bool>& packed_bool_lowfield() const;
  ::google::protobuf::RepeatedField<bool>* mutable_packed_bool_lowfield();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_packed_bool_lowfield() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_packed_bool_lowfield();

  public:
  // repeated bool repeated_bool_midfield = 1002;
  int repeated_bool_midfield_size() const;
  private:
  int _internal_repeated_bool_midfield_size() const;

  public:
  void clear_repeated_bool_midfield() ;
  bool repeated_bool_midfield(int index) const;
  void set_repeated_bool_midfield(int index, bool value);
  void add_repeated_bool_midfield(bool value);
  const ::google::protobuf::RepeatedField<bool>& repeated_bool_midfield() const;
  ::google::protobuf::RepeatedField<bool>* mutable_repeated_bool_midfield();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_repeated_bool_midfield() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_repeated_bool_midfield();

  public:
  // repeated bool packed_bool_midfield = 1003 [features = {
  int packed_bool_midfield_size() const;
  private:
  int _internal_packed_bool_midfield_size() const;

  public:
  void clear_packed_bool_midfield() ;
  bool packed_bool_midfield(int index) const;
  void set_packed_bool_midfield(int index, bool value);
  void add_packed_bool_midfield(bool value);
  const ::google::protobuf::RepeatedField<bool>& packed_bool_midfield() const;
  ::google::protobuf::RepeatedField<bool>* mutable_packed_bool_midfield();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_packed_bool_midfield() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_packed_bool_midfield();

  public:
  // repeated bool repeated_bool_hifield = 1000002;
  int repeated_bool_hifield_size() const;
  private:
  int _internal_repeated_bool_hifield_size() const;

  public:
  void clear_repeated_bool_hifield() ;
  bool repeated_bool_hifield(int index) const;
  void set_repeated_bool_hifield(int index, bool value);
  void add_repeated_bool_hifield(bool value);
  const ::google::protobuf::RepeatedField<bool>& repeated_bool_hifield() const;
  ::google::protobuf::RepeatedField<bool>* mutable_repeated_bool_hifield();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_repeated_bool_hifield() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_repeated_bool_hifield();

  public:
  // repeated bool packed_bool_hifield = 1000003 [features = {
  int packed_bool_hifield_size() const;
  private:
  int _internal_packed_bool_hifield_size() const;

  public:
  void clear_packed_bool_hifield() ;
  bool packed_bool_hifield(int index) const;
  void set_packed_bool_hifield(int index, bool value);
  void add_packed_bool_hifield(bool value);
  const ::google::protobuf::RepeatedField<bool>& packed_bool_hifield() const;
  ::google::protobuf::RepeatedField<bool>* mutable_packed_bool_hifield();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_packed_bool_hifield() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_packed_bool_hifield();

  public:
  // int32 other_field = 99;
  bool has_other_field() const;
  void clear_other_field() ;
  ::int32_t other_field() const;
  void set_other_field(::int32_t value);

  private:
  ::int32_t _internal_other_field() const;
  void _internal_set_other_field(::int32_t value);

  public:
  // bool optional_bool_lowfield = 1;
  bool has_optional_bool_lowfield() const;
  void clear_optional_bool_lowfield() ;
  bool optional_bool_lowfield() const;
  void set_optional_bool_lowfield(bool value);

  private:
  bool _internal_optional_bool_lowfield() const;
  void _internal_set_optional_bool_lowfield(bool value);

  public:
  // bool optional_bool_midfield = 1001;
  bool has_optional_bool_midfield() const;
  void clear_optional_bool_midfield() ;
  bool optional_bool_midfield() const;
  void set_optional_bool_midfield(bool value);

  private:
  bool _internal_optional_bool_midfield() const;
  void _internal_set_optional_bool_midfield(bool value);

  public:
  // bool optional_bool_hifield = 1000001;
  bool has_optional_bool_hifield() const;
  void clear_optional_bool_hifield() ;
  bool optional_bool_hifield() const;
  void set_optional_bool_hifield(bool value);

  private:
  bool _internal_optional_bool_hifield() const;
  void _internal_set_optional_bool_hifield(bool value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<BoolParseTester, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  static const int kOptionalBoolExtFieldNumber = 2000000;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::BoolParseTester, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8,
      false>
      optional_bool_ext;
  static const int kRepeatedBoolExtFieldNumber = 2000001;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::BoolParseTester, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8,
      true>
      repeated_bool_ext;
  static const int kPackedBoolExtFieldNumber = 2000002;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::BoolParseTester, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8,
      true>
      packed_bool_ext;
  // @@protoc_insertion_point(class_scope:edition_unittest.BoolParseTester)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 17>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BoolParseTester_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BoolParseTester& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<bool> repeated_bool_lowfield_;
    ::google::protobuf::RepeatedField<bool> packed_bool_lowfield_;
    ::google::protobuf::RepeatedField<bool> repeated_bool_midfield_;
    ::google::protobuf::RepeatedField<bool> packed_bool_midfield_;
    ::google::protobuf::RepeatedField<bool> repeated_bool_hifield_;
    ::google::protobuf::RepeatedField<bool> packed_bool_hifield_;
    ::int32_t other_field_;
    bool optional_bool_lowfield_;
    bool optional_bool_midfield_;
    bool optional_bool_hifield_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class BoolMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.BoolMessage) */ {
 public:
  inline BoolMessage() : BoolMessage(nullptr) {}
  ~BoolMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BoolMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline BoolMessage(const BoolMessage& from) : BoolMessage(nullptr, from) {}
  inline BoolMessage(BoolMessage&& from) noexcept
      : BoolMessage(nullptr, std::move(from)) {}
  inline BoolMessage& operator=(const BoolMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoolMessage& operator=(BoolMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoolMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoolMessage* internal_default_instance() {
    return reinterpret_cast<const BoolMessage*>(
        &_BoolMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 76;
  friend void swap(BoolMessage& a, BoolMessage& b) { a.Swap(&b); }
  inline void Swap(BoolMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoolMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoolMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BoolMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BoolMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BoolMessage& from) { BoolMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BoolMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.BoolMessage"; }

 protected:
  explicit BoolMessage(::google::protobuf::Arena* arena);
  BoolMessage(::google::protobuf::Arena* arena, const BoolMessage& from);
  BoolMessage(::google::protobuf::Arena* arena, BoolMessage&& from) noexcept
      : BoolMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bool data = 1;
  bool has_data() const;
  void clear_data() ;
  bool data() const;
  void set_data(bool value);

  private:
  bool _internal_data() const;
  void _internal_set_data(bool value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.BoolMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BoolMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BoolMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class BarResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.BarResponse) */ {
 public:
  inline BarResponse() : BarResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BarResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BarResponse(const BarResponse& from) : BarResponse(nullptr, from) {}
  inline BarResponse(BarResponse&& from) noexcept
      : BarResponse(nullptr, std::move(from)) {}
  inline BarResponse& operator=(const BarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BarResponse& operator=(BarResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BarResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BarResponse* internal_default_instance() {
    return reinterpret_cast<const BarResponse*>(
        &_BarResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 108;
  friend void swap(BarResponse& a, BarResponse& b) { a.Swap(&b); }
  inline void Swap(BarResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BarResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BarResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<BarResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const BarResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const BarResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.BarResponse"; }

 protected:
  explicit BarResponse(::google::protobuf::Arena* arena);
  BarResponse(::google::protobuf::Arena* arena, const BarResponse& from);
  BarResponse(::google::protobuf::Arena* arena, BarResponse&& from) noexcept
      : BarResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.BarResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BarResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BarResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class BarRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:edition_unittest.BarRequest) */ {
 public:
  inline BarRequest() : BarRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BarRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BarRequest(const BarRequest& from) : BarRequest(nullptr, from) {}
  inline BarRequest(BarRequest&& from) noexcept
      : BarRequest(nullptr, std::move(from)) {}
  inline BarRequest& operator=(const BarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BarRequest& operator=(BarRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BarRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BarRequest* internal_default_instance() {
    return reinterpret_cast<const BarRequest*>(
        &_BarRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 107;
  friend void swap(BarRequest& a, BarRequest& b) { a.Swap(&b); }
  inline void Swap(BarRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BarRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BarRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<BarRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const BarRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const BarRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.BarRequest"; }

 protected:
  explicit BarRequest(::google::protobuf::Arena* arena);
  BarRequest(::google::protobuf::Arena* arena, const BarRequest& from);
  BarRequest(::google::protobuf::Arena* arena, BarRequest&& from) noexcept
      : BarRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:edition_unittest.BarRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BarRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BarRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class BadFieldNames final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.BadFieldNames) */ {
 public:
  inline BadFieldNames() : BadFieldNames(nullptr) {}
  ~BadFieldNames() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BadFieldNames(
      ::google::protobuf::internal::ConstantInitialized);

  inline BadFieldNames(const BadFieldNames& from) : BadFieldNames(nullptr, from) {}
  inline BadFieldNames(BadFieldNames&& from) noexcept
      : BadFieldNames(nullptr, std::move(from)) {}
  inline BadFieldNames& operator=(const BadFieldNames& from) {
    CopyFrom(from);
    return *this;
  }
  inline BadFieldNames& operator=(BadFieldNames&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BadFieldNames& default_instance() {
    return *internal_default_instance();
  }
  static inline const BadFieldNames* internal_default_instance() {
    return reinterpret_cast<const BadFieldNames*>(
        &_BadFieldNames_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 138;
  friend void swap(BadFieldNames& a, BadFieldNames& b) { a.Swap(&b); }
  inline void Swap(BadFieldNames* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BadFieldNames* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BadFieldNames* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BadFieldNames>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BadFieldNames& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BadFieldNames& from) { BadFieldNames::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BadFieldNames* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.BadFieldNames"; }

 protected:
  explicit BadFieldNames(::google::protobuf::Arena* arena);
  BadFieldNames(::google::protobuf::Arena* arena, const BadFieldNames& from);
  BadFieldNames(::google::protobuf::Arena* arena, BadFieldNames&& from) noexcept
      : BadFieldNames(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalInt32FieldNumber = 1,
    kForFieldNumber = 2,
  };
  // int32 OptionalInt32 = 1;
  bool has_optionalint32() const;
  void clear_optionalint32() ;
  ::int32_t optionalint32() const;
  void set_optionalint32(::int32_t value);

  private:
  ::int32_t _internal_optionalint32() const;
  void _internal_set_optionalint32(::int32_t value);

  public:
  // int32 for = 2;
  bool has_for_() const;
  void clear_for_() ;
  ::int32_t for_() const;
  void set_for_(::int32_t value);

  private:
  ::int32_t _internal_for_() const;
  void _internal_set_for_(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.BadFieldNames)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BadFieldNames_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BadFieldNames& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t optionalint32_;
    ::int32_t for__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyBigFieldNumberUint32 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyBigFieldNumberUint32) */ {
 public:
  inline TestVerifyBigFieldNumberUint32() : TestVerifyBigFieldNumberUint32(nullptr) {}
  ~TestVerifyBigFieldNumberUint32() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyBigFieldNumberUint32(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyBigFieldNumberUint32(const TestVerifyBigFieldNumberUint32& from) : TestVerifyBigFieldNumberUint32(nullptr, from) {}
  inline TestVerifyBigFieldNumberUint32(TestVerifyBigFieldNumberUint32&& from) noexcept
      : TestVerifyBigFieldNumberUint32(nullptr, std::move(from)) {}
  inline TestVerifyBigFieldNumberUint32& operator=(const TestVerifyBigFieldNumberUint32& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyBigFieldNumberUint32& operator=(TestVerifyBigFieldNumberUint32&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyBigFieldNumberUint32& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyBigFieldNumberUint32* internal_default_instance() {
    return reinterpret_cast<const TestVerifyBigFieldNumberUint32*>(
        &_TestVerifyBigFieldNumberUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 131;
  friend void swap(TestVerifyBigFieldNumberUint32& a, TestVerifyBigFieldNumberUint32& b) { a.Swap(&b); }
  inline void Swap(TestVerifyBigFieldNumberUint32* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyBigFieldNumberUint32* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyBigFieldNumberUint32* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyBigFieldNumberUint32>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyBigFieldNumberUint32& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyBigFieldNumberUint32& from) { TestVerifyBigFieldNumberUint32::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyBigFieldNumberUint32* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyBigFieldNumberUint32"; }

 protected:
  explicit TestVerifyBigFieldNumberUint32(::google::protobuf::Arena* arena);
  TestVerifyBigFieldNumberUint32(::google::protobuf::Arena* arena, const TestVerifyBigFieldNumberUint32& from);
  TestVerifyBigFieldNumberUint32(::google::protobuf::Arena* arena, TestVerifyBigFieldNumberUint32&& from) noexcept
      : TestVerifyBigFieldNumberUint32(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Nested = TestVerifyBigFieldNumberUint32_Nested;

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalNestedFieldNumber = 1,
  };
  // .edition_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
  bool has_optional_nested() const;
  void clear_optional_nested() ;
  const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& optional_nested() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* release_optional_nested();
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* mutable_optional_nested();
  void set_allocated_optional_nested(::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* value);
  void unsafe_arena_set_allocated_optional_nested(::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* value);
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* unsafe_arena_release_optional_nested();

  private:
  const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& _internal_optional_nested() const;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* _internal_mutable_optional_nested();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyBigFieldNumberUint32)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyBigFieldNumberUint32_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyBigFieldNumberUint32& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* optional_nested_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequiredOneof final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequiredOneof) */ {
 public:
  inline TestRequiredOneof() : TestRequiredOneof(nullptr) {}
  ~TestRequiredOneof() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredOneof(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredOneof(const TestRequiredOneof& from) : TestRequiredOneof(nullptr, from) {}
  inline TestRequiredOneof(TestRequiredOneof&& from) noexcept
      : TestRequiredOneof(nullptr, std::move(from)) {}
  inline TestRequiredOneof& operator=(const TestRequiredOneof& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredOneof& operator=(TestRequiredOneof&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredOneof& default_instance() {
    return *internal_default_instance();
  }
  enum FooCase {
    kFooInt = 1,
    kFooString = 2,
    kFooMessage = 3,
    kFooLazyMessage = 4,
    FOO_NOT_SET = 0,
  };
  static inline const TestRequiredOneof* internal_default_instance() {
    return reinterpret_cast<const TestRequiredOneof*>(
        &_TestRequiredOneof_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 85;
  friend void swap(TestRequiredOneof& a, TestRequiredOneof& b) { a.Swap(&b); }
  inline void Swap(TestRequiredOneof* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredOneof* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredOneof* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequiredOneof>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredOneof& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequiredOneof& from) { TestRequiredOneof::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredOneof* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequiredOneof"; }

 protected:
  explicit TestRequiredOneof(::google::protobuf::Arena* arena);
  TestRequiredOneof(::google::protobuf::Arena* arena, const TestRequiredOneof& from);
  TestRequiredOneof(::google::protobuf::Arena* arena, TestRequiredOneof&& from) noexcept
      : TestRequiredOneof(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedMessage = TestRequiredOneof_NestedMessage;

  // accessors -------------------------------------------------------
  enum : int {
    kFooIntFieldNumber = 1,
    kFooStringFieldNumber = 2,
    kFooMessageFieldNumber = 3,
    kFooLazyMessageFieldNumber = 4,
  };
  // int32 foo_int = 1;
  bool has_foo_int() const;
  void clear_foo_int() ;
  ::int32_t foo_int() const;
  void set_foo_int(::int32_t value);

  private:
  ::int32_t _internal_foo_int() const;
  void _internal_set_foo_int(::int32_t value);

  public:
  // string foo_string = 2;
  bool has_foo_string() const;
  void clear_foo_string() ;
  absl::string_view foo_string() const;
  template <typename Arg_ = std::string&&>
  void set_foo_string(Arg_&& arg);

  private:
  const std::string& _internal_foo_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_foo_string(
      absl::string_view value);

  public:
  // .edition_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
  bool has_foo_message() const;
  private:
  bool _internal_has_foo_message() const;

  public:
  void clear_foo_message() ;
  const ::edition_unittest::TestRequiredOneof_NestedMessage& foo_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequiredOneof_NestedMessage* release_foo_message();
  ::edition_unittest::TestRequiredOneof_NestedMessage* mutable_foo_message();
  void set_allocated_foo_message(::edition_unittest::TestRequiredOneof_NestedMessage* value);
  void unsafe_arena_set_allocated_foo_message(::edition_unittest::TestRequiredOneof_NestedMessage* value);
  ::edition_unittest::TestRequiredOneof_NestedMessage* unsafe_arena_release_foo_message();

  private:
  const ::edition_unittest::TestRequiredOneof_NestedMessage& _internal_foo_message() const;
  ::edition_unittest::TestRequiredOneof_NestedMessage* _internal_mutable_foo_message();

  public:
  // .edition_unittest.TestRequiredOneof.NestedMessage foo_lazy_message = 4 [lazy = true];
  bool has_foo_lazy_message() const;
  private:
  bool _internal_has_foo_lazy_message() const;

  public:
  void clear_foo_lazy_message() ;
  const ::edition_unittest::TestRequiredOneof_NestedMessage& foo_lazy_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequiredOneof_NestedMessage* release_foo_lazy_message();
  ::edition_unittest::TestRequiredOneof_NestedMessage* mutable_foo_lazy_message();
  void set_allocated_foo_lazy_message(::edition_unittest::TestRequiredOneof_NestedMessage* value);
  void unsafe_arena_set_allocated_foo_lazy_message(::edition_unittest::TestRequiredOneof_NestedMessage* value);
  ::edition_unittest::TestRequiredOneof_NestedMessage* unsafe_arena_release_foo_lazy_message();

  private:
  const ::edition_unittest::TestRequiredOneof_NestedMessage& _internal_foo_lazy_message() const;
  ::edition_unittest::TestRequiredOneof_NestedMessage* _internal_mutable_foo_lazy_message();

  public:
  void clear_foo();
  FooCase foo_case() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequiredOneof)
 private:
  class _Internal;
  void set_has_foo_int();
  void set_has_foo_string();
  void set_has_foo_message();
  void set_has_foo_lazy_message();
  inline bool has_foo() const;
  inline void clear_has_foo();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 2,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredOneof_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredOneof& from_msg);
    union FooUnion {
      constexpr FooUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t foo_int_;
      ::google::protobuf::internal::ArenaStringPtr foo_string_;
      ::edition_unittest::TestRequiredOneof_NestedMessage* foo_message_;
      ::edition_unittest::TestRequiredOneof_NestedMessage* foo_lazy_message_;
    } foo_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequired final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequired) */ {
 public:
  inline TestRequired() : TestRequired(nullptr) {}
  ~TestRequired() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequired(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequired(const TestRequired& from) : TestRequired(nullptr, from) {}
  inline TestRequired(TestRequired&& from) noexcept
      : TestRequired(nullptr, std::move(from)) {}
  inline TestRequired& operator=(const TestRequired& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequired& operator=(TestRequired&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequired& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequired* internal_default_instance() {
    return reinterpret_cast<const TestRequired*>(
        &_TestRequired_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(TestRequired& a, TestRequired& b) { a.Swap(&b); }
  inline void Swap(TestRequired* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequired* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequired* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequired>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequired& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequired& from) { TestRequired::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequired* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequired"; }

 protected:
  explicit TestRequired(::google::protobuf::Arena* arena);
  TestRequired(::google::protobuf::Arena* arena, const TestRequired& from);
  TestRequired(::google::protobuf::Arena* arena, TestRequired&& from) noexcept
      : TestRequired(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalForeignFieldNumber = 34,
    kAFieldNumber = 1,
    kDummy2FieldNumber = 2,
    kBFieldNumber = 3,
    kDummy4FieldNumber = 4,
    kDummy5FieldNumber = 5,
    kDummy6FieldNumber = 6,
    kDummy7FieldNumber = 7,
    kDummy8FieldNumber = 8,
    kDummy9FieldNumber = 9,
    kDummy10FieldNumber = 10,
    kDummy11FieldNumber = 11,
    kDummy12FieldNumber = 12,
    kDummy13FieldNumber = 13,
    kDummy14FieldNumber = 14,
    kDummy15FieldNumber = 15,
    kDummy16FieldNumber = 16,
    kDummy17FieldNumber = 17,
    kDummy18FieldNumber = 18,
    kDummy19FieldNumber = 19,
    kDummy20FieldNumber = 20,
    kDummy21FieldNumber = 21,
    kDummy22FieldNumber = 22,
    kDummy23FieldNumber = 23,
    kDummy24FieldNumber = 24,
    kDummy25FieldNumber = 25,
    kDummy26FieldNumber = 26,
    kDummy27FieldNumber = 27,
    kDummy28FieldNumber = 28,
    kDummy29FieldNumber = 29,
    kDummy30FieldNumber = 30,
    kDummy31FieldNumber = 31,
    kDummy32FieldNumber = 32,
    kCFieldNumber = 33,
  };
  // .edition_unittest.ForeignMessage optional_foreign = 34;
  bool has_optional_foreign() const;
  void clear_optional_foreign() ;
  const ::edition_unittest::ForeignMessage& optional_foreign() const;
  PROTOBUF_NODISCARD ::edition_unittest::ForeignMessage* release_optional_foreign();
  ::edition_unittest::ForeignMessage* mutable_optional_foreign();
  void set_allocated_optional_foreign(::edition_unittest::ForeignMessage* value);
  void unsafe_arena_set_allocated_optional_foreign(::edition_unittest::ForeignMessage* value);
  ::edition_unittest::ForeignMessage* unsafe_arena_release_optional_foreign();

  private:
  const ::edition_unittest::ForeignMessage& _internal_optional_foreign() const;
  ::edition_unittest::ForeignMessage* _internal_mutable_optional_foreign();

  public:
  // int32 a = 1 [features = {
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // int32 dummy2 = 2;
  bool has_dummy2() const;
  void clear_dummy2() ;
  ::int32_t dummy2() const;
  void set_dummy2(::int32_t value);

  private:
  ::int32_t _internal_dummy2() const;
  void _internal_set_dummy2(::int32_t value);

  public:
  // int32 b = 3 [features = {
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // int32 dummy4 = 4;
  bool has_dummy4() const;
  void clear_dummy4() ;
  ::int32_t dummy4() const;
  void set_dummy4(::int32_t value);

  private:
  ::int32_t _internal_dummy4() const;
  void _internal_set_dummy4(::int32_t value);

  public:
  // int32 dummy5 = 5;
  bool has_dummy5() const;
  void clear_dummy5() ;
  ::int32_t dummy5() const;
  void set_dummy5(::int32_t value);

  private:
  ::int32_t _internal_dummy5() const;
  void _internal_set_dummy5(::int32_t value);

  public:
  // int32 dummy6 = 6;
  bool has_dummy6() const;
  void clear_dummy6() ;
  ::int32_t dummy6() const;
  void set_dummy6(::int32_t value);

  private:
  ::int32_t _internal_dummy6() const;
  void _internal_set_dummy6(::int32_t value);

  public:
  // int32 dummy7 = 7;
  bool has_dummy7() const;
  void clear_dummy7() ;
  ::int32_t dummy7() const;
  void set_dummy7(::int32_t value);

  private:
  ::int32_t _internal_dummy7() const;
  void _internal_set_dummy7(::int32_t value);

  public:
  // int32 dummy8 = 8;
  bool has_dummy8() const;
  void clear_dummy8() ;
  ::int32_t dummy8() const;
  void set_dummy8(::int32_t value);

  private:
  ::int32_t _internal_dummy8() const;
  void _internal_set_dummy8(::int32_t value);

  public:
  // int32 dummy9 = 9;
  bool has_dummy9() const;
  void clear_dummy9() ;
  ::int32_t dummy9() const;
  void set_dummy9(::int32_t value);

  private:
  ::int32_t _internal_dummy9() const;
  void _internal_set_dummy9(::int32_t value);

  public:
  // int32 dummy10 = 10;
  bool has_dummy10() const;
  void clear_dummy10() ;
  ::int32_t dummy10() const;
  void set_dummy10(::int32_t value);

  private:
  ::int32_t _internal_dummy10() const;
  void _internal_set_dummy10(::int32_t value);

  public:
  // int32 dummy11 = 11;
  bool has_dummy11() const;
  void clear_dummy11() ;
  ::int32_t dummy11() const;
  void set_dummy11(::int32_t value);

  private:
  ::int32_t _internal_dummy11() const;
  void _internal_set_dummy11(::int32_t value);

  public:
  // int32 dummy12 = 12;
  bool has_dummy12() const;
  void clear_dummy12() ;
  ::int32_t dummy12() const;
  void set_dummy12(::int32_t value);

  private:
  ::int32_t _internal_dummy12() const;
  void _internal_set_dummy12(::int32_t value);

  public:
  // int32 dummy13 = 13;
  bool has_dummy13() const;
  void clear_dummy13() ;
  ::int32_t dummy13() const;
  void set_dummy13(::int32_t value);

  private:
  ::int32_t _internal_dummy13() const;
  void _internal_set_dummy13(::int32_t value);

  public:
  // int32 dummy14 = 14;
  bool has_dummy14() const;
  void clear_dummy14() ;
  ::int32_t dummy14() const;
  void set_dummy14(::int32_t value);

  private:
  ::int32_t _internal_dummy14() const;
  void _internal_set_dummy14(::int32_t value);

  public:
  // int32 dummy15 = 15;
  bool has_dummy15() const;
  void clear_dummy15() ;
  ::int32_t dummy15() const;
  void set_dummy15(::int32_t value);

  private:
  ::int32_t _internal_dummy15() const;
  void _internal_set_dummy15(::int32_t value);

  public:
  // int32 dummy16 = 16;
  bool has_dummy16() const;
  void clear_dummy16() ;
  ::int32_t dummy16() const;
  void set_dummy16(::int32_t value);

  private:
  ::int32_t _internal_dummy16() const;
  void _internal_set_dummy16(::int32_t value);

  public:
  // int32 dummy17 = 17;
  bool has_dummy17() const;
  void clear_dummy17() ;
  ::int32_t dummy17() const;
  void set_dummy17(::int32_t value);

  private:
  ::int32_t _internal_dummy17() const;
  void _internal_set_dummy17(::int32_t value);

  public:
  // int32 dummy18 = 18;
  bool has_dummy18() const;
  void clear_dummy18() ;
  ::int32_t dummy18() const;
  void set_dummy18(::int32_t value);

  private:
  ::int32_t _internal_dummy18() const;
  void _internal_set_dummy18(::int32_t value);

  public:
  // int32 dummy19 = 19;
  bool has_dummy19() const;
  void clear_dummy19() ;
  ::int32_t dummy19() const;
  void set_dummy19(::int32_t value);

  private:
  ::int32_t _internal_dummy19() const;
  void _internal_set_dummy19(::int32_t value);

  public:
  // int32 dummy20 = 20;
  bool has_dummy20() const;
  void clear_dummy20() ;
  ::int32_t dummy20() const;
  void set_dummy20(::int32_t value);

  private:
  ::int32_t _internal_dummy20() const;
  void _internal_set_dummy20(::int32_t value);

  public:
  // int32 dummy21 = 21;
  bool has_dummy21() const;
  void clear_dummy21() ;
  ::int32_t dummy21() const;
  void set_dummy21(::int32_t value);

  private:
  ::int32_t _internal_dummy21() const;
  void _internal_set_dummy21(::int32_t value);

  public:
  // int32 dummy22 = 22;
  bool has_dummy22() const;
  void clear_dummy22() ;
  ::int32_t dummy22() const;
  void set_dummy22(::int32_t value);

  private:
  ::int32_t _internal_dummy22() const;
  void _internal_set_dummy22(::int32_t value);

  public:
  // int32 dummy23 = 23;
  bool has_dummy23() const;
  void clear_dummy23() ;
  ::int32_t dummy23() const;
  void set_dummy23(::int32_t value);

  private:
  ::int32_t _internal_dummy23() const;
  void _internal_set_dummy23(::int32_t value);

  public:
  // int32 dummy24 = 24;
  bool has_dummy24() const;
  void clear_dummy24() ;
  ::int32_t dummy24() const;
  void set_dummy24(::int32_t value);

  private:
  ::int32_t _internal_dummy24() const;
  void _internal_set_dummy24(::int32_t value);

  public:
  // int32 dummy25 = 25;
  bool has_dummy25() const;
  void clear_dummy25() ;
  ::int32_t dummy25() const;
  void set_dummy25(::int32_t value);

  private:
  ::int32_t _internal_dummy25() const;
  void _internal_set_dummy25(::int32_t value);

  public:
  // int32 dummy26 = 26;
  bool has_dummy26() const;
  void clear_dummy26() ;
  ::int32_t dummy26() const;
  void set_dummy26(::int32_t value);

  private:
  ::int32_t _internal_dummy26() const;
  void _internal_set_dummy26(::int32_t value);

  public:
  // int32 dummy27 = 27;
  bool has_dummy27() const;
  void clear_dummy27() ;
  ::int32_t dummy27() const;
  void set_dummy27(::int32_t value);

  private:
  ::int32_t _internal_dummy27() const;
  void _internal_set_dummy27(::int32_t value);

  public:
  // int32 dummy28 = 28;
  bool has_dummy28() const;
  void clear_dummy28() ;
  ::int32_t dummy28() const;
  void set_dummy28(::int32_t value);

  private:
  ::int32_t _internal_dummy28() const;
  void _internal_set_dummy28(::int32_t value);

  public:
  // int32 dummy29 = 29;
  bool has_dummy29() const;
  void clear_dummy29() ;
  ::int32_t dummy29() const;
  void set_dummy29(::int32_t value);

  private:
  ::int32_t _internal_dummy29() const;
  void _internal_set_dummy29(::int32_t value);

  public:
  // int32 dummy30 = 30;
  bool has_dummy30() const;
  void clear_dummy30() ;
  ::int32_t dummy30() const;
  void set_dummy30(::int32_t value);

  private:
  ::int32_t _internal_dummy30() const;
  void _internal_set_dummy30(::int32_t value);

  public:
  // int32 dummy31 = 31;
  bool has_dummy31() const;
  void clear_dummy31() ;
  ::int32_t dummy31() const;
  void set_dummy31(::int32_t value);

  private:
  ::int32_t _internal_dummy31() const;
  void _internal_set_dummy31(::int32_t value);

  public:
  // int32 dummy32 = 32;
  bool has_dummy32() const;
  void clear_dummy32() ;
  ::int32_t dummy32() const;
  void set_dummy32(::int32_t value);

  private:
  ::int32_t _internal_dummy32() const;
  void _internal_set_dummy32(::int32_t value);

  public:
  // int32 c = 33 [features = {
  bool has_c() const;
  void clear_c() ;
  ::int32_t c() const;
  void set_c(::int32_t value);

  private:
  ::int32_t _internal_c() const;
  void _internal_set_c(::int32_t value);

  public:
  static const int kSingleFieldNumber = 1000;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestRequired >, 11,
      false>
      single;
  static const int kMultiFieldNumber = 1001;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::edition_unittest::TestRequired >, 11,
      false>
      multi;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequired)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 34, 1,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequired_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequired& from_msg);
    ::google::protobuf::internal::HasBits<2> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::ForeignMessage* optional_foreign_;
    ::int32_t a_;
    ::int32_t dummy2_;
    ::int32_t b_;
    ::int32_t dummy4_;
    ::int32_t dummy5_;
    ::int32_t dummy6_;
    ::int32_t dummy7_;
    ::int32_t dummy8_;
    ::int32_t dummy9_;
    ::int32_t dummy10_;
    ::int32_t dummy11_;
    ::int32_t dummy12_;
    ::int32_t dummy13_;
    ::int32_t dummy14_;
    ::int32_t dummy15_;
    ::int32_t dummy16_;
    ::int32_t dummy17_;
    ::int32_t dummy18_;
    ::int32_t dummy19_;
    ::int32_t dummy20_;
    ::int32_t dummy21_;
    ::int32_t dummy22_;
    ::int32_t dummy23_;
    ::int32_t dummy24_;
    ::int32_t dummy25_;
    ::int32_t dummy26_;
    ::int32_t dummy27_;
    ::int32_t dummy28_;
    ::int32_t dummy29_;
    ::int32_t dummy30_;
    ::int32_t dummy31_;
    ::int32_t dummy32_;
    ::int32_t c_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestOneof2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestOneof2) */ {
 public:
  inline TestOneof2() : TestOneof2(nullptr) {}
  ~TestOneof2() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestOneof2(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestOneof2(const TestOneof2& from) : TestOneof2(nullptr, from) {}
  inline TestOneof2(TestOneof2&& from) noexcept
      : TestOneof2(nullptr, std::move(from)) {}
  inline TestOneof2& operator=(const TestOneof2& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestOneof2& operator=(TestOneof2&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestOneof2& default_instance() {
    return *internal_default_instance();
  }
  enum FooCase {
    kFooInt = 1,
    kFooString = 2,
    kFooCord = 3,
    kFooStringPiece = 4,
    kFooBytes = 5,
    kFooEnum = 6,
    kFooMessage = 7,
    kFoogroup = 8,
    kFooLazyMessage = 11,
    kFooBytesCord = 30,
    FOO_NOT_SET = 0,
  };
  enum BarCase {
    kBarInt = 12,
    kBarString = 13,
    kBarCord = 14,
    kBarStringPiece = 15,
    kBarBytes = 16,
    kBarEnum = 17,
    kBarStringWithEmptyDefault = 20,
    kBarCordWithEmptyDefault = 21,
    kBarStringPieceWithEmptyDefault = 22,
    kBarBytesWithEmptyDefault = 23,
    BAR_NOT_SET = 0,
  };
  static inline const TestOneof2* internal_default_instance() {
    return reinterpret_cast<const TestOneof2*>(
        &_TestOneof2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 83;
  friend void swap(TestOneof2& a, TestOneof2& b) { a.Swap(&b); }
  inline void Swap(TestOneof2* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestOneof2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestOneof2* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestOneof2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestOneof2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestOneof2& from) { TestOneof2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestOneof2* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestOneof2"; }

 protected:
  explicit TestOneof2(::google::protobuf::Arena* arena);
  TestOneof2(::google::protobuf::Arena* arena, const TestOneof2& from);
  TestOneof2(::google::protobuf::Arena* arena, TestOneof2&& from) noexcept
      : TestOneof2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FooGroup = TestOneof2_FooGroup;
  using NestedMessage = TestOneof2_NestedMessage;
  using NestedEnum = TestOneof2_NestedEnum;
  static constexpr NestedEnum UNKNOWN = TestOneof2_NestedEnum_UNKNOWN;
  static constexpr NestedEnum FOO = TestOneof2_NestedEnum_FOO;
  static constexpr NestedEnum BAR = TestOneof2_NestedEnum_BAR;
  static constexpr NestedEnum BAZ = TestOneof2_NestedEnum_BAZ;
  static inline bool NestedEnum_IsValid(int value) {
    return TestOneof2_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN = TestOneof2_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX = TestOneof2_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE = TestOneof2_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NestedEnum_descriptor() {
    return TestOneof2_NestedEnum_descriptor();
  }
  template <typename T>
  static inline const std::string& NestedEnum_Name(T value) {
    return TestOneof2_NestedEnum_Name(value);
  }
  static inline bool NestedEnum_Parse(absl::string_view name, NestedEnum* value) {
    return TestOneof2_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kBazStringFieldNumber = 19,
    kBazIntFieldNumber = 18,
    kFooIntFieldNumber = 1,
    kFooStringFieldNumber = 2,
    kFooCordFieldNumber = 3,
    kFooStringPieceFieldNumber = 4,
    kFooBytesFieldNumber = 5,
    kFooEnumFieldNumber = 6,
    kFooMessageFieldNumber = 7,
    kFoogroupFieldNumber = 8,
    kFooLazyMessageFieldNumber = 11,
    kFooBytesCordFieldNumber = 30,
    kBarIntFieldNumber = 12,
    kBarStringFieldNumber = 13,
    kBarCordFieldNumber = 14,
    kBarStringPieceFieldNumber = 15,
    kBarBytesFieldNumber = 16,
    kBarEnumFieldNumber = 17,
    kBarStringWithEmptyDefaultFieldNumber = 20,
    kBarCordWithEmptyDefaultFieldNumber = 21,
    kBarStringPieceWithEmptyDefaultFieldNumber = 22,
    kBarBytesWithEmptyDefaultFieldNumber = 23,
  };
  // string baz_string = 19 [default = "BAZ"];
  bool has_baz_string() const;
  void clear_baz_string() ;
  absl::string_view baz_string() const;
  template <typename Arg_ = std::string&&>
  void set_baz_string(Arg_&& arg);

  private:
  const std::string& _internal_baz_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_baz_string(
      absl::string_view value);

  public:
  // int32 baz_int = 18;
  bool has_baz_int() const;
  void clear_baz_int() ;
  ::int32_t baz_int() const;
  void set_baz_int(::int32_t value);

  private:
  ::int32_t _internal_baz_int() const;
  void _internal_set_baz_int(::int32_t value);

  public:
  // int32 foo_int = 1;
  bool has_foo_int() const;
  void clear_foo_int() ;
  ::int32_t foo_int() const;
  void set_foo_int(::int32_t value);

  private:
  ::int32_t _internal_foo_int() const;
  void _internal_set_foo_int(::int32_t value);

  public:
  // string foo_string = 2;
  bool has_foo_string() const;
  void clear_foo_string() ;
  absl::string_view foo_string() const;
  template <typename Arg_ = std::string&&>
  void set_foo_string(Arg_&& arg);

  private:
  const std::string& _internal_foo_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_foo_string(
      absl::string_view value);

  public:
  // string foo_cord = 3 [ctype = CORD];
  bool has_foo_cord() const;
  void clear_foo_cord() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& foo_cord() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_foo_cord(Arg_&& arg, Args_... args);
  std::string* mutable_foo_cord();
  PROTOBUF_NODISCARD std::string* release_foo_cord();
  void set_allocated_foo_cord(std::string* value);

  private:
  const std::string& _internal_foo_cord() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_foo_cord(
      const std::string& value);
  std::string* _internal_mutable_foo_cord();

  public:
  // string foo_string_piece = 4 [ctype = STRING_PIECE];
  bool has_foo_string_piece() const;
  void clear_foo_string_piece() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& foo_string_piece() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_foo_string_piece(Arg_&& arg, Args_... args);
  std::string* mutable_foo_string_piece();
  PROTOBUF_NODISCARD std::string* release_foo_string_piece();
  void set_allocated_foo_string_piece(std::string* value);

  private:
  const std::string& _internal_foo_string_piece() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_foo_string_piece(
      const std::string& value);
  std::string* _internal_mutable_foo_string_piece();

  public:
  // bytes foo_bytes = 5;
  bool has_foo_bytes() const;
  void clear_foo_bytes() ;
  absl::string_view foo_bytes() const;
  template <typename Arg_ = std::string&&>
  void set_foo_bytes(Arg_&& arg);

  private:
  const std::string& _internal_foo_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_foo_bytes(
      absl::string_view value);

  public:
  // .edition_unittest.TestOneof2.NestedEnum foo_enum = 6;
  bool has_foo_enum() const;
  void clear_foo_enum() ;
  ::edition_unittest::TestOneof2_NestedEnum foo_enum() const;
  void set_foo_enum(::edition_unittest::TestOneof2_NestedEnum value);

  private:
  ::edition_unittest::TestOneof2_NestedEnum _internal_foo_enum() const;
  void _internal_set_foo_enum(::edition_unittest::TestOneof2_NestedEnum value);

  public:
  // .edition_unittest.TestOneof2.NestedMessage foo_message = 7;
  bool has_foo_message() const;
  private:
  bool _internal_has_foo_message() const;

  public:
  void clear_foo_message() ;
  const ::edition_unittest::TestOneof2_NestedMessage& foo_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestOneof2_NestedMessage* release_foo_message();
  ::edition_unittest::TestOneof2_NestedMessage* mutable_foo_message();
  void set_allocated_foo_message(::edition_unittest::TestOneof2_NestedMessage* value);
  void unsafe_arena_set_allocated_foo_message(::edition_unittest::TestOneof2_NestedMessage* value);
  ::edition_unittest::TestOneof2_NestedMessage* unsafe_arena_release_foo_message();

  private:
  const ::edition_unittest::TestOneof2_NestedMessage& _internal_foo_message() const;
  ::edition_unittest::TestOneof2_NestedMessage* _internal_mutable_foo_message();

  public:
  // .edition_unittest.TestOneof2.FooGroup foogroup = 8 [features = {
  bool has_foogroup() const;
  private:
  bool _internal_has_foogroup() const;

  public:
  void clear_foogroup() ;
  const ::edition_unittest::TestOneof2_FooGroup& foogroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestOneof2_FooGroup* release_foogroup();
  ::edition_unittest::TestOneof2_FooGroup* mutable_foogroup();
  void set_allocated_foogroup(::edition_unittest::TestOneof2_FooGroup* value);
  void unsafe_arena_set_allocated_foogroup(::edition_unittest::TestOneof2_FooGroup* value);
  ::edition_unittest::TestOneof2_FooGroup* unsafe_arena_release_foogroup();

  private:
  const ::edition_unittest::TestOneof2_FooGroup& _internal_foogroup() const;
  ::edition_unittest::TestOneof2_FooGroup* _internal_mutable_foogroup();

  public:
  // .edition_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
  bool has_foo_lazy_message() const;
  private:
  bool _internal_has_foo_lazy_message() const;

  public:
  void clear_foo_lazy_message() ;
  const ::edition_unittest::TestOneof2_NestedMessage& foo_lazy_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestOneof2_NestedMessage* release_foo_lazy_message();
  ::edition_unittest::TestOneof2_NestedMessage* mutable_foo_lazy_message();
  void set_allocated_foo_lazy_message(::edition_unittest::TestOneof2_NestedMessage* value);
  void unsafe_arena_set_allocated_foo_lazy_message(::edition_unittest::TestOneof2_NestedMessage* value);
  ::edition_unittest::TestOneof2_NestedMessage* unsafe_arena_release_foo_lazy_message();

  private:
  const ::edition_unittest::TestOneof2_NestedMessage& _internal_foo_lazy_message() const;
  ::edition_unittest::TestOneof2_NestedMessage* _internal_mutable_foo_lazy_message();

  public:
  // bytes foo_bytes_cord = 30 [ctype = CORD];
  bool has_foo_bytes_cord() const;
  void clear_foo_bytes_cord() ;
  const ::absl::Cord& foo_bytes_cord() const;
  void set_foo_bytes_cord(const ::absl::Cord& value);
  void set_foo_bytes_cord(::absl::string_view value);
  private:
  const ::absl::Cord& _internal_foo_bytes_cord() const;
  void _internal_set_foo_bytes_cord(const ::absl::Cord& value);
  ::absl::Cord* _internal_mutable_foo_bytes_cord();
  public:
  // int32 bar_int = 12 [default = 5];
  bool has_bar_int() const;
  void clear_bar_int() ;
  ::int32_t bar_int() const;
  void set_bar_int(::int32_t value);

  private:
  ::int32_t _internal_bar_int() const;
  void _internal_set_bar_int(::int32_t value);

  public:
  // string bar_string = 13 [default = "STRING"];
  bool has_bar_string() const;
  void clear_bar_string() ;
  absl::string_view bar_string() const;
  template <typename Arg_ = std::string&&>
  void set_bar_string(Arg_&& arg);

  private:
  const std::string& _internal_bar_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_string(
      absl::string_view value);

  public:
  // string bar_cord = 14 [default = "CORD", ctype = CORD];
  bool has_bar_cord() const;
  void clear_bar_cord() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& bar_cord() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bar_cord(Arg_&& arg, Args_... args);
  std::string* mutable_bar_cord();
  PROTOBUF_NODISCARD std::string* release_bar_cord();
  void set_allocated_bar_cord(std::string* value);

  private:
  const std::string& _internal_bar_cord() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_cord(
      const std::string& value);
  std::string* _internal_mutable_bar_cord();

  public:
  // string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
  bool has_bar_string_piece() const;
  void clear_bar_string_piece() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& bar_string_piece() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bar_string_piece(Arg_&& arg, Args_... args);
  std::string* mutable_bar_string_piece();
  PROTOBUF_NODISCARD std::string* release_bar_string_piece();
  void set_allocated_bar_string_piece(std::string* value);

  private:
  const std::string& _internal_bar_string_piece() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_string_piece(
      const std::string& value);
  std::string* _internal_mutable_bar_string_piece();

  public:
  // bytes bar_bytes = 16 [default = "BYTES"];
  bool has_bar_bytes() const;
  void clear_bar_bytes() ;
  absl::string_view bar_bytes() const;
  template <typename Arg_ = std::string&&>
  void set_bar_bytes(Arg_&& arg);

  private:
  const std::string& _internal_bar_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_bytes(
      absl::string_view value);

  public:
  // .edition_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
  bool has_bar_enum() const;
  void clear_bar_enum() ;
  ::edition_unittest::TestOneof2_NestedEnum bar_enum() const;
  void set_bar_enum(::edition_unittest::TestOneof2_NestedEnum value);

  private:
  ::edition_unittest::TestOneof2_NestedEnum _internal_bar_enum() const;
  void _internal_set_bar_enum(::edition_unittest::TestOneof2_NestedEnum value);

  public:
  // string bar_string_with_empty_default = 20 [default = ""];
  bool has_bar_string_with_empty_default() const;
  void clear_bar_string_with_empty_default() ;
  absl::string_view bar_string_with_empty_default() const;
  template <typename Arg_ = std::string&&>
  void set_bar_string_with_empty_default(Arg_&& arg);

  private:
  const std::string& _internal_bar_string_with_empty_default() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_string_with_empty_default(
      absl::string_view value);

  public:
  // string bar_cord_with_empty_default = 21 [default = "", ctype = CORD];
  bool has_bar_cord_with_empty_default() const;
  void clear_bar_cord_with_empty_default() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& bar_cord_with_empty_default() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bar_cord_with_empty_default(Arg_&& arg, Args_... args);
  std::string* mutable_bar_cord_with_empty_default();
  PROTOBUF_NODISCARD std::string* release_bar_cord_with_empty_default();
  void set_allocated_bar_cord_with_empty_default(std::string* value);

  private:
  const std::string& _internal_bar_cord_with_empty_default() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_cord_with_empty_default(
      const std::string& value);
  std::string* _internal_mutable_bar_cord_with_empty_default();

  public:
  // string bar_string_piece_with_empty_default = 22 [default = "", ctype = STRING_PIECE];
  bool has_bar_string_piece_with_empty_default() const;
  void clear_bar_string_piece_with_empty_default() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& bar_string_piece_with_empty_default() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bar_string_piece_with_empty_default(Arg_&& arg, Args_... args);
  std::string* mutable_bar_string_piece_with_empty_default();
  PROTOBUF_NODISCARD std::string* release_bar_string_piece_with_empty_default();
  void set_allocated_bar_string_piece_with_empty_default(std::string* value);

  private:
  const std::string& _internal_bar_string_piece_with_empty_default() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_string_piece_with_empty_default(
      const std::string& value);
  std::string* _internal_mutable_bar_string_piece_with_empty_default();

  public:
  // bytes bar_bytes_with_empty_default = 23 [default = ""];
  bool has_bar_bytes_with_empty_default() const;
  void clear_bar_bytes_with_empty_default() ;
  absl::string_view bar_bytes_with_empty_default() const;
  template <typename Arg_ = std::string&&>
  void set_bar_bytes_with_empty_default(Arg_&& arg);

  private:
  const std::string& _internal_bar_bytes_with_empty_default() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_bytes_with_empty_default(
      absl::string_view value);

  public:
  void clear_foo();
  FooCase foo_case() const;
  void clear_bar();
  BarCase bar_case() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestOneof2)
 private:
  class _Internal;
  void set_has_foo_int();
  void set_has_foo_string();
  void set_has_foo_cord();
  void set_has_foo_string_piece();
  void set_has_foo_bytes();
  void set_has_foo_enum();
  void set_has_foo_message();
  void set_has_foogroup();
  void set_has_foo_lazy_message();
  void set_has_foo_bytes_cord();
  void set_has_bar_int();
  void set_has_bar_string();
  void set_has_bar_cord();
  void set_has_bar_string_piece();
  void set_has_bar_bytes();
  void set_has_bar_enum();
  void set_has_bar_string_with_empty_default();
  void set_has_bar_cord_with_empty_default();
  void set_has_bar_string_piece_with_empty_default();
  void set_has_bar_bytes_with_empty_default();
  inline bool has_foo() const;
  inline void clear_has_foo();
  inline bool has_bar() const;
  inline void clear_has_bar();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 22, 5,
      221, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestOneof2_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestOneof2& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_baz_string_;
    ::google::protobuf::internal::ArenaStringPtr baz_string_;
    ::int32_t baz_int_;
    union FooUnion {
      constexpr FooUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t foo_int_;
      ::google::protobuf::internal::ArenaStringPtr foo_string_;
      ::google::protobuf::internal::ArenaStringPtr foo_cord_;
      ::google::protobuf::internal::ArenaStringPtr foo_string_piece_;
      ::google::protobuf::internal::ArenaStringPtr foo_bytes_;
      int foo_enum_;
      ::edition_unittest::TestOneof2_NestedMessage* foo_message_;
      ::edition_unittest::TestOneof2_FooGroup* foogroup_;
      ::edition_unittest::TestOneof2_NestedMessage* foo_lazy_message_;
      ::absl::Cord *foo_bytes_cord_;
    } foo_;
    union BarUnion {
      constexpr BarUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t bar_int_;
      ::google::protobuf::internal::ArenaStringPtr bar_string_;
      ::google::protobuf::internal::ArenaStringPtr bar_cord_;
      ::google::protobuf::internal::ArenaStringPtr bar_string_piece_;
      ::google::protobuf::internal::ArenaStringPtr bar_bytes_;
      int bar_enum_;
      ::google::protobuf::internal::ArenaStringPtr bar_string_with_empty_default_;
      ::google::protobuf::internal::ArenaStringPtr bar_cord_with_empty_default_;
      ::google::protobuf::internal::ArenaStringPtr bar_string_piece_with_empty_default_;
      ::google::protobuf::internal::ArenaStringPtr bar_bytes_with_empty_default_;
    } bar_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_bar_string_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_bar_cord_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_bar_string_piece_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_bar_bytes_;
    ::uint32_t _oneof_case_[2];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedMessageHasBits_NestedMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedMessageHasBits.NestedMessage) */ {
 public:
  inline TestNestedMessageHasBits_NestedMessage() : TestNestedMessageHasBits_NestedMessage(nullptr) {}
  ~TestNestedMessageHasBits_NestedMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedMessageHasBits_NestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedMessageHasBits_NestedMessage(const TestNestedMessageHasBits_NestedMessage& from) : TestNestedMessageHasBits_NestedMessage(nullptr, from) {}
  inline TestNestedMessageHasBits_NestedMessage(TestNestedMessageHasBits_NestedMessage&& from) noexcept
      : TestNestedMessageHasBits_NestedMessage(nullptr, std::move(from)) {}
  inline TestNestedMessageHasBits_NestedMessage& operator=(const TestNestedMessageHasBits_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedMessageHasBits_NestedMessage& operator=(TestNestedMessageHasBits_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedMessageHasBits_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedMessageHasBits_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestNestedMessageHasBits_NestedMessage*>(
        &_TestNestedMessageHasBits_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(TestNestedMessageHasBits_NestedMessage& a, TestNestedMessageHasBits_NestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestNestedMessageHasBits_NestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedMessageHasBits_NestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedMessageHasBits_NestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedMessageHasBits_NestedMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedMessageHasBits_NestedMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedMessageHasBits_NestedMessage& from) { TestNestedMessageHasBits_NestedMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedMessageHasBits_NestedMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedMessageHasBits.NestedMessage"; }

 protected:
  explicit TestNestedMessageHasBits_NestedMessage(::google::protobuf::Arena* arena);
  TestNestedMessageHasBits_NestedMessage(::google::protobuf::Arena* arena, const TestNestedMessageHasBits_NestedMessage& from);
  TestNestedMessageHasBits_NestedMessage(::google::protobuf::Arena* arena, TestNestedMessageHasBits_NestedMessage&& from) noexcept
      : TestNestedMessageHasBits_NestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNestedmessageRepeatedInt32FieldNumber = 1,
    kNestedmessageRepeatedForeignmessageFieldNumber = 2,
  };
  // repeated int32 nestedmessage_repeated_int32 = 1;
  int nestedmessage_repeated_int32_size() const;
  private:
  int _internal_nestedmessage_repeated_int32_size() const;

  public:
  void clear_nestedmessage_repeated_int32() ;
  ::int32_t nestedmessage_repeated_int32(int index) const;
  void set_nestedmessage_repeated_int32(int index, ::int32_t value);
  void add_nestedmessage_repeated_int32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& nestedmessage_repeated_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_nestedmessage_repeated_int32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_nestedmessage_repeated_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_nestedmessage_repeated_int32();

  public:
  // repeated .edition_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  int nestedmessage_repeated_foreignmessage_size() const;
  private:
  int _internal_nestedmessage_repeated_foreignmessage_size() const;

  public:
  void clear_nestedmessage_repeated_foreignmessage() ;
  ::edition_unittest::ForeignMessage* mutable_nestedmessage_repeated_foreignmessage(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* mutable_nestedmessage_repeated_foreignmessage();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& _internal_nestedmessage_repeated_foreignmessage() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* _internal_mutable_nestedmessage_repeated_foreignmessage();
  public:
  const ::edition_unittest::ForeignMessage& nestedmessage_repeated_foreignmessage(int index) const;
  ::edition_unittest::ForeignMessage* add_nestedmessage_repeated_foreignmessage();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& nestedmessage_repeated_foreignmessage() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedMessageHasBits.NestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedMessageHasBits_NestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedMessageHasBits_NestedMessage& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> nestedmessage_repeated_int32_;
    ::google::protobuf::internal::CachedSize _nestedmessage_repeated_int32_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::ForeignMessage > nestedmessage_repeated_foreignmessage_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedGroupExtensionOuter_Layer1OptionalGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup) */ {
 public:
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup() : TestNestedGroupExtensionOuter_Layer1OptionalGroup(nullptr) {}
  ~TestNestedGroupExtensionOuter_Layer1OptionalGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup(const TestNestedGroupExtensionOuter_Layer1OptionalGroup& from) : TestNestedGroupExtensionOuter_Layer1OptionalGroup(nullptr, from) {}
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup(TestNestedGroupExtensionOuter_Layer1OptionalGroup&& from) noexcept
      : TestNestedGroupExtensionOuter_Layer1OptionalGroup(nullptr, std::move(from)) {}
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup& operator=(const TestNestedGroupExtensionOuter_Layer1OptionalGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedGroupExtensionOuter_Layer1OptionalGroup& operator=(TestNestedGroupExtensionOuter_Layer1OptionalGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedGroupExtensionOuter_Layer1OptionalGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedGroupExtensionOuter_Layer1OptionalGroup* internal_default_instance() {
    return reinterpret_cast<const TestNestedGroupExtensionOuter_Layer1OptionalGroup*>(
        &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 116;
  friend void swap(TestNestedGroupExtensionOuter_Layer1OptionalGroup& a, TestNestedGroupExtensionOuter_Layer1OptionalGroup& b) { a.Swap(&b); }
  inline void Swap(TestNestedGroupExtensionOuter_Layer1OptionalGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedGroupExtensionOuter_Layer1OptionalGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedGroupExtensionOuter_Layer1OptionalGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup& from) { TestNestedGroupExtensionOuter_Layer1OptionalGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup"; }

 protected:
  explicit TestNestedGroupExtensionOuter_Layer1OptionalGroup(::google::protobuf::Arena* arena);
  TestNestedGroupExtensionOuter_Layer1OptionalGroup(::google::protobuf::Arena* arena, const TestNestedGroupExtensionOuter_Layer1OptionalGroup& from);
  TestNestedGroupExtensionOuter_Layer1OptionalGroup(::google::protobuf::Arena* arena, TestNestedGroupExtensionOuter_Layer1OptionalGroup&& from) noexcept
      : TestNestedGroupExtensionOuter_Layer1OptionalGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Layer2RepeatedGroup = TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup;
  using Layer2AnotherOptionalRepeatedGroup = TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kLayer2RepeatedgroupFieldNumber = 2,
    kLayer2AnotheroptionalrepeatedgroupFieldNumber = 4,
  };
  // repeated .edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup layer2repeatedgroup = 2 [features = {
  int layer2repeatedgroup_size() const;
  private:
  int _internal_layer2repeatedgroup_size() const;

  public:
  void clear_layer2repeatedgroup() ;
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* mutable_layer2repeatedgroup(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>* mutable_layer2repeatedgroup();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>& _internal_layer2repeatedgroup() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>* _internal_mutable_layer2repeatedgroup();
  public:
  const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& layer2repeatedgroup(int index) const;
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* add_layer2repeatedgroup();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>& layer2repeatedgroup() const;
  // repeated .edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup layer2anotheroptionalrepeatedgroup = 4 [features = {
  int layer2anotheroptionalrepeatedgroup_size() const;
  private:
  int _internal_layer2anotheroptionalrepeatedgroup_size() const;

  public:
  void clear_layer2anotheroptionalrepeatedgroup() ;
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* mutable_layer2anotheroptionalrepeatedgroup(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>* mutable_layer2anotheroptionalrepeatedgroup();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>& _internal_layer2anotheroptionalrepeatedgroup() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>* _internal_mutable_layer2anotheroptionalrepeatedgroup();
  public:
  const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& layer2anotheroptionalrepeatedgroup(int index) const;
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* add_layer2anotheroptionalrepeatedgroup();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>& layer2anotheroptionalrepeatedgroup() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedGroupExtensionOuter_Layer1OptionalGroup& from_msg);
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup > layer2repeatedgroup_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup > layer2anotheroptionalrepeatedgroup_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMergeException final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMergeException) */ {
 public:
  inline TestMergeException() : TestMergeException(nullptr) {}
  ~TestMergeException() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMergeException(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMergeException(const TestMergeException& from) : TestMergeException(nullptr, from) {}
  inline TestMergeException(TestMergeException&& from) noexcept
      : TestMergeException(nullptr, std::move(from)) {}
  inline TestMergeException& operator=(const TestMergeException& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMergeException& operator=(TestMergeException&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMergeException& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMergeException* internal_default_instance() {
    return reinterpret_cast<const TestMergeException*>(
        &_TestMergeException_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 100;
  friend void swap(TestMergeException& a, TestMergeException& b) { a.Swap(&b); }
  inline void Swap(TestMergeException* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMergeException* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMergeException* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMergeException>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMergeException& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMergeException& from) { TestMergeException::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMergeException* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMergeException"; }

 protected:
  explicit TestMergeException(::google::protobuf::Arena* arena);
  TestMergeException(::google::protobuf::Arena* arena, const TestMergeException& from);
  TestMergeException(::google::protobuf::Arena* arena, TestMergeException&& from) noexcept
      : TestMergeException(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllExtensionsFieldNumber = 1,
  };
  // .edition_unittest.TestAllExtensions all_extensions = 1;
  bool has_all_extensions() const;
  void clear_all_extensions() ;
  const ::edition_unittest::TestAllExtensions& all_extensions() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllExtensions* release_all_extensions();
  ::edition_unittest::TestAllExtensions* mutable_all_extensions();
  void set_allocated_all_extensions(::edition_unittest::TestAllExtensions* value);
  void unsafe_arena_set_allocated_all_extensions(::edition_unittest::TestAllExtensions* value);
  ::edition_unittest::TestAllExtensions* unsafe_arena_release_all_extensions();

  private:
  const ::edition_unittest::TestAllExtensions& _internal_all_extensions() const;
  ::edition_unittest::TestAllExtensions* _internal_mutable_all_extensions();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMergeException)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMergeException_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMergeException& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllExtensions* all_extensions_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestIsInitialized_SubMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestIsInitialized.SubMessage) */ {
 public:
  inline TestIsInitialized_SubMessage() : TestIsInitialized_SubMessage(nullptr) {}
  ~TestIsInitialized_SubMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestIsInitialized_SubMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestIsInitialized_SubMessage(const TestIsInitialized_SubMessage& from) : TestIsInitialized_SubMessage(nullptr, from) {}
  inline TestIsInitialized_SubMessage(TestIsInitialized_SubMessage&& from) noexcept
      : TestIsInitialized_SubMessage(nullptr, std::move(from)) {}
  inline TestIsInitialized_SubMessage& operator=(const TestIsInitialized_SubMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestIsInitialized_SubMessage& operator=(TestIsInitialized_SubMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestIsInitialized_SubMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestIsInitialized_SubMessage* internal_default_instance() {
    return reinterpret_cast<const TestIsInitialized_SubMessage*>(
        &_TestIsInitialized_SubMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(TestIsInitialized_SubMessage& a, TestIsInitialized_SubMessage& b) { a.Swap(&b); }
  inline void Swap(TestIsInitialized_SubMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestIsInitialized_SubMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestIsInitialized_SubMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestIsInitialized_SubMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestIsInitialized_SubMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestIsInitialized_SubMessage& from) { TestIsInitialized_SubMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestIsInitialized_SubMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestIsInitialized.SubMessage"; }

 protected:
  explicit TestIsInitialized_SubMessage(::google::protobuf::Arena* arena);
  TestIsInitialized_SubMessage(::google::protobuf::Arena* arena, const TestIsInitialized_SubMessage& from);
  TestIsInitialized_SubMessage(::google::protobuf::Arena* arena, TestIsInitialized_SubMessage&& from) noexcept
      : TestIsInitialized_SubMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SubGroup = TestIsInitialized_SubMessage_SubGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kSubgroupFieldNumber = 1,
  };
  // .edition_unittest.TestIsInitialized.SubMessage.SubGroup subgroup = 1 [features = {
  bool has_subgroup() const;
  void clear_subgroup() ;
  const ::edition_unittest::TestIsInitialized_SubMessage_SubGroup& subgroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* release_subgroup();
  ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* mutable_subgroup();
  void set_allocated_subgroup(::edition_unittest::TestIsInitialized_SubMessage_SubGroup* value);
  void unsafe_arena_set_allocated_subgroup(::edition_unittest::TestIsInitialized_SubMessage_SubGroup* value);
  ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* unsafe_arena_release_subgroup();

  private:
  const ::edition_unittest::TestIsInitialized_SubMessage_SubGroup& _internal_subgroup() const;
  ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* _internal_mutable_subgroup();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestIsInitialized.SubMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestIsInitialized_SubMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestIsInitialized_SubMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* subgroup_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestGroup) */ {
 public:
  inline TestGroup() : TestGroup(nullptr) {}
  ~TestGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestGroup(const TestGroup& from) : TestGroup(nullptr, from) {}
  inline TestGroup(TestGroup&& from) noexcept
      : TestGroup(nullptr, std::move(from)) {}
  inline TestGroup& operator=(const TestGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestGroup& operator=(TestGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestGroup* internal_default_instance() {
    return reinterpret_cast<const TestGroup*>(
        &_TestGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(TestGroup& a, TestGroup& b) { a.Swap(&b); }
  inline void Swap(TestGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestGroup& from) { TestGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestGroup"; }

 protected:
  explicit TestGroup(::google::protobuf::Arena* arena);
  TestGroup(::google::protobuf::Arena* arena, const TestGroup& from);
  TestGroup(::google::protobuf::Arena* arena, TestGroup&& from) noexcept
      : TestGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OptionalGroup = TestGroup_OptionalGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalgroupFieldNumber = 16,
    kOptionalForeignEnumFieldNumber = 22,
  };
  // .edition_unittest.TestGroup.OptionalGroup optionalgroup = 16 [features = {
  bool has_optionalgroup() const;
  void clear_optionalgroup() ;
  const ::edition_unittest::TestGroup_OptionalGroup& optionalgroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestGroup_OptionalGroup* release_optionalgroup();
  ::edition_unittest::TestGroup_OptionalGroup* mutable_optionalgroup();
  void set_allocated_optionalgroup(::edition_unittest::TestGroup_OptionalGroup* value);
  void unsafe_arena_set_allocated_optionalgroup(::edition_unittest::TestGroup_OptionalGroup* value);
  ::edition_unittest::TestGroup_OptionalGroup* unsafe_arena_release_optionalgroup();

  private:
  const ::edition_unittest::TestGroup_OptionalGroup& _internal_optionalgroup() const;
  ::edition_unittest::TestGroup_OptionalGroup* _internal_mutable_optionalgroup();

  public:
  // .edition_unittest.ForeignEnum optional_foreign_enum = 22;
  bool has_optional_foreign_enum() const;
  void clear_optional_foreign_enum() ;
  ::edition_unittest::ForeignEnum optional_foreign_enum() const;
  void set_optional_foreign_enum(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_optional_foreign_enum() const;
  void _internal_set_optional_foreign_enum(::edition_unittest::ForeignEnum value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestGroup_OptionalGroup* optionalgroup_;
    int optional_foreign_enum_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestForeignNested final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestForeignNested) */ {
 public:
  inline TestForeignNested() : TestForeignNested(nullptr) {}
  ~TestForeignNested() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestForeignNested(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestForeignNested(const TestForeignNested& from) : TestForeignNested(nullptr, from) {}
  inline TestForeignNested(TestForeignNested&& from) noexcept
      : TestForeignNested(nullptr, std::move(from)) {}
  inline TestForeignNested& operator=(const TestForeignNested& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestForeignNested& operator=(TestForeignNested&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestForeignNested& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestForeignNested* internal_default_instance() {
    return reinterpret_cast<const TestForeignNested*>(
        &_TestForeignNested_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(TestForeignNested& a, TestForeignNested& b) { a.Swap(&b); }
  inline void Swap(TestForeignNested* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestForeignNested* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestForeignNested* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestForeignNested>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestForeignNested& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestForeignNested& from) { TestForeignNested::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestForeignNested* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestForeignNested"; }

 protected:
  explicit TestForeignNested(::google::protobuf::Arena* arena);
  TestForeignNested(::google::protobuf::Arena* arena, const TestForeignNested& from);
  TestForeignNested(::google::protobuf::Arena* arena, TestForeignNested&& from) noexcept
      : TestForeignNested(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kForeignNestedFieldNumber = 1,
  };
  // .edition_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
  bool has_foreign_nested() const;
  void clear_foreign_nested() ;
  const ::edition_unittest::TestAllTypes_NestedMessage& foreign_nested() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes_NestedMessage* release_foreign_nested();
  ::edition_unittest::TestAllTypes_NestedMessage* mutable_foreign_nested();
  void set_allocated_foreign_nested(::edition_unittest::TestAllTypes_NestedMessage* value);
  void unsafe_arena_set_allocated_foreign_nested(::edition_unittest::TestAllTypes_NestedMessage* value);
  ::edition_unittest::TestAllTypes_NestedMessage* unsafe_arena_release_foreign_nested();

  private:
  const ::edition_unittest::TestAllTypes_NestedMessage& _internal_foreign_nested() const;
  ::edition_unittest::TestAllTypes_NestedMessage* _internal_mutable_foreign_nested();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestForeignNested)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestForeignNested_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestForeignNested& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes_NestedMessage* foreign_nested_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestFieldOrderings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestFieldOrderings) */ {
 public:
  inline TestFieldOrderings() : TestFieldOrderings(nullptr) {}
  ~TestFieldOrderings() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestFieldOrderings(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestFieldOrderings(const TestFieldOrderings& from) : TestFieldOrderings(nullptr, from) {}
  inline TestFieldOrderings(TestFieldOrderings&& from) noexcept
      : TestFieldOrderings(nullptr, std::move(from)) {}
  inline TestFieldOrderings& operator=(const TestFieldOrderings& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestFieldOrderings& operator=(TestFieldOrderings&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestFieldOrderings& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestFieldOrderings* internal_default_instance() {
    return reinterpret_cast<const TestFieldOrderings*>(
        &_TestFieldOrderings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(TestFieldOrderings& a, TestFieldOrderings& b) { a.Swap(&b); }
  inline void Swap(TestFieldOrderings* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestFieldOrderings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestFieldOrderings* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestFieldOrderings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestFieldOrderings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestFieldOrderings& from) { TestFieldOrderings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestFieldOrderings* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestFieldOrderings"; }

 protected:
  explicit TestFieldOrderings(::google::protobuf::Arena* arena);
  TestFieldOrderings(::google::protobuf::Arena* arena, const TestFieldOrderings& from);
  TestFieldOrderings(::google::protobuf::Arena* arena, TestFieldOrderings&& from) noexcept
      : TestFieldOrderings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedMessage = TestFieldOrderings_NestedMessage;

  // accessors -------------------------------------------------------
  enum : int {
    kMyStringFieldNumber = 11,
    kOptionalNestedMessageFieldNumber = 200,
    kMyIntFieldNumber = 1,
    kMyFloatFieldNumber = 101,
  };
  // string my_string = 11;
  bool has_my_string() const;
  void clear_my_string() ;
  absl::string_view my_string() const;
  template <typename Arg_ = std::string&&>
  void set_my_string(Arg_&& arg);

  private:
  const std::string& _internal_my_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_my_string(
      absl::string_view value);

  public:
  // .edition_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
  bool has_optional_nested_message() const;
  void clear_optional_nested_message() ;
  const ::edition_unittest::TestFieldOrderings_NestedMessage& optional_nested_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestFieldOrderings_NestedMessage* release_optional_nested_message();
  ::edition_unittest::TestFieldOrderings_NestedMessage* mutable_optional_nested_message();
  void set_allocated_optional_nested_message(::edition_unittest::TestFieldOrderings_NestedMessage* value);
  void unsafe_arena_set_allocated_optional_nested_message(::edition_unittest::TestFieldOrderings_NestedMessage* value);
  ::edition_unittest::TestFieldOrderings_NestedMessage* unsafe_arena_release_optional_nested_message();

  private:
  const ::edition_unittest::TestFieldOrderings_NestedMessage& _internal_optional_nested_message() const;
  ::edition_unittest::TestFieldOrderings_NestedMessage* _internal_mutable_optional_nested_message();

  public:
  // int64 my_int = 1;
  bool has_my_int() const;
  void clear_my_int() ;
  ::int64_t my_int() const;
  void set_my_int(::int64_t value);

  private:
  ::int64_t _internal_my_int() const;
  void _internal_set_my_int(::int64_t value);

  public:
  // float my_float = 101;
  bool has_my_float() const;
  void clear_my_float() ;
  float my_float() const;
  void set_my_float(float value);

  private:
  float _internal_my_float() const;
  void _internal_set_my_float(float value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestFieldOrderings, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:edition_unittest.TestFieldOrderings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 1,
      53, 12>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestFieldOrderings_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestFieldOrderings& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr my_string_;
    ::edition_unittest::TestFieldOrderings_NestedMessage* optional_nested_message_;
    ::int64_t my_int_;
    float my_float_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestEagerMaybeLazy_NestedMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestEagerMaybeLazy.NestedMessage) */ {
 public:
  inline TestEagerMaybeLazy_NestedMessage() : TestEagerMaybeLazy_NestedMessage(nullptr) {}
  ~TestEagerMaybeLazy_NestedMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestEagerMaybeLazy_NestedMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestEagerMaybeLazy_NestedMessage(const TestEagerMaybeLazy_NestedMessage& from) : TestEagerMaybeLazy_NestedMessage(nullptr, from) {}
  inline TestEagerMaybeLazy_NestedMessage(TestEagerMaybeLazy_NestedMessage&& from) noexcept
      : TestEagerMaybeLazy_NestedMessage(nullptr, std::move(from)) {}
  inline TestEagerMaybeLazy_NestedMessage& operator=(const TestEagerMaybeLazy_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEagerMaybeLazy_NestedMessage& operator=(TestEagerMaybeLazy_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestEagerMaybeLazy_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestEagerMaybeLazy_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestEagerMaybeLazy_NestedMessage*>(
        &_TestEagerMaybeLazy_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(TestEagerMaybeLazy_NestedMessage& a, TestEagerMaybeLazy_NestedMessage& b) { a.Swap(&b); }
  inline void Swap(TestEagerMaybeLazy_NestedMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEagerMaybeLazy_NestedMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestEagerMaybeLazy_NestedMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestEagerMaybeLazy_NestedMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestEagerMaybeLazy_NestedMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestEagerMaybeLazy_NestedMessage& from) { TestEagerMaybeLazy_NestedMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestEagerMaybeLazy_NestedMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestEagerMaybeLazy.NestedMessage"; }

 protected:
  explicit TestEagerMaybeLazy_NestedMessage(::google::protobuf::Arena* arena);
  TestEagerMaybeLazy_NestedMessage(::google::protobuf::Arena* arena, const TestEagerMaybeLazy_NestedMessage& from);
  TestEagerMaybeLazy_NestedMessage(::google::protobuf::Arena* arena, TestEagerMaybeLazy_NestedMessage&& from) noexcept
      : TestEagerMaybeLazy_NestedMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPackedFieldNumber = 1,
  };
  // .edition_unittest.TestPackedTypes packed = 1;
  bool has_packed() const;
  void clear_packed() ;
  const ::edition_unittest::TestPackedTypes& packed() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestPackedTypes* release_packed();
  ::edition_unittest::TestPackedTypes* mutable_packed();
  void set_allocated_packed(::edition_unittest::TestPackedTypes* value);
  void unsafe_arena_set_allocated_packed(::edition_unittest::TestPackedTypes* value);
  ::edition_unittest::TestPackedTypes* unsafe_arena_release_packed();

  private:
  const ::edition_unittest::TestPackedTypes& _internal_packed() const;
  ::edition_unittest::TestPackedTypes* _internal_mutable_packed();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestEagerMaybeLazy.NestedMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestEagerMaybeLazy_NestedMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestEagerMaybeLazy_NestedMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestPackedTypes* packed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDynamicExtensions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestDynamicExtensions) */ {
 public:
  inline TestDynamicExtensions() : TestDynamicExtensions(nullptr) {}
  ~TestDynamicExtensions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDynamicExtensions(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDynamicExtensions(const TestDynamicExtensions& from) : TestDynamicExtensions(nullptr, from) {}
  inline TestDynamicExtensions(TestDynamicExtensions&& from) noexcept
      : TestDynamicExtensions(nullptr, std::move(from)) {}
  inline TestDynamicExtensions& operator=(const TestDynamicExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDynamicExtensions& operator=(TestDynamicExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDynamicExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDynamicExtensions* internal_default_instance() {
    return reinterpret_cast<const TestDynamicExtensions*>(
        &_TestDynamicExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 91;
  friend void swap(TestDynamicExtensions& a, TestDynamicExtensions& b) { a.Swap(&b); }
  inline void Swap(TestDynamicExtensions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDynamicExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDynamicExtensions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDynamicExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDynamicExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDynamicExtensions& from) { TestDynamicExtensions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDynamicExtensions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestDynamicExtensions"; }

 protected:
  explicit TestDynamicExtensions(::google::protobuf::Arena* arena);
  TestDynamicExtensions(::google::protobuf::Arena* arena, const TestDynamicExtensions& from);
  TestDynamicExtensions(::google::protobuf::Arena* arena, TestDynamicExtensions&& from) noexcept
      : TestDynamicExtensions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DynamicMessageType = TestDynamicExtensions_DynamicMessageType;
  using DynamicEnumType = TestDynamicExtensions_DynamicEnumType;
  static constexpr DynamicEnumType DYNAMIC_UNKNOWN = TestDynamicExtensions_DynamicEnumType_DYNAMIC_UNKNOWN;
  static constexpr DynamicEnumType DYNAMIC_FOO = TestDynamicExtensions_DynamicEnumType_DYNAMIC_FOO;
  static constexpr DynamicEnumType DYNAMIC_BAR = TestDynamicExtensions_DynamicEnumType_DYNAMIC_BAR;
  static constexpr DynamicEnumType DYNAMIC_BAZ = TestDynamicExtensions_DynamicEnumType_DYNAMIC_BAZ;
  static inline bool DynamicEnumType_IsValid(int value) {
    return TestDynamicExtensions_DynamicEnumType_IsValid(value);
  }
  static constexpr DynamicEnumType DynamicEnumType_MIN = TestDynamicExtensions_DynamicEnumType_DynamicEnumType_MIN;
  static constexpr DynamicEnumType DynamicEnumType_MAX = TestDynamicExtensions_DynamicEnumType_DynamicEnumType_MAX;
  static constexpr int DynamicEnumType_ARRAYSIZE = TestDynamicExtensions_DynamicEnumType_DynamicEnumType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DynamicEnumType_descriptor() {
    return TestDynamicExtensions_DynamicEnumType_descriptor();
  }
  template <typename T>
  static inline const std::string& DynamicEnumType_Name(T value) {
    return TestDynamicExtensions_DynamicEnumType_Name(value);
  }
  static inline bool DynamicEnumType_Parse(absl::string_view name, DynamicEnumType* value) {
    return TestDynamicExtensions_DynamicEnumType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedExtensionFieldNumber = 2005,
    kPackedExtensionFieldNumber = 2006,
    kMessageExtensionFieldNumber = 2003,
    kDynamicMessageExtensionFieldNumber = 2004,
    kScalarExtensionFieldNumber = 2000,
    kDynamicEnumExtensionFieldNumber = 2002,
    kEnumExtensionFieldNumber = 2001,
  };
  // repeated string repeated_extension = 2005;
  int repeated_extension_size() const;
  private:
  int _internal_repeated_extension_size() const;

  public:
  void clear_repeated_extension() ;
  absl::string_view repeated_extension(int index) const;
  void set_repeated_extension(int index, const std::string& value);
  void set_repeated_extension(int index, std::string&& value);
  void set_repeated_extension(int index, const char* value);
  void set_repeated_extension(int index, absl::string_view value);
  void add_repeated_extension(const std::string& value);
  void add_repeated_extension(std::string&& value);
  void add_repeated_extension(const char* value);
  void add_repeated_extension(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_extension() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_extension();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_extension() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_extension();

  public:
  // repeated sint32 packed_extension = 2006 [features = {
  int packed_extension_size() const;
  private:
  int _internal_packed_extension_size() const;

  public:
  void clear_packed_extension() ;
  ::int32_t packed_extension(int index) const;
  void set_packed_extension(int index, ::int32_t value);
  void add_packed_extension(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& packed_extension() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_packed_extension();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_packed_extension() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_packed_extension();

  public:
  // .edition_unittest.ForeignMessage message_extension = 2003;
  bool has_message_extension() const;
  void clear_message_extension() ;
  const ::edition_unittest::ForeignMessage& message_extension() const;
  PROTOBUF_NODISCARD ::edition_unittest::ForeignMessage* release_message_extension();
  ::edition_unittest::ForeignMessage* mutable_message_extension();
  void set_allocated_message_extension(::edition_unittest::ForeignMessage* value);
  void unsafe_arena_set_allocated_message_extension(::edition_unittest::ForeignMessage* value);
  ::edition_unittest::ForeignMessage* unsafe_arena_release_message_extension();

  private:
  const ::edition_unittest::ForeignMessage& _internal_message_extension() const;
  ::edition_unittest::ForeignMessage* _internal_mutable_message_extension();

  public:
  // .edition_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
  bool has_dynamic_message_extension() const;
  void clear_dynamic_message_extension() ;
  const ::edition_unittest::TestDynamicExtensions_DynamicMessageType& dynamic_message_extension() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestDynamicExtensions_DynamicMessageType* release_dynamic_message_extension();
  ::edition_unittest::TestDynamicExtensions_DynamicMessageType* mutable_dynamic_message_extension();
  void set_allocated_dynamic_message_extension(::edition_unittest::TestDynamicExtensions_DynamicMessageType* value);
  void unsafe_arena_set_allocated_dynamic_message_extension(::edition_unittest::TestDynamicExtensions_DynamicMessageType* value);
  ::edition_unittest::TestDynamicExtensions_DynamicMessageType* unsafe_arena_release_dynamic_message_extension();

  private:
  const ::edition_unittest::TestDynamicExtensions_DynamicMessageType& _internal_dynamic_message_extension() const;
  ::edition_unittest::TestDynamicExtensions_DynamicMessageType* _internal_mutable_dynamic_message_extension();

  public:
  // fixed32 scalar_extension = 2000;
  bool has_scalar_extension() const;
  void clear_scalar_extension() ;
  ::uint32_t scalar_extension() const;
  void set_scalar_extension(::uint32_t value);

  private:
  ::uint32_t _internal_scalar_extension() const;
  void _internal_set_scalar_extension(::uint32_t value);

  public:
  // .edition_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
  bool has_dynamic_enum_extension() const;
  void clear_dynamic_enum_extension() ;
  ::edition_unittest::TestDynamicExtensions_DynamicEnumType dynamic_enum_extension() const;
  void set_dynamic_enum_extension(::edition_unittest::TestDynamicExtensions_DynamicEnumType value);

  private:
  ::edition_unittest::TestDynamicExtensions_DynamicEnumType _internal_dynamic_enum_extension() const;
  void _internal_set_dynamic_enum_extension(::edition_unittest::TestDynamicExtensions_DynamicEnumType value);

  public:
  // .edition_unittest.ForeignEnum enum_extension = 2001;
  bool has_enum_extension() const;
  void clear_enum_extension() ;
  ::edition_unittest::ForeignEnum enum_extension() const;
  void set_enum_extension(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_enum_extension() const;
  void _internal_set_enum_extension(::edition_unittest::ForeignEnum value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestDynamicExtensions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      65, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDynamicExtensions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDynamicExtensions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_extension_;
    ::google::protobuf::RepeatedField<::int32_t> packed_extension_;
    ::google::protobuf::internal::CachedSize _packed_extension_cached_byte_size_;
    ::edition_unittest::ForeignMessage* message_extension_;
    ::edition_unittest::TestDynamicExtensions_DynamicMessageType* dynamic_message_extension_;
    ::uint32_t scalar_extension_;
    int dynamic_enum_extension_;
    int enum_extension_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDupFieldNumber final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestDupFieldNumber) */ {
 public:
  inline TestDupFieldNumber() : TestDupFieldNumber(nullptr) {}
  ~TestDupFieldNumber() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDupFieldNumber(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDupFieldNumber(const TestDupFieldNumber& from) : TestDupFieldNumber(nullptr, from) {}
  inline TestDupFieldNumber(TestDupFieldNumber&& from) noexcept
      : TestDupFieldNumber(nullptr, std::move(from)) {}
  inline TestDupFieldNumber& operator=(const TestDupFieldNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDupFieldNumber& operator=(TestDupFieldNumber&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDupFieldNumber& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestDupFieldNumber* internal_default_instance() {
    return reinterpret_cast<const TestDupFieldNumber*>(
        &_TestDupFieldNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(TestDupFieldNumber& a, TestDupFieldNumber& b) { a.Swap(&b); }
  inline void Swap(TestDupFieldNumber* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDupFieldNumber* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDupFieldNumber* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDupFieldNumber>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDupFieldNumber& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDupFieldNumber& from) { TestDupFieldNumber::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDupFieldNumber* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestDupFieldNumber"; }

 protected:
  explicit TestDupFieldNumber(::google::protobuf::Arena* arena);
  TestDupFieldNumber(::google::protobuf::Arena* arena, const TestDupFieldNumber& from);
  TestDupFieldNumber(::google::protobuf::Arena* arena, TestDupFieldNumber&& from) noexcept
      : TestDupFieldNumber(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Foo = TestDupFieldNumber_Foo;
  using Bar = TestDupFieldNumber_Bar;

  // accessors -------------------------------------------------------
  enum : int {
    kFooFieldNumber = 2,
    kBarFieldNumber = 3,
    kAFieldNumber = 1,
  };
  // .edition_unittest.TestDupFieldNumber.Foo foo = 2 [features = {
  bool has_foo() const;
  void clear_foo() ;
  const ::edition_unittest::TestDupFieldNumber_Foo& foo() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestDupFieldNumber_Foo* release_foo();
  ::edition_unittest::TestDupFieldNumber_Foo* mutable_foo();
  void set_allocated_foo(::edition_unittest::TestDupFieldNumber_Foo* value);
  void unsafe_arena_set_allocated_foo(::edition_unittest::TestDupFieldNumber_Foo* value);
  ::edition_unittest::TestDupFieldNumber_Foo* unsafe_arena_release_foo();

  private:
  const ::edition_unittest::TestDupFieldNumber_Foo& _internal_foo() const;
  ::edition_unittest::TestDupFieldNumber_Foo* _internal_mutable_foo();

  public:
  // .edition_unittest.TestDupFieldNumber.Bar bar = 3 [features = {
  bool has_bar() const;
  void clear_bar() ;
  const ::edition_unittest::TestDupFieldNumber_Bar& bar() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestDupFieldNumber_Bar* release_bar();
  ::edition_unittest::TestDupFieldNumber_Bar* mutable_bar();
  void set_allocated_bar(::edition_unittest::TestDupFieldNumber_Bar* value);
  void unsafe_arena_set_allocated_bar(::edition_unittest::TestDupFieldNumber_Bar* value);
  ::edition_unittest::TestDupFieldNumber_Bar* unsafe_arena_release_bar();

  private:
  const ::edition_unittest::TestDupFieldNumber_Bar& _internal_bar() const;
  ::edition_unittest::TestDupFieldNumber_Bar* _internal_mutable_bar();

  public:
  // int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestDupFieldNumber)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDupFieldNumber_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDupFieldNumber& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestDupFieldNumber_Foo* foo_;
    ::edition_unittest::TestDupFieldNumber_Bar* bar_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestDeprecatedFields final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestDeprecatedFields) */ {
 public:
  inline TestDeprecatedFields() : TestDeprecatedFields(nullptr) {}
  ~TestDeprecatedFields() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestDeprecatedFields(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestDeprecatedFields(const TestDeprecatedFields& from) : TestDeprecatedFields(nullptr, from) {}
  inline TestDeprecatedFields(TestDeprecatedFields&& from) noexcept
      : TestDeprecatedFields(nullptr, std::move(from)) {}
  inline TestDeprecatedFields& operator=(const TestDeprecatedFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestDeprecatedFields& operator=(TestDeprecatedFields&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestDeprecatedFields& default_instance() {
    return *internal_default_instance();
  }
  enum OneofFieldsCase {
    kDeprecatedInt32InOneof = 2,
    ONEOF_FIELDS_NOT_SET = 0,
  };
  static inline const TestDeprecatedFields* internal_default_instance() {
    return reinterpret_cast<const TestDeprecatedFields*>(
        &_TestDeprecatedFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(TestDeprecatedFields& a, TestDeprecatedFields& b) { a.Swap(&b); }
  inline void Swap(TestDeprecatedFields* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestDeprecatedFields* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestDeprecatedFields* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestDeprecatedFields>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestDeprecatedFields& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestDeprecatedFields& from) { TestDeprecatedFields::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestDeprecatedFields* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestDeprecatedFields"; }

 protected:
  explicit TestDeprecatedFields(::google::protobuf::Arena* arena);
  TestDeprecatedFields(::google::protobuf::Arena* arena, const TestDeprecatedFields& from);
  TestDeprecatedFields(::google::protobuf::Arena* arena, TestDeprecatedFields&& from) noexcept
      : TestDeprecatedFields(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeprecatedRepeatedStringFieldNumber = 4,
    kDeprecatedMessageFieldNumber = 3,
    kNestedFieldNumber = 5,
    kDeprecatedInt32FieldNumber = 1,
    kDeprecatedInt32InOneofFieldNumber = 2,
  };
  // repeated string deprecated_repeated_string = 4 [deprecated = true];
  [[deprecated]]  int deprecated_repeated_string_size() const;
  private:
  int _internal_deprecated_repeated_string_size() const;

  public:
  [[deprecated]]  void clear_deprecated_repeated_string() ;
  [[deprecated]] absl::string_view deprecated_repeated_string(int index) const;
  [[deprecated]] void set_deprecated_repeated_string(int index, const std::string& value);
  [[deprecated]] void set_deprecated_repeated_string(int index, std::string&& value);
  [[deprecated]] void set_deprecated_repeated_string(int index, const char* value);
  [[deprecated]] void set_deprecated_repeated_string(int index, absl::string_view value);
  [[deprecated]] void add_deprecated_repeated_string(const std::string& value);
  [[deprecated]] void add_deprecated_repeated_string(std::string&& value);
  [[deprecated]] void add_deprecated_repeated_string(const char* value);
  [[deprecated]] void add_deprecated_repeated_string(absl::string_view value);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& deprecated_repeated_string() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_deprecated_repeated_string();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_deprecated_repeated_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_deprecated_repeated_string();

  public:
  // .edition_unittest.TestAllTypes.NestedMessage deprecated_message = 3 [deprecated = true];
  [[deprecated]]  bool has_deprecated_message() const;
  [[deprecated]]  void clear_deprecated_message() ;
  [[deprecated]] const ::edition_unittest::TestAllTypes_NestedMessage& deprecated_message() const;
  [[deprecated]] PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes_NestedMessage* release_deprecated_message();
  [[deprecated]] ::edition_unittest::TestAllTypes_NestedMessage* mutable_deprecated_message();
  [[deprecated]] void set_allocated_deprecated_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  [[deprecated]] void unsafe_arena_set_allocated_deprecated_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  [[deprecated]] ::edition_unittest::TestAllTypes_NestedMessage* unsafe_arena_release_deprecated_message();

  private:
  const ::edition_unittest::TestAllTypes_NestedMessage& _internal_deprecated_message() const;
  ::edition_unittest::TestAllTypes_NestedMessage* _internal_mutable_deprecated_message();

  public:
  // .edition_unittest.TestDeprecatedFields nested = 5;
  bool has_nested() const;
  void clear_nested() ;
  const ::edition_unittest::TestDeprecatedFields& nested() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestDeprecatedFields* release_nested();
  ::edition_unittest::TestDeprecatedFields* mutable_nested();
  void set_allocated_nested(::edition_unittest::TestDeprecatedFields* value);
  void unsafe_arena_set_allocated_nested(::edition_unittest::TestDeprecatedFields* value);
  ::edition_unittest::TestDeprecatedFields* unsafe_arena_release_nested();

  private:
  const ::edition_unittest::TestDeprecatedFields& _internal_nested() const;
  ::edition_unittest::TestDeprecatedFields* _internal_mutable_nested();

  public:
  // int32 deprecated_int32 = 1 [deprecated = true];
  [[deprecated]]  bool has_deprecated_int32() const;
  [[deprecated]]  void clear_deprecated_int32() ;
  [[deprecated]] ::int32_t deprecated_int32() const;
  [[deprecated]] void set_deprecated_int32(::int32_t value);

  private:
  ::int32_t _internal_deprecated_int32() const;
  void _internal_set_deprecated_int32(::int32_t value);

  public:
  // int32 deprecated_int32_in_oneof = 2 [deprecated = true];
  [[deprecated]]  bool has_deprecated_int32_in_oneof() const;
  [[deprecated]]  void clear_deprecated_int32_in_oneof() ;
  [[deprecated]] ::int32_t deprecated_int32_in_oneof() const;
  [[deprecated]] void set_deprecated_int32_in_oneof(::int32_t value);

  private:
  ::int32_t _internal_deprecated_int32_in_oneof() const;
  void _internal_set_deprecated_int32_in_oneof(::int32_t value);

  public:
  void clear_oneof_fields();
  OneofFieldsCase oneof_fields_case() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestDeprecatedFields)
 private:
  class _Internal;
  void set_has_deprecated_int32_in_oneof();
  inline bool has_oneof_fields() const;
  inline void clear_has_oneof_fields();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestDeprecatedFields_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestDeprecatedFields& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> deprecated_repeated_string_;
    ::edition_unittest::TestAllTypes_NestedMessage* deprecated_message_;
    ::edition_unittest::TestDeprecatedFields* nested_;
    ::int32_t deprecated_int32_;
    union OneofFieldsUnion {
      constexpr OneofFieldsUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t deprecated_int32_in_oneof_;
    } oneof_fields_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestChildExtensionData_NestedTestAllExtensionsData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData) */ {
 public:
  inline TestChildExtensionData_NestedTestAllExtensionsData() : TestChildExtensionData_NestedTestAllExtensionsData(nullptr) {}
  ~TestChildExtensionData_NestedTestAllExtensionsData() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestChildExtensionData_NestedTestAllExtensionsData(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestChildExtensionData_NestedTestAllExtensionsData(const TestChildExtensionData_NestedTestAllExtensionsData& from) : TestChildExtensionData_NestedTestAllExtensionsData(nullptr, from) {}
  inline TestChildExtensionData_NestedTestAllExtensionsData(TestChildExtensionData_NestedTestAllExtensionsData&& from) noexcept
      : TestChildExtensionData_NestedTestAllExtensionsData(nullptr, std::move(from)) {}
  inline TestChildExtensionData_NestedTestAllExtensionsData& operator=(const TestChildExtensionData_NestedTestAllExtensionsData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestChildExtensionData_NestedTestAllExtensionsData& operator=(TestChildExtensionData_NestedTestAllExtensionsData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestChildExtensionData_NestedTestAllExtensionsData& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestChildExtensionData_NestedTestAllExtensionsData* internal_default_instance() {
    return reinterpret_cast<const TestChildExtensionData_NestedTestAllExtensionsData*>(
        &_TestChildExtensionData_NestedTestAllExtensionsData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(TestChildExtensionData_NestedTestAllExtensionsData& a, TestChildExtensionData_NestedTestAllExtensionsData& b) { a.Swap(&b); }
  inline void Swap(TestChildExtensionData_NestedTestAllExtensionsData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestChildExtensionData_NestedTestAllExtensionsData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestChildExtensionData_NestedTestAllExtensionsData* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestChildExtensionData_NestedTestAllExtensionsData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestChildExtensionData_NestedTestAllExtensionsData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestChildExtensionData_NestedTestAllExtensionsData& from) { TestChildExtensionData_NestedTestAllExtensionsData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestChildExtensionData_NestedTestAllExtensionsData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData"; }

 protected:
  explicit TestChildExtensionData_NestedTestAllExtensionsData(::google::protobuf::Arena* arena);
  TestChildExtensionData_NestedTestAllExtensionsData(::google::protobuf::Arena* arena, const TestChildExtensionData_NestedTestAllExtensionsData& from);
  TestChildExtensionData_NestedTestAllExtensionsData(::google::protobuf::Arena* arena, TestChildExtensionData_NestedTestAllExtensionsData&& from) noexcept
      : TestChildExtensionData_NestedTestAllExtensionsData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedDynamicExtensions = TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions;

  // accessors -------------------------------------------------------
  enum : int {
    kDynamicFieldNumber = 409707008,
  };
  // .edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions dynamic = 409707008;
  bool has_dynamic() const;
  void clear_dynamic() ;
  const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& dynamic() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* release_dynamic();
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* mutable_dynamic();
  void set_allocated_dynamic(::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* value);
  void unsafe_arena_set_allocated_dynamic(::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* value);
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* unsafe_arena_release_dynamic();

  private:
  const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& _internal_dynamic() const;
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* _internal_mutable_dynamic();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestChildExtensionData_NestedTestAllExtensionsData_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestChildExtensionData_NestedTestAllExtensionsData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* dynamic_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestChildExtension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestChildExtension) */ {
 public:
  inline TestChildExtension() : TestChildExtension(nullptr) {}
  ~TestChildExtension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestChildExtension(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestChildExtension(const TestChildExtension& from) : TestChildExtension(nullptr, from) {}
  inline TestChildExtension(TestChildExtension&& from) noexcept
      : TestChildExtension(nullptr, std::move(from)) {}
  inline TestChildExtension& operator=(const TestChildExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestChildExtension& operator=(TestChildExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestChildExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestChildExtension* internal_default_instance() {
    return reinterpret_cast<const TestChildExtension*>(
        &_TestChildExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(TestChildExtension& a, TestChildExtension& b) { a.Swap(&b); }
  inline void Swap(TestChildExtension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestChildExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestChildExtension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestChildExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestChildExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestChildExtension& from) { TestChildExtension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestChildExtension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestChildExtension"; }

 protected:
  explicit TestChildExtension(::google::protobuf::Arena* arena);
  TestChildExtension(::google::protobuf::Arena* arena, const TestChildExtension& from);
  TestChildExtension(::google::protobuf::Arena* arena, TestChildExtension&& from) noexcept
      : TestChildExtension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
    kOptionalExtensionFieldNumber = 3,
  };
  // string a = 1;
  bool has_a() const;
  void clear_a() ;
  absl::string_view a() const;
  template <typename Arg_ = std::string&&>
  void set_a(Arg_&& arg);

  private:
  const std::string& _internal_a() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_a(
      absl::string_view value);

  public:
  // string b = 2;
  bool has_b() const;
  void clear_b() ;
  absl::string_view b() const;
  template <typename Arg_ = std::string&&>
  void set_b(Arg_&& arg);

  private:
  const std::string& _internal_b() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_b(
      absl::string_view value);

  public:
  // .edition_unittest.TestAllExtensions optional_extension = 3;
  bool has_optional_extension() const;
  void clear_optional_extension() ;
  const ::edition_unittest::TestAllExtensions& optional_extension() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllExtensions* release_optional_extension();
  ::edition_unittest::TestAllExtensions* mutable_optional_extension();
  void set_allocated_optional_extension(::edition_unittest::TestAllExtensions* value);
  void unsafe_arena_set_allocated_optional_extension(::edition_unittest::TestAllExtensions* value);
  ::edition_unittest::TestAllExtensions* unsafe_arena_release_optional_extension();

  private:
  const ::edition_unittest::TestAllExtensions& _internal_optional_extension() const;
  ::edition_unittest::TestAllExtensions* _internal_mutable_optional_extension();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestChildExtension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestChildExtension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestChildExtension& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr a_;
    ::google::protobuf::internal::ArenaStringPtr b_;
    ::edition_unittest::TestAllExtensions* optional_extension_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestCamelCaseFieldNames final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestCamelCaseFieldNames) */ {
 public:
  inline TestCamelCaseFieldNames() : TestCamelCaseFieldNames(nullptr) {}
  ~TestCamelCaseFieldNames() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestCamelCaseFieldNames(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestCamelCaseFieldNames(const TestCamelCaseFieldNames& from) : TestCamelCaseFieldNames(nullptr, from) {}
  inline TestCamelCaseFieldNames(TestCamelCaseFieldNames&& from) noexcept
      : TestCamelCaseFieldNames(nullptr, std::move(from)) {}
  inline TestCamelCaseFieldNames& operator=(const TestCamelCaseFieldNames& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestCamelCaseFieldNames& operator=(TestCamelCaseFieldNames&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestCamelCaseFieldNames& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestCamelCaseFieldNames* internal_default_instance() {
    return reinterpret_cast<const TestCamelCaseFieldNames*>(
        &_TestCamelCaseFieldNames_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(TestCamelCaseFieldNames& a, TestCamelCaseFieldNames& b) { a.Swap(&b); }
  inline void Swap(TestCamelCaseFieldNames* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestCamelCaseFieldNames* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestCamelCaseFieldNames* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestCamelCaseFieldNames>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestCamelCaseFieldNames& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestCamelCaseFieldNames& from) { TestCamelCaseFieldNames::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestCamelCaseFieldNames* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestCamelCaseFieldNames"; }

 protected:
  explicit TestCamelCaseFieldNames(::google::protobuf::Arena* arena);
  TestCamelCaseFieldNames(::google::protobuf::Arena* arena, const TestCamelCaseFieldNames& from);
  TestCamelCaseFieldNames(::google::protobuf::Arena* arena, TestCamelCaseFieldNames&& from) noexcept
      : TestCamelCaseFieldNames(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedPrimitiveFieldFieldNumber = 7,
    kRepeatedStringFieldFieldNumber = 8,
    kRepeatedEnumFieldFieldNumber = 9,
    kRepeatedMessageFieldFieldNumber = 10,
    kRepeatedStringPieceFieldFieldNumber = 11,
    kRepeatedCordFieldFieldNumber = 12,
    kStringFieldFieldNumber = 2,
    kStringPieceFieldFieldNumber = 5,
    kCordFieldFieldNumber = 6,
    kMessageFieldFieldNumber = 4,
    kPrimitiveFieldFieldNumber = 1,
    kEnumFieldFieldNumber = 3,
  };
  // repeated int32 RepeatedPrimitiveField = 7;
  int repeatedprimitivefield_size() const;
  private:
  int _internal_repeatedprimitivefield_size() const;

  public:
  void clear_repeatedprimitivefield() ;
  ::int32_t repeatedprimitivefield(int index) const;
  void set_repeatedprimitivefield(int index, ::int32_t value);
  void add_repeatedprimitivefield(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeatedprimitivefield() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeatedprimitivefield();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeatedprimitivefield() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeatedprimitivefield();

  public:
  // repeated string RepeatedStringField = 8;
  int repeatedstringfield_size() const;
  private:
  int _internal_repeatedstringfield_size() const;

  public:
  void clear_repeatedstringfield() ;
  absl::string_view repeatedstringfield(int index) const;
  void set_repeatedstringfield(int index, const std::string& value);
  void set_repeatedstringfield(int index, std::string&& value);
  void set_repeatedstringfield(int index, const char* value);
  void set_repeatedstringfield(int index, absl::string_view value);
  void add_repeatedstringfield(const std::string& value);
  void add_repeatedstringfield(std::string&& value);
  void add_repeatedstringfield(const char* value);
  void add_repeatedstringfield(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeatedstringfield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeatedstringfield();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeatedstringfield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeatedstringfield();

  public:
  // repeated .edition_unittest.ForeignEnum RepeatedEnumField = 9;
  int repeatedenumfield_size() const;
  private:
  int _internal_repeatedenumfield_size() const;

  public:
  void clear_repeatedenumfield() ;
  public:
  ::edition_unittest::ForeignEnum repeatedenumfield(int index) const;
  void set_repeatedenumfield(int index, ::edition_unittest::ForeignEnum value);
  void add_repeatedenumfield(::edition_unittest::ForeignEnum value);
  const ::google::protobuf::RepeatedField<int>& repeatedenumfield() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeatedenumfield();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeatedenumfield() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeatedenumfield();

  public:
  // repeated .edition_unittest.ForeignMessage RepeatedMessageField = 10;
  int repeatedmessagefield_size() const;
  private:
  int _internal_repeatedmessagefield_size() const;

  public:
  void clear_repeatedmessagefield() ;
  ::edition_unittest::ForeignMessage* mutable_repeatedmessagefield(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* mutable_repeatedmessagefield();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& _internal_repeatedmessagefield() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* _internal_mutable_repeatedmessagefield();
  public:
  const ::edition_unittest::ForeignMessage& repeatedmessagefield(int index) const;
  ::edition_unittest::ForeignMessage* add_repeatedmessagefield();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& repeatedmessagefield() const;
  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  int repeatedstringpiecefield_size() const;
  private:
  int _internal_repeatedstringpiecefield_size() const;

  public:
  void clear_repeatedstringpiecefield() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& repeatedstringpiecefield(int index) const;
  std::string* mutable_repeatedstringpiecefield(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repeatedstringpiecefield(int index, Arg_&& value, Args_... args);
  std::string* add_repeatedstringpiecefield();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_repeatedstringpiecefield(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeatedstringpiecefield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeatedstringpiecefield();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeatedstringpiecefield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeatedstringpiecefield();

  public:
  // repeated string RepeatedCordField = 12 [ctype = CORD];
  int repeatedcordfield_size() const;
  private:
  int _internal_repeatedcordfield_size() const;

  public:
  void clear_repeatedcordfield() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& repeatedcordfield(int index) const;
  std::string* mutable_repeatedcordfield(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repeatedcordfield(int index, Arg_&& value, Args_... args);
  std::string* add_repeatedcordfield();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_repeatedcordfield(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeatedcordfield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeatedcordfield();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeatedcordfield() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeatedcordfield();

  public:
  // string StringField = 2;
  bool has_stringfield() const;
  void clear_stringfield() ;
  absl::string_view stringfield() const;
  template <typename Arg_ = std::string&&>
  void set_stringfield(Arg_&& arg);

  private:
  const std::string& _internal_stringfield() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stringfield(
      absl::string_view value);

  public:
  // string StringPieceField = 5 [ctype = STRING_PIECE];
  bool has_stringpiecefield() const;
  void clear_stringpiecefield() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& stringpiecefield() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stringpiecefield(Arg_&& arg, Args_... args);
  std::string* mutable_stringpiecefield();
  PROTOBUF_NODISCARD std::string* release_stringpiecefield();
  void set_allocated_stringpiecefield(std::string* value);

  private:
  const std::string& _internal_stringpiecefield() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stringpiecefield(
      const std::string& value);
  std::string* _internal_mutable_stringpiecefield();

  public:
  // string CordField = 6 [ctype = CORD];
  bool has_cordfield() const;
  void clear_cordfield() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& cordfield() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cordfield(Arg_&& arg, Args_... args);
  std::string* mutable_cordfield();
  PROTOBUF_NODISCARD std::string* release_cordfield();
  void set_allocated_cordfield(std::string* value);

  private:
  const std::string& _internal_cordfield() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cordfield(
      const std::string& value);
  std::string* _internal_mutable_cordfield();

  public:
  // .edition_unittest.ForeignMessage MessageField = 4;
  bool has_messagefield() const;
  void clear_messagefield() ;
  const ::edition_unittest::ForeignMessage& messagefield() const;
  PROTOBUF_NODISCARD ::edition_unittest::ForeignMessage* release_messagefield();
  ::edition_unittest::ForeignMessage* mutable_messagefield();
  void set_allocated_messagefield(::edition_unittest::ForeignMessage* value);
  void unsafe_arena_set_allocated_messagefield(::edition_unittest::ForeignMessage* value);
  ::edition_unittest::ForeignMessage* unsafe_arena_release_messagefield();

  private:
  const ::edition_unittest::ForeignMessage& _internal_messagefield() const;
  ::edition_unittest::ForeignMessage* _internal_mutable_messagefield();

  public:
  // int32 PrimitiveField = 1;
  bool has_primitivefield() const;
  void clear_primitivefield() ;
  ::int32_t primitivefield() const;
  void set_primitivefield(::int32_t value);

  private:
  ::int32_t _internal_primitivefield() const;
  void _internal_set_primitivefield(::int32_t value);

  public:
  // .edition_unittest.ForeignEnum EnumField = 3;
  bool has_enumfield() const;
  void clear_enumfield() ;
  ::edition_unittest::ForeignEnum enumfield() const;
  void set_enumfield(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_enumfield() const;
  void _internal_set_enumfield(::edition_unittest::ForeignEnum value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestCamelCaseFieldNames)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 4,
      153, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestCamelCaseFieldNames_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestCamelCaseFieldNames& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> repeatedprimitivefield_;
    ::google::protobuf::internal::CachedSize _repeatedprimitivefield_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> repeatedstringfield_;
    ::google::protobuf::RepeatedField<int> repeatedenumfield_;
    ::google::protobuf::internal::CachedSize _repeatedenumfield_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::ForeignMessage > repeatedmessagefield_;
    ::google::protobuf::RepeatedPtrField<std::string> repeatedstringpiecefield_;
    ::google::protobuf::RepeatedPtrField<std::string> repeatedcordfield_;
    ::google::protobuf::internal::ArenaStringPtr stringfield_;
    ::google::protobuf::internal::ArenaStringPtr stringpiecefield_;
    ::google::protobuf::internal::ArenaStringPtr cordfield_;
    ::edition_unittest::ForeignMessage* messagefield_;
    ::int32_t primitivefield_;
    int enumfield_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestAllTypes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestAllTypes) */ {
 public:
  inline TestAllTypes() : TestAllTypes(nullptr) {}
  ~TestAllTypes() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestAllTypes(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestAllTypes(const TestAllTypes& from) : TestAllTypes(nullptr, from) {}
  inline TestAllTypes(TestAllTypes&& from) noexcept
      : TestAllTypes(nullptr, std::move(from)) {}
  inline TestAllTypes& operator=(const TestAllTypes& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestAllTypes& operator=(TestAllTypes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestAllTypes& default_instance() {
    return *internal_default_instance();
  }
  enum OneofFieldCase {
    kOneofUint32 = 111,
    kOneofNestedMessage = 112,
    kOneofString = 113,
    kOneofBytes = 114,
    kOneofCord = 115,
    kOneofStringPiece = 116,
    kOneofLazyNestedMessage = 117,
    ONEOF_FIELD_NOT_SET = 0,
  };
  static inline const TestAllTypes* internal_default_instance() {
    return reinterpret_cast<const TestAllTypes*>(
        &_TestAllTypes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TestAllTypes& a, TestAllTypes& b) { a.Swap(&b); }
  inline void Swap(TestAllTypes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestAllTypes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestAllTypes* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestAllTypes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestAllTypes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestAllTypes& from) { TestAllTypes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestAllTypes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestAllTypes"; }

 protected:
  explicit TestAllTypes(::google::protobuf::Arena* arena);
  TestAllTypes(::google::protobuf::Arena* arena, const TestAllTypes& from);
  TestAllTypes(::google::protobuf::Arena* arena, TestAllTypes&& from) noexcept
      : TestAllTypes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedMessage = TestAllTypes_NestedMessage;
  using OptionalGroup = TestAllTypes_OptionalGroup;
  using RepeatedGroup = TestAllTypes_RepeatedGroup;
  using NestedEnum = TestAllTypes_NestedEnum;
  static constexpr NestedEnum FOO = TestAllTypes_NestedEnum_FOO;
  static constexpr NestedEnum BAR = TestAllTypes_NestedEnum_BAR;
  static constexpr NestedEnum BAZ = TestAllTypes_NestedEnum_BAZ;
  static constexpr NestedEnum NEG = TestAllTypes_NestedEnum_NEG;
  static inline bool NestedEnum_IsValid(int value) {
    return TestAllTypes_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN = TestAllTypes_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX = TestAllTypes_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE = TestAllTypes_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NestedEnum_descriptor() {
    return TestAllTypes_NestedEnum_descriptor();
  }
  template <typename T>
  static inline const std::string& NestedEnum_Name(T value) {
    return TestAllTypes_NestedEnum_Name(value);
  }
  static inline bool NestedEnum_Parse(absl::string_view name, NestedEnum* value) {
    return TestAllTypes_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedInt32FieldNumber = 31,
    kRepeatedInt64FieldNumber = 32,
    kRepeatedUint32FieldNumber = 33,
    kRepeatedUint64FieldNumber = 34,
    kRepeatedSint32FieldNumber = 35,
    kRepeatedSint64FieldNumber = 36,
    kRepeatedFixed32FieldNumber = 37,
    kRepeatedFixed64FieldNumber = 38,
    kRepeatedSfixed32FieldNumber = 39,
    kRepeatedSfixed64FieldNumber = 40,
    kRepeatedFloatFieldNumber = 41,
    kRepeatedDoubleFieldNumber = 42,
    kRepeatedBoolFieldNumber = 43,
    kRepeatedStringFieldNumber = 44,
    kRepeatedBytesFieldNumber = 45,
    kRepeatedgroupFieldNumber = 46,
    kRepeatedNestedMessageFieldNumber = 48,
    kRepeatedForeignMessageFieldNumber = 49,
    kRepeatedImportMessageFieldNumber = 50,
    kRepeatedNestedEnumFieldNumber = 51,
    kRepeatedForeignEnumFieldNumber = 52,
    kRepeatedImportEnumFieldNumber = 53,
    kRepeatedStringPieceFieldNumber = 54,
    kRepeatedCordFieldNumber = 55,
    kRepeatedLazyMessageFieldNumber = 57,
    kOptionalStringFieldNumber = 14,
    kOptionalBytesFieldNumber = 15,
    kOptionalStringPieceFieldNumber = 24,
    kOptionalCordFieldNumber = 25,
    kDefaultStringFieldNumber = 74,
    kDefaultBytesFieldNumber = 75,
    kDefaultStringPieceFieldNumber = 84,
    kDefaultCordFieldNumber = 85,
    kOptionalgroupFieldNumber = 16,
    kOptionalNestedMessageFieldNumber = 18,
    kOptionalForeignMessageFieldNumber = 19,
    kOptionalImportMessageFieldNumber = 20,
    kOptionalPublicImportMessageFieldNumber = 26,
    kOptionalLazyMessageFieldNumber = 27,
    kOptionalUnverifiedLazyMessageFieldNumber = 28,
    kOptionalInt64FieldNumber = 2,
    kOptionalInt32FieldNumber = 1,
    kOptionalUint32FieldNumber = 3,
    kOptionalUint64FieldNumber = 4,
    kOptionalSint64FieldNumber = 6,
    kOptionalSint32FieldNumber = 5,
    kOptionalFixed32FieldNumber = 7,
    kOptionalFixed64FieldNumber = 8,
    kOptionalSfixed64FieldNumber = 10,
    kOptionalSfixed32FieldNumber = 9,
    kOptionalFloatFieldNumber = 11,
    kOptionalDoubleFieldNumber = 12,
    kOptionalBoolFieldNumber = 13,
    kDefaultImportEnumFieldNumber = 83,
    kOptionalNestedEnumFieldNumber = 21,
    kOptionalForeignEnumFieldNumber = 22,
    kOptionalImportEnumFieldNumber = 23,
    kDefaultInt32FieldNumber = 61,
    kDefaultInt64FieldNumber = 62,
    kDefaultUint64FieldNumber = 64,
    kDefaultUint32FieldNumber = 63,
    kDefaultSint32FieldNumber = 65,
    kDefaultSint64FieldNumber = 66,
    kDefaultFixed64FieldNumber = 68,
    kDefaultFixed32FieldNumber = 67,
    kDefaultSfixed32FieldNumber = 69,
    kDefaultSfixed64FieldNumber = 70,
    kDefaultDoubleFieldNumber = 72,
    kDefaultFloatFieldNumber = 71,
    kDefaultBoolFieldNumber = 73,
    kDefaultNestedEnumFieldNumber = 81,
    kDefaultForeignEnumFieldNumber = 82,
    kOneofUint32FieldNumber = 111,
    kOneofNestedMessageFieldNumber = 112,
    kOneofStringFieldNumber = 113,
    kOneofBytesFieldNumber = 114,
    kOneofCordFieldNumber = 115,
    kOneofStringPieceFieldNumber = 116,
    kOneofLazyNestedMessageFieldNumber = 117,
  };
  // repeated int32 repeated_int32 = 31;
  int repeated_int32_size() const;
  private:
  int _internal_repeated_int32_size() const;

  public:
  void clear_repeated_int32() ;
  ::int32_t repeated_int32(int index) const;
  void set_repeated_int32(int index, ::int32_t value);
  void add_repeated_int32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeated_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeated_int32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeated_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeated_int32();

  public:
  // repeated int64 repeated_int64 = 32;
  int repeated_int64_size() const;
  private:
  int _internal_repeated_int64_size() const;

  public:
  void clear_repeated_int64() ;
  ::int64_t repeated_int64(int index) const;
  void set_repeated_int64(int index, ::int64_t value);
  void add_repeated_int64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& repeated_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_repeated_int64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_repeated_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_repeated_int64();

  public:
  // repeated uint32 repeated_uint32 = 33;
  int repeated_uint32_size() const;
  private:
  int _internal_repeated_uint32_size() const;

  public:
  void clear_repeated_uint32() ;
  ::uint32_t repeated_uint32(int index) const;
  void set_repeated_uint32(int index, ::uint32_t value);
  void add_repeated_uint32(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& repeated_uint32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_repeated_uint32();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_repeated_uint32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_repeated_uint32();

  public:
  // repeated uint64 repeated_uint64 = 34;
  int repeated_uint64_size() const;
  private:
  int _internal_repeated_uint64_size() const;

  public:
  void clear_repeated_uint64() ;
  ::uint64_t repeated_uint64(int index) const;
  void set_repeated_uint64(int index, ::uint64_t value);
  void add_repeated_uint64(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& repeated_uint64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_repeated_uint64();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_repeated_uint64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_repeated_uint64();

  public:
  // repeated sint32 repeated_sint32 = 35;
  int repeated_sint32_size() const;
  private:
  int _internal_repeated_sint32_size() const;

  public:
  void clear_repeated_sint32() ;
  ::int32_t repeated_sint32(int index) const;
  void set_repeated_sint32(int index, ::int32_t value);
  void add_repeated_sint32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeated_sint32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeated_sint32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeated_sint32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeated_sint32();

  public:
  // repeated sint64 repeated_sint64 = 36;
  int repeated_sint64_size() const;
  private:
  int _internal_repeated_sint64_size() const;

  public:
  void clear_repeated_sint64() ;
  ::int64_t repeated_sint64(int index) const;
  void set_repeated_sint64(int index, ::int64_t value);
  void add_repeated_sint64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& repeated_sint64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_repeated_sint64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_repeated_sint64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_repeated_sint64();

  public:
  // repeated fixed32 repeated_fixed32 = 37;
  int repeated_fixed32_size() const;
  private:
  int _internal_repeated_fixed32_size() const;

  public:
  void clear_repeated_fixed32() ;
  ::uint32_t repeated_fixed32(int index) const;
  void set_repeated_fixed32(int index, ::uint32_t value);
  void add_repeated_fixed32(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& repeated_fixed32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_repeated_fixed32();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_repeated_fixed32() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_repeated_fixed32();

  public:
  // repeated fixed64 repeated_fixed64 = 38;
  int repeated_fixed64_size() const;
  private:
  int _internal_repeated_fixed64_size() const;

  public:
  void clear_repeated_fixed64() ;
  ::uint64_t repeated_fixed64(int index) const;
  void set_repeated_fixed64(int index, ::uint64_t value);
  void add_repeated_fixed64(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& repeated_fixed64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_repeated_fixed64();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_repeated_fixed64() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_repeated_fixed64();

  public:
  // repeated sfixed32 repeated_sfixed32 = 39;
  int repeated_sfixed32_size() const;
  private:
  int _internal_repeated_sfixed32_size() const;

  public:
  void clear_repeated_sfixed32() ;
  ::int32_t repeated_sfixed32(int index) const;
  void set_repeated_sfixed32(int index, ::int32_t value);
  void add_repeated_sfixed32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeated_sfixed32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeated_sfixed32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeated_sfixed32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeated_sfixed32();

  public:
  // repeated sfixed64 repeated_sfixed64 = 40;
  int repeated_sfixed64_size() const;
  private:
  int _internal_repeated_sfixed64_size() const;

  public:
  void clear_repeated_sfixed64() ;
  ::int64_t repeated_sfixed64(int index) const;
  void set_repeated_sfixed64(int index, ::int64_t value);
  void add_repeated_sfixed64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& repeated_sfixed64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_repeated_sfixed64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_repeated_sfixed64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_repeated_sfixed64();

  public:
  // repeated float repeated_float = 41;
  int repeated_float_size() const;
  private:
  int _internal_repeated_float_size() const;

  public:
  void clear_repeated_float() ;
  float repeated_float(int index) const;
  void set_repeated_float(int index, float value);
  void add_repeated_float(float value);
  const ::google::protobuf::RepeatedField<float>& repeated_float() const;
  ::google::protobuf::RepeatedField<float>* mutable_repeated_float();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_repeated_float() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_repeated_float();

  public:
  // repeated double repeated_double = 42;
  int repeated_double_size() const;
  private:
  int _internal_repeated_double_size() const;

  public:
  void clear_repeated_double() ;
  double repeated_double(int index) const;
  void set_repeated_double(int index, double value);
  void add_repeated_double(double value);
  const ::google::protobuf::RepeatedField<double>& repeated_double() const;
  ::google::protobuf::RepeatedField<double>* mutable_repeated_double();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_repeated_double() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_repeated_double();

  public:
  // repeated bool repeated_bool = 43;
  int repeated_bool_size() const;
  private:
  int _internal_repeated_bool_size() const;

  public:
  void clear_repeated_bool() ;
  bool repeated_bool(int index) const;
  void set_repeated_bool(int index, bool value);
  void add_repeated_bool(bool value);
  const ::google::protobuf::RepeatedField<bool>& repeated_bool() const;
  ::google::protobuf::RepeatedField<bool>* mutable_repeated_bool();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_repeated_bool() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_repeated_bool();

  public:
  // repeated string repeated_string = 44;
  int repeated_string_size() const;
  private:
  int _internal_repeated_string_size() const;

  public:
  void clear_repeated_string() ;
  absl::string_view repeated_string(int index) const;
  void set_repeated_string(int index, const std::string& value);
  void set_repeated_string(int index, std::string&& value);
  void set_repeated_string(int index, const char* value);
  void set_repeated_string(int index, absl::string_view value);
  void add_repeated_string(const std::string& value);
  void add_repeated_string(std::string&& value);
  void add_repeated_string(const char* value);
  void add_repeated_string(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string();

  public:
  // repeated bytes repeated_bytes = 45;
  int repeated_bytes_size() const;
  private:
  int _internal_repeated_bytes_size() const;

  public:
  void clear_repeated_bytes() ;
  absl::string_view repeated_bytes(int index) const;
  void set_repeated_bytes(int index, const std::string& value);
  void set_repeated_bytes(int index, std::string&& value);
  void set_repeated_bytes(int index, const char* value);
  void set_repeated_bytes(int index, absl::string_view value);
  void add_repeated_bytes(const std::string& value);
  void add_repeated_bytes(std::string&& value);
  void add_repeated_bytes(const char* value);
  void add_repeated_bytes(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_bytes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_bytes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_bytes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_bytes();

  public:
  // repeated .edition_unittest.TestAllTypes.RepeatedGroup repeatedgroup = 46 [features = {
  int repeatedgroup_size() const;
  private:
  int _internal_repeatedgroup_size() const;

  public:
  void clear_repeatedgroup() ;
  ::edition_unittest::TestAllTypes_RepeatedGroup* mutable_repeatedgroup(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_RepeatedGroup>* mutable_repeatedgroup();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_RepeatedGroup>& _internal_repeatedgroup() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_RepeatedGroup>* _internal_mutable_repeatedgroup();
  public:
  const ::edition_unittest::TestAllTypes_RepeatedGroup& repeatedgroup(int index) const;
  ::edition_unittest::TestAllTypes_RepeatedGroup* add_repeatedgroup();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_RepeatedGroup>& repeatedgroup() const;
  // repeated .edition_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  int repeated_nested_message_size() const;
  private:
  int _internal_repeated_nested_message_size() const;

  public:
  void clear_repeated_nested_message() ;
  ::edition_unittest::TestAllTypes_NestedMessage* mutable_repeated_nested_message(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>* mutable_repeated_nested_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>& _internal_repeated_nested_message() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>* _internal_mutable_repeated_nested_message();
  public:
  const ::edition_unittest::TestAllTypes_NestedMessage& repeated_nested_message(int index) const;
  ::edition_unittest::TestAllTypes_NestedMessage* add_repeated_nested_message();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>& repeated_nested_message() const;
  // repeated .edition_unittest.ForeignMessage repeated_foreign_message = 49;
  int repeated_foreign_message_size() const;
  private:
  int _internal_repeated_foreign_message_size() const;

  public:
  void clear_repeated_foreign_message() ;
  ::edition_unittest::ForeignMessage* mutable_repeated_foreign_message(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* mutable_repeated_foreign_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& _internal_repeated_foreign_message() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* _internal_mutable_repeated_foreign_message();
  public:
  const ::edition_unittest::ForeignMessage& repeated_foreign_message(int index) const;
  ::edition_unittest::ForeignMessage* add_repeated_foreign_message();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& repeated_foreign_message() const;
  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  int repeated_import_message_size() const;
  private:
  int _internal_repeated_import_message_size() const;

  public:
  void clear_repeated_import_message() ;
  ::protobuf_unittest_import::ImportMessage* mutable_repeated_import_message(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest_import::ImportMessage>* mutable_repeated_import_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest_import::ImportMessage>& _internal_repeated_import_message() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest_import::ImportMessage>* _internal_mutable_repeated_import_message();
  public:
  const ::protobuf_unittest_import::ImportMessage& repeated_import_message(int index) const;
  ::protobuf_unittest_import::ImportMessage* add_repeated_import_message();
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest_import::ImportMessage>& repeated_import_message() const;
  // repeated .edition_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  int repeated_nested_enum_size() const;
  private:
  int _internal_repeated_nested_enum_size() const;

  public:
  void clear_repeated_nested_enum() ;
  public:
  ::edition_unittest::TestAllTypes_NestedEnum repeated_nested_enum(int index) const;
  void set_repeated_nested_enum(int index, ::edition_unittest::TestAllTypes_NestedEnum value);
  void add_repeated_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value);
  const ::google::protobuf::RepeatedField<int>& repeated_nested_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_nested_enum();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_nested_enum() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_nested_enum();

  public:
  // repeated .edition_unittest.ForeignEnum repeated_foreign_enum = 52;
  int repeated_foreign_enum_size() const;
  private:
  int _internal_repeated_foreign_enum_size() const;

  public:
  void clear_repeated_foreign_enum() ;
  public:
  ::edition_unittest::ForeignEnum repeated_foreign_enum(int index) const;
  void set_repeated_foreign_enum(int index, ::edition_unittest::ForeignEnum value);
  void add_repeated_foreign_enum(::edition_unittest::ForeignEnum value);
  const ::google::protobuf::RepeatedField<int>& repeated_foreign_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_foreign_enum();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_foreign_enum() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_foreign_enum();

  public:
  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  int repeated_import_enum_size() const;
  private:
  int _internal_repeated_import_enum_size() const;

  public:
  void clear_repeated_import_enum() ;
  public:
  ::protobuf_unittest_import::ImportEnum repeated_import_enum(int index) const;
  void set_repeated_import_enum(int index, ::protobuf_unittest_import::ImportEnum value);
  void add_repeated_import_enum(::protobuf_unittest_import::ImportEnum value);
  const ::google::protobuf::RepeatedField<int>& repeated_import_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_import_enum();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_repeated_import_enum() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_repeated_import_enum();

  public:
  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  int repeated_string_piece_size() const;
  private:
  int _internal_repeated_string_piece_size() const;

  public:
  void clear_repeated_string_piece() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& repeated_string_piece(int index) const;
  std::string* mutable_repeated_string_piece(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repeated_string_piece(int index, Arg_&& value, Args_... args);
  std::string* add_repeated_string_piece();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_repeated_string_piece(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_string_piece() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_string_piece();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_string_piece() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_string_piece();

  public:
  // repeated string repeated_cord = 55 [ctype = CORD];
  int repeated_cord_size() const;
  private:
  int _internal_repeated_cord_size() const;

  public:
  void clear_repeated_cord() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& repeated_cord(int index) const;
  std::string* mutable_repeated_cord(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repeated_cord(int index, Arg_&& value, Args_... args);
  std::string* add_repeated_cord();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_repeated_cord(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_cord() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_cord();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_cord() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_cord();

  public:
  // repeated .edition_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57;
  int repeated_lazy_message_size() const;
  private:
  int _internal_repeated_lazy_message_size() const;

  public:
  void clear_repeated_lazy_message() ;
  ::edition_unittest::TestAllTypes_NestedMessage* mutable_repeated_lazy_message(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>* mutable_repeated_lazy_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>& _internal_repeated_lazy_message() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>* _internal_mutable_repeated_lazy_message();
  public:
  const ::edition_unittest::TestAllTypes_NestedMessage& repeated_lazy_message(int index) const;
  ::edition_unittest::TestAllTypes_NestedMessage* add_repeated_lazy_message();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>& repeated_lazy_message() const;
  // string optional_string = 14;
  bool has_optional_string() const;
  void clear_optional_string() ;
  absl::string_view optional_string() const;
  template <typename Arg_ = std::string&&>
  void set_optional_string(Arg_&& arg);

  private:
  const std::string& _internal_optional_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string(
      absl::string_view value);

  public:
  // bytes optional_bytes = 15;
  bool has_optional_bytes() const;
  void clear_optional_bytes() ;
  absl::string_view optional_bytes() const;
  template <typename Arg_ = std::string&&>
  void set_optional_bytes(Arg_&& arg);

  private:
  const std::string& _internal_optional_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_bytes(
      absl::string_view value);

  public:
  // string optional_string_piece = 24 [ctype = STRING_PIECE];
  bool has_optional_string_piece() const;
  void clear_optional_string_piece() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& optional_string_piece() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_optional_string_piece(Arg_&& arg, Args_... args);
  std::string* mutable_optional_string_piece();
  PROTOBUF_NODISCARD std::string* release_optional_string_piece();
  void set_allocated_optional_string_piece(std::string* value);

  private:
  const std::string& _internal_optional_string_piece() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string_piece(
      const std::string& value);
  std::string* _internal_mutable_optional_string_piece();

  public:
  // string optional_cord = 25 [ctype = CORD];
  bool has_optional_cord() const;
  void clear_optional_cord() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& optional_cord() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_optional_cord(Arg_&& arg, Args_... args);
  std::string* mutable_optional_cord();
  PROTOBUF_NODISCARD std::string* release_optional_cord();
  void set_allocated_optional_cord(std::string* value);

  private:
  const std::string& _internal_optional_cord() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_cord(
      const std::string& value);
  std::string* _internal_mutable_optional_cord();

  public:
  // string default_string = 74 [default = "hello"];
  bool has_default_string() const;
  void clear_default_string() ;
  absl::string_view default_string() const;
  template <typename Arg_ = std::string&&>
  void set_default_string(Arg_&& arg);

  private:
  const std::string& _internal_default_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_string(
      absl::string_view value);

  public:
  // bytes default_bytes = 75 [default = "world"];
  bool has_default_bytes() const;
  void clear_default_bytes() ;
  absl::string_view default_bytes() const;
  template <typename Arg_ = std::string&&>
  void set_default_bytes(Arg_&& arg);

  private:
  const std::string& _internal_default_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_bytes(
      absl::string_view value);

  public:
  // string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
  bool has_default_string_piece() const;
  void clear_default_string_piece() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& default_string_piece() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_string_piece(Arg_&& arg, Args_... args);
  std::string* mutable_default_string_piece();
  PROTOBUF_NODISCARD std::string* release_default_string_piece();
  void set_allocated_default_string_piece(std::string* value);

  private:
  const std::string& _internal_default_string_piece() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_string_piece(
      const std::string& value);
  std::string* _internal_mutable_default_string_piece();

  public:
  // string default_cord = 85 [default = "123", ctype = CORD];
  bool has_default_cord() const;
  void clear_default_cord() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& default_cord() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_cord(Arg_&& arg, Args_... args);
  std::string* mutable_default_cord();
  PROTOBUF_NODISCARD std::string* release_default_cord();
  void set_allocated_default_cord(std::string* value);

  private:
  const std::string& _internal_default_cord() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_cord(
      const std::string& value);
  std::string* _internal_mutable_default_cord();

  public:
  // .edition_unittest.TestAllTypes.OptionalGroup optionalgroup = 16 [features = {
  bool has_optionalgroup() const;
  void clear_optionalgroup() ;
  const ::edition_unittest::TestAllTypes_OptionalGroup& optionalgroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes_OptionalGroup* release_optionalgroup();
  ::edition_unittest::TestAllTypes_OptionalGroup* mutable_optionalgroup();
  void set_allocated_optionalgroup(::edition_unittest::TestAllTypes_OptionalGroup* value);
  void unsafe_arena_set_allocated_optionalgroup(::edition_unittest::TestAllTypes_OptionalGroup* value);
  ::edition_unittest::TestAllTypes_OptionalGroup* unsafe_arena_release_optionalgroup();

  private:
  const ::edition_unittest::TestAllTypes_OptionalGroup& _internal_optionalgroup() const;
  ::edition_unittest::TestAllTypes_OptionalGroup* _internal_mutable_optionalgroup();

  public:
  // .edition_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
  bool has_optional_nested_message() const;
  void clear_optional_nested_message() ;
  const ::edition_unittest::TestAllTypes_NestedMessage& optional_nested_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes_NestedMessage* release_optional_nested_message();
  ::edition_unittest::TestAllTypes_NestedMessage* mutable_optional_nested_message();
  void set_allocated_optional_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  void unsafe_arena_set_allocated_optional_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  ::edition_unittest::TestAllTypes_NestedMessage* unsafe_arena_release_optional_nested_message();

  private:
  const ::edition_unittest::TestAllTypes_NestedMessage& _internal_optional_nested_message() const;
  ::edition_unittest::TestAllTypes_NestedMessage* _internal_mutable_optional_nested_message();

  public:
  // .edition_unittest.ForeignMessage optional_foreign_message = 19;
  bool has_optional_foreign_message() const;
  void clear_optional_foreign_message() ;
  const ::edition_unittest::ForeignMessage& optional_foreign_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::ForeignMessage* release_optional_foreign_message();
  ::edition_unittest::ForeignMessage* mutable_optional_foreign_message();
  void set_allocated_optional_foreign_message(::edition_unittest::ForeignMessage* value);
  void unsafe_arena_set_allocated_optional_foreign_message(::edition_unittest::ForeignMessage* value);
  ::edition_unittest::ForeignMessage* unsafe_arena_release_optional_foreign_message();

  private:
  const ::edition_unittest::ForeignMessage& _internal_optional_foreign_message() const;
  ::edition_unittest::ForeignMessage* _internal_mutable_optional_foreign_message();

  public:
  // .protobuf_unittest_import.ImportMessage optional_import_message = 20;
  bool has_optional_import_message() const;
  void clear_optional_import_message() ;
  const ::protobuf_unittest_import::ImportMessage& optional_import_message() const;
  PROTOBUF_NODISCARD ::protobuf_unittest_import::ImportMessage* release_optional_import_message();
  ::protobuf_unittest_import::ImportMessage* mutable_optional_import_message();
  void set_allocated_optional_import_message(::protobuf_unittest_import::ImportMessage* value);
  void unsafe_arena_set_allocated_optional_import_message(::protobuf_unittest_import::ImportMessage* value);
  ::protobuf_unittest_import::ImportMessage* unsafe_arena_release_optional_import_message();

  private:
  const ::protobuf_unittest_import::ImportMessage& _internal_optional_import_message() const;
  ::protobuf_unittest_import::ImportMessage* _internal_mutable_optional_import_message();

  public:
  // .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
  bool has_optional_public_import_message() const;
  void clear_optional_public_import_message() ;
  const ::protobuf_unittest_import::PublicImportMessage& optional_public_import_message() const;
  PROTOBUF_NODISCARD ::protobuf_unittest_import::PublicImportMessage* release_optional_public_import_message();
  ::protobuf_unittest_import::PublicImportMessage* mutable_optional_public_import_message();
  void set_allocated_optional_public_import_message(::protobuf_unittest_import::PublicImportMessage* value);
  void unsafe_arena_set_allocated_optional_public_import_message(::protobuf_unittest_import::PublicImportMessage* value);
  ::protobuf_unittest_import::PublicImportMessage* unsafe_arena_release_optional_public_import_message();

  private:
  const ::protobuf_unittest_import::PublicImportMessage& _internal_optional_public_import_message() const;
  ::protobuf_unittest_import::PublicImportMessage* _internal_mutable_optional_public_import_message();

  public:
  // .edition_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
  bool has_optional_lazy_message() const;
  void clear_optional_lazy_message() ;
  const ::edition_unittest::TestAllTypes_NestedMessage& optional_lazy_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes_NestedMessage* release_optional_lazy_message();
  ::edition_unittest::TestAllTypes_NestedMessage* mutable_optional_lazy_message();
  void set_allocated_optional_lazy_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  void unsafe_arena_set_allocated_optional_lazy_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  ::edition_unittest::TestAllTypes_NestedMessage* unsafe_arena_release_optional_lazy_message();

  private:
  const ::edition_unittest::TestAllTypes_NestedMessage& _internal_optional_lazy_message() const;
  ::edition_unittest::TestAllTypes_NestedMessage* _internal_mutable_optional_lazy_message();

  public:
  // .edition_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
  bool has_optional_unverified_lazy_message() const;
  void clear_optional_unverified_lazy_message() ;
  const ::edition_unittest::TestAllTypes_NestedMessage& optional_unverified_lazy_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes_NestedMessage* release_optional_unverified_lazy_message();
  ::edition_unittest::TestAllTypes_NestedMessage* mutable_optional_unverified_lazy_message();
  void set_allocated_optional_unverified_lazy_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  void unsafe_arena_set_allocated_optional_unverified_lazy_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  ::edition_unittest::TestAllTypes_NestedMessage* unsafe_arena_release_optional_unverified_lazy_message();

  private:
  const ::edition_unittest::TestAllTypes_NestedMessage& _internal_optional_unverified_lazy_message() const;
  ::edition_unittest::TestAllTypes_NestedMessage* _internal_mutable_optional_unverified_lazy_message();

  public:
  // int64 optional_int64 = 2;
  bool has_optional_int64() const;
  void clear_optional_int64() ;
  ::int64_t optional_int64() const;
  void set_optional_int64(::int64_t value);

  private:
  ::int64_t _internal_optional_int64() const;
  void _internal_set_optional_int64(::int64_t value);

  public:
  // int32 optional_int32 = 1;
  bool has_optional_int32() const;
  void clear_optional_int32() ;
  ::int32_t optional_int32() const;
  void set_optional_int32(::int32_t value);

  private:
  ::int32_t _internal_optional_int32() const;
  void _internal_set_optional_int32(::int32_t value);

  public:
  // uint32 optional_uint32 = 3;
  bool has_optional_uint32() const;
  void clear_optional_uint32() ;
  ::uint32_t optional_uint32() const;
  void set_optional_uint32(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32() const;
  void _internal_set_optional_uint32(::uint32_t value);

  public:
  // uint64 optional_uint64 = 4;
  bool has_optional_uint64() const;
  void clear_optional_uint64() ;
  ::uint64_t optional_uint64() const;
  void set_optional_uint64(::uint64_t value);

  private:
  ::uint64_t _internal_optional_uint64() const;
  void _internal_set_optional_uint64(::uint64_t value);

  public:
  // sint64 optional_sint64 = 6;
  bool has_optional_sint64() const;
  void clear_optional_sint64() ;
  ::int64_t optional_sint64() const;
  void set_optional_sint64(::int64_t value);

  private:
  ::int64_t _internal_optional_sint64() const;
  void _internal_set_optional_sint64(::int64_t value);

  public:
  // sint32 optional_sint32 = 5;
  bool has_optional_sint32() const;
  void clear_optional_sint32() ;
  ::int32_t optional_sint32() const;
  void set_optional_sint32(::int32_t value);

  private:
  ::int32_t _internal_optional_sint32() const;
  void _internal_set_optional_sint32(::int32_t value);

  public:
  // fixed32 optional_fixed32 = 7;
  bool has_optional_fixed32() const;
  void clear_optional_fixed32() ;
  ::uint32_t optional_fixed32() const;
  void set_optional_fixed32(::uint32_t value);

  private:
  ::uint32_t _internal_optional_fixed32() const;
  void _internal_set_optional_fixed32(::uint32_t value);

  public:
  // fixed64 optional_fixed64 = 8;
  bool has_optional_fixed64() const;
  void clear_optional_fixed64() ;
  ::uint64_t optional_fixed64() const;
  void set_optional_fixed64(::uint64_t value);

  private:
  ::uint64_t _internal_optional_fixed64() const;
  void _internal_set_optional_fixed64(::uint64_t value);

  public:
  // sfixed64 optional_sfixed64 = 10;
  bool has_optional_sfixed64() const;
  void clear_optional_sfixed64() ;
  ::int64_t optional_sfixed64() const;
  void set_optional_sfixed64(::int64_t value);

  private:
  ::int64_t _internal_optional_sfixed64() const;
  void _internal_set_optional_sfixed64(::int64_t value);

  public:
  // sfixed32 optional_sfixed32 = 9;
  bool has_optional_sfixed32() const;
  void clear_optional_sfixed32() ;
  ::int32_t optional_sfixed32() const;
  void set_optional_sfixed32(::int32_t value);

  private:
  ::int32_t _internal_optional_sfixed32() const;
  void _internal_set_optional_sfixed32(::int32_t value);

  public:
  // float optional_float = 11;
  bool has_optional_float() const;
  void clear_optional_float() ;
  float optional_float() const;
  void set_optional_float(float value);

  private:
  float _internal_optional_float() const;
  void _internal_set_optional_float(float value);

  public:
  // double optional_double = 12;
  bool has_optional_double() const;
  void clear_optional_double() ;
  double optional_double() const;
  void set_optional_double(double value);

  private:
  double _internal_optional_double() const;
  void _internal_set_optional_double(double value);

  public:
  // bool optional_bool = 13;
  bool has_optional_bool() const;
  void clear_optional_bool() ;
  bool optional_bool() const;
  void set_optional_bool(bool value);

  private:
  bool _internal_optional_bool() const;
  void _internal_set_optional_bool(bool value);

  public:
  // .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
  bool has_default_import_enum() const;
  void clear_default_import_enum() ;
  ::protobuf_unittest_import::ImportEnum default_import_enum() const;
  void set_default_import_enum(::protobuf_unittest_import::ImportEnum value);

  private:
  ::protobuf_unittest_import::ImportEnum _internal_default_import_enum() const;
  void _internal_set_default_import_enum(::protobuf_unittest_import::ImportEnum value);

  public:
  // .edition_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
  bool has_optional_nested_enum() const;
  void clear_optional_nested_enum() ;
  ::edition_unittest::TestAllTypes_NestedEnum optional_nested_enum() const;
  void set_optional_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value);

  private:
  ::edition_unittest::TestAllTypes_NestedEnum _internal_optional_nested_enum() const;
  void _internal_set_optional_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value);

  public:
  // .edition_unittest.ForeignEnum optional_foreign_enum = 22;
  bool has_optional_foreign_enum() const;
  void clear_optional_foreign_enum() ;
  ::edition_unittest::ForeignEnum optional_foreign_enum() const;
  void set_optional_foreign_enum(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_optional_foreign_enum() const;
  void _internal_set_optional_foreign_enum(::edition_unittest::ForeignEnum value);

  public:
  // .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
  bool has_optional_import_enum() const;
  void clear_optional_import_enum() ;
  ::protobuf_unittest_import::ImportEnum optional_import_enum() const;
  void set_optional_import_enum(::protobuf_unittest_import::ImportEnum value);

  private:
  ::protobuf_unittest_import::ImportEnum _internal_optional_import_enum() const;
  void _internal_set_optional_import_enum(::protobuf_unittest_import::ImportEnum value);

  public:
  // int32 default_int32 = 61 [default = 41];
  bool has_default_int32() const;
  void clear_default_int32() ;
  ::int32_t default_int32() const;
  void set_default_int32(::int32_t value);

  private:
  ::int32_t _internal_default_int32() const;
  void _internal_set_default_int32(::int32_t value);

  public:
  // int64 default_int64 = 62 [default = 42];
  bool has_default_int64() const;
  void clear_default_int64() ;
  ::int64_t default_int64() const;
  void set_default_int64(::int64_t value);

  private:
  ::int64_t _internal_default_int64() const;
  void _internal_set_default_int64(::int64_t value);

  public:
  // uint64 default_uint64 = 64 [default = 44];
  bool has_default_uint64() const;
  void clear_default_uint64() ;
  ::uint64_t default_uint64() const;
  void set_default_uint64(::uint64_t value);

  private:
  ::uint64_t _internal_default_uint64() const;
  void _internal_set_default_uint64(::uint64_t value);

  public:
  // uint32 default_uint32 = 63 [default = 43];
  bool has_default_uint32() const;
  void clear_default_uint32() ;
  ::uint32_t default_uint32() const;
  void set_default_uint32(::uint32_t value);

  private:
  ::uint32_t _internal_default_uint32() const;
  void _internal_set_default_uint32(::uint32_t value);

  public:
  // sint32 default_sint32 = 65 [default = -45];
  bool has_default_sint32() const;
  void clear_default_sint32() ;
  ::int32_t default_sint32() const;
  void set_default_sint32(::int32_t value);

  private:
  ::int32_t _internal_default_sint32() const;
  void _internal_set_default_sint32(::int32_t value);

  public:
  // sint64 default_sint64 = 66 [default = 46];
  bool has_default_sint64() const;
  void clear_default_sint64() ;
  ::int64_t default_sint64() const;
  void set_default_sint64(::int64_t value);

  private:
  ::int64_t _internal_default_sint64() const;
  void _internal_set_default_sint64(::int64_t value);

  public:
  // fixed64 default_fixed64 = 68 [default = 48];
  bool has_default_fixed64() const;
  void clear_default_fixed64() ;
  ::uint64_t default_fixed64() const;
  void set_default_fixed64(::uint64_t value);

  private:
  ::uint64_t _internal_default_fixed64() const;
  void _internal_set_default_fixed64(::uint64_t value);

  public:
  // fixed32 default_fixed32 = 67 [default = 47];
  bool has_default_fixed32() const;
  void clear_default_fixed32() ;
  ::uint32_t default_fixed32() const;
  void set_default_fixed32(::uint32_t value);

  private:
  ::uint32_t _internal_default_fixed32() const;
  void _internal_set_default_fixed32(::uint32_t value);

  public:
  // sfixed32 default_sfixed32 = 69 [default = 49];
  bool has_default_sfixed32() const;
  void clear_default_sfixed32() ;
  ::int32_t default_sfixed32() const;
  void set_default_sfixed32(::int32_t value);

  private:
  ::int32_t _internal_default_sfixed32() const;
  void _internal_set_default_sfixed32(::int32_t value);

  public:
  // sfixed64 default_sfixed64 = 70 [default = -50];
  bool has_default_sfixed64() const;
  void clear_default_sfixed64() ;
  ::int64_t default_sfixed64() const;
  void set_default_sfixed64(::int64_t value);

  private:
  ::int64_t _internal_default_sfixed64() const;
  void _internal_set_default_sfixed64(::int64_t value);

  public:
  // double default_double = 72 [default = 52000];
  bool has_default_double() const;
  void clear_default_double() ;
  double default_double() const;
  void set_default_double(double value);

  private:
  double _internal_default_double() const;
  void _internal_set_default_double(double value);

  public:
  // float default_float = 71 [default = 51.5];
  bool has_default_float() const;
  void clear_default_float() ;
  float default_float() const;
  void set_default_float(float value);

  private:
  float _internal_default_float() const;
  void _internal_set_default_float(float value);

  public:
  // bool default_bool = 73 [default = true];
  bool has_default_bool() const;
  void clear_default_bool() ;
  bool default_bool() const;
  void set_default_bool(bool value);

  private:
  bool _internal_default_bool() const;
  void _internal_set_default_bool(bool value);

  public:
  // .edition_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
  bool has_default_nested_enum() const;
  void clear_default_nested_enum() ;
  ::edition_unittest::TestAllTypes_NestedEnum default_nested_enum() const;
  void set_default_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value);

  private:
  ::edition_unittest::TestAllTypes_NestedEnum _internal_default_nested_enum() const;
  void _internal_set_default_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value);

  public:
  // .edition_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
  bool has_default_foreign_enum() const;
  void clear_default_foreign_enum() ;
  ::edition_unittest::ForeignEnum default_foreign_enum() const;
  void set_default_foreign_enum(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_default_foreign_enum() const;
  void _internal_set_default_foreign_enum(::edition_unittest::ForeignEnum value);

  public:
  // uint32 oneof_uint32 = 111;
  bool has_oneof_uint32() const;
  void clear_oneof_uint32() ;
  ::uint32_t oneof_uint32() const;
  void set_oneof_uint32(::uint32_t value);

  private:
  ::uint32_t _internal_oneof_uint32() const;
  void _internal_set_oneof_uint32(::uint32_t value);

  public:
  // .edition_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
  bool has_oneof_nested_message() const;
  private:
  bool _internal_has_oneof_nested_message() const;

  public:
  void clear_oneof_nested_message() ;
  const ::edition_unittest::TestAllTypes_NestedMessage& oneof_nested_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes_NestedMessage* release_oneof_nested_message();
  ::edition_unittest::TestAllTypes_NestedMessage* mutable_oneof_nested_message();
  void set_allocated_oneof_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  void unsafe_arena_set_allocated_oneof_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  ::edition_unittest::TestAllTypes_NestedMessage* unsafe_arena_release_oneof_nested_message();

  private:
  const ::edition_unittest::TestAllTypes_NestedMessage& _internal_oneof_nested_message() const;
  ::edition_unittest::TestAllTypes_NestedMessage* _internal_mutable_oneof_nested_message();

  public:
  // string oneof_string = 113;
  bool has_oneof_string() const;
  void clear_oneof_string() ;
  absl::string_view oneof_string() const;
  template <typename Arg_ = std::string&&>
  void set_oneof_string(Arg_&& arg);

  private:
  const std::string& _internal_oneof_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_string(
      absl::string_view value);

  public:
  // bytes oneof_bytes = 114;
  bool has_oneof_bytes() const;
  void clear_oneof_bytes() ;
  absl::string_view oneof_bytes() const;
  template <typename Arg_ = std::string&&>
  void set_oneof_bytes(Arg_&& arg);

  private:
  const std::string& _internal_oneof_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_bytes(
      absl::string_view value);

  public:
  // string oneof_cord = 115 [ctype = CORD];
  bool has_oneof_cord() const;
  void clear_oneof_cord() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& oneof_cord() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_oneof_cord(Arg_&& arg, Args_... args);
  std::string* mutable_oneof_cord();
  PROTOBUF_NODISCARD std::string* release_oneof_cord();
  void set_allocated_oneof_cord(std::string* value);

  private:
  const std::string& _internal_oneof_cord() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_cord(
      const std::string& value);
  std::string* _internal_mutable_oneof_cord();

  public:
  // string oneof_string_piece = 116 [ctype = STRING_PIECE];
  bool has_oneof_string_piece() const;
  void clear_oneof_string_piece() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& oneof_string_piece() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_oneof_string_piece(Arg_&& arg, Args_... args);
  std::string* mutable_oneof_string_piece();
  PROTOBUF_NODISCARD std::string* release_oneof_string_piece();
  void set_allocated_oneof_string_piece(std::string* value);

  private:
  const std::string& _internal_oneof_string_piece() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_string_piece(
      const std::string& value);
  std::string* _internal_mutable_oneof_string_piece();

  public:
  // .edition_unittest.TestAllTypes.NestedMessage oneof_lazy_nested_message = 117 [lazy = true];
  bool has_oneof_lazy_nested_message() const;
  private:
  bool _internal_has_oneof_lazy_nested_message() const;

  public:
  void clear_oneof_lazy_nested_message() ;
  const ::edition_unittest::TestAllTypes_NestedMessage& oneof_lazy_nested_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes_NestedMessage* release_oneof_lazy_nested_message();
  ::edition_unittest::TestAllTypes_NestedMessage* mutable_oneof_lazy_nested_message();
  void set_allocated_oneof_lazy_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  void unsafe_arena_set_allocated_oneof_lazy_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value);
  ::edition_unittest::TestAllTypes_NestedMessage* unsafe_arena_release_oneof_lazy_nested_message();

  private:
  const ::edition_unittest::TestAllTypes_NestedMessage& _internal_oneof_lazy_nested_message() const;
  ::edition_unittest::TestAllTypes_NestedMessage* _internal_mutable_oneof_lazy_nested_message();

  public:
  void clear_oneof_field();
  OneofFieldCase oneof_field_case() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestAllTypes)
 private:
  class _Internal;
  void set_has_oneof_uint32();
  void set_has_oneof_nested_message();
  void set_has_oneof_string();
  void set_has_oneof_bytes();
  void set_has_oneof_cord();
  void set_has_oneof_string_piece();
  void set_has_oneof_lazy_nested_message();
  inline bool has_oneof_field() const;
  inline void clear_has_oneof_field();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 79, 23,
      294, 17>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestAllTypes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestAllTypes& from_msg);
    ::google::protobuf::internal::HasBits<2> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> repeated_int32_;
    ::google::protobuf::internal::CachedSize _repeated_int32_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> repeated_int64_;
    ::google::protobuf::internal::CachedSize _repeated_int64_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> repeated_uint32_;
    ::google::protobuf::internal::CachedSize _repeated_uint32_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint64_t> repeated_uint64_;
    ::google::protobuf::internal::CachedSize _repeated_uint64_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> repeated_sint32_;
    ::google::protobuf::internal::CachedSize _repeated_sint32_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> repeated_sint64_;
    ::google::protobuf::internal::CachedSize _repeated_sint64_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> repeated_fixed32_;
    ::google::protobuf::RepeatedField<::uint64_t> repeated_fixed64_;
    ::google::protobuf::RepeatedField<::int32_t> repeated_sfixed32_;
    ::google::protobuf::RepeatedField<::int64_t> repeated_sfixed64_;
    ::google::protobuf::RepeatedField<float> repeated_float_;
    ::google::protobuf::RepeatedField<double> repeated_double_;
    ::google::protobuf::RepeatedField<bool> repeated_bool_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_bytes_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes_RepeatedGroup > repeatedgroup_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes_NestedMessage > repeated_nested_message_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::ForeignMessage > repeated_foreign_message_;
    ::google::protobuf::RepeatedPtrField< ::protobuf_unittest_import::ImportMessage > repeated_import_message_;
    ::google::protobuf::RepeatedField<int> repeated_nested_enum_;
    ::google::protobuf::internal::CachedSize _repeated_nested_enum_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_foreign_enum_;
    ::google::protobuf::internal::CachedSize _repeated_foreign_enum_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> repeated_import_enum_;
    ::google::protobuf::internal::CachedSize _repeated_import_enum_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_string_piece_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_cord_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes_NestedMessage > repeated_lazy_message_;
    ::google::protobuf::internal::ArenaStringPtr optional_string_;
    ::google::protobuf::internal::ArenaStringPtr optional_bytes_;
    ::google::protobuf::internal::ArenaStringPtr optional_string_piece_;
    ::google::protobuf::internal::ArenaStringPtr optional_cord_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_default_string_;
    ::google::protobuf::internal::ArenaStringPtr default_string_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_default_bytes_;
    ::google::protobuf::internal::ArenaStringPtr default_bytes_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_default_string_piece_;
    ::google::protobuf::internal::ArenaStringPtr default_string_piece_;
    static const ::google::protobuf::internal::LazyString _i_give_permission_to_break_this_code_default_default_cord_;
    ::google::protobuf::internal::ArenaStringPtr default_cord_;
    ::edition_unittest::TestAllTypes_OptionalGroup* optionalgroup_;
    ::edition_unittest::TestAllTypes_NestedMessage* optional_nested_message_;
    ::edition_unittest::ForeignMessage* optional_foreign_message_;
    ::protobuf_unittest_import::ImportMessage* optional_import_message_;
    ::protobuf_unittest_import::PublicImportMessage* optional_public_import_message_;
    ::edition_unittest::TestAllTypes_NestedMessage* optional_lazy_message_;
    ::edition_unittest::TestAllTypes_NestedMessage* optional_unverified_lazy_message_;
    ::int64_t optional_int64_;
    ::int32_t optional_int32_;
    ::uint32_t optional_uint32_;
    ::uint64_t optional_uint64_;
    ::int64_t optional_sint64_;
    ::int32_t optional_sint32_;
    ::uint32_t optional_fixed32_;
    ::uint64_t optional_fixed64_;
    ::int64_t optional_sfixed64_;
    ::int32_t optional_sfixed32_;
    float optional_float_;
    double optional_double_;
    bool optional_bool_;
    int default_import_enum_;
    int optional_nested_enum_;
    int optional_foreign_enum_;
    int optional_import_enum_;
    ::int32_t default_int32_;
    ::int64_t default_int64_;
    ::uint64_t default_uint64_;
    ::uint32_t default_uint32_;
    ::int32_t default_sint32_;
    ::int64_t default_sint64_;
    ::uint64_t default_fixed64_;
    ::uint32_t default_fixed32_;
    ::int32_t default_sfixed32_;
    ::int64_t default_sfixed64_;
    double default_double_;
    float default_float_;
    bool default_bool_;
    int default_nested_enum_;
    int default_foreign_enum_;
    union OneofFieldUnion {
      constexpr OneofFieldUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint32_t oneof_uint32_;
      ::edition_unittest::TestAllTypes_NestedMessage* oneof_nested_message_;
      ::google::protobuf::internal::ArenaStringPtr oneof_string_;
      ::google::protobuf::internal::ArenaStringPtr oneof_bytes_;
      ::google::protobuf::internal::ArenaStringPtr oneof_cord_;
      ::google::protobuf::internal::ArenaStringPtr oneof_string_piece_;
      ::edition_unittest::TestAllTypes_NestedMessage* oneof_lazy_nested_message_;
    } oneof_field_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class RedactedFields final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.RedactedFields) */ {
 public:
  inline RedactedFields() : RedactedFields(nullptr) {}
  ~RedactedFields() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RedactedFields(
      ::google::protobuf::internal::ConstantInitialized);

  inline RedactedFields(const RedactedFields& from) : RedactedFields(nullptr, from) {}
  inline RedactedFields(RedactedFields&& from) noexcept
      : RedactedFields(nullptr, std::move(from)) {}
  inline RedactedFields& operator=(const RedactedFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline RedactedFields& operator=(RedactedFields&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RedactedFields& default_instance() {
    return *internal_default_instance();
  }
  static inline const RedactedFields* internal_default_instance() {
    return reinterpret_cast<const RedactedFields*>(
        &_RedactedFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 142;
  friend void swap(RedactedFields& a, RedactedFields& b) { a.Swap(&b); }
  inline void Swap(RedactedFields* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RedactedFields* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RedactedFields* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RedactedFields>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RedactedFields& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RedactedFields& from) { RedactedFields::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RedactedFields* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.RedactedFields"; }

 protected:
  explicit RedactedFields(::google::protobuf::Arena* arena);
  RedactedFields(::google::protobuf::Arena* arena, const RedactedFields& from);
  RedactedFields(::google::protobuf::Arena* arena, RedactedFields&& from) noexcept
      : RedactedFields(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedRedactedStringFieldNumber = 3,
    kRepeatedUnredactedStringFieldNumber = 4,
    kRepeatedRedactedMessageFieldNumber = 7,
    kRepeatedUnredactedMessageFieldNumber = 8,
    kMapRedactedStringFieldNumber = 9,
    kMapUnredactedStringFieldNumber = 10,
    kOptionalRedactedStringFieldNumber = 1,
    kOptionalUnredactedStringFieldNumber = 2,
    kOptionalRedactedMessageFieldNumber = 5,
    kOptionalUnredactedMessageFieldNumber = 6,
  };
  // repeated string repeated_redacted_string = 3 [debug_redact = true];
  int repeated_redacted_string_size() const;
  private:
  int _internal_repeated_redacted_string_size() const;

  public:
  void clear_repeated_redacted_string() ;
  absl::string_view repeated_redacted_string(int index) const;
  void set_repeated_redacted_string(int index, const std::string& value);
  void set_repeated_redacted_string(int index, std::string&& value);
  void set_repeated_redacted_string(int index, const char* value);
  void set_repeated_redacted_string(int index, absl::string_view value);
  void add_repeated_redacted_string(const std::string& value);
  void add_repeated_redacted_string(std::string&& value);
  void add_repeated_redacted_string(const char* value);
  void add_repeated_redacted_string(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_redacted_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_redacted_string();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_redacted_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_redacted_string();

  public:
  // repeated string repeated_unredacted_string = 4;
  int repeated_unredacted_string_size() const;
  private:
  int _internal_repeated_unredacted_string_size() const;

  public:
  void clear_repeated_unredacted_string() ;
  absl::string_view repeated_unredacted_string(int index) const;
  void set_repeated_unredacted_string(int index, const std::string& value);
  void set_repeated_unredacted_string(int index, std::string&& value);
  void set_repeated_unredacted_string(int index, const char* value);
  void set_repeated_unredacted_string(int index, absl::string_view value);
  void add_repeated_unredacted_string(const std::string& value);
  void add_repeated_unredacted_string(std::string&& value);
  void add_repeated_unredacted_string(const char* value);
  void add_repeated_unredacted_string(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated_unredacted_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated_unredacted_string();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated_unredacted_string() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated_unredacted_string();

  public:
  // repeated .edition_unittest.TestNestedMessageRedaction repeated_redacted_message = 7 [debug_redact = true];
  int repeated_redacted_message_size() const;
  private:
  int _internal_repeated_redacted_message_size() const;

  public:
  void clear_repeated_redacted_message() ;
  ::edition_unittest::TestNestedMessageRedaction* mutable_repeated_redacted_message(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>* mutable_repeated_redacted_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>& _internal_repeated_redacted_message() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>* _internal_mutable_repeated_redacted_message();
  public:
  const ::edition_unittest::TestNestedMessageRedaction& repeated_redacted_message(int index) const;
  ::edition_unittest::TestNestedMessageRedaction* add_repeated_redacted_message();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>& repeated_redacted_message() const;
  // repeated .edition_unittest.TestNestedMessageRedaction repeated_unredacted_message = 8;
  int repeated_unredacted_message_size() const;
  private:
  int _internal_repeated_unredacted_message_size() const;

  public:
  void clear_repeated_unredacted_message() ;
  ::edition_unittest::TestNestedMessageRedaction* mutable_repeated_unredacted_message(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>* mutable_repeated_unredacted_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>& _internal_repeated_unredacted_message() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>* _internal_mutable_repeated_unredacted_message();
  public:
  const ::edition_unittest::TestNestedMessageRedaction& repeated_unredacted_message(int index) const;
  ::edition_unittest::TestNestedMessageRedaction* add_repeated_unredacted_message();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>& repeated_unredacted_message() const;
  // map<string, string> map_redacted_string = 9 [debug_redact = true];
  int map_redacted_string_size() const;
  private:
  int _internal_map_redacted_string_size() const;

  public:
  void clear_map_redacted_string() ;
  const ::google::protobuf::Map<std::string, std::string>& map_redacted_string() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_map_redacted_string();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_map_redacted_string() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_map_redacted_string();

  public:
  // map<string, string> map_unredacted_string = 10;
  int map_unredacted_string_size() const;
  private:
  int _internal_map_unredacted_string_size() const;

  public:
  void clear_map_unredacted_string() ;
  const ::google::protobuf::Map<std::string, std::string>& map_unredacted_string() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_map_unredacted_string();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_map_unredacted_string() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_map_unredacted_string();

  public:
  // string optional_redacted_string = 1 [debug_redact = true];
  bool has_optional_redacted_string() const;
  void clear_optional_redacted_string() ;
  absl::string_view optional_redacted_string() const;
  template <typename Arg_ = std::string&&>
  void set_optional_redacted_string(Arg_&& arg);

  private:
  const std::string& _internal_optional_redacted_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_redacted_string(
      absl::string_view value);

  public:
  // string optional_unredacted_string = 2;
  bool has_optional_unredacted_string() const;
  void clear_optional_unredacted_string() ;
  absl::string_view optional_unredacted_string() const;
  template <typename Arg_ = std::string&&>
  void set_optional_unredacted_string(Arg_&& arg);

  private:
  const std::string& _internal_optional_unredacted_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_unredacted_string(
      absl::string_view value);

  public:
  // .edition_unittest.TestNestedMessageRedaction optional_redacted_message = 5 [debug_redact = true];
  bool has_optional_redacted_message() const;
  void clear_optional_redacted_message() ;
  const ::edition_unittest::TestNestedMessageRedaction& optional_redacted_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestNestedMessageRedaction* release_optional_redacted_message();
  ::edition_unittest::TestNestedMessageRedaction* mutable_optional_redacted_message();
  void set_allocated_optional_redacted_message(::edition_unittest::TestNestedMessageRedaction* value);
  void unsafe_arena_set_allocated_optional_redacted_message(::edition_unittest::TestNestedMessageRedaction* value);
  ::edition_unittest::TestNestedMessageRedaction* unsafe_arena_release_optional_redacted_message();

  private:
  const ::edition_unittest::TestNestedMessageRedaction& _internal_optional_redacted_message() const;
  ::edition_unittest::TestNestedMessageRedaction* _internal_mutable_optional_redacted_message();

  public:
  // .edition_unittest.TestNestedMessageRedaction optional_unredacted_message = 6;
  bool has_optional_unredacted_message() const;
  void clear_optional_unredacted_message() ;
  const ::edition_unittest::TestNestedMessageRedaction& optional_unredacted_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestNestedMessageRedaction* release_optional_unredacted_message();
  ::edition_unittest::TestNestedMessageRedaction* mutable_optional_unredacted_message();
  void set_allocated_optional_unredacted_message(::edition_unittest::TestNestedMessageRedaction* value);
  void unsafe_arena_set_allocated_optional_unredacted_message(::edition_unittest::TestNestedMessageRedaction* value);
  ::edition_unittest::TestNestedMessageRedaction* unsafe_arena_release_optional_unredacted_message();

  private:
  const ::edition_unittest::TestNestedMessageRedaction& _internal_optional_unredacted_message() const;
  ::edition_unittest::TestNestedMessageRedaction* _internal_mutable_optional_unredacted_message();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.RedactedFields)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 10, 6,
      188, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RedactedFields_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RedactedFields& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_redacted_string_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_unredacted_string_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestNestedMessageRedaction > repeated_redacted_message_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestNestedMessageRedaction > repeated_unredacted_message_;
    ::google::protobuf::internal::MapField<RedactedFields_MapRedactedStringEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        map_redacted_string_;
    ::google::protobuf::internal::MapField<RedactedFields_MapUnredactedStringEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        map_unredacted_string_;
    ::google::protobuf::internal::ArenaStringPtr optional_redacted_string_;
    ::google::protobuf::internal::ArenaStringPtr optional_unredacted_string_;
    ::edition_unittest::TestNestedMessageRedaction* optional_redacted_message_;
    ::edition_unittest::TestNestedMessageRedaction* optional_unredacted_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyUint32BigFieldNumber final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyUint32BigFieldNumber) */ {
 public:
  inline TestVerifyUint32BigFieldNumber() : TestVerifyUint32BigFieldNumber(nullptr) {}
  ~TestVerifyUint32BigFieldNumber() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyUint32BigFieldNumber(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyUint32BigFieldNumber(const TestVerifyUint32BigFieldNumber& from) : TestVerifyUint32BigFieldNumber(nullptr, from) {}
  inline TestVerifyUint32BigFieldNumber(TestVerifyUint32BigFieldNumber&& from) noexcept
      : TestVerifyUint32BigFieldNumber(nullptr, std::move(from)) {}
  inline TestVerifyUint32BigFieldNumber& operator=(const TestVerifyUint32BigFieldNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyUint32BigFieldNumber& operator=(TestVerifyUint32BigFieldNumber&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyUint32BigFieldNumber& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyUint32BigFieldNumber* internal_default_instance() {
    return reinterpret_cast<const TestVerifyUint32BigFieldNumber*>(
        &_TestVerifyUint32BigFieldNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 129;
  friend void swap(TestVerifyUint32BigFieldNumber& a, TestVerifyUint32BigFieldNumber& b) { a.Swap(&b); }
  inline void Swap(TestVerifyUint32BigFieldNumber* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyUint32BigFieldNumber* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyUint32BigFieldNumber* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyUint32BigFieldNumber>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyUint32BigFieldNumber& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyUint32BigFieldNumber& from) { TestVerifyUint32BigFieldNumber::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyUint32BigFieldNumber* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyUint32BigFieldNumber"; }

 protected:
  explicit TestVerifyUint32BigFieldNumber(::google::protobuf::Arena* arena);
  TestVerifyUint32BigFieldNumber(::google::protobuf::Arena* arena, const TestVerifyUint32BigFieldNumber& from);
  TestVerifyUint32BigFieldNumber(::google::protobuf::Arena* arena, TestVerifyUint32BigFieldNumber&& from) noexcept
      : TestVerifyUint32BigFieldNumber(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 10,
    kOptionalAllTypesFieldNumber = 9,
    kOptionalUint321FieldNumber = 1,
    kOptionalUint322FieldNumber = 2,
    kOptionalUint3263FieldNumber = 63,
    kOptionalUint3264FieldNumber = 64,
    kOptionalUint3265FieldNumber = 65,
    kOptionalUint321000FieldNumber = 1000,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // .edition_unittest.TestAllTypes optional_all_types = 9;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // uint32 optional_uint32_1 = 1;
  bool has_optional_uint32_1() const;
  void clear_optional_uint32_1() ;
  ::uint32_t optional_uint32_1() const;
  void set_optional_uint32_1(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_1() const;
  void _internal_set_optional_uint32_1(::uint32_t value);

  public:
  // uint32 optional_uint32_2 = 2;
  bool has_optional_uint32_2() const;
  void clear_optional_uint32_2() ;
  ::uint32_t optional_uint32_2() const;
  void set_optional_uint32_2(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_2() const;
  void _internal_set_optional_uint32_2(::uint32_t value);

  public:
  // uint32 optional_uint32_63 = 63;
  bool has_optional_uint32_63() const;
  void clear_optional_uint32_63() ;
  ::uint32_t optional_uint32_63() const;
  void set_optional_uint32_63(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_63() const;
  void _internal_set_optional_uint32_63(::uint32_t value);

  public:
  // uint32 optional_uint32_64 = 64;
  bool has_optional_uint32_64() const;
  void clear_optional_uint32_64() ;
  ::uint32_t optional_uint32_64() const;
  void set_optional_uint32_64(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_64() const;
  void _internal_set_optional_uint32_64(::uint32_t value);

  public:
  // uint32 optional_uint32_65 = 65;
  bool has_optional_uint32_65() const;
  void clear_optional_uint32_65() ;
  ::uint32_t optional_uint32_65() const;
  void set_optional_uint32_65(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_65() const;
  void _internal_set_optional_uint32_65(::uint32_t value);

  public:
  // uint32 optional_uint32_1000 = 1000;
  bool has_optional_uint32_1000() const;
  void clear_optional_uint32_1000() ;
  ::uint32_t optional_uint32_1000() const;
  void set_optional_uint32_1000(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_1000() const;
  void _internal_set_optional_uint32_1000(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyUint32BigFieldNumber)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 2,
      0, 12>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyUint32BigFieldNumber_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyUint32BigFieldNumber& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::uint32_t optional_uint32_1_;
    ::uint32_t optional_uint32_2_;
    ::uint32_t optional_uint32_63_;
    ::uint32_t optional_uint32_64_;
    ::uint32_t optional_uint32_65_;
    ::uint32_t optional_uint32_1000_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyUint32 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyUint32) */ {
 public:
  inline TestVerifyUint32() : TestVerifyUint32(nullptr) {}
  ~TestVerifyUint32() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyUint32(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyUint32(const TestVerifyUint32& from) : TestVerifyUint32(nullptr, from) {}
  inline TestVerifyUint32(TestVerifyUint32&& from) noexcept
      : TestVerifyUint32(nullptr, std::move(from)) {}
  inline TestVerifyUint32& operator=(const TestVerifyUint32& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyUint32& operator=(TestVerifyUint32&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyUint32& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyUint32* internal_default_instance() {
    return reinterpret_cast<const TestVerifyUint32*>(
        &_TestVerifyUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 125;
  friend void swap(TestVerifyUint32& a, TestVerifyUint32& b) { a.Swap(&b); }
  inline void Swap(TestVerifyUint32* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyUint32* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyUint32* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyUint32>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyUint32& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyUint32& from) { TestVerifyUint32::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyUint32* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyUint32"; }

 protected:
  explicit TestVerifyUint32(::google::protobuf::Arena* arena);
  TestVerifyUint32(::google::protobuf::Arena* arena, const TestVerifyUint32& from);
  TestVerifyUint32(::google::protobuf::Arena* arena, TestVerifyUint32&& from) noexcept
      : TestVerifyUint32(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 10,
    kOptionalAllTypesFieldNumber = 9,
    kOptionalUint321FieldNumber = 1,
    kOptionalUint322FieldNumber = 2,
    kOptionalUint3263FieldNumber = 63,
    kOptionalUint3264FieldNumber = 64,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // .edition_unittest.TestAllTypes optional_all_types = 9;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // uint32 optional_uint32_1 = 1;
  bool has_optional_uint32_1() const;
  void clear_optional_uint32_1() ;
  ::uint32_t optional_uint32_1() const;
  void set_optional_uint32_1(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_1() const;
  void _internal_set_optional_uint32_1(::uint32_t value);

  public:
  // uint32 optional_uint32_2 = 2;
  bool has_optional_uint32_2() const;
  void clear_optional_uint32_2() ;
  ::uint32_t optional_uint32_2() const;
  void set_optional_uint32_2(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_2() const;
  void _internal_set_optional_uint32_2(::uint32_t value);

  public:
  // uint32 optional_uint32_63 = 63;
  bool has_optional_uint32_63() const;
  void clear_optional_uint32_63() ;
  ::uint32_t optional_uint32_63() const;
  void set_optional_uint32_63(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_63() const;
  void _internal_set_optional_uint32_63(::uint32_t value);

  public:
  // uint32 optional_uint32_64 = 64;
  bool has_optional_uint32_64() const;
  void clear_optional_uint32_64() ;
  ::uint32_t optional_uint32_64() const;
  void set_optional_uint32_64(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_64() const;
  void _internal_set_optional_uint32_64(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyUint32)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 2,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyUint32_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyUint32& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::uint32_t optional_uint32_1_;
    ::uint32_t optional_uint32_2_;
    ::uint32_t optional_uint32_63_;
    ::uint32_t optional_uint32_64_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyOneUint32 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyOneUint32) */ {
 public:
  inline TestVerifyOneUint32() : TestVerifyOneUint32(nullptr) {}
  ~TestVerifyOneUint32() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyOneUint32(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyOneUint32(const TestVerifyOneUint32& from) : TestVerifyOneUint32(nullptr, from) {}
  inline TestVerifyOneUint32(TestVerifyOneUint32&& from) noexcept
      : TestVerifyOneUint32(nullptr, std::move(from)) {}
  inline TestVerifyOneUint32& operator=(const TestVerifyOneUint32& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyOneUint32& operator=(TestVerifyOneUint32&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyOneUint32& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyOneUint32* internal_default_instance() {
    return reinterpret_cast<const TestVerifyOneUint32*>(
        &_TestVerifyOneUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 126;
  friend void swap(TestVerifyOneUint32& a, TestVerifyOneUint32& b) { a.Swap(&b); }
  inline void Swap(TestVerifyOneUint32* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyOneUint32* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyOneUint32* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyOneUint32>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyOneUint32& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyOneUint32& from) { TestVerifyOneUint32::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyOneUint32* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyOneUint32"; }

 protected:
  explicit TestVerifyOneUint32(::google::protobuf::Arena* arena);
  TestVerifyOneUint32(::google::protobuf::Arena* arena, const TestVerifyOneUint32& from);
  TestVerifyOneUint32(::google::protobuf::Arena* arena, TestVerifyOneUint32&& from) noexcept
      : TestVerifyOneUint32(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 10,
    kOptionalAllTypesFieldNumber = 9,
    kOptionalUint321FieldNumber = 1,
    kOptionalInt322FieldNumber = 2,
    kOptionalInt3263FieldNumber = 63,
    kOptionalInt3264FieldNumber = 64,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // .edition_unittest.TestAllTypes optional_all_types = 9;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // uint32 optional_uint32_1 = 1;
  bool has_optional_uint32_1() const;
  void clear_optional_uint32_1() ;
  ::uint32_t optional_uint32_1() const;
  void set_optional_uint32_1(::uint32_t value);

  private:
  ::uint32_t _internal_optional_uint32_1() const;
  void _internal_set_optional_uint32_1(::uint32_t value);

  public:
  // int32 optional_int32_2 = 2;
  bool has_optional_int32_2() const;
  void clear_optional_int32_2() ;
  ::int32_t optional_int32_2() const;
  void set_optional_int32_2(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_2() const;
  void _internal_set_optional_int32_2(::int32_t value);

  public:
  // int32 optional_int32_63 = 63;
  bool has_optional_int32_63() const;
  void clear_optional_int32_63() ;
  ::int32_t optional_int32_63() const;
  void set_optional_int32_63(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_63() const;
  void _internal_set_optional_int32_63(::int32_t value);

  public:
  // int32 optional_int32_64 = 64;
  bool has_optional_int32_64() const;
  void clear_optional_int32_64() ;
  ::int32_t optional_int32_64() const;
  void set_optional_int32_64(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_64() const;
  void _internal_set_optional_int32_64(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyOneUint32)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 2,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyOneUint32_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyOneUint32& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::uint32_t optional_uint32_1_;
    ::int32_t optional_int32_2_;
    ::int32_t optional_int32_63_;
    ::int32_t optional_int32_64_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyOneInt32BigFieldNumber final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyOneInt32BigFieldNumber) */ {
 public:
  inline TestVerifyOneInt32BigFieldNumber() : TestVerifyOneInt32BigFieldNumber(nullptr) {}
  ~TestVerifyOneInt32BigFieldNumber() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyOneInt32BigFieldNumber(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyOneInt32BigFieldNumber(const TestVerifyOneInt32BigFieldNumber& from) : TestVerifyOneInt32BigFieldNumber(nullptr, from) {}
  inline TestVerifyOneInt32BigFieldNumber(TestVerifyOneInt32BigFieldNumber&& from) noexcept
      : TestVerifyOneInt32BigFieldNumber(nullptr, std::move(from)) {}
  inline TestVerifyOneInt32BigFieldNumber& operator=(const TestVerifyOneInt32BigFieldNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyOneInt32BigFieldNumber& operator=(TestVerifyOneInt32BigFieldNumber&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyOneInt32BigFieldNumber& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyOneInt32BigFieldNumber* internal_default_instance() {
    return reinterpret_cast<const TestVerifyOneInt32BigFieldNumber*>(
        &_TestVerifyOneInt32BigFieldNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 127;
  friend void swap(TestVerifyOneInt32BigFieldNumber& a, TestVerifyOneInt32BigFieldNumber& b) { a.Swap(&b); }
  inline void Swap(TestVerifyOneInt32BigFieldNumber* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyOneInt32BigFieldNumber* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyOneInt32BigFieldNumber* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyOneInt32BigFieldNumber>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyOneInt32BigFieldNumber& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyOneInt32BigFieldNumber& from) { TestVerifyOneInt32BigFieldNumber::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyOneInt32BigFieldNumber* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyOneInt32BigFieldNumber"; }

 protected:
  explicit TestVerifyOneInt32BigFieldNumber(::google::protobuf::Arena* arena);
  TestVerifyOneInt32BigFieldNumber(::google::protobuf::Arena* arena, const TestVerifyOneInt32BigFieldNumber& from);
  TestVerifyOneInt32BigFieldNumber(::google::protobuf::Arena* arena, TestVerifyOneInt32BigFieldNumber&& from) noexcept
      : TestVerifyOneInt32BigFieldNumber(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 10,
    kOptionalAllTypesFieldNumber = 9,
    kOptionalInt641FieldNumber = 1,
    kOptionalInt642FieldNumber = 2,
    kOptionalInt6463FieldNumber = 63,
    kOptionalInt6464FieldNumber = 64,
    kOptionalInt3265FieldNumber = 65,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // .edition_unittest.TestAllTypes optional_all_types = 9;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // int64 optional_int64_1 = 1;
  bool has_optional_int64_1() const;
  void clear_optional_int64_1() ;
  ::int64_t optional_int64_1() const;
  void set_optional_int64_1(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_1() const;
  void _internal_set_optional_int64_1(::int64_t value);

  public:
  // int64 optional_int64_2 = 2;
  bool has_optional_int64_2() const;
  void clear_optional_int64_2() ;
  ::int64_t optional_int64_2() const;
  void set_optional_int64_2(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_2() const;
  void _internal_set_optional_int64_2(::int64_t value);

  public:
  // int64 optional_int64_63 = 63;
  bool has_optional_int64_63() const;
  void clear_optional_int64_63() ;
  ::int64_t optional_int64_63() const;
  void set_optional_int64_63(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_63() const;
  void _internal_set_optional_int64_63(::int64_t value);

  public:
  // int64 optional_int64_64 = 64;
  bool has_optional_int64_64() const;
  void clear_optional_int64_64() ;
  ::int64_t optional_int64_64() const;
  void set_optional_int64_64(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_64() const;
  void _internal_set_optional_int64_64(::int64_t value);

  public:
  // int32 optional_int32_65 = 65;
  bool has_optional_int32_65() const;
  void clear_optional_int32_65() ;
  ::int32_t optional_int32_65() const;
  void set_optional_int32_65(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_65() const;
  void _internal_set_optional_int32_65(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyOneInt32BigFieldNumber)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 7, 2,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyOneInt32BigFieldNumber_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyOneInt32BigFieldNumber& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::int64_t optional_int64_1_;
    ::int64_t optional_int64_2_;
    ::int64_t optional_int64_63_;
    ::int64_t optional_int64_64_;
    ::int32_t optional_int32_65_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyMostlyInt32BigFieldNumber final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyMostlyInt32BigFieldNumber) */ {
 public:
  inline TestVerifyMostlyInt32BigFieldNumber() : TestVerifyMostlyInt32BigFieldNumber(nullptr) {}
  ~TestVerifyMostlyInt32BigFieldNumber() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyMostlyInt32BigFieldNumber(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyMostlyInt32BigFieldNumber(const TestVerifyMostlyInt32BigFieldNumber& from) : TestVerifyMostlyInt32BigFieldNumber(nullptr, from) {}
  inline TestVerifyMostlyInt32BigFieldNumber(TestVerifyMostlyInt32BigFieldNumber&& from) noexcept
      : TestVerifyMostlyInt32BigFieldNumber(nullptr, std::move(from)) {}
  inline TestVerifyMostlyInt32BigFieldNumber& operator=(const TestVerifyMostlyInt32BigFieldNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyMostlyInt32BigFieldNumber& operator=(TestVerifyMostlyInt32BigFieldNumber&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyMostlyInt32BigFieldNumber& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyMostlyInt32BigFieldNumber* internal_default_instance() {
    return reinterpret_cast<const TestVerifyMostlyInt32BigFieldNumber*>(
        &_TestVerifyMostlyInt32BigFieldNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 123;
  friend void swap(TestVerifyMostlyInt32BigFieldNumber& a, TestVerifyMostlyInt32BigFieldNumber& b) { a.Swap(&b); }
  inline void Swap(TestVerifyMostlyInt32BigFieldNumber* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyMostlyInt32BigFieldNumber* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyMostlyInt32BigFieldNumber* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyMostlyInt32BigFieldNumber>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyMostlyInt32BigFieldNumber& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyMostlyInt32BigFieldNumber& from) { TestVerifyMostlyInt32BigFieldNumber::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyMostlyInt32BigFieldNumber* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyMostlyInt32BigFieldNumber"; }

 protected:
  explicit TestVerifyMostlyInt32BigFieldNumber(::google::protobuf::Arena* arena);
  TestVerifyMostlyInt32BigFieldNumber(::google::protobuf::Arena* arena, const TestVerifyMostlyInt32BigFieldNumber& from);
  TestVerifyMostlyInt32BigFieldNumber(::google::protobuf::Arena* arena, TestVerifyMostlyInt32BigFieldNumber&& from) noexcept
      : TestVerifyMostlyInt32BigFieldNumber(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 10,
    kOptionalAllTypesFieldNumber = 9,
    kOptionalInt321FieldNumber = 1,
    kOptionalInt322FieldNumber = 2,
    kOptionalInt323FieldNumber = 3,
    kOptionalInt324FieldNumber = 4,
    kOptionalInt6430FieldNumber = 30,
    kOptionalInt3263FieldNumber = 63,
    kOptionalInt3264FieldNumber = 64,
    kOptionalInt32300FieldNumber = 300,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // .edition_unittest.TestAllTypes optional_all_types = 9;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // int32 optional_int32_1 = 1;
  bool has_optional_int32_1() const;
  void clear_optional_int32_1() ;
  ::int32_t optional_int32_1() const;
  void set_optional_int32_1(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_1() const;
  void _internal_set_optional_int32_1(::int32_t value);

  public:
  // int32 optional_int32_2 = 2;
  bool has_optional_int32_2() const;
  void clear_optional_int32_2() ;
  ::int32_t optional_int32_2() const;
  void set_optional_int32_2(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_2() const;
  void _internal_set_optional_int32_2(::int32_t value);

  public:
  // int32 optional_int32_3 = 3;
  bool has_optional_int32_3() const;
  void clear_optional_int32_3() ;
  ::int32_t optional_int32_3() const;
  void set_optional_int32_3(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_3() const;
  void _internal_set_optional_int32_3(::int32_t value);

  public:
  // int32 optional_int32_4 = 4;
  bool has_optional_int32_4() const;
  void clear_optional_int32_4() ;
  ::int32_t optional_int32_4() const;
  void set_optional_int32_4(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_4() const;
  void _internal_set_optional_int32_4(::int32_t value);

  public:
  // int64 optional_int64_30 = 30;
  bool has_optional_int64_30() const;
  void clear_optional_int64_30() ;
  ::int64_t optional_int64_30() const;
  void set_optional_int64_30(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_30() const;
  void _internal_set_optional_int64_30(::int64_t value);

  public:
  // int32 optional_int32_63 = 63;
  bool has_optional_int32_63() const;
  void clear_optional_int32_63() ;
  ::int32_t optional_int32_63() const;
  void set_optional_int32_63(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_63() const;
  void _internal_set_optional_int32_63(::int32_t value);

  public:
  // int32 optional_int32_64 = 64;
  bool has_optional_int32_64() const;
  void clear_optional_int32_64() ;
  ::int32_t optional_int32_64() const;
  void set_optional_int32_64(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_64() const;
  void _internal_set_optional_int32_64(::int32_t value);

  public:
  // int32 optional_int32_300 = 300;
  bool has_optional_int32_300() const;
  void clear_optional_int32_300() ;
  ::int32_t optional_int32_300() const;
  void set_optional_int32_300(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_300() const;
  void _internal_set_optional_int32_300(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyMostlyInt32BigFieldNumber)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 2,
      0, 12>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyMostlyInt32BigFieldNumber_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyMostlyInt32BigFieldNumber& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::int32_t optional_int32_1_;
    ::int32_t optional_int32_2_;
    ::int32_t optional_int32_3_;
    ::int32_t optional_int32_4_;
    ::int64_t optional_int64_30_;
    ::int32_t optional_int32_63_;
    ::int32_t optional_int32_64_;
    ::int32_t optional_int32_300_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyMostlyInt32 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyMostlyInt32) */ {
 public:
  inline TestVerifyMostlyInt32() : TestVerifyMostlyInt32(nullptr) {}
  ~TestVerifyMostlyInt32() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyMostlyInt32(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyMostlyInt32(const TestVerifyMostlyInt32& from) : TestVerifyMostlyInt32(nullptr, from) {}
  inline TestVerifyMostlyInt32(TestVerifyMostlyInt32&& from) noexcept
      : TestVerifyMostlyInt32(nullptr, std::move(from)) {}
  inline TestVerifyMostlyInt32& operator=(const TestVerifyMostlyInt32& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyMostlyInt32& operator=(TestVerifyMostlyInt32&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyMostlyInt32& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyMostlyInt32* internal_default_instance() {
    return reinterpret_cast<const TestVerifyMostlyInt32*>(
        &_TestVerifyMostlyInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 122;
  friend void swap(TestVerifyMostlyInt32& a, TestVerifyMostlyInt32& b) { a.Swap(&b); }
  inline void Swap(TestVerifyMostlyInt32* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyMostlyInt32* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyMostlyInt32* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyMostlyInt32>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyMostlyInt32& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyMostlyInt32& from) { TestVerifyMostlyInt32::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyMostlyInt32* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyMostlyInt32"; }

 protected:
  explicit TestVerifyMostlyInt32(::google::protobuf::Arena* arena);
  TestVerifyMostlyInt32(::google::protobuf::Arena* arena, const TestVerifyMostlyInt32& from);
  TestVerifyMostlyInt32(::google::protobuf::Arena* arena, TestVerifyMostlyInt32&& from) noexcept
      : TestVerifyMostlyInt32(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 10,
    kOptionalAllTypesFieldNumber = 9,
    kOptionalInt321FieldNumber = 1,
    kOptionalInt322FieldNumber = 2,
    kOptionalInt323FieldNumber = 3,
    kOptionalInt324FieldNumber = 4,
    kOptionalInt6430FieldNumber = 30,
    kOptionalInt3263FieldNumber = 63,
    kOptionalInt3264FieldNumber = 64,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // .edition_unittest.TestAllTypes optional_all_types = 9;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // int32 optional_int32_1 = 1;
  bool has_optional_int32_1() const;
  void clear_optional_int32_1() ;
  ::int32_t optional_int32_1() const;
  void set_optional_int32_1(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_1() const;
  void _internal_set_optional_int32_1(::int32_t value);

  public:
  // int32 optional_int32_2 = 2;
  bool has_optional_int32_2() const;
  void clear_optional_int32_2() ;
  ::int32_t optional_int32_2() const;
  void set_optional_int32_2(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_2() const;
  void _internal_set_optional_int32_2(::int32_t value);

  public:
  // int32 optional_int32_3 = 3;
  bool has_optional_int32_3() const;
  void clear_optional_int32_3() ;
  ::int32_t optional_int32_3() const;
  void set_optional_int32_3(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_3() const;
  void _internal_set_optional_int32_3(::int32_t value);

  public:
  // int32 optional_int32_4 = 4;
  bool has_optional_int32_4() const;
  void clear_optional_int32_4() ;
  ::int32_t optional_int32_4() const;
  void set_optional_int32_4(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_4() const;
  void _internal_set_optional_int32_4(::int32_t value);

  public:
  // int64 optional_int64_30 = 30;
  bool has_optional_int64_30() const;
  void clear_optional_int64_30() ;
  ::int64_t optional_int64_30() const;
  void set_optional_int64_30(::int64_t value);

  private:
  ::int64_t _internal_optional_int64_30() const;
  void _internal_set_optional_int64_30(::int64_t value);

  public:
  // int32 optional_int32_63 = 63;
  bool has_optional_int32_63() const;
  void clear_optional_int32_63() ;
  ::int32_t optional_int32_63() const;
  void set_optional_int32_63(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_63() const;
  void _internal_set_optional_int32_63(::int32_t value);

  public:
  // int32 optional_int32_64 = 64;
  bool has_optional_int32_64() const;
  void clear_optional_int32_64() ;
  ::int32_t optional_int32_64() const;
  void set_optional_int32_64(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_64() const;
  void _internal_set_optional_int32_64(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyMostlyInt32)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyMostlyInt32_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyMostlyInt32& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::int32_t optional_int32_1_;
    ::int32_t optional_int32_2_;
    ::int32_t optional_int32_3_;
    ::int32_t optional_int32_4_;
    ::int64_t optional_int64_30_;
    ::int32_t optional_int32_63_;
    ::int32_t optional_int32_64_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyInt32BigFieldNumber final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyInt32BigFieldNumber) */ {
 public:
  inline TestVerifyInt32BigFieldNumber() : TestVerifyInt32BigFieldNumber(nullptr) {}
  ~TestVerifyInt32BigFieldNumber() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyInt32BigFieldNumber(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyInt32BigFieldNumber(const TestVerifyInt32BigFieldNumber& from) : TestVerifyInt32BigFieldNumber(nullptr, from) {}
  inline TestVerifyInt32BigFieldNumber(TestVerifyInt32BigFieldNumber&& from) noexcept
      : TestVerifyInt32BigFieldNumber(nullptr, std::move(from)) {}
  inline TestVerifyInt32BigFieldNumber& operator=(const TestVerifyInt32BigFieldNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyInt32BigFieldNumber& operator=(TestVerifyInt32BigFieldNumber&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyInt32BigFieldNumber& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyInt32BigFieldNumber* internal_default_instance() {
    return reinterpret_cast<const TestVerifyInt32BigFieldNumber*>(
        &_TestVerifyInt32BigFieldNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 128;
  friend void swap(TestVerifyInt32BigFieldNumber& a, TestVerifyInt32BigFieldNumber& b) { a.Swap(&b); }
  inline void Swap(TestVerifyInt32BigFieldNumber* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyInt32BigFieldNumber* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyInt32BigFieldNumber* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyInt32BigFieldNumber>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyInt32BigFieldNumber& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyInt32BigFieldNumber& from) { TestVerifyInt32BigFieldNumber::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyInt32BigFieldNumber* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyInt32BigFieldNumber"; }

 protected:
  explicit TestVerifyInt32BigFieldNumber(::google::protobuf::Arena* arena);
  TestVerifyInt32BigFieldNumber(::google::protobuf::Arena* arena, const TestVerifyInt32BigFieldNumber& from);
  TestVerifyInt32BigFieldNumber(::google::protobuf::Arena* arena, TestVerifyInt32BigFieldNumber&& from) noexcept
      : TestVerifyInt32BigFieldNumber(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 10,
    kOptionalAllTypesFieldNumber = 9,
    kOptionalInt321FieldNumber = 1,
    kOptionalInt322FieldNumber = 2,
    kOptionalInt3263FieldNumber = 63,
    kOptionalInt3264FieldNumber = 64,
    kOptionalInt3265FieldNumber = 65,
    kOptionalInt321000FieldNumber = 1000,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // .edition_unittest.TestAllTypes optional_all_types = 9;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // int32 optional_int32_1 = 1;
  bool has_optional_int32_1() const;
  void clear_optional_int32_1() ;
  ::int32_t optional_int32_1() const;
  void set_optional_int32_1(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_1() const;
  void _internal_set_optional_int32_1(::int32_t value);

  public:
  // int32 optional_int32_2 = 2;
  bool has_optional_int32_2() const;
  void clear_optional_int32_2() ;
  ::int32_t optional_int32_2() const;
  void set_optional_int32_2(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_2() const;
  void _internal_set_optional_int32_2(::int32_t value);

  public:
  // int32 optional_int32_63 = 63;
  bool has_optional_int32_63() const;
  void clear_optional_int32_63() ;
  ::int32_t optional_int32_63() const;
  void set_optional_int32_63(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_63() const;
  void _internal_set_optional_int32_63(::int32_t value);

  public:
  // int32 optional_int32_64 = 64;
  bool has_optional_int32_64() const;
  void clear_optional_int32_64() ;
  ::int32_t optional_int32_64() const;
  void set_optional_int32_64(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_64() const;
  void _internal_set_optional_int32_64(::int32_t value);

  public:
  // int32 optional_int32_65 = 65;
  bool has_optional_int32_65() const;
  void clear_optional_int32_65() ;
  ::int32_t optional_int32_65() const;
  void set_optional_int32_65(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_65() const;
  void _internal_set_optional_int32_65(::int32_t value);

  public:
  // int32 optional_int32_1000 = 1000;
  bool has_optional_int32_1000() const;
  void clear_optional_int32_1000() ;
  ::int32_t optional_int32_1000() const;
  void set_optional_int32_1000(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_1000() const;
  void _internal_set_optional_int32_1000(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyInt32BigFieldNumber)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 2,
      0, 12>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyInt32BigFieldNumber_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyInt32BigFieldNumber& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::int32_t optional_int32_1_;
    ::int32_t optional_int32_2_;
    ::int32_t optional_int32_63_;
    ::int32_t optional_int32_64_;
    ::int32_t optional_int32_65_;
    ::int32_t optional_int32_1000_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestVerifyInt32 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestVerifyInt32) */ {
 public:
  inline TestVerifyInt32() : TestVerifyInt32(nullptr) {}
  ~TestVerifyInt32() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestVerifyInt32(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestVerifyInt32(const TestVerifyInt32& from) : TestVerifyInt32(nullptr, from) {}
  inline TestVerifyInt32(TestVerifyInt32&& from) noexcept
      : TestVerifyInt32(nullptr, std::move(from)) {}
  inline TestVerifyInt32& operator=(const TestVerifyInt32& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestVerifyInt32& operator=(TestVerifyInt32&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestVerifyInt32& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestVerifyInt32* internal_default_instance() {
    return reinterpret_cast<const TestVerifyInt32*>(
        &_TestVerifyInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 121;
  friend void swap(TestVerifyInt32& a, TestVerifyInt32& b) { a.Swap(&b); }
  inline void Swap(TestVerifyInt32* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestVerifyInt32* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestVerifyInt32* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestVerifyInt32>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestVerifyInt32& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestVerifyInt32& from) { TestVerifyInt32::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestVerifyInt32* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestVerifyInt32"; }

 protected:
  explicit TestVerifyInt32(::google::protobuf::Arena* arena);
  TestVerifyInt32(::google::protobuf::Arena* arena, const TestVerifyInt32& from);
  TestVerifyInt32(::google::protobuf::Arena* arena, TestVerifyInt32&& from) noexcept
      : TestVerifyInt32(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 10,
    kOptionalAllTypesFieldNumber = 9,
    kOptionalInt321FieldNumber = 1,
    kOptionalInt322FieldNumber = 2,
    kOptionalInt3263FieldNumber = 63,
    kOptionalInt3264FieldNumber = 64,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // .edition_unittest.TestAllTypes optional_all_types = 9;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // int32 optional_int32_1 = 1;
  bool has_optional_int32_1() const;
  void clear_optional_int32_1() ;
  ::int32_t optional_int32_1() const;
  void set_optional_int32_1(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_1() const;
  void _internal_set_optional_int32_1(::int32_t value);

  public:
  // int32 optional_int32_2 = 2;
  bool has_optional_int32_2() const;
  void clear_optional_int32_2() ;
  ::int32_t optional_int32_2() const;
  void set_optional_int32_2(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_2() const;
  void _internal_set_optional_int32_2(::int32_t value);

  public:
  // int32 optional_int32_63 = 63;
  bool has_optional_int32_63() const;
  void clear_optional_int32_63() ;
  ::int32_t optional_int32_63() const;
  void set_optional_int32_63(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_63() const;
  void _internal_set_optional_int32_63(::int32_t value);

  public:
  // int32 optional_int32_64 = 64;
  bool has_optional_int32_64() const;
  void clear_optional_int32_64() ;
  ::int32_t optional_int32_64() const;
  void set_optional_int32_64(::int32_t value);

  private:
  ::int32_t _internal_optional_int32_64() const;
  void _internal_set_optional_int32_64(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestVerifyInt32)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 2,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestVerifyInt32_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestVerifyInt32& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::int32_t optional_int32_1_;
    ::int32_t optional_int32_2_;
    ::int32_t optional_int32_63_;
    ::int32_t optional_int32_64_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequiredMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequiredMessage) */ {
 public:
  inline TestRequiredMessage() : TestRequiredMessage(nullptr) {}
  ~TestRequiredMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredMessage(const TestRequiredMessage& from) : TestRequiredMessage(nullptr, from) {}
  inline TestRequiredMessage(TestRequiredMessage&& from) noexcept
      : TestRequiredMessage(nullptr, std::move(from)) {}
  inline TestRequiredMessage& operator=(const TestRequiredMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredMessage& operator=(TestRequiredMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredMessage* internal_default_instance() {
    return reinterpret_cast<const TestRequiredMessage*>(
        &_TestRequiredMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(TestRequiredMessage& a, TestRequiredMessage& b) { a.Swap(&b); }
  inline void Swap(TestRequiredMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequiredMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequiredMessage& from) { TestRequiredMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequiredMessage"; }

 protected:
  explicit TestRequiredMessage(::google::protobuf::Arena* arena);
  TestRequiredMessage(::google::protobuf::Arena* arena, const TestRequiredMessage& from);
  TestRequiredMessage(::google::protobuf::Arena* arena, TestRequiredMessage&& from) noexcept
      : TestRequiredMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedMessageFieldNumber = 2,
    kOptionalMessageFieldNumber = 1,
    kRequiredMessageFieldNumber = 3,
  };
  // repeated .edition_unittest.TestRequired repeated_message = 2;
  int repeated_message_size() const;
  private:
  int _internal_repeated_message_size() const;

  public:
  void clear_repeated_message() ;
  ::edition_unittest::TestRequired* mutable_repeated_message(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>* mutable_repeated_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>& _internal_repeated_message() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>* _internal_mutable_repeated_message();
  public:
  const ::edition_unittest::TestRequired& repeated_message(int index) const;
  ::edition_unittest::TestRequired* add_repeated_message();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>& repeated_message() const;
  // .edition_unittest.TestRequired optional_message = 1;
  bool has_optional_message() const;
  void clear_optional_message() ;
  const ::edition_unittest::TestRequired& optional_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequired* release_optional_message();
  ::edition_unittest::TestRequired* mutable_optional_message();
  void set_allocated_optional_message(::edition_unittest::TestRequired* value);
  void unsafe_arena_set_allocated_optional_message(::edition_unittest::TestRequired* value);
  ::edition_unittest::TestRequired* unsafe_arena_release_optional_message();

  private:
  const ::edition_unittest::TestRequired& _internal_optional_message() const;
  ::edition_unittest::TestRequired* _internal_mutable_optional_message();

  public:
  // .edition_unittest.TestRequired required_message = 3 [features = {
  bool has_required_message() const;
  void clear_required_message() ;
  const ::edition_unittest::TestRequired& required_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequired* release_required_message();
  ::edition_unittest::TestRequired* mutable_required_message();
  void set_allocated_required_message(::edition_unittest::TestRequired* value);
  void unsafe_arena_set_allocated_required_message(::edition_unittest::TestRequired* value);
  ::edition_unittest::TestRequired* unsafe_arena_release_required_message();

  private:
  const ::edition_unittest::TestRequired& _internal_required_message() const;
  ::edition_unittest::TestRequired* _internal_mutable_required_message();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequiredMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestRequired > repeated_message_;
    ::edition_unittest::TestRequired* optional_message_;
    ::edition_unittest::TestRequired* required_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestParsingMerge_RepeatedGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestParsingMerge.RepeatedGroup) */ {
 public:
  inline TestParsingMerge_RepeatedGroup() : TestParsingMerge_RepeatedGroup(nullptr) {}
  ~TestParsingMerge_RepeatedGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestParsingMerge_RepeatedGroup(const TestParsingMerge_RepeatedGroup& from) : TestParsingMerge_RepeatedGroup(nullptr, from) {}
  inline TestParsingMerge_RepeatedGroup(TestParsingMerge_RepeatedGroup&& from) noexcept
      : TestParsingMerge_RepeatedGroup(nullptr, std::move(from)) {}
  inline TestParsingMerge_RepeatedGroup& operator=(const TestParsingMerge_RepeatedGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestParsingMerge_RepeatedGroup& operator=(TestParsingMerge_RepeatedGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestParsingMerge_RepeatedGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestParsingMerge_RepeatedGroup* internal_default_instance() {
    return reinterpret_cast<const TestParsingMerge_RepeatedGroup*>(
        &_TestParsingMerge_RepeatedGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 98;
  friend void swap(TestParsingMerge_RepeatedGroup& a, TestParsingMerge_RepeatedGroup& b) { a.Swap(&b); }
  inline void Swap(TestParsingMerge_RepeatedGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestParsingMerge_RepeatedGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestParsingMerge_RepeatedGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestParsingMerge_RepeatedGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestParsingMerge_RepeatedGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestParsingMerge_RepeatedGroup& from) { TestParsingMerge_RepeatedGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestParsingMerge_RepeatedGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestParsingMerge.RepeatedGroup"; }

 protected:
  explicit TestParsingMerge_RepeatedGroup(::google::protobuf::Arena* arena);
  TestParsingMerge_RepeatedGroup(::google::protobuf::Arena* arena, const TestParsingMerge_RepeatedGroup& from);
  TestParsingMerge_RepeatedGroup(::google::protobuf::Arena* arena, TestParsingMerge_RepeatedGroup&& from) noexcept
      : TestParsingMerge_RepeatedGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedGroupAllTypesFieldNumber = 21,
  };
  // .edition_unittest.TestAllTypes repeated_group_all_types = 21;
  bool has_repeated_group_all_types() const;
  void clear_repeated_group_all_types() ;
  const ::edition_unittest::TestAllTypes& repeated_group_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_repeated_group_all_types();
  ::edition_unittest::TestAllTypes* mutable_repeated_group_all_types();
  void set_allocated_repeated_group_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_repeated_group_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_repeated_group_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_repeated_group_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_repeated_group_all_types();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestParsingMerge.RepeatedGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestParsingMerge_RepeatedGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestParsingMerge_RepeatedGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes* repeated_group_all_types_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestParsingMerge_RepeatedFieldsGenerator_Group2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2) */ {
 public:
  inline TestParsingMerge_RepeatedFieldsGenerator_Group2() : TestParsingMerge_RepeatedFieldsGenerator_Group2(nullptr) {}
  ~TestParsingMerge_RepeatedFieldsGenerator_Group2() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGenerator_Group2(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestParsingMerge_RepeatedFieldsGenerator_Group2(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) : TestParsingMerge_RepeatedFieldsGenerator_Group2(nullptr, from) {}
  inline TestParsingMerge_RepeatedFieldsGenerator_Group2(TestParsingMerge_RepeatedFieldsGenerator_Group2&& from) noexcept
      : TestParsingMerge_RepeatedFieldsGenerator_Group2(nullptr, std::move(from)) {}
  inline TestParsingMerge_RepeatedFieldsGenerator_Group2& operator=(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestParsingMerge_RepeatedFieldsGenerator_Group2& operator=(TestParsingMerge_RepeatedFieldsGenerator_Group2&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestParsingMerge_RepeatedFieldsGenerator_Group2& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestParsingMerge_RepeatedFieldsGenerator_Group2* internal_default_instance() {
    return reinterpret_cast<const TestParsingMerge_RepeatedFieldsGenerator_Group2*>(
        &_TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 95;
  friend void swap(TestParsingMerge_RepeatedFieldsGenerator_Group2& a, TestParsingMerge_RepeatedFieldsGenerator_Group2& b) { a.Swap(&b); }
  inline void Swap(TestParsingMerge_RepeatedFieldsGenerator_Group2* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestParsingMerge_RepeatedFieldsGenerator_Group2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestParsingMerge_RepeatedFieldsGenerator_Group2* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestParsingMerge_RepeatedFieldsGenerator_Group2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) { TestParsingMerge_RepeatedFieldsGenerator_Group2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestParsingMerge_RepeatedFieldsGenerator_Group2* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2"; }

 protected:
  explicit TestParsingMerge_RepeatedFieldsGenerator_Group2(::google::protobuf::Arena* arena);
  TestParsingMerge_RepeatedFieldsGenerator_Group2(::google::protobuf::Arena* arena, const TestParsingMerge_RepeatedFieldsGenerator_Group2& from);
  TestParsingMerge_RepeatedFieldsGenerator_Group2(::google::protobuf::Arena* arena, TestParsingMerge_RepeatedFieldsGenerator_Group2&& from) noexcept
      : TestParsingMerge_RepeatedFieldsGenerator_Group2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kField1FieldNumber = 21,
  };
  // .edition_unittest.TestAllTypes field1 = 21;
  bool has_field1() const;
  void clear_field1() ;
  const ::edition_unittest::TestAllTypes& field1() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_field1();
  ::edition_unittest::TestAllTypes* mutable_field1();
  void set_allocated_field1(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_field1(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_field1();

  private:
  const ::edition_unittest::TestAllTypes& _internal_field1() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_field1();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestParsingMerge_RepeatedFieldsGenerator_Group2& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes* field1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestParsingMerge_RepeatedFieldsGenerator_Group1 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1) */ {
 public:
  inline TestParsingMerge_RepeatedFieldsGenerator_Group1() : TestParsingMerge_RepeatedFieldsGenerator_Group1(nullptr) {}
  ~TestParsingMerge_RepeatedFieldsGenerator_Group1() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGenerator_Group1(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestParsingMerge_RepeatedFieldsGenerator_Group1(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) : TestParsingMerge_RepeatedFieldsGenerator_Group1(nullptr, from) {}
  inline TestParsingMerge_RepeatedFieldsGenerator_Group1(TestParsingMerge_RepeatedFieldsGenerator_Group1&& from) noexcept
      : TestParsingMerge_RepeatedFieldsGenerator_Group1(nullptr, std::move(from)) {}
  inline TestParsingMerge_RepeatedFieldsGenerator_Group1& operator=(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestParsingMerge_RepeatedFieldsGenerator_Group1& operator=(TestParsingMerge_RepeatedFieldsGenerator_Group1&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestParsingMerge_RepeatedFieldsGenerator_Group1& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestParsingMerge_RepeatedFieldsGenerator_Group1* internal_default_instance() {
    return reinterpret_cast<const TestParsingMerge_RepeatedFieldsGenerator_Group1*>(
        &_TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 94;
  friend void swap(TestParsingMerge_RepeatedFieldsGenerator_Group1& a, TestParsingMerge_RepeatedFieldsGenerator_Group1& b) { a.Swap(&b); }
  inline void Swap(TestParsingMerge_RepeatedFieldsGenerator_Group1* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestParsingMerge_RepeatedFieldsGenerator_Group1* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestParsingMerge_RepeatedFieldsGenerator_Group1* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestParsingMerge_RepeatedFieldsGenerator_Group1>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) { TestParsingMerge_RepeatedFieldsGenerator_Group1::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestParsingMerge_RepeatedFieldsGenerator_Group1* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1"; }

 protected:
  explicit TestParsingMerge_RepeatedFieldsGenerator_Group1(::google::protobuf::Arena* arena);
  TestParsingMerge_RepeatedFieldsGenerator_Group1(::google::protobuf::Arena* arena, const TestParsingMerge_RepeatedFieldsGenerator_Group1& from);
  TestParsingMerge_RepeatedFieldsGenerator_Group1(::google::protobuf::Arena* arena, TestParsingMerge_RepeatedFieldsGenerator_Group1&& from) noexcept
      : TestParsingMerge_RepeatedFieldsGenerator_Group1(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kField1FieldNumber = 11,
  };
  // .edition_unittest.TestAllTypes field1 = 11;
  bool has_field1() const;
  void clear_field1() ;
  const ::edition_unittest::TestAllTypes& field1() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_field1();
  ::edition_unittest::TestAllTypes* mutable_field1();
  void set_allocated_field1(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_field1(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_field1();

  private:
  const ::edition_unittest::TestAllTypes& _internal_field1() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_field1();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestParsingMerge_RepeatedFieldsGenerator_Group1& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes* field1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestParsingMerge_OptionalGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestParsingMerge.OptionalGroup) */ {
 public:
  inline TestParsingMerge_OptionalGroup() : TestParsingMerge_OptionalGroup(nullptr) {}
  ~TestParsingMerge_OptionalGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestParsingMerge_OptionalGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestParsingMerge_OptionalGroup(const TestParsingMerge_OptionalGroup& from) : TestParsingMerge_OptionalGroup(nullptr, from) {}
  inline TestParsingMerge_OptionalGroup(TestParsingMerge_OptionalGroup&& from) noexcept
      : TestParsingMerge_OptionalGroup(nullptr, std::move(from)) {}
  inline TestParsingMerge_OptionalGroup& operator=(const TestParsingMerge_OptionalGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestParsingMerge_OptionalGroup& operator=(TestParsingMerge_OptionalGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestParsingMerge_OptionalGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestParsingMerge_OptionalGroup* internal_default_instance() {
    return reinterpret_cast<const TestParsingMerge_OptionalGroup*>(
        &_TestParsingMerge_OptionalGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 97;
  friend void swap(TestParsingMerge_OptionalGroup& a, TestParsingMerge_OptionalGroup& b) { a.Swap(&b); }
  inline void Swap(TestParsingMerge_OptionalGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestParsingMerge_OptionalGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestParsingMerge_OptionalGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestParsingMerge_OptionalGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestParsingMerge_OptionalGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestParsingMerge_OptionalGroup& from) { TestParsingMerge_OptionalGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestParsingMerge_OptionalGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestParsingMerge.OptionalGroup"; }

 protected:
  explicit TestParsingMerge_OptionalGroup(::google::protobuf::Arena* arena);
  TestParsingMerge_OptionalGroup(::google::protobuf::Arena* arena, const TestParsingMerge_OptionalGroup& from);
  TestParsingMerge_OptionalGroup(::google::protobuf::Arena* arena, TestParsingMerge_OptionalGroup&& from) noexcept
      : TestParsingMerge_OptionalGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalGroupAllTypesFieldNumber = 11,
  };
  // .edition_unittest.TestAllTypes optional_group_all_types = 11;
  bool has_optional_group_all_types() const;
  void clear_optional_group_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_group_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_group_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_group_all_types();
  void set_allocated_optional_group_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_group_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_group_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_group_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_group_all_types();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestParsingMerge.OptionalGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestParsingMerge_OptionalGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestParsingMerge_OptionalGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes* optional_group_all_types_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestOneofBackwardsCompatible final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestOneofBackwardsCompatible) */ {
 public:
  inline TestOneofBackwardsCompatible() : TestOneofBackwardsCompatible(nullptr) {}
  ~TestOneofBackwardsCompatible() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestOneofBackwardsCompatible(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestOneofBackwardsCompatible(const TestOneofBackwardsCompatible& from) : TestOneofBackwardsCompatible(nullptr, from) {}
  inline TestOneofBackwardsCompatible(TestOneofBackwardsCompatible&& from) noexcept
      : TestOneofBackwardsCompatible(nullptr, std::move(from)) {}
  inline TestOneofBackwardsCompatible& operator=(const TestOneofBackwardsCompatible& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestOneofBackwardsCompatible& operator=(TestOneofBackwardsCompatible&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestOneofBackwardsCompatible& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestOneofBackwardsCompatible* internal_default_instance() {
    return reinterpret_cast<const TestOneofBackwardsCompatible*>(
        &_TestOneofBackwardsCompatible_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 80;
  friend void swap(TestOneofBackwardsCompatible& a, TestOneofBackwardsCompatible& b) { a.Swap(&b); }
  inline void Swap(TestOneofBackwardsCompatible* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestOneofBackwardsCompatible* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestOneofBackwardsCompatible* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestOneofBackwardsCompatible>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestOneofBackwardsCompatible& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestOneofBackwardsCompatible& from) { TestOneofBackwardsCompatible::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestOneofBackwardsCompatible* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestOneofBackwardsCompatible"; }

 protected:
  explicit TestOneofBackwardsCompatible(::google::protobuf::Arena* arena);
  TestOneofBackwardsCompatible(::google::protobuf::Arena* arena, const TestOneofBackwardsCompatible& from);
  TestOneofBackwardsCompatible(::google::protobuf::Arena* arena, TestOneofBackwardsCompatible&& from) noexcept
      : TestOneofBackwardsCompatible(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FooGroup = TestOneofBackwardsCompatible_FooGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kFooStringFieldNumber = 2,
    kFooMessageFieldNumber = 3,
    kFoogroupFieldNumber = 4,
    kFooIntFieldNumber = 1,
  };
  // string foo_string = 2;
  bool has_foo_string() const;
  void clear_foo_string() ;
  absl::string_view foo_string() const;
  template <typename Arg_ = std::string&&>
  void set_foo_string(Arg_&& arg);

  private:
  const std::string& _internal_foo_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_foo_string(
      absl::string_view value);

  public:
  // .edition_unittest.TestAllTypes foo_message = 3;
  bool has_foo_message() const;
  void clear_foo_message() ;
  const ::edition_unittest::TestAllTypes& foo_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_foo_message();
  ::edition_unittest::TestAllTypes* mutable_foo_message();
  void set_allocated_foo_message(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_foo_message(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_foo_message();

  private:
  const ::edition_unittest::TestAllTypes& _internal_foo_message() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_foo_message();

  public:
  // .edition_unittest.TestOneofBackwardsCompatible.FooGroup foogroup = 4 [features = {
  bool has_foogroup() const;
  void clear_foogroup() ;
  const ::edition_unittest::TestOneofBackwardsCompatible_FooGroup& foogroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* release_foogroup();
  ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* mutable_foogroup();
  void set_allocated_foogroup(::edition_unittest::TestOneofBackwardsCompatible_FooGroup* value);
  void unsafe_arena_set_allocated_foogroup(::edition_unittest::TestOneofBackwardsCompatible_FooGroup* value);
  ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* unsafe_arena_release_foogroup();

  private:
  const ::edition_unittest::TestOneofBackwardsCompatible_FooGroup& _internal_foogroup() const;
  ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* _internal_mutable_foogroup();

  public:
  // int32 foo_int = 1;
  bool has_foo_int() const;
  void clear_foo_int() ;
  ::int32_t foo_int() const;
  void set_foo_int(::int32_t value);

  private:
  ::int32_t _internal_foo_int() const;
  void _internal_set_foo_int(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestOneofBackwardsCompatible)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestOneofBackwardsCompatible_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestOneofBackwardsCompatible& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr foo_string_;
    ::edition_unittest::TestAllTypes* foo_message_;
    ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* foogroup_;
    ::int32_t foo_int_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestOneof final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestOneof) */ {
 public:
  inline TestOneof() : TestOneof(nullptr) {}
  ~TestOneof() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestOneof(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestOneof(const TestOneof& from) : TestOneof(nullptr, from) {}
  inline TestOneof(TestOneof&& from) noexcept
      : TestOneof(nullptr, std::move(from)) {}
  inline TestOneof& operator=(const TestOneof& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestOneof& operator=(TestOneof&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestOneof& default_instance() {
    return *internal_default_instance();
  }
  enum FooCase {
    kFooInt = 1,
    kFooString = 2,
    kFooMessage = 3,
    kFoogroup = 4,
    FOO_NOT_SET = 0,
  };
  static inline const TestOneof* internal_default_instance() {
    return reinterpret_cast<const TestOneof*>(
        &_TestOneof_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 78;
  friend void swap(TestOneof& a, TestOneof& b) { a.Swap(&b); }
  inline void Swap(TestOneof* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestOneof* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestOneof* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestOneof>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestOneof& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestOneof& from) { TestOneof::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestOneof* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestOneof"; }

 protected:
  explicit TestOneof(::google::protobuf::Arena* arena);
  TestOneof(::google::protobuf::Arena* arena, const TestOneof& from);
  TestOneof(::google::protobuf::Arena* arena, TestOneof&& from) noexcept
      : TestOneof(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FooGroup = TestOneof_FooGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kFooIntFieldNumber = 1,
    kFooStringFieldNumber = 2,
    kFooMessageFieldNumber = 3,
    kFoogroupFieldNumber = 4,
  };
  // int32 foo_int = 1;
  bool has_foo_int() const;
  void clear_foo_int() ;
  ::int32_t foo_int() const;
  void set_foo_int(::int32_t value);

  private:
  ::int32_t _internal_foo_int() const;
  void _internal_set_foo_int(::int32_t value);

  public:
  // string foo_string = 2;
  bool has_foo_string() const;
  void clear_foo_string() ;
  absl::string_view foo_string() const;
  template <typename Arg_ = std::string&&>
  void set_foo_string(Arg_&& arg);

  private:
  const std::string& _internal_foo_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_foo_string(
      absl::string_view value);

  public:
  // .edition_unittest.TestAllTypes foo_message = 3;
  bool has_foo_message() const;
  private:
  bool _internal_has_foo_message() const;

  public:
  void clear_foo_message() ;
  const ::edition_unittest::TestAllTypes& foo_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_foo_message();
  ::edition_unittest::TestAllTypes* mutable_foo_message();
  void set_allocated_foo_message(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_foo_message(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_foo_message();

  private:
  const ::edition_unittest::TestAllTypes& _internal_foo_message() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_foo_message();

  public:
  // .edition_unittest.TestOneof.FooGroup foogroup = 4 [features = {
  bool has_foogroup() const;
  private:
  bool _internal_has_foogroup() const;

  public:
  void clear_foogroup() ;
  const ::edition_unittest::TestOneof_FooGroup& foogroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestOneof_FooGroup* release_foogroup();
  ::edition_unittest::TestOneof_FooGroup* mutable_foogroup();
  void set_allocated_foogroup(::edition_unittest::TestOneof_FooGroup* value);
  void unsafe_arena_set_allocated_foogroup(::edition_unittest::TestOneof_FooGroup* value);
  ::edition_unittest::TestOneof_FooGroup* unsafe_arena_release_foogroup();

  private:
  const ::edition_unittest::TestOneof_FooGroup& _internal_foogroup() const;
  ::edition_unittest::TestOneof_FooGroup* _internal_mutable_foogroup();

  public:
  void clear_foo();
  FooCase foo_case() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestOneof)
 private:
  class _Internal;
  void set_has_foo_int();
  void set_has_foo_string();
  void set_has_foo_message();
  void set_has_foogroup();
  inline bool has_foo() const;
  inline void clear_has_foo();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 2,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestOneof_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestOneof& from_msg);
    union FooUnion {
      constexpr FooUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t foo_int_;
      ::google::protobuf::internal::ArenaStringPtr foo_string_;
      ::edition_unittest::TestAllTypes* foo_message_;
      ::edition_unittest::TestOneof_FooGroup* foogroup_;
    } foo_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedMessageHasBits final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedMessageHasBits) */ {
 public:
  inline TestNestedMessageHasBits() : TestNestedMessageHasBits(nullptr) {}
  ~TestNestedMessageHasBits() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedMessageHasBits(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedMessageHasBits(const TestNestedMessageHasBits& from) : TestNestedMessageHasBits(nullptr, from) {}
  inline TestNestedMessageHasBits(TestNestedMessageHasBits&& from) noexcept
      : TestNestedMessageHasBits(nullptr, std::move(from)) {}
  inline TestNestedMessageHasBits& operator=(const TestNestedMessageHasBits& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedMessageHasBits& operator=(TestNestedMessageHasBits&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedMessageHasBits& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedMessageHasBits* internal_default_instance() {
    return reinterpret_cast<const TestNestedMessageHasBits*>(
        &_TestNestedMessageHasBits_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(TestNestedMessageHasBits& a, TestNestedMessageHasBits& b) { a.Swap(&b); }
  inline void Swap(TestNestedMessageHasBits* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedMessageHasBits* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedMessageHasBits* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedMessageHasBits>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedMessageHasBits& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedMessageHasBits& from) { TestNestedMessageHasBits::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedMessageHasBits* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedMessageHasBits"; }

 protected:
  explicit TestNestedMessageHasBits(::google::protobuf::Arena* arena);
  TestNestedMessageHasBits(::google::protobuf::Arena* arena, const TestNestedMessageHasBits& from);
  TestNestedMessageHasBits(::google::protobuf::Arena* arena, TestNestedMessageHasBits&& from) noexcept
      : TestNestedMessageHasBits(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedMessage = TestNestedMessageHasBits_NestedMessage;

  // accessors -------------------------------------------------------
  enum : int {
    kOptionalNestedMessageFieldNumber = 1,
  };
  // .edition_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
  bool has_optional_nested_message() const;
  void clear_optional_nested_message() ;
  const ::edition_unittest::TestNestedMessageHasBits_NestedMessage& optional_nested_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestNestedMessageHasBits_NestedMessage* release_optional_nested_message();
  ::edition_unittest::TestNestedMessageHasBits_NestedMessage* mutable_optional_nested_message();
  void set_allocated_optional_nested_message(::edition_unittest::TestNestedMessageHasBits_NestedMessage* value);
  void unsafe_arena_set_allocated_optional_nested_message(::edition_unittest::TestNestedMessageHasBits_NestedMessage* value);
  ::edition_unittest::TestNestedMessageHasBits_NestedMessage* unsafe_arena_release_optional_nested_message();

  private:
  const ::edition_unittest::TestNestedMessageHasBits_NestedMessage& _internal_optional_nested_message() const;
  ::edition_unittest::TestNestedMessageHasBits_NestedMessage* _internal_mutable_optional_nested_message();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedMessageHasBits)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedMessageHasBits_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedMessageHasBits& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestNestedMessageHasBits_NestedMessage* optional_nested_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedGroupExtensionOuter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedGroupExtensionOuter) */ {
 public:
  inline TestNestedGroupExtensionOuter() : TestNestedGroupExtensionOuter(nullptr) {}
  ~TestNestedGroupExtensionOuter() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedGroupExtensionOuter(const TestNestedGroupExtensionOuter& from) : TestNestedGroupExtensionOuter(nullptr, from) {}
  inline TestNestedGroupExtensionOuter(TestNestedGroupExtensionOuter&& from) noexcept
      : TestNestedGroupExtensionOuter(nullptr, std::move(from)) {}
  inline TestNestedGroupExtensionOuter& operator=(const TestNestedGroupExtensionOuter& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedGroupExtensionOuter& operator=(TestNestedGroupExtensionOuter&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedGroupExtensionOuter& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedGroupExtensionOuter* internal_default_instance() {
    return reinterpret_cast<const TestNestedGroupExtensionOuter*>(
        &_TestNestedGroupExtensionOuter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 117;
  friend void swap(TestNestedGroupExtensionOuter& a, TestNestedGroupExtensionOuter& b) { a.Swap(&b); }
  inline void Swap(TestNestedGroupExtensionOuter* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedGroupExtensionOuter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedGroupExtensionOuter* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedGroupExtensionOuter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedGroupExtensionOuter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedGroupExtensionOuter& from) { TestNestedGroupExtensionOuter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedGroupExtensionOuter* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedGroupExtensionOuter"; }

 protected:
  explicit TestNestedGroupExtensionOuter(::google::protobuf::Arena* arena);
  TestNestedGroupExtensionOuter(::google::protobuf::Arena* arena, const TestNestedGroupExtensionOuter& from);
  TestNestedGroupExtensionOuter(::google::protobuf::Arena* arena, TestNestedGroupExtensionOuter&& from) noexcept
      : TestNestedGroupExtensionOuter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Layer1OptionalGroup = TestNestedGroupExtensionOuter_Layer1OptionalGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kLay1OptionalgroupFieldNumber = 1,
  };
  // .edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup lay1optionalgroup = 1 [features = {
  bool has_lay1optionalgroup() const;
  void clear_lay1optionalgroup() ;
  const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup& lay1optionalgroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* release_lay1optionalgroup();
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* mutable_lay1optionalgroup();
  void set_allocated_lay1optionalgroup(::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* value);
  void unsafe_arena_set_allocated_lay1optionalgroup(::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* value);
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* unsafe_arena_release_lay1optionalgroup();

  private:
  const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup& _internal_lay1optionalgroup() const;
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* _internal_mutable_lay1optionalgroup();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedGroupExtensionOuter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedGroupExtensionOuter_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedGroupExtensionOuter& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* lay1optionalgroup_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedChildExtension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedChildExtension) */ {
 public:
  inline TestNestedChildExtension() : TestNestedChildExtension(nullptr) {}
  ~TestNestedChildExtension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedChildExtension(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedChildExtension(const TestNestedChildExtension& from) : TestNestedChildExtension(nullptr, from) {}
  inline TestNestedChildExtension(TestNestedChildExtension&& from) noexcept
      : TestNestedChildExtension(nullptr, std::move(from)) {}
  inline TestNestedChildExtension& operator=(const TestNestedChildExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedChildExtension& operator=(TestNestedChildExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedChildExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedChildExtension* internal_default_instance() {
    return reinterpret_cast<const TestNestedChildExtension*>(
        &_TestNestedChildExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(TestNestedChildExtension& a, TestNestedChildExtension& b) { a.Swap(&b); }
  inline void Swap(TestNestedChildExtension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedChildExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedChildExtension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedChildExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedChildExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedChildExtension& from) { TestNestedChildExtension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedChildExtension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedChildExtension"; }

 protected:
  explicit TestNestedChildExtension(::google::protobuf::Arena* arena);
  TestNestedChildExtension(::google::protobuf::Arena* arena, const TestNestedChildExtension& from);
  TestNestedChildExtension(::google::protobuf::Arena* arena, TestNestedChildExtension&& from) noexcept
      : TestNestedChildExtension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChildFieldNumber = 2,
    kAFieldNumber = 1,
  };
  // .edition_unittest.TestChildExtension child = 2;
  bool has_child() const;
  void clear_child() ;
  const ::edition_unittest::TestChildExtension& child() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestChildExtension* release_child();
  ::edition_unittest::TestChildExtension* mutable_child();
  void set_allocated_child(::edition_unittest::TestChildExtension* value);
  void unsafe_arena_set_allocated_child(::edition_unittest::TestChildExtension* value);
  ::edition_unittest::TestChildExtension* unsafe_arena_release_child();

  private:
  const ::edition_unittest::TestChildExtension& _internal_child() const;
  ::edition_unittest::TestChildExtension* _internal_mutable_child();

  public:
  // int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedChildExtension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedChildExtension_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedChildExtension& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestChildExtension* child_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMutualRecursionA_SubGroupR final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMutualRecursionA.SubGroupR) */ {
 public:
  inline TestMutualRecursionA_SubGroupR() : TestMutualRecursionA_SubGroupR(nullptr) {}
  ~TestMutualRecursionA_SubGroupR() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMutualRecursionA_SubGroupR(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMutualRecursionA_SubGroupR(const TestMutualRecursionA_SubGroupR& from) : TestMutualRecursionA_SubGroupR(nullptr, from) {}
  inline TestMutualRecursionA_SubGroupR(TestMutualRecursionA_SubGroupR&& from) noexcept
      : TestMutualRecursionA_SubGroupR(nullptr, std::move(from)) {}
  inline TestMutualRecursionA_SubGroupR& operator=(const TestMutualRecursionA_SubGroupR& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMutualRecursionA_SubGroupR& operator=(TestMutualRecursionA_SubGroupR&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMutualRecursionA_SubGroupR& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMutualRecursionA_SubGroupR* internal_default_instance() {
    return reinterpret_cast<const TestMutualRecursionA_SubGroupR*>(
        &_TestMutualRecursionA_SubGroupR_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(TestMutualRecursionA_SubGroupR& a, TestMutualRecursionA_SubGroupR& b) { a.Swap(&b); }
  inline void Swap(TestMutualRecursionA_SubGroupR* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMutualRecursionA_SubGroupR* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMutualRecursionA_SubGroupR* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMutualRecursionA_SubGroupR>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMutualRecursionA_SubGroupR& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMutualRecursionA_SubGroupR& from) { TestMutualRecursionA_SubGroupR::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMutualRecursionA_SubGroupR* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMutualRecursionA.SubGroupR"; }

 protected:
  explicit TestMutualRecursionA_SubGroupR(::google::protobuf::Arena* arena);
  TestMutualRecursionA_SubGroupR(::google::protobuf::Arena* arena, const TestMutualRecursionA_SubGroupR& from);
  TestMutualRecursionA_SubGroupR(::google::protobuf::Arena* arena, TestMutualRecursionA_SubGroupR&& from) noexcept
      : TestMutualRecursionA_SubGroupR(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 6,
  };
  // .edition_unittest.TestAllTypes payload = 6;
  bool has_payload() const;
  void clear_payload() ;
  const ::edition_unittest::TestAllTypes& payload() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_payload();
  ::edition_unittest::TestAllTypes* mutable_payload();
  void set_allocated_payload(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_payload(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_payload();

  private:
  const ::edition_unittest::TestAllTypes& _internal_payload() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMutualRecursionA.SubGroupR)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMutualRecursionA_SubGroupR_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMutualRecursionA_SubGroupR& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes* payload_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestLazyMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestLazyMessage) */ {
 public:
  inline TestLazyMessage() : TestLazyMessage(nullptr) {}
  ~TestLazyMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestLazyMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestLazyMessage(const TestLazyMessage& from) : TestLazyMessage(nullptr, from) {}
  inline TestLazyMessage(TestLazyMessage&& from) noexcept
      : TestLazyMessage(nullptr, std::move(from)) {}
  inline TestLazyMessage& operator=(const TestLazyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestLazyMessage& operator=(TestLazyMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestLazyMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestLazyMessage* internal_default_instance() {
    return reinterpret_cast<const TestLazyMessage*>(
        &_TestLazyMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(TestLazyMessage& a, TestLazyMessage& b) { a.Swap(&b); }
  inline void Swap(TestLazyMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestLazyMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestLazyMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestLazyMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestLazyMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestLazyMessage& from) { TestLazyMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestLazyMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestLazyMessage"; }

 protected:
  explicit TestLazyMessage(::google::protobuf::Arena* arena);
  TestLazyMessage(::google::protobuf::Arena* arena, const TestLazyMessage& from);
  TestLazyMessage(::google::protobuf::Arena* arena, TestLazyMessage&& from) noexcept
      : TestLazyMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubMessageFieldNumber = 1,
  };
  // .edition_unittest.TestAllTypes sub_message = 1 [lazy = true];
  bool has_sub_message() const;
  void clear_sub_message() ;
  const ::edition_unittest::TestAllTypes& sub_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_sub_message();
  ::edition_unittest::TestAllTypes* mutable_sub_message();
  void set_allocated_sub_message(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_sub_message(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_sub_message();

  private:
  const ::edition_unittest::TestAllTypes& _internal_sub_message() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_sub_message();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestLazyMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestLazyMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestLazyMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes* sub_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestIsInitialized final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestIsInitialized) */ {
 public:
  inline TestIsInitialized() : TestIsInitialized(nullptr) {}
  ~TestIsInitialized() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestIsInitialized(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestIsInitialized(const TestIsInitialized& from) : TestIsInitialized(nullptr, from) {}
  inline TestIsInitialized(TestIsInitialized&& from) noexcept
      : TestIsInitialized(nullptr, std::move(from)) {}
  inline TestIsInitialized& operator=(const TestIsInitialized& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestIsInitialized& operator=(TestIsInitialized&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestIsInitialized& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestIsInitialized* internal_default_instance() {
    return reinterpret_cast<const TestIsInitialized*>(
        &_TestIsInitialized_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(TestIsInitialized& a, TestIsInitialized& b) { a.Swap(&b); }
  inline void Swap(TestIsInitialized* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestIsInitialized* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestIsInitialized* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestIsInitialized>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestIsInitialized& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestIsInitialized& from) { TestIsInitialized::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestIsInitialized* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestIsInitialized"; }

 protected:
  explicit TestIsInitialized(::google::protobuf::Arena* arena);
  TestIsInitialized(::google::protobuf::Arena* arena, const TestIsInitialized& from);
  TestIsInitialized(::google::protobuf::Arena* arena, TestIsInitialized&& from) noexcept
      : TestIsInitialized(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SubMessage = TestIsInitialized_SubMessage;

  // accessors -------------------------------------------------------
  enum : int {
    kSubMessageFieldNumber = 1,
  };
  // .edition_unittest.TestIsInitialized.SubMessage sub_message = 1;
  bool has_sub_message() const;
  void clear_sub_message() ;
  const ::edition_unittest::TestIsInitialized_SubMessage& sub_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestIsInitialized_SubMessage* release_sub_message();
  ::edition_unittest::TestIsInitialized_SubMessage* mutable_sub_message();
  void set_allocated_sub_message(::edition_unittest::TestIsInitialized_SubMessage* value);
  void unsafe_arena_set_allocated_sub_message(::edition_unittest::TestIsInitialized_SubMessage* value);
  ::edition_unittest::TestIsInitialized_SubMessage* unsafe_arena_release_sub_message();

  private:
  const ::edition_unittest::TestIsInitialized_SubMessage& _internal_sub_message() const;
  ::edition_unittest::TestIsInitialized_SubMessage* _internal_mutable_sub_message();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestIsInitialized)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestIsInitialized_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestIsInitialized& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestIsInitialized_SubMessage* sub_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestHugeFieldNumbers final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestHugeFieldNumbers) */ {
 public:
  inline TestHugeFieldNumbers() : TestHugeFieldNumbers(nullptr) {}
  ~TestHugeFieldNumbers() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestHugeFieldNumbers(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestHugeFieldNumbers(const TestHugeFieldNumbers& from) : TestHugeFieldNumbers(nullptr, from) {}
  inline TestHugeFieldNumbers(TestHugeFieldNumbers&& from) noexcept
      : TestHugeFieldNumbers(nullptr, std::move(from)) {}
  inline TestHugeFieldNumbers& operator=(const TestHugeFieldNumbers& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestHugeFieldNumbers& operator=(TestHugeFieldNumbers&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestHugeFieldNumbers& default_instance() {
    return *internal_default_instance();
  }
  enum OneofFieldCase {
    kOneofUint32 = 536870011,
    kOneofTestAllTypes = 536870012,
    kOneofString = 536870013,
    kOneofBytes = 536870014,
    ONEOF_FIELD_NOT_SET = 0,
  };
  static inline const TestHugeFieldNumbers* internal_default_instance() {
    return reinterpret_cast<const TestHugeFieldNumbers*>(
        &_TestHugeFieldNumbers_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 112;
  friend void swap(TestHugeFieldNumbers& a, TestHugeFieldNumbers& b) { a.Swap(&b); }
  inline void Swap(TestHugeFieldNumbers* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestHugeFieldNumbers* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestHugeFieldNumbers* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestHugeFieldNumbers>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestHugeFieldNumbers& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestHugeFieldNumbers& from) { TestHugeFieldNumbers::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestHugeFieldNumbers* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestHugeFieldNumbers"; }

 protected:
  explicit TestHugeFieldNumbers(::google::protobuf::Arena* arena);
  TestHugeFieldNumbers(::google::protobuf::Arena* arena, const TestHugeFieldNumbers& from);
  TestHugeFieldNumbers(::google::protobuf::Arena* arena, TestHugeFieldNumbers&& from) noexcept
      : TestHugeFieldNumbers(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OptionalGroup = TestHugeFieldNumbers_OptionalGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedInt32FieldNumber = 536870002,
    kPackedInt32FieldNumber = 536870003,
    kStringStringMapFieldNumber = 536870010,
    kOptionalStringFieldNumber = 536870005,
    kOptionalBytesFieldNumber = 536870006,
    kOptionalMessageFieldNumber = 536870007,
    kOptionalgroupFieldNumber = 536870008,
    kOptionalInt32FieldNumber = 536870000,
    kFixed32FieldNumber = 536870001,
    kOptionalEnumFieldNumber = 536870004,
    kOneofUint32FieldNumber = 536870011,
    kOneofTestAllTypesFieldNumber = 536870012,
    kOneofStringFieldNumber = 536870013,
    kOneofBytesFieldNumber = 536870014,
  };
  // repeated int32 repeated_int32 = 536870002 [features = {
  int repeated_int32_size() const;
  private:
  int _internal_repeated_int32_size() const;

  public:
  void clear_repeated_int32() ;
  ::int32_t repeated_int32(int index) const;
  void set_repeated_int32(int index, ::int32_t value);
  void add_repeated_int32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& repeated_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_repeated_int32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_repeated_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_repeated_int32();

  public:
  // repeated int32 packed_int32 = 536870003 [features = {
  int packed_int32_size() const;
  private:
  int _internal_packed_int32_size() const;

  public:
  void clear_packed_int32() ;
  ::int32_t packed_int32(int index) const;
  void set_packed_int32(int index, ::int32_t value);
  void add_packed_int32(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& packed_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_packed_int32();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_packed_int32() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_packed_int32();

  public:
  // map<string, string> string_string_map = 536870010;
  int string_string_map_size() const;
  private:
  int _internal_string_string_map_size() const;

  public:
  void clear_string_string_map() ;
  const ::google::protobuf::Map<std::string, std::string>& string_string_map() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_string_string_map();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_string_string_map() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_string_string_map();

  public:
  // string optional_string = 536870005;
  bool has_optional_string() const;
  void clear_optional_string() ;
  absl::string_view optional_string() const;
  template <typename Arg_ = std::string&&>
  void set_optional_string(Arg_&& arg);

  private:
  const std::string& _internal_optional_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string(
      absl::string_view value);

  public:
  // bytes optional_bytes = 536870006;
  bool has_optional_bytes() const;
  void clear_optional_bytes() ;
  absl::string_view optional_bytes() const;
  template <typename Arg_ = std::string&&>
  void set_optional_bytes(Arg_&& arg);

  private:
  const std::string& _internal_optional_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_bytes(
      absl::string_view value);

  public:
  // .edition_unittest.ForeignMessage optional_message = 536870007;
  bool has_optional_message() const;
  void clear_optional_message() ;
  const ::edition_unittest::ForeignMessage& optional_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::ForeignMessage* release_optional_message();
  ::edition_unittest::ForeignMessage* mutable_optional_message();
  void set_allocated_optional_message(::edition_unittest::ForeignMessage* value);
  void unsafe_arena_set_allocated_optional_message(::edition_unittest::ForeignMessage* value);
  ::edition_unittest::ForeignMessage* unsafe_arena_release_optional_message();

  private:
  const ::edition_unittest::ForeignMessage& _internal_optional_message() const;
  ::edition_unittest::ForeignMessage* _internal_mutable_optional_message();

  public:
  // .edition_unittest.TestHugeFieldNumbers.OptionalGroup optionalgroup = 536870008 [features = {
  bool has_optionalgroup() const;
  void clear_optionalgroup() ;
  const ::edition_unittest::TestHugeFieldNumbers_OptionalGroup& optionalgroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* release_optionalgroup();
  ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* mutable_optionalgroup();
  void set_allocated_optionalgroup(::edition_unittest::TestHugeFieldNumbers_OptionalGroup* value);
  void unsafe_arena_set_allocated_optionalgroup(::edition_unittest::TestHugeFieldNumbers_OptionalGroup* value);
  ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* unsafe_arena_release_optionalgroup();

  private:
  const ::edition_unittest::TestHugeFieldNumbers_OptionalGroup& _internal_optionalgroup() const;
  ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* _internal_mutable_optionalgroup();

  public:
  // int32 optional_int32 = 536870000;
  bool has_optional_int32() const;
  void clear_optional_int32() ;
  ::int32_t optional_int32() const;
  void set_optional_int32(::int32_t value);

  private:
  ::int32_t _internal_optional_int32() const;
  void _internal_set_optional_int32(::int32_t value);

  public:
  // int32 fixed_32 = 536870001;
  bool has_fixed_32() const;
  void clear_fixed_32() ;
  ::int32_t fixed_32() const;
  void set_fixed_32(::int32_t value);

  private:
  ::int32_t _internal_fixed_32() const;
  void _internal_set_fixed_32(::int32_t value);

  public:
  // .edition_unittest.ForeignEnum optional_enum = 536870004;
  bool has_optional_enum() const;
  void clear_optional_enum() ;
  ::edition_unittest::ForeignEnum optional_enum() const;
  void set_optional_enum(::edition_unittest::ForeignEnum value);

  private:
  ::edition_unittest::ForeignEnum _internal_optional_enum() const;
  void _internal_set_optional_enum(::edition_unittest::ForeignEnum value);

  public:
  // uint32 oneof_uint32 = 536870011;
  bool has_oneof_uint32() const;
  void clear_oneof_uint32() ;
  ::uint32_t oneof_uint32() const;
  void set_oneof_uint32(::uint32_t value);

  private:
  ::uint32_t _internal_oneof_uint32() const;
  void _internal_set_oneof_uint32(::uint32_t value);

  public:
  // .edition_unittest.TestAllTypes oneof_test_all_types = 536870012;
  bool has_oneof_test_all_types() const;
  private:
  bool _internal_has_oneof_test_all_types() const;

  public:
  void clear_oneof_test_all_types() ;
  const ::edition_unittest::TestAllTypes& oneof_test_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_oneof_test_all_types();
  ::edition_unittest::TestAllTypes* mutable_oneof_test_all_types();
  void set_allocated_oneof_test_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_oneof_test_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_oneof_test_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_oneof_test_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_oneof_test_all_types();

  public:
  // string oneof_string = 536870013;
  bool has_oneof_string() const;
  void clear_oneof_string() ;
  absl::string_view oneof_string() const;
  template <typename Arg_ = std::string&&>
  void set_oneof_string(Arg_&& arg);

  private:
  const std::string& _internal_oneof_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_string(
      absl::string_view value);

  public:
  // bytes oneof_bytes = 536870014;
  bool has_oneof_bytes() const;
  void clear_oneof_bytes() ;
  absl::string_view oneof_bytes() const;
  template <typename Arg_ = std::string&&>
  void set_oneof_bytes(Arg_&& arg);

  private:
  const std::string& _internal_oneof_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_bytes(
      absl::string_view value);

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestHugeFieldNumbers, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  void clear_oneof_field();
  OneofFieldCase oneof_field_case() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestHugeFieldNumbers)
 private:
  class _Internal;
  void set_has_oneof_uint32();
  void set_has_oneof_test_all_types();
  void set_has_oneof_string();
  void set_has_oneof_bytes();
  inline bool has_oneof_field() const;
  inline void clear_has_oneof_field();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 14, 5,
      98, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestHugeFieldNumbers_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestHugeFieldNumbers& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> repeated_int32_;
    ::google::protobuf::RepeatedField<::int32_t> packed_int32_;
    ::google::protobuf::internal::CachedSize _packed_int32_cached_byte_size_;
    ::google::protobuf::internal::MapField<TestHugeFieldNumbers_StringStringMapEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        string_string_map_;
    ::google::protobuf::internal::ArenaStringPtr optional_string_;
    ::google::protobuf::internal::ArenaStringPtr optional_bytes_;
    ::edition_unittest::ForeignMessage* optional_message_;
    ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* optionalgroup_;
    ::int32_t optional_int32_;
    ::int32_t fixed_32_;
    int optional_enum_;
    union OneofFieldUnion {
      constexpr OneofFieldUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint32_t oneof_uint32_;
      ::edition_unittest::TestAllTypes* oneof_test_all_types_;
      ::google::protobuf::internal::ArenaStringPtr oneof_string_;
      ::google::protobuf::internal::ArenaStringPtr oneof_bytes_;
    } oneof_field_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestEagerMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestEagerMessage) */ {
 public:
  inline TestEagerMessage() : TestEagerMessage(nullptr) {}
  ~TestEagerMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestEagerMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestEagerMessage(const TestEagerMessage& from) : TestEagerMessage(nullptr, from) {}
  inline TestEagerMessage(TestEagerMessage&& from) noexcept
      : TestEagerMessage(nullptr, std::move(from)) {}
  inline TestEagerMessage& operator=(const TestEagerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEagerMessage& operator=(TestEagerMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestEagerMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestEagerMessage* internal_default_instance() {
    return reinterpret_cast<const TestEagerMessage*>(
        &_TestEagerMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(TestEagerMessage& a, TestEagerMessage& b) { a.Swap(&b); }
  inline void Swap(TestEagerMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEagerMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestEagerMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestEagerMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestEagerMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestEagerMessage& from) { TestEagerMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestEagerMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestEagerMessage"; }

 protected:
  explicit TestEagerMessage(::google::protobuf::Arena* arena);
  TestEagerMessage(::google::protobuf::Arena* arena, const TestEagerMessage& from);
  TestEagerMessage(::google::protobuf::Arena* arena, TestEagerMessage&& from) noexcept
      : TestEagerMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubMessageFieldNumber = 1,
  };
  // .edition_unittest.TestAllTypes sub_message = 1 [lazy = false];
  bool has_sub_message() const;
  void clear_sub_message() ;
  const ::edition_unittest::TestAllTypes& sub_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_sub_message();
  ::edition_unittest::TestAllTypes* mutable_sub_message();
  void set_allocated_sub_message(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_sub_message(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_sub_message();

  private:
  const ::edition_unittest::TestAllTypes& _internal_sub_message() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_sub_message();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestEagerMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestEagerMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestEagerMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes* sub_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestEagerMaybeLazy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestEagerMaybeLazy) */ {
 public:
  inline TestEagerMaybeLazy() : TestEagerMaybeLazy(nullptr) {}
  ~TestEagerMaybeLazy() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestEagerMaybeLazy(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestEagerMaybeLazy(const TestEagerMaybeLazy& from) : TestEagerMaybeLazy(nullptr, from) {}
  inline TestEagerMaybeLazy(TestEagerMaybeLazy&& from) noexcept
      : TestEagerMaybeLazy(nullptr, std::move(from)) {}
  inline TestEagerMaybeLazy& operator=(const TestEagerMaybeLazy& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEagerMaybeLazy& operator=(TestEagerMaybeLazy&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestEagerMaybeLazy& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestEagerMaybeLazy* internal_default_instance() {
    return reinterpret_cast<const TestEagerMaybeLazy*>(
        &_TestEagerMaybeLazy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(TestEagerMaybeLazy& a, TestEagerMaybeLazy& b) { a.Swap(&b); }
  inline void Swap(TestEagerMaybeLazy* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEagerMaybeLazy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestEagerMaybeLazy* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestEagerMaybeLazy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestEagerMaybeLazy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestEagerMaybeLazy& from) { TestEagerMaybeLazy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestEagerMaybeLazy* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestEagerMaybeLazy"; }

 protected:
  explicit TestEagerMaybeLazy(::google::protobuf::Arena* arena);
  TestEagerMaybeLazy(::google::protobuf::Arena* arena, const TestEagerMaybeLazy& from);
  TestEagerMaybeLazy(::google::protobuf::Arena* arena, TestEagerMaybeLazy&& from) noexcept
      : TestEagerMaybeLazy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedMessage = TestEagerMaybeLazy_NestedMessage;

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFooFieldNumber = 1,
    kMessageBarFieldNumber = 2,
    kMessageBazFieldNumber = 3,
  };
  // .edition_unittest.TestAllTypes message_foo = 1;
  bool has_message_foo() const;
  void clear_message_foo() ;
  const ::edition_unittest::TestAllTypes& message_foo() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_message_foo();
  ::edition_unittest::TestAllTypes* mutable_message_foo();
  void set_allocated_message_foo(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_message_foo(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_message_foo();

  private:
  const ::edition_unittest::TestAllTypes& _internal_message_foo() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_message_foo();

  public:
  // .edition_unittest.TestAllTypes message_bar = 2;
  bool has_message_bar() const;
  void clear_message_bar() ;
  const ::edition_unittest::TestAllTypes& message_bar() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_message_bar();
  ::edition_unittest::TestAllTypes* mutable_message_bar();
  void set_allocated_message_bar(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_message_bar(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_message_bar();

  private:
  const ::edition_unittest::TestAllTypes& _internal_message_bar() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_message_bar();

  public:
  // .edition_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
  bool has_message_baz() const;
  void clear_message_baz() ;
  const ::edition_unittest::TestEagerMaybeLazy_NestedMessage& message_baz() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestEagerMaybeLazy_NestedMessage* release_message_baz();
  ::edition_unittest::TestEagerMaybeLazy_NestedMessage* mutable_message_baz();
  void set_allocated_message_baz(::edition_unittest::TestEagerMaybeLazy_NestedMessage* value);
  void unsafe_arena_set_allocated_message_baz(::edition_unittest::TestEagerMaybeLazy_NestedMessage* value);
  ::edition_unittest::TestEagerMaybeLazy_NestedMessage* unsafe_arena_release_message_baz();

  private:
  const ::edition_unittest::TestEagerMaybeLazy_NestedMessage& _internal_message_baz() const;
  ::edition_unittest::TestEagerMaybeLazy_NestedMessage* _internal_mutable_message_baz();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestEagerMaybeLazy)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestEagerMaybeLazy_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestEagerMaybeLazy& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestAllTypes* message_foo_;
    ::edition_unittest::TestAllTypes* message_bar_;
    ::edition_unittest::TestEagerMaybeLazy_NestedMessage* message_baz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestChildExtensionData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestChildExtensionData) */ {
 public:
  inline TestChildExtensionData() : TestChildExtensionData(nullptr) {}
  ~TestChildExtensionData() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestChildExtensionData(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestChildExtensionData(const TestChildExtensionData& from) : TestChildExtensionData(nullptr, from) {}
  inline TestChildExtensionData(TestChildExtensionData&& from) noexcept
      : TestChildExtensionData(nullptr, std::move(from)) {}
  inline TestChildExtensionData& operator=(const TestChildExtensionData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestChildExtensionData& operator=(TestChildExtensionData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestChildExtensionData& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestChildExtensionData* internal_default_instance() {
    return reinterpret_cast<const TestChildExtensionData*>(
        &_TestChildExtensionData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(TestChildExtensionData& a, TestChildExtensionData& b) { a.Swap(&b); }
  inline void Swap(TestChildExtensionData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestChildExtensionData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestChildExtensionData* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestChildExtensionData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestChildExtensionData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestChildExtensionData& from) { TestChildExtensionData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestChildExtensionData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestChildExtensionData"; }

 protected:
  explicit TestChildExtensionData(::google::protobuf::Arena* arena);
  TestChildExtensionData(::google::protobuf::Arena* arena, const TestChildExtensionData& from);
  TestChildExtensionData(::google::protobuf::Arena* arena, TestChildExtensionData&& from) noexcept
      : TestChildExtensionData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NestedTestAllExtensionsData = TestChildExtensionData_NestedTestAllExtensionsData;

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
    kOptionalExtensionFieldNumber = 3,
  };
  // string a = 1;
  bool has_a() const;
  void clear_a() ;
  absl::string_view a() const;
  template <typename Arg_ = std::string&&>
  void set_a(Arg_&& arg);

  private:
  const std::string& _internal_a() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_a(
      absl::string_view value);

  public:
  // string b = 2;
  bool has_b() const;
  void clear_b() ;
  absl::string_view b() const;
  template <typename Arg_ = std::string&&>
  void set_b(Arg_&& arg);

  private:
  const std::string& _internal_b() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_b(
      absl::string_view value);

  public:
  // .edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
  bool has_optional_extension() const;
  void clear_optional_extension() ;
  const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData& optional_extension() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* release_optional_extension();
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* mutable_optional_extension();
  void set_allocated_optional_extension(::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* value);
  void unsafe_arena_set_allocated_optional_extension(::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* value);
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* unsafe_arena_release_optional_extension();

  private:
  const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData& _internal_optional_extension() const;
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* _internal_mutable_optional_extension();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestChildExtensionData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestChildExtensionData_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestChildExtensionData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr a_;
    ::google::protobuf::internal::ArenaStringPtr b_;
    ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* optional_extension_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class NestedTestAllTypes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.NestedTestAllTypes) */ {
 public:
  inline NestedTestAllTypes() : NestedTestAllTypes(nullptr) {}
  ~NestedTestAllTypes() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NestedTestAllTypes(
      ::google::protobuf::internal::ConstantInitialized);

  inline NestedTestAllTypes(const NestedTestAllTypes& from) : NestedTestAllTypes(nullptr, from) {}
  inline NestedTestAllTypes(NestedTestAllTypes&& from) noexcept
      : NestedTestAllTypes(nullptr, std::move(from)) {}
  inline NestedTestAllTypes& operator=(const NestedTestAllTypes& from) {
    CopyFrom(from);
    return *this;
  }
  inline NestedTestAllTypes& operator=(NestedTestAllTypes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NestedTestAllTypes& default_instance() {
    return *internal_default_instance();
  }
  static inline const NestedTestAllTypes* internal_default_instance() {
    return reinterpret_cast<const NestedTestAllTypes*>(
        &_NestedTestAllTypes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(NestedTestAllTypes& a, NestedTestAllTypes& b) { a.Swap(&b); }
  inline void Swap(NestedTestAllTypes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NestedTestAllTypes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NestedTestAllTypes* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NestedTestAllTypes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NestedTestAllTypes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NestedTestAllTypes& from) { NestedTestAllTypes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NestedTestAllTypes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.NestedTestAllTypes"; }

 protected:
  explicit NestedTestAllTypes(::google::protobuf::Arena* arena);
  NestedTestAllTypes(::google::protobuf::Arena* arena, const NestedTestAllTypes& from);
  NestedTestAllTypes(::google::protobuf::Arena* arena, NestedTestAllTypes&& from) noexcept
      : NestedTestAllTypes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedChildFieldNumber = 3,
    kChildFieldNumber = 1,
    kPayloadFieldNumber = 2,
    kLazyChildFieldNumber = 4,
    kEagerChildFieldNumber = 5,
  };
  // repeated .edition_unittest.NestedTestAllTypes repeated_child = 3;
  int repeated_child_size() const;
  private:
  int _internal_repeated_child_size() const;

  public:
  void clear_repeated_child() ;
  ::edition_unittest::NestedTestAllTypes* mutable_repeated_child(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::NestedTestAllTypes>* mutable_repeated_child();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::NestedTestAllTypes>& _internal_repeated_child() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::NestedTestAllTypes>* _internal_mutable_repeated_child();
  public:
  const ::edition_unittest::NestedTestAllTypes& repeated_child(int index) const;
  ::edition_unittest::NestedTestAllTypes* add_repeated_child();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::NestedTestAllTypes>& repeated_child() const;
  // .edition_unittest.NestedTestAllTypes child = 1;
  bool has_child() const;
  void clear_child() ;
  const ::edition_unittest::NestedTestAllTypes& child() const;
  PROTOBUF_NODISCARD ::edition_unittest::NestedTestAllTypes* release_child();
  ::edition_unittest::NestedTestAllTypes* mutable_child();
  void set_allocated_child(::edition_unittest::NestedTestAllTypes* value);
  void unsafe_arena_set_allocated_child(::edition_unittest::NestedTestAllTypes* value);
  ::edition_unittest::NestedTestAllTypes* unsafe_arena_release_child();

  private:
  const ::edition_unittest::NestedTestAllTypes& _internal_child() const;
  ::edition_unittest::NestedTestAllTypes* _internal_mutable_child();

  public:
  // .edition_unittest.TestAllTypes payload = 2;
  bool has_payload() const;
  void clear_payload() ;
  const ::edition_unittest::TestAllTypes& payload() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_payload();
  ::edition_unittest::TestAllTypes* mutable_payload();
  void set_allocated_payload(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_payload(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_payload();

  private:
  const ::edition_unittest::TestAllTypes& _internal_payload() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_payload();

  public:
  // .edition_unittest.NestedTestAllTypes lazy_child = 4 [lazy = true];
  bool has_lazy_child() const;
  void clear_lazy_child() ;
  const ::edition_unittest::NestedTestAllTypes& lazy_child() const;
  PROTOBUF_NODISCARD ::edition_unittest::NestedTestAllTypes* release_lazy_child();
  ::edition_unittest::NestedTestAllTypes* mutable_lazy_child();
  void set_allocated_lazy_child(::edition_unittest::NestedTestAllTypes* value);
  void unsafe_arena_set_allocated_lazy_child(::edition_unittest::NestedTestAllTypes* value);
  ::edition_unittest::NestedTestAllTypes* unsafe_arena_release_lazy_child();

  private:
  const ::edition_unittest::NestedTestAllTypes& _internal_lazy_child() const;
  ::edition_unittest::NestedTestAllTypes* _internal_mutable_lazy_child();

  public:
  // .edition_unittest.TestAllTypes eager_child = 5 [lazy = false];
  bool has_eager_child() const;
  void clear_eager_child() ;
  const ::edition_unittest::TestAllTypes& eager_child() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_eager_child();
  ::edition_unittest::TestAllTypes* mutable_eager_child();
  void set_allocated_eager_child(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_eager_child(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_eager_child();

  private:
  const ::edition_unittest::TestAllTypes& _internal_eager_child() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_eager_child();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.NestedTestAllTypes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 5,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NestedTestAllTypes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NestedTestAllTypes& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::NestedTestAllTypes > repeated_child_;
    ::edition_unittest::NestedTestAllTypes* child_;
    ::edition_unittest::TestAllTypes* payload_;
    ::edition_unittest::NestedTestAllTypes* lazy_child_;
    ::edition_unittest::TestAllTypes* eager_child_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRequiredForeign final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestRequiredForeign) */ {
 public:
  inline TestRequiredForeign() : TestRequiredForeign(nullptr) {}
  ~TestRequiredForeign() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredForeign(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredForeign(const TestRequiredForeign& from) : TestRequiredForeign(nullptr, from) {}
  inline TestRequiredForeign(TestRequiredForeign&& from) noexcept
      : TestRequiredForeign(nullptr, std::move(from)) {}
  inline TestRequiredForeign& operator=(const TestRequiredForeign& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredForeign& operator=(TestRequiredForeign&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredForeign& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredForeign* internal_default_instance() {
    return reinterpret_cast<const TestRequiredForeign*>(
        &_TestRequiredForeign_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(TestRequiredForeign& a, TestRequiredForeign& b) { a.Swap(&b); }
  inline void Swap(TestRequiredForeign* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredForeign* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredForeign* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestRequiredForeign>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredForeign& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequiredForeign& from) { TestRequiredForeign::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredForeign* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestRequiredForeign"; }

 protected:
  explicit TestRequiredForeign(::google::protobuf::Arena* arena);
  TestRequiredForeign(::google::protobuf::Arena* arena, const TestRequiredForeign& from);
  TestRequiredForeign(::google::protobuf::Arena* arena, TestRequiredForeign&& from) noexcept
      : TestRequiredForeign(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedMessageFieldNumber = 2,
    kOptionalMessageFieldNumber = 1,
    kOptionalLazyMessageFieldNumber = 4,
    kDummyFieldNumber = 3,
  };
  // repeated .edition_unittest.TestRequired repeated_message = 2;
  int repeated_message_size() const;
  private:
  int _internal_repeated_message_size() const;

  public:
  void clear_repeated_message() ;
  ::edition_unittest::TestRequired* mutable_repeated_message(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>* mutable_repeated_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>& _internal_repeated_message() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>* _internal_mutable_repeated_message();
  public:
  const ::edition_unittest::TestRequired& repeated_message(int index) const;
  ::edition_unittest::TestRequired* add_repeated_message();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>& repeated_message() const;
  // .edition_unittest.TestRequired optional_message = 1;
  bool has_optional_message() const;
  void clear_optional_message() ;
  const ::edition_unittest::TestRequired& optional_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequired* release_optional_message();
  ::edition_unittest::TestRequired* mutable_optional_message();
  void set_allocated_optional_message(::edition_unittest::TestRequired* value);
  void unsafe_arena_set_allocated_optional_message(::edition_unittest::TestRequired* value);
  ::edition_unittest::TestRequired* unsafe_arena_release_optional_message();

  private:
  const ::edition_unittest::TestRequired& _internal_optional_message() const;
  ::edition_unittest::TestRequired* _internal_mutable_optional_message();

  public:
  // .edition_unittest.NestedTestAllTypes optional_lazy_message = 4 [lazy = true];
  bool has_optional_lazy_message() const;
  void clear_optional_lazy_message() ;
  const ::edition_unittest::NestedTestAllTypes& optional_lazy_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::NestedTestAllTypes* release_optional_lazy_message();
  ::edition_unittest::NestedTestAllTypes* mutable_optional_lazy_message();
  void set_allocated_optional_lazy_message(::edition_unittest::NestedTestAllTypes* value);
  void unsafe_arena_set_allocated_optional_lazy_message(::edition_unittest::NestedTestAllTypes* value);
  ::edition_unittest::NestedTestAllTypes* unsafe_arena_release_optional_lazy_message();

  private:
  const ::edition_unittest::NestedTestAllTypes& _internal_optional_lazy_message() const;
  ::edition_unittest::NestedTestAllTypes* _internal_mutable_optional_lazy_message();

  public:
  // int32 dummy = 3;
  bool has_dummy() const;
  void clear_dummy() ;
  ::int32_t dummy() const;
  void set_dummy(::int32_t value);

  private:
  ::int32_t _internal_dummy() const;
  void _internal_set_dummy(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestRequiredForeign)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequiredForeign_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequiredForeign& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestRequired > repeated_message_;
    ::edition_unittest::TestRequired* optional_message_;
    ::edition_unittest::NestedTestAllTypes* optional_lazy_message_;
    ::int32_t dummy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestParsingMerge_RepeatedFieldsGenerator final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator) */ {
 public:
  inline TestParsingMerge_RepeatedFieldsGenerator() : TestParsingMerge_RepeatedFieldsGenerator(nullptr) {}
  ~TestParsingMerge_RepeatedFieldsGenerator() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGenerator(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestParsingMerge_RepeatedFieldsGenerator(const TestParsingMerge_RepeatedFieldsGenerator& from) : TestParsingMerge_RepeatedFieldsGenerator(nullptr, from) {}
  inline TestParsingMerge_RepeatedFieldsGenerator(TestParsingMerge_RepeatedFieldsGenerator&& from) noexcept
      : TestParsingMerge_RepeatedFieldsGenerator(nullptr, std::move(from)) {}
  inline TestParsingMerge_RepeatedFieldsGenerator& operator=(const TestParsingMerge_RepeatedFieldsGenerator& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestParsingMerge_RepeatedFieldsGenerator& operator=(TestParsingMerge_RepeatedFieldsGenerator&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestParsingMerge_RepeatedFieldsGenerator& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestParsingMerge_RepeatedFieldsGenerator* internal_default_instance() {
    return reinterpret_cast<const TestParsingMerge_RepeatedFieldsGenerator*>(
        &_TestParsingMerge_RepeatedFieldsGenerator_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 96;
  friend void swap(TestParsingMerge_RepeatedFieldsGenerator& a, TestParsingMerge_RepeatedFieldsGenerator& b) { a.Swap(&b); }
  inline void Swap(TestParsingMerge_RepeatedFieldsGenerator* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestParsingMerge_RepeatedFieldsGenerator* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestParsingMerge_RepeatedFieldsGenerator* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestParsingMerge_RepeatedFieldsGenerator>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestParsingMerge_RepeatedFieldsGenerator& from) { TestParsingMerge_RepeatedFieldsGenerator::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestParsingMerge_RepeatedFieldsGenerator* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestParsingMerge.RepeatedFieldsGenerator"; }

 protected:
  explicit TestParsingMerge_RepeatedFieldsGenerator(::google::protobuf::Arena* arena);
  TestParsingMerge_RepeatedFieldsGenerator(::google::protobuf::Arena* arena, const TestParsingMerge_RepeatedFieldsGenerator& from);
  TestParsingMerge_RepeatedFieldsGenerator(::google::protobuf::Arena* arena, TestParsingMerge_RepeatedFieldsGenerator&& from) noexcept
      : TestParsingMerge_RepeatedFieldsGenerator(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Group1 = TestParsingMerge_RepeatedFieldsGenerator_Group1;
  using Group2 = TestParsingMerge_RepeatedFieldsGenerator_Group2;

  // accessors -------------------------------------------------------
  enum : int {
    kField1FieldNumber = 1,
    kField2FieldNumber = 2,
    kField3FieldNumber = 3,
    kGroup1FieldNumber = 10,
    kGroup2FieldNumber = 20,
    kExt1FieldNumber = 1000,
    kExt2FieldNumber = 1001,
  };
  // repeated .edition_unittest.TestAllTypes field1 = 1;
  int field1_size() const;
  private:
  int _internal_field1_size() const;

  public:
  void clear_field1() ;
  ::edition_unittest::TestAllTypes* mutable_field1(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_field1();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_field1() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_field1();
  public:
  const ::edition_unittest::TestAllTypes& field1(int index) const;
  ::edition_unittest::TestAllTypes* add_field1();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& field1() const;
  // repeated .edition_unittest.TestAllTypes field2 = 2;
  int field2_size() const;
  private:
  int _internal_field2_size() const;

  public:
  void clear_field2() ;
  ::edition_unittest::TestAllTypes* mutable_field2(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_field2();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_field2() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_field2();
  public:
  const ::edition_unittest::TestAllTypes& field2(int index) const;
  ::edition_unittest::TestAllTypes* add_field2();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& field2() const;
  // repeated .edition_unittest.TestAllTypes field3 = 3;
  int field3_size() const;
  private:
  int _internal_field3_size() const;

  public:
  void clear_field3() ;
  ::edition_unittest::TestAllTypes* mutable_field3(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_field3();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_field3() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_field3();
  public:
  const ::edition_unittest::TestAllTypes& field3(int index) const;
  ::edition_unittest::TestAllTypes* add_field3();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& field3() const;
  // repeated .edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1 group1 = 10 [features = {
  int group1_size() const;
  private:
  int _internal_group1_size() const;

  public:
  void clear_group1() ;
  ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1* mutable_group1(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>* mutable_group1();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>& _internal_group1() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>* _internal_mutable_group1();
  public:
  const ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1& group1(int index) const;
  ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1* add_group1();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>& group1() const;
  // repeated .edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2 group2 = 20 [features = {
  int group2_size() const;
  private:
  int _internal_group2_size() const;

  public:
  void clear_group2() ;
  ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2* mutable_group2(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>* mutable_group2();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>& _internal_group2() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>* _internal_mutable_group2();
  public:
  const ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2& group2(int index) const;
  ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2* add_group2();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>& group2() const;
  // repeated .edition_unittest.TestAllTypes ext1 = 1000;
  int ext1_size() const;
  private:
  int _internal_ext1_size() const;

  public:
  void clear_ext1() ;
  ::edition_unittest::TestAllTypes* mutable_ext1(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_ext1();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_ext1() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_ext1();
  public:
  const ::edition_unittest::TestAllTypes& ext1(int index) const;
  ::edition_unittest::TestAllTypes* add_ext1();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& ext1() const;
  // repeated .edition_unittest.TestAllTypes ext2 = 1001;
  int ext2_size() const;
  private:
  int _internal_ext2_size() const;

  public:
  void clear_ext2() ;
  ::edition_unittest::TestAllTypes* mutable_ext2(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_ext2();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_ext2() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_ext2();
  public:
  const ::edition_unittest::TestAllTypes& ext2(int index) const;
  ::edition_unittest::TestAllTypes* add_ext2();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& ext2() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 7,
      0, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestParsingMerge_RepeatedFieldsGenerator_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestParsingMerge_RepeatedFieldsGenerator& from_msg);
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > field1_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > field2_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > field3_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1 > group1_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2 > group2_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > ext1_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > ext2_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestParsingMerge final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestParsingMerge) */ {
 public:
  inline TestParsingMerge() : TestParsingMerge(nullptr) {}
  ~TestParsingMerge() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestParsingMerge(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestParsingMerge(const TestParsingMerge& from) : TestParsingMerge(nullptr, from) {}
  inline TestParsingMerge(TestParsingMerge&& from) noexcept
      : TestParsingMerge(nullptr, std::move(from)) {}
  inline TestParsingMerge& operator=(const TestParsingMerge& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestParsingMerge& operator=(TestParsingMerge&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestParsingMerge& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestParsingMerge* internal_default_instance() {
    return reinterpret_cast<const TestParsingMerge*>(
        &_TestParsingMerge_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 99;
  friend void swap(TestParsingMerge& a, TestParsingMerge& b) { a.Swap(&b); }
  inline void Swap(TestParsingMerge* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestParsingMerge* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestParsingMerge* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestParsingMerge>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestParsingMerge& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestParsingMerge& from) { TestParsingMerge::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestParsingMerge* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestParsingMerge"; }

 protected:
  explicit TestParsingMerge(::google::protobuf::Arena* arena);
  TestParsingMerge(::google::protobuf::Arena* arena, const TestParsingMerge& from);
  TestParsingMerge(::google::protobuf::Arena* arena, TestParsingMerge&& from) noexcept
      : TestParsingMerge(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RepeatedFieldsGenerator = TestParsingMerge_RepeatedFieldsGenerator;
  using OptionalGroup = TestParsingMerge_OptionalGroup;
  using RepeatedGroup = TestParsingMerge_RepeatedGroup;

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedAllTypesFieldNumber = 3,
    kRepeatedgroupFieldNumber = 20,
    kRequiredAllTypesFieldNumber = 1,
    kOptionalAllTypesFieldNumber = 2,
    kOptionalgroupFieldNumber = 10,
  };
  // repeated .edition_unittest.TestAllTypes repeated_all_types = 3;
  int repeated_all_types_size() const;
  private:
  int _internal_repeated_all_types_size() const;

  public:
  void clear_repeated_all_types() ;
  ::edition_unittest::TestAllTypes* mutable_repeated_all_types(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* mutable_repeated_all_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& _internal_repeated_all_types() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* _internal_mutable_repeated_all_types();
  public:
  const ::edition_unittest::TestAllTypes& repeated_all_types(int index) const;
  ::edition_unittest::TestAllTypes* add_repeated_all_types();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& repeated_all_types() const;
  // repeated .edition_unittest.TestParsingMerge.RepeatedGroup repeatedgroup = 20 [features = {
  int repeatedgroup_size() const;
  private:
  int _internal_repeatedgroup_size() const;

  public:
  void clear_repeatedgroup() ;
  ::edition_unittest::TestParsingMerge_RepeatedGroup* mutable_repeatedgroup(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedGroup>* mutable_repeatedgroup();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedGroup>& _internal_repeatedgroup() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedGroup>* _internal_mutable_repeatedgroup();
  public:
  const ::edition_unittest::TestParsingMerge_RepeatedGroup& repeatedgroup(int index) const;
  ::edition_unittest::TestParsingMerge_RepeatedGroup* add_repeatedgroup();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedGroup>& repeatedgroup() const;
  // .edition_unittest.TestAllTypes required_all_types = 1 [features = {
  bool has_required_all_types() const;
  void clear_required_all_types() ;
  const ::edition_unittest::TestAllTypes& required_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_required_all_types();
  ::edition_unittest::TestAllTypes* mutable_required_all_types();
  void set_allocated_required_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_required_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_required_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_required_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_required_all_types();

  public:
  // .edition_unittest.TestAllTypes optional_all_types = 2;
  bool has_optional_all_types() const;
  void clear_optional_all_types() ;
  const ::edition_unittest::TestAllTypes& optional_all_types() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_optional_all_types();
  ::edition_unittest::TestAllTypes* mutable_optional_all_types();
  void set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_optional_all_types();

  private:
  const ::edition_unittest::TestAllTypes& _internal_optional_all_types() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_optional_all_types();

  public:
  // .edition_unittest.TestParsingMerge.OptionalGroup optionalgroup = 10 [features = {
  bool has_optionalgroup() const;
  void clear_optionalgroup() ;
  const ::edition_unittest::TestParsingMerge_OptionalGroup& optionalgroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestParsingMerge_OptionalGroup* release_optionalgroup();
  ::edition_unittest::TestParsingMerge_OptionalGroup* mutable_optionalgroup();
  void set_allocated_optionalgroup(::edition_unittest::TestParsingMerge_OptionalGroup* value);
  void unsafe_arena_set_allocated_optionalgroup(::edition_unittest::TestParsingMerge_OptionalGroup* value);
  ::edition_unittest::TestParsingMerge_OptionalGroup* unsafe_arena_release_optionalgroup();

  private:
  const ::edition_unittest::TestParsingMerge_OptionalGroup& _internal_optionalgroup() const;
  ::edition_unittest::TestParsingMerge_OptionalGroup* _internal_mutable_optionalgroup();

  public:
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<TestParsingMerge, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  static const int kOptionalExtFieldNumber = 1000;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestParsingMerge, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestAllTypes >, 11,
      false>
      optional_ext;
  static const int kRepeatedExtFieldNumber = 1001;
  static ::google::protobuf::internal::ExtensionIdentifier<
      ::edition_unittest::TestParsingMerge, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::edition_unittest::TestAllTypes >, 11,
      false>
      repeated_ext;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestParsingMerge)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 5,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestParsingMerge_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestParsingMerge& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestAllTypes > repeated_all_types_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestParsingMerge_RepeatedGroup > repeatedgroup_;
    ::edition_unittest::TestAllTypes* required_all_types_;
    ::edition_unittest::TestAllTypes* optional_all_types_;
    ::edition_unittest::TestParsingMerge_OptionalGroup* optionalgroup_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedChildExtensionData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedChildExtensionData) */ {
 public:
  inline TestNestedChildExtensionData() : TestNestedChildExtensionData(nullptr) {}
  ~TestNestedChildExtensionData() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedChildExtensionData(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedChildExtensionData(const TestNestedChildExtensionData& from) : TestNestedChildExtensionData(nullptr, from) {}
  inline TestNestedChildExtensionData(TestNestedChildExtensionData&& from) noexcept
      : TestNestedChildExtensionData(nullptr, std::move(from)) {}
  inline TestNestedChildExtensionData& operator=(const TestNestedChildExtensionData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedChildExtensionData& operator=(TestNestedChildExtensionData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedChildExtensionData& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedChildExtensionData* internal_default_instance() {
    return reinterpret_cast<const TestNestedChildExtensionData*>(
        &_TestNestedChildExtensionData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(TestNestedChildExtensionData& a, TestNestedChildExtensionData& b) { a.Swap(&b); }
  inline void Swap(TestNestedChildExtensionData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedChildExtensionData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedChildExtensionData* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedChildExtensionData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedChildExtensionData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedChildExtensionData& from) { TestNestedChildExtensionData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedChildExtensionData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedChildExtensionData"; }

 protected:
  explicit TestNestedChildExtensionData(::google::protobuf::Arena* arena);
  TestNestedChildExtensionData(::google::protobuf::Arena* arena, const TestNestedChildExtensionData& from);
  TestNestedChildExtensionData(::google::protobuf::Arena* arena, TestNestedChildExtensionData&& from) noexcept
      : TestNestedChildExtensionData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChildFieldNumber = 2,
    kAFieldNumber = 1,
  };
  // .edition_unittest.TestChildExtensionData child = 2;
  bool has_child() const;
  void clear_child() ;
  const ::edition_unittest::TestChildExtensionData& child() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestChildExtensionData* release_child();
  ::edition_unittest::TestChildExtensionData* mutable_child();
  void set_allocated_child(::edition_unittest::TestChildExtensionData* value);
  void unsafe_arena_set_allocated_child(::edition_unittest::TestChildExtensionData* value);
  ::edition_unittest::TestChildExtensionData* unsafe_arena_release_child();

  private:
  const ::edition_unittest::TestChildExtensionData& _internal_child() const;
  ::edition_unittest::TestChildExtensionData* _internal_mutable_child();

  public:
  // int32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedChildExtensionData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedChildExtensionData_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedChildExtensionData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestChildExtensionData* child_;
    ::int32_t a_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMutualRecursionA final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMutualRecursionA) */ {
 public:
  inline TestMutualRecursionA() : TestMutualRecursionA(nullptr) {}
  ~TestMutualRecursionA() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMutualRecursionA(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMutualRecursionA(const TestMutualRecursionA& from) : TestMutualRecursionA(nullptr, from) {}
  inline TestMutualRecursionA(TestMutualRecursionA&& from) noexcept
      : TestMutualRecursionA(nullptr, std::move(from)) {}
  inline TestMutualRecursionA& operator=(const TestMutualRecursionA& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMutualRecursionA& operator=(TestMutualRecursionA&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMutualRecursionA& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMutualRecursionA* internal_default_instance() {
    return reinterpret_cast<const TestMutualRecursionA*>(
        &_TestMutualRecursionA_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(TestMutualRecursionA& a, TestMutualRecursionA& b) { a.Swap(&b); }
  inline void Swap(TestMutualRecursionA* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMutualRecursionA* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMutualRecursionA* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMutualRecursionA>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMutualRecursionA& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMutualRecursionA& from) { TestMutualRecursionA::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMutualRecursionA* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMutualRecursionA"; }

 protected:
  explicit TestMutualRecursionA(::google::protobuf::Arena* arena);
  TestMutualRecursionA(::google::protobuf::Arena* arena, const TestMutualRecursionA& from);
  TestMutualRecursionA(::google::protobuf::Arena* arena, TestMutualRecursionA&& from) noexcept
      : TestMutualRecursionA(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SubMessage = TestMutualRecursionA_SubMessage;
  using SubGroup = TestMutualRecursionA_SubGroup;
  using SubGroupR = TestMutualRecursionA_SubGroupR;

  // accessors -------------------------------------------------------
  enum : int {
    kSubgrouprFieldNumber = 5,
    kBbFieldNumber = 1,
    kSubgroupFieldNumber = 2,
  };
  // repeated .edition_unittest.TestMutualRecursionA.SubGroupR subgroupr = 5 [features = {
  int subgroupr_size() const;
  private:
  int _internal_subgroupr_size() const;

  public:
  void clear_subgroupr() ;
  ::edition_unittest::TestMutualRecursionA_SubGroupR* mutable_subgroupr(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestMutualRecursionA_SubGroupR>* mutable_subgroupr();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestMutualRecursionA_SubGroupR>& _internal_subgroupr() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestMutualRecursionA_SubGroupR>* _internal_mutable_subgroupr();
  public:
  const ::edition_unittest::TestMutualRecursionA_SubGroupR& subgroupr(int index) const;
  ::edition_unittest::TestMutualRecursionA_SubGroupR* add_subgroupr();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestMutualRecursionA_SubGroupR>& subgroupr() const;
  // .edition_unittest.TestMutualRecursionB bb = 1;
  bool has_bb() const;
  void clear_bb() ;
  const ::edition_unittest::TestMutualRecursionB& bb() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestMutualRecursionB* release_bb();
  ::edition_unittest::TestMutualRecursionB* mutable_bb();
  void set_allocated_bb(::edition_unittest::TestMutualRecursionB* value);
  void unsafe_arena_set_allocated_bb(::edition_unittest::TestMutualRecursionB* value);
  ::edition_unittest::TestMutualRecursionB* unsafe_arena_release_bb();

  private:
  const ::edition_unittest::TestMutualRecursionB& _internal_bb() const;
  ::edition_unittest::TestMutualRecursionB* _internal_mutable_bb();

  public:
  // .edition_unittest.TestMutualRecursionA.SubGroup subgroup = 2 [features = {
  bool has_subgroup() const;
  void clear_subgroup() ;
  const ::edition_unittest::TestMutualRecursionA_SubGroup& subgroup() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestMutualRecursionA_SubGroup* release_subgroup();
  ::edition_unittest::TestMutualRecursionA_SubGroup* mutable_subgroup();
  void set_allocated_subgroup(::edition_unittest::TestMutualRecursionA_SubGroup* value);
  void unsafe_arena_set_allocated_subgroup(::edition_unittest::TestMutualRecursionA_SubGroup* value);
  ::edition_unittest::TestMutualRecursionA_SubGroup* unsafe_arena_release_subgroup();

  private:
  const ::edition_unittest::TestMutualRecursionA_SubGroup& _internal_subgroup() const;
  ::edition_unittest::TestMutualRecursionA_SubGroup* _internal_mutable_subgroup();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMutualRecursionA)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMutualRecursionA_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMutualRecursionA& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestMutualRecursionA_SubGroupR > subgroupr_;
    ::edition_unittest::TestMutualRecursionB* bb_;
    ::edition_unittest::TestMutualRecursionA_SubGroup* subgroup_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMutualRecursionA_SubGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMutualRecursionA.SubGroup) */ {
 public:
  inline TestMutualRecursionA_SubGroup() : TestMutualRecursionA_SubGroup(nullptr) {}
  ~TestMutualRecursionA_SubGroup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMutualRecursionA_SubGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMutualRecursionA_SubGroup(const TestMutualRecursionA_SubGroup& from) : TestMutualRecursionA_SubGroup(nullptr, from) {}
  inline TestMutualRecursionA_SubGroup(TestMutualRecursionA_SubGroup&& from) noexcept
      : TestMutualRecursionA_SubGroup(nullptr, std::move(from)) {}
  inline TestMutualRecursionA_SubGroup& operator=(const TestMutualRecursionA_SubGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMutualRecursionA_SubGroup& operator=(TestMutualRecursionA_SubGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMutualRecursionA_SubGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMutualRecursionA_SubGroup* internal_default_instance() {
    return reinterpret_cast<const TestMutualRecursionA_SubGroup*>(
        &_TestMutualRecursionA_SubGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(TestMutualRecursionA_SubGroup& a, TestMutualRecursionA_SubGroup& b) { a.Swap(&b); }
  inline void Swap(TestMutualRecursionA_SubGroup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMutualRecursionA_SubGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMutualRecursionA_SubGroup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMutualRecursionA_SubGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMutualRecursionA_SubGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMutualRecursionA_SubGroup& from) { TestMutualRecursionA_SubGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMutualRecursionA_SubGroup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMutualRecursionA.SubGroup"; }

 protected:
  explicit TestMutualRecursionA_SubGroup(::google::protobuf::Arena* arena);
  TestMutualRecursionA_SubGroup(::google::protobuf::Arena* arena, const TestMutualRecursionA_SubGroup& from);
  TestMutualRecursionA_SubGroup(::google::protobuf::Arena* arena, TestMutualRecursionA_SubGroup&& from) noexcept
      : TestMutualRecursionA_SubGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubMessageFieldNumber = 3,
    kNotInThisSccFieldNumber = 4,
  };
  // .edition_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
  bool has_sub_message() const;
  void clear_sub_message() ;
  const ::edition_unittest::TestMutualRecursionA_SubMessage& sub_message() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestMutualRecursionA_SubMessage* release_sub_message();
  ::edition_unittest::TestMutualRecursionA_SubMessage* mutable_sub_message();
  void set_allocated_sub_message(::edition_unittest::TestMutualRecursionA_SubMessage* value);
  void unsafe_arena_set_allocated_sub_message(::edition_unittest::TestMutualRecursionA_SubMessage* value);
  ::edition_unittest::TestMutualRecursionA_SubMessage* unsafe_arena_release_sub_message();

  private:
  const ::edition_unittest::TestMutualRecursionA_SubMessage& _internal_sub_message() const;
  ::edition_unittest::TestMutualRecursionA_SubMessage* _internal_mutable_sub_message();

  public:
  // .edition_unittest.TestAllTypes not_in_this_scc = 4;
  bool has_not_in_this_scc() const;
  void clear_not_in_this_scc() ;
  const ::edition_unittest::TestAllTypes& not_in_this_scc() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestAllTypes* release_not_in_this_scc();
  ::edition_unittest::TestAllTypes* mutable_not_in_this_scc();
  void set_allocated_not_in_this_scc(::edition_unittest::TestAllTypes* value);
  void unsafe_arena_set_allocated_not_in_this_scc(::edition_unittest::TestAllTypes* value);
  ::edition_unittest::TestAllTypes* unsafe_arena_release_not_in_this_scc();

  private:
  const ::edition_unittest::TestAllTypes& _internal_not_in_this_scc() const;
  ::edition_unittest::TestAllTypes* _internal_mutable_not_in_this_scc();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMutualRecursionA.SubGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMutualRecursionA_SubGroup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMutualRecursionA_SubGroup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestMutualRecursionA_SubMessage* sub_message_;
    ::edition_unittest::TestAllTypes* not_in_this_scc_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMutualRecursionA_SubMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMutualRecursionA.SubMessage) */ {
 public:
  inline TestMutualRecursionA_SubMessage() : TestMutualRecursionA_SubMessage(nullptr) {}
  ~TestMutualRecursionA_SubMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMutualRecursionA_SubMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMutualRecursionA_SubMessage(const TestMutualRecursionA_SubMessage& from) : TestMutualRecursionA_SubMessage(nullptr, from) {}
  inline TestMutualRecursionA_SubMessage(TestMutualRecursionA_SubMessage&& from) noexcept
      : TestMutualRecursionA_SubMessage(nullptr, std::move(from)) {}
  inline TestMutualRecursionA_SubMessage& operator=(const TestMutualRecursionA_SubMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMutualRecursionA_SubMessage& operator=(TestMutualRecursionA_SubMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMutualRecursionA_SubMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMutualRecursionA_SubMessage* internal_default_instance() {
    return reinterpret_cast<const TestMutualRecursionA_SubMessage*>(
        &_TestMutualRecursionA_SubMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(TestMutualRecursionA_SubMessage& a, TestMutualRecursionA_SubMessage& b) { a.Swap(&b); }
  inline void Swap(TestMutualRecursionA_SubMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMutualRecursionA_SubMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMutualRecursionA_SubMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMutualRecursionA_SubMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMutualRecursionA_SubMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMutualRecursionA_SubMessage& from) { TestMutualRecursionA_SubMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMutualRecursionA_SubMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMutualRecursionA.SubMessage"; }

 protected:
  explicit TestMutualRecursionA_SubMessage(::google::protobuf::Arena* arena);
  TestMutualRecursionA_SubMessage(::google::protobuf::Arena* arena, const TestMutualRecursionA_SubMessage& from);
  TestMutualRecursionA_SubMessage(::google::protobuf::Arena* arena, TestMutualRecursionA_SubMessage&& from) noexcept
      : TestMutualRecursionA_SubMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBFieldNumber = 1,
  };
  // .edition_unittest.TestMutualRecursionB b = 1;
  bool has_b() const;
  void clear_b() ;
  const ::edition_unittest::TestMutualRecursionB& b() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestMutualRecursionB* release_b();
  ::edition_unittest::TestMutualRecursionB* mutable_b();
  void set_allocated_b(::edition_unittest::TestMutualRecursionB* value);
  void unsafe_arena_set_allocated_b(::edition_unittest::TestMutualRecursionB* value);
  ::edition_unittest::TestMutualRecursionB* unsafe_arena_release_b();

  private:
  const ::edition_unittest::TestMutualRecursionB& _internal_b() const;
  ::edition_unittest::TestMutualRecursionB* _internal_mutable_b();

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMutualRecursionA.SubMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMutualRecursionA_SubMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMutualRecursionA_SubMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestMutualRecursionB* b_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMutualRecursionB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestMutualRecursionB) */ {
 public:
  inline TestMutualRecursionB() : TestMutualRecursionB(nullptr) {}
  ~TestMutualRecursionB() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMutualRecursionB(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestMutualRecursionB(const TestMutualRecursionB& from) : TestMutualRecursionB(nullptr, from) {}
  inline TestMutualRecursionB(TestMutualRecursionB&& from) noexcept
      : TestMutualRecursionB(nullptr, std::move(from)) {}
  inline TestMutualRecursionB& operator=(const TestMutualRecursionB& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMutualRecursionB& operator=(TestMutualRecursionB&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMutualRecursionB& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMutualRecursionB* internal_default_instance() {
    return reinterpret_cast<const TestMutualRecursionB*>(
        &_TestMutualRecursionB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(TestMutualRecursionB& a, TestMutualRecursionB& b) { a.Swap(&b); }
  inline void Swap(TestMutualRecursionB* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMutualRecursionB* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMutualRecursionB* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestMutualRecursionB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMutualRecursionB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMutualRecursionB& from) { TestMutualRecursionB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMutualRecursionB* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestMutualRecursionB"; }

 protected:
  explicit TestMutualRecursionB(::google::protobuf::Arena* arena);
  TestMutualRecursionB(::google::protobuf::Arena* arena, const TestMutualRecursionB& from);
  TestMutualRecursionB(::google::protobuf::Arena* arena, TestMutualRecursionB&& from) noexcept
      : TestMutualRecursionB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kOptionalInt32FieldNumber = 2,
  };
  // .edition_unittest.TestMutualRecursionA a = 1;
  bool has_a() const;
  void clear_a() ;
  const ::edition_unittest::TestMutualRecursionA& a() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestMutualRecursionA* release_a();
  ::edition_unittest::TestMutualRecursionA* mutable_a();
  void set_allocated_a(::edition_unittest::TestMutualRecursionA* value);
  void unsafe_arena_set_allocated_a(::edition_unittest::TestMutualRecursionA* value);
  ::edition_unittest::TestMutualRecursionA* unsafe_arena_release_a();

  private:
  const ::edition_unittest::TestMutualRecursionA& _internal_a() const;
  ::edition_unittest::TestMutualRecursionA* _internal_mutable_a();

  public:
  // int32 optional_int32 = 2;
  bool has_optional_int32() const;
  void clear_optional_int32() ;
  ::int32_t optional_int32() const;
  void set_optional_int32(::int32_t value);

  private:
  ::int32_t _internal_optional_int32() const;
  void _internal_set_optional_int32(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestMutualRecursionB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestMutualRecursionB_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestMutualRecursionB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestMutualRecursionA* a_;
    ::int32_t optional_int32_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestLazyMessageRepeated final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestLazyMessageRepeated) */ {
 public:
  inline TestLazyMessageRepeated() : TestLazyMessageRepeated(nullptr) {}
  ~TestLazyMessageRepeated() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestLazyMessageRepeated(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestLazyMessageRepeated(const TestLazyMessageRepeated& from) : TestLazyMessageRepeated(nullptr, from) {}
  inline TestLazyMessageRepeated(TestLazyMessageRepeated&& from) noexcept
      : TestLazyMessageRepeated(nullptr, std::move(from)) {}
  inline TestLazyMessageRepeated& operator=(const TestLazyMessageRepeated& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestLazyMessageRepeated& operator=(TestLazyMessageRepeated&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestLazyMessageRepeated& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestLazyMessageRepeated* internal_default_instance() {
    return reinterpret_cast<const TestLazyMessageRepeated*>(
        &_TestLazyMessageRepeated_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(TestLazyMessageRepeated& a, TestLazyMessageRepeated& b) { a.Swap(&b); }
  inline void Swap(TestLazyMessageRepeated* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestLazyMessageRepeated* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestLazyMessageRepeated* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestLazyMessageRepeated>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestLazyMessageRepeated& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestLazyMessageRepeated& from) { TestLazyMessageRepeated::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestLazyMessageRepeated* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestLazyMessageRepeated"; }

 protected:
  explicit TestLazyMessageRepeated(::google::protobuf::Arena* arena);
  TestLazyMessageRepeated(::google::protobuf::Arena* arena, const TestLazyMessageRepeated& from);
  TestLazyMessageRepeated(::google::protobuf::Arena* arena, TestLazyMessageRepeated&& from) noexcept
      : TestLazyMessageRepeated(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepeatedMessageFieldNumber = 1,
  };
  // repeated .edition_unittest.TestLazyMessage repeated_message = 1;
  int repeated_message_size() const;
  private:
  int _internal_repeated_message_size() const;

  public:
  void clear_repeated_message() ;
  ::edition_unittest::TestLazyMessage* mutable_repeated_message(int index);
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestLazyMessage>* mutable_repeated_message();

  private:
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestLazyMessage>& _internal_repeated_message() const;
  ::google::protobuf::RepeatedPtrField<::edition_unittest::TestLazyMessage>* _internal_mutable_repeated_message();
  public:
  const ::edition_unittest::TestLazyMessage& repeated_message(int index) const;
  ::edition_unittest::TestLazyMessage* add_repeated_message();
  const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestLazyMessage>& repeated_message() const;
  // @@protoc_insertion_point(class_scope:edition_unittest.TestLazyMessageRepeated)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestLazyMessageRepeated_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestLazyMessageRepeated& from_msg);
    ::google::protobuf::RepeatedPtrField< ::edition_unittest::TestLazyMessage > repeated_message_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestNestedRequiredForeign final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edition_unittest.TestNestedRequiredForeign) */ {
 public:
  inline TestNestedRequiredForeign() : TestNestedRequiredForeign(nullptr) {}
  ~TestNestedRequiredForeign() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestNestedRequiredForeign(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestNestedRequiredForeign(const TestNestedRequiredForeign& from) : TestNestedRequiredForeign(nullptr, from) {}
  inline TestNestedRequiredForeign(TestNestedRequiredForeign&& from) noexcept
      : TestNestedRequiredForeign(nullptr, std::move(from)) {}
  inline TestNestedRequiredForeign& operator=(const TestNestedRequiredForeign& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestNestedRequiredForeign& operator=(TestNestedRequiredForeign&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestNestedRequiredForeign& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestNestedRequiredForeign* internal_default_instance() {
    return reinterpret_cast<const TestNestedRequiredForeign*>(
        &_TestNestedRequiredForeign_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(TestNestedRequiredForeign& a, TestNestedRequiredForeign& b) { a.Swap(&b); }
  inline void Swap(TestNestedRequiredForeign* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestNestedRequiredForeign* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestNestedRequiredForeign* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TestNestedRequiredForeign>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestNestedRequiredForeign& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestNestedRequiredForeign& from) { TestNestedRequiredForeign::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestNestedRequiredForeign* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "edition_unittest.TestNestedRequiredForeign"; }

 protected:
  explicit TestNestedRequiredForeign(::google::protobuf::Arena* arena);
  TestNestedRequiredForeign(::google::protobuf::Arena* arena, const TestNestedRequiredForeign& from);
  TestNestedRequiredForeign(::google::protobuf::Arena* arena, TestNestedRequiredForeign&& from) noexcept
      : TestNestedRequiredForeign(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChildFieldNumber = 1,
    kPayloadFieldNumber = 2,
    kRequiredEnumFieldNumber = 5,
    kRequiredEnumNoMaskFieldNumber = 6,
    kRequiredEnumMultiFieldNumber = 7,
    kRequiredNoMaskFieldNumber = 9,
    kDummyFieldNumber = 3,
  };
  // .edition_unittest.TestNestedRequiredForeign child = 1;
  bool has_child() const;
  void clear_child() ;
  const ::edition_unittest::TestNestedRequiredForeign& child() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestNestedRequiredForeign* release_child();
  ::edition_unittest::TestNestedRequiredForeign* mutable_child();
  void set_allocated_child(::edition_unittest::TestNestedRequiredForeign* value);
  void unsafe_arena_set_allocated_child(::edition_unittest::TestNestedRequiredForeign* value);
  ::edition_unittest::TestNestedRequiredForeign* unsafe_arena_release_child();

  private:
  const ::edition_unittest::TestNestedRequiredForeign& _internal_child() const;
  ::edition_unittest::TestNestedRequiredForeign* _internal_mutable_child();

  public:
  // .edition_unittest.TestRequiredForeign payload = 2;
  bool has_payload() const;
  void clear_payload() ;
  const ::edition_unittest::TestRequiredForeign& payload() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequiredForeign* release_payload();
  ::edition_unittest::TestRequiredForeign* mutable_payload();
  void set_allocated_payload(::edition_unittest::TestRequiredForeign* value);
  void unsafe_arena_set_allocated_payload(::edition_unittest::TestRequiredForeign* value);
  ::edition_unittest::TestRequiredForeign* unsafe_arena_release_payload();

  private:
  const ::edition_unittest::TestRequiredForeign& _internal_payload() const;
  ::edition_unittest::TestRequiredForeign* _internal_mutable_payload();

  public:
  // .edition_unittest.TestRequiredEnum required_enum = 5;
  bool has_required_enum() const;
  void clear_required_enum() ;
  const ::edition_unittest::TestRequiredEnum& required_enum() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequiredEnum* release_required_enum();
  ::edition_unittest::TestRequiredEnum* mutable_required_enum();
  void set_allocated_required_enum(::edition_unittest::TestRequiredEnum* value);
  void unsafe_arena_set_allocated_required_enum(::edition_unittest::TestRequiredEnum* value);
  ::edition_unittest::TestRequiredEnum* unsafe_arena_release_required_enum();

  private:
  const ::edition_unittest::TestRequiredEnum& _internal_required_enum() const;
  ::edition_unittest::TestRequiredEnum* _internal_mutable_required_enum();

  public:
  // .edition_unittest.TestRequiredEnumNoMask required_enum_no_mask = 6;
  bool has_required_enum_no_mask() const;
  void clear_required_enum_no_mask() ;
  const ::edition_unittest::TestRequiredEnumNoMask& required_enum_no_mask() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequiredEnumNoMask* release_required_enum_no_mask();
  ::edition_unittest::TestRequiredEnumNoMask* mutable_required_enum_no_mask();
  void set_allocated_required_enum_no_mask(::edition_unittest::TestRequiredEnumNoMask* value);
  void unsafe_arena_set_allocated_required_enum_no_mask(::edition_unittest::TestRequiredEnumNoMask* value);
  ::edition_unittest::TestRequiredEnumNoMask* unsafe_arena_release_required_enum_no_mask();

  private:
  const ::edition_unittest::TestRequiredEnumNoMask& _internal_required_enum_no_mask() const;
  ::edition_unittest::TestRequiredEnumNoMask* _internal_mutable_required_enum_no_mask();

  public:
  // .edition_unittest.TestRequiredEnumMulti required_enum_multi = 7;
  bool has_required_enum_multi() const;
  void clear_required_enum_multi() ;
  const ::edition_unittest::TestRequiredEnumMulti& required_enum_multi() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequiredEnumMulti* release_required_enum_multi();
  ::edition_unittest::TestRequiredEnumMulti* mutable_required_enum_multi();
  void set_allocated_required_enum_multi(::edition_unittest::TestRequiredEnumMulti* value);
  void unsafe_arena_set_allocated_required_enum_multi(::edition_unittest::TestRequiredEnumMulti* value);
  ::edition_unittest::TestRequiredEnumMulti* unsafe_arena_release_required_enum_multi();

  private:
  const ::edition_unittest::TestRequiredEnumMulti& _internal_required_enum_multi() const;
  ::edition_unittest::TestRequiredEnumMulti* _internal_mutable_required_enum_multi();

  public:
  // .edition_unittest.TestRequiredNoMaskMulti required_no_mask = 9;
  bool has_required_no_mask() const;
  void clear_required_no_mask() ;
  const ::edition_unittest::TestRequiredNoMaskMulti& required_no_mask() const;
  PROTOBUF_NODISCARD ::edition_unittest::TestRequiredNoMaskMulti* release_required_no_mask();
  ::edition_unittest::TestRequiredNoMaskMulti* mutable_required_no_mask();
  void set_allocated_required_no_mask(::edition_unittest::TestRequiredNoMaskMulti* value);
  void unsafe_arena_set_allocated_required_no_mask(::edition_unittest::TestRequiredNoMaskMulti* value);
  ::edition_unittest::TestRequiredNoMaskMulti* unsafe_arena_release_required_no_mask();

  private:
  const ::edition_unittest::TestRequiredNoMaskMulti& _internal_required_no_mask() const;
  ::edition_unittest::TestRequiredNoMaskMulti* _internal_mutable_required_no_mask();

  public:
  // int32 dummy = 3;
  bool has_dummy() const;
  void clear_dummy() ;
  ::int32_t dummy() const;
  void set_dummy(::int32_t value);

  private:
  ::int32_t _internal_dummy() const;
  void _internal_set_dummy(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edition_unittest.TestNestedRequiredForeign)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 6,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestNestedRequiredForeign_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestNestedRequiredForeign& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::edition_unittest::TestNestedRequiredForeign* child_;
    ::edition_unittest::TestRequiredForeign* payload_;
    ::edition_unittest::TestRequiredEnum* required_enum_;
    ::edition_unittest::TestRequiredEnumNoMask* required_enum_no_mask_;
    ::edition_unittest::TestRequiredEnumMulti* required_enum_multi_;
    ::edition_unittest::TestRequiredNoMaskMulti* required_no_mask_;
    ::int32_t dummy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fedition_5funittest_2eproto;
};

// ===================================================================



static const int kOptionalInt32ExtensionFieldNumber = 1;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
    false>
    optional_int32_extension;
static const int kOptionalInt64ExtensionFieldNumber = 2;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 3,
    false>
    optional_int64_extension;
static const int kOptionalUint32ExtensionFieldNumber = 3;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13,
    false>
    optional_uint32_extension;
static const int kOptionalUint64ExtensionFieldNumber = 4;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 4,
    false>
    optional_uint64_extension;
static const int kOptionalSint32ExtensionFieldNumber = 5;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 17,
    false>
    optional_sint32_extension;
static const int kOptionalSint64ExtensionFieldNumber = 6;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 18,
    false>
    optional_sint64_extension;
static const int kOptionalFixed32ExtensionFieldNumber = 7;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 7,
    false>
    optional_fixed32_extension;
static const int kOptionalFixed64ExtensionFieldNumber = 8;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 6,
    false>
    optional_fixed64_extension;
static const int kOptionalSfixed32ExtensionFieldNumber = 9;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 15,
    false>
    optional_sfixed32_extension;
static const int kOptionalSfixed64ExtensionFieldNumber = 10;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 16,
    false>
    optional_sfixed64_extension;
static const int kOptionalFloatExtensionFieldNumber = 11;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2,
    false>
    optional_float_extension;
static const int kOptionalDoubleExtensionFieldNumber = 12;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1,
    false>
    optional_double_extension;
static const int kOptionalBoolExtensionFieldNumber = 13;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8,
    false>
    optional_bool_extension;
static const int kOptionalStringExtensionFieldNumber = 14;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    optional_string_extension;
static const int kOptionalBytesExtensionFieldNumber = 15;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 12,
    false>
    optional_bytes_extension;
static const int kOptionalgroupExtensionFieldNumber = 16;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::OptionalGroup_extension >, 10,
    false>
    optionalgroup_extension;
static const int kOptionalNestedMessageExtensionFieldNumber = 18;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestAllTypes_NestedMessage >, 11,
    false>
    optional_nested_message_extension;
static const int kOptionalForeignMessageExtensionFieldNumber = 19;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::ForeignMessage >, 11,
    false>
    optional_foreign_message_extension;
static const int kOptionalImportMessageExtensionFieldNumber = 20;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::ImportMessage >, 11,
    false>
    optional_import_message_extension;
static const int kOptionalNestedEnumExtensionFieldNumber = 21;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::EnumTypeTraits< ::edition_unittest::TestAllTypes_NestedEnum, ::edition_unittest::TestAllTypes_NestedEnum_IsValid>, 14,
    false>
    optional_nested_enum_extension;
static const int kOptionalForeignEnumExtensionFieldNumber = 22;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::EnumTypeTraits< ::edition_unittest::ForeignEnum, ::edition_unittest::ForeignEnum_IsValid>, 14,
    false>
    optional_foreign_enum_extension;
static const int kOptionalImportEnumExtensionFieldNumber = 23;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14,
    false>
    optional_import_enum_extension;
static const int kOptionalStringPieceExtensionFieldNumber = 24;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    optional_string_piece_extension;
static const int kOptionalCordExtensionFieldNumber = 25;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    optional_cord_extension;
static const int kOptionalPublicImportMessageExtensionFieldNumber = 26;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::PublicImportMessage >, 11,
    false>
    optional_public_import_message_extension;
static const int kOptionalLazyMessageExtensionFieldNumber = 27;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestAllTypes_NestedMessage >, 11,
    false>
    optional_lazy_message_extension;
static const int kOptionalUnverifiedLazyMessageExtensionFieldNumber = 28;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestAllTypes_NestedMessage >, 11,
    false>
    optional_unverified_lazy_message_extension;
static const int kRepeatedInt32ExtensionFieldNumber = 31;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5,
    true>
    repeated_int32_extension;
static const int kRepeatedInt64ExtensionFieldNumber = 32;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3,
    true>
    repeated_int64_extension;
static const int kRepeatedUint32ExtensionFieldNumber = 33;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 13,
    true>
    repeated_uint32_extension;
static const int kRepeatedUint64ExtensionFieldNumber = 34;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 4,
    true>
    repeated_uint64_extension;
static const int kRepeatedSint32ExtensionFieldNumber = 35;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 17,
    true>
    repeated_sint32_extension;
static const int kRepeatedSint64ExtensionFieldNumber = 36;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 18,
    true>
    repeated_sint64_extension;
static const int kRepeatedFixed32ExtensionFieldNumber = 37;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7,
    true>
    repeated_fixed32_extension;
static const int kRepeatedFixed64ExtensionFieldNumber = 38;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 6,
    true>
    repeated_fixed64_extension;
static const int kRepeatedSfixed32ExtensionFieldNumber = 39;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 15,
    true>
    repeated_sfixed32_extension;
static const int kRepeatedSfixed64ExtensionFieldNumber = 40;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 16,
    true>
    repeated_sfixed64_extension;
static const int kRepeatedFloatExtensionFieldNumber = 41;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2,
    true>
    repeated_float_extension;
static const int kRepeatedDoubleExtensionFieldNumber = 42;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1,
    true>
    repeated_double_extension;
static const int kRepeatedBoolExtensionFieldNumber = 43;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8,
    true>
    repeated_bool_extension;
static const int kRepeatedStringExtensionFieldNumber = 44;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedStringTypeTraits, 9,
    false>
    repeated_string_extension;
static const int kRepeatedBytesExtensionFieldNumber = 45;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedStringTypeTraits, 12,
    false>
    repeated_bytes_extension;
static const int kRepeatedgroupExtensionFieldNumber = 46;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::edition_unittest::RepeatedGroup_extension >, 10,
    false>
    repeatedgroup_extension;
static const int kRepeatedNestedMessageExtensionFieldNumber = 48;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::edition_unittest::TestAllTypes_NestedMessage >, 11,
    false>
    repeated_nested_message_extension;
static const int kRepeatedForeignMessageExtensionFieldNumber = 49;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::edition_unittest::ForeignMessage >, 11,
    false>
    repeated_foreign_message_extension;
static const int kRepeatedImportMessageExtensionFieldNumber = 50;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest_import::ImportMessage >, 11,
    false>
    repeated_import_message_extension;
static const int kRepeatedNestedEnumExtensionFieldNumber = 51;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedEnumTypeTraits< ::edition_unittest::TestAllTypes_NestedEnum, ::edition_unittest::TestAllTypes_NestedEnum_IsValid>, 14,
    true>
    repeated_nested_enum_extension;
static const int kRepeatedForeignEnumExtensionFieldNumber = 52;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedEnumTypeTraits< ::edition_unittest::ForeignEnum, ::edition_unittest::ForeignEnum_IsValid>, 14,
    true>
    repeated_foreign_enum_extension;
static const int kRepeatedImportEnumExtensionFieldNumber = 53;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14,
    true>
    repeated_import_enum_extension;
static const int kRepeatedStringPieceExtensionFieldNumber = 54;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedStringTypeTraits, 9,
    false>
    repeated_string_piece_extension;
static const int kRepeatedCordExtensionFieldNumber = 55;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedStringTypeTraits, 9,
    false>
    repeated_cord_extension;
static const int kRepeatedLazyMessageExtensionFieldNumber = 57;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::edition_unittest::TestAllTypes_NestedMessage >, 11,
    false>
    repeated_lazy_message_extension;
static const int kDefaultInt32ExtensionFieldNumber = 61;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
    false>
    default_int32_extension;
static const int kDefaultInt64ExtensionFieldNumber = 62;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 3,
    false>
    default_int64_extension;
static const int kDefaultUint32ExtensionFieldNumber = 63;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13,
    false>
    default_uint32_extension;
static const int kDefaultUint64ExtensionFieldNumber = 64;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 4,
    false>
    default_uint64_extension;
static const int kDefaultSint32ExtensionFieldNumber = 65;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 17,
    false>
    default_sint32_extension;
static const int kDefaultSint64ExtensionFieldNumber = 66;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 18,
    false>
    default_sint64_extension;
static const int kDefaultFixed32ExtensionFieldNumber = 67;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 7,
    false>
    default_fixed32_extension;
static const int kDefaultFixed64ExtensionFieldNumber = 68;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 6,
    false>
    default_fixed64_extension;
static const int kDefaultSfixed32ExtensionFieldNumber = 69;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 15,
    false>
    default_sfixed32_extension;
static const int kDefaultSfixed64ExtensionFieldNumber = 70;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 16,
    false>
    default_sfixed64_extension;
static const int kDefaultFloatExtensionFieldNumber = 71;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2,
    false>
    default_float_extension;
static const int kDefaultDoubleExtensionFieldNumber = 72;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1,
    false>
    default_double_extension;
static const int kDefaultBoolExtensionFieldNumber = 73;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8,
    false>
    default_bool_extension;
static const int kDefaultStringExtensionFieldNumber = 74;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    default_string_extension;
static const int kDefaultBytesExtensionFieldNumber = 75;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 12,
    false>
    default_bytes_extension;
static const int kDefaultNestedEnumExtensionFieldNumber = 81;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::EnumTypeTraits< ::edition_unittest::TestAllTypes_NestedEnum, ::edition_unittest::TestAllTypes_NestedEnum_IsValid>, 14,
    false>
    default_nested_enum_extension;
static const int kDefaultForeignEnumExtensionFieldNumber = 82;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::EnumTypeTraits< ::edition_unittest::ForeignEnum, ::edition_unittest::ForeignEnum_IsValid>, 14,
    false>
    default_foreign_enum_extension;
static const int kDefaultImportEnumExtensionFieldNumber = 83;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14,
    false>
    default_import_enum_extension;
static const int kDefaultStringPieceExtensionFieldNumber = 84;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    default_string_piece_extension;
static const int kDefaultCordExtensionFieldNumber = 85;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    default_cord_extension;
static const int kOneofUint32ExtensionFieldNumber = 111;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13,
    false>
    oneof_uint32_extension;
static const int kOneofNestedMessageExtensionFieldNumber = 112;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestAllTypes_NestedMessage >, 11,
    false>
    oneof_nested_message_extension;
static const int kOneofStringExtensionFieldNumber = 113;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    oneof_string_extension;
static const int kOneofBytesExtensionFieldNumber = 114;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestAllExtensions, ::google::protobuf::internal::StringTypeTraits, 12,
    false>
    oneof_bytes_extension;
static const int kMyExtensionStringFieldNumber = 50;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestFieldOrderings, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    my_extension_string;
static const int kMyExtensionIntFieldNumber = 5;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestFieldOrderings, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
    false>
    my_extension_int;
static const int kPackedInt32ExtensionFieldNumber = 90;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5,
    true>
    packed_int32_extension;
static const int kPackedInt64ExtensionFieldNumber = 91;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3,
    true>
    packed_int64_extension;
static const int kPackedUint32ExtensionFieldNumber = 92;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 13,
    true>
    packed_uint32_extension;
static const int kPackedUint64ExtensionFieldNumber = 93;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 4,
    true>
    packed_uint64_extension;
static const int kPackedSint32ExtensionFieldNumber = 94;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 17,
    true>
    packed_sint32_extension;
static const int kPackedSint64ExtensionFieldNumber = 95;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 18,
    true>
    packed_sint64_extension;
static const int kPackedFixed32ExtensionFieldNumber = 96;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7,
    true>
    packed_fixed32_extension;
static const int kPackedFixed64ExtensionFieldNumber = 97;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 6,
    true>
    packed_fixed64_extension;
static const int kPackedSfixed32ExtensionFieldNumber = 98;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 15,
    true>
    packed_sfixed32_extension;
static const int kPackedSfixed64ExtensionFieldNumber = 99;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 16,
    true>
    packed_sfixed64_extension;
static const int kPackedFloatExtensionFieldNumber = 100;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2,
    true>
    packed_float_extension;
static const int kPackedDoubleExtensionFieldNumber = 101;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1,
    true>
    packed_double_extension;
static const int kPackedBoolExtensionFieldNumber = 102;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8,
    true>
    packed_bool_extension;
static const int kPackedEnumExtensionFieldNumber = 103;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestPackedExtensions, ::google::protobuf::internal::RepeatedEnumTypeTraits< ::edition_unittest::ForeignEnum, ::edition_unittest::ForeignEnum_IsValid>, 14,
    true>
    packed_enum_extension;
static const int kUnpackedInt32ExtensionFieldNumber = 90;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5,
    false>
    unpacked_int32_extension;
static const int kUnpackedInt64ExtensionFieldNumber = 91;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3,
    false>
    unpacked_int64_extension;
static const int kUnpackedUint32ExtensionFieldNumber = 92;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 13,
    false>
    unpacked_uint32_extension;
static const int kUnpackedUint64ExtensionFieldNumber = 93;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 4,
    false>
    unpacked_uint64_extension;
static const int kUnpackedSint32ExtensionFieldNumber = 94;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 17,
    false>
    unpacked_sint32_extension;
static const int kUnpackedSint64ExtensionFieldNumber = 95;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 18,
    false>
    unpacked_sint64_extension;
static const int kUnpackedFixed32ExtensionFieldNumber = 96;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7,
    false>
    unpacked_fixed32_extension;
static const int kUnpackedFixed64ExtensionFieldNumber = 97;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 6,
    false>
    unpacked_fixed64_extension;
static const int kUnpackedSfixed32ExtensionFieldNumber = 98;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 15,
    false>
    unpacked_sfixed32_extension;
static const int kUnpackedSfixed64ExtensionFieldNumber = 99;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 16,
    false>
    unpacked_sfixed64_extension;
static const int kUnpackedFloatExtensionFieldNumber = 100;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2,
    false>
    unpacked_float_extension;
static const int kUnpackedDoubleExtensionFieldNumber = 101;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1,
    false>
    unpacked_double_extension;
static const int kUnpackedBoolExtensionFieldNumber = 102;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8,
    false>
    unpacked_bool_extension;
static const int kUnpackedEnumExtensionFieldNumber = 103;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestUnpackedExtensions, ::google::protobuf::internal::RepeatedEnumTypeTraits< ::edition_unittest::ForeignEnum, ::edition_unittest::ForeignEnum_IsValid>, 14,
    false>
    unpacked_enum_extension;
static const int kTestAllTypesFieldNumber = 536860000;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestHugeFieldNumbers, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestAllTypes >, 11,
    false>
    test_all_types;
static const int kTestExtensionInsideTableExtensionFieldNumber = 5;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestExtensionInsideTable, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
    false>
    test_extension_inside_table_extension;
static const int kInnerFieldNumber = 3;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, ::google::protobuf::internal::MessageTypeTraits< ::edition_unittest::TestNestedGroupExtensionInnerExtension >, 11,
    false>
    inner;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestAllTypes_NestedMessage

// int32 bb = 1;
inline bool TestAllTypes_NestedMessage::has_bb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestAllTypes_NestedMessage::clear_bb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bb_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestAllTypes_NestedMessage::bb() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.NestedMessage.bb)
  return _internal_bb();
}
inline void TestAllTypes_NestedMessage::set_bb(::int32_t value) {
  _internal_set_bb(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.NestedMessage.bb)
}
inline ::int32_t TestAllTypes_NestedMessage::_internal_bb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bb_;
}
inline void TestAllTypes_NestedMessage::_internal_set_bb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bb_ = value;
}

// -------------------------------------------------------------------

// TestAllTypes_OptionalGroup

// int32 a = 17;
inline bool TestAllTypes_OptionalGroup::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestAllTypes_OptionalGroup::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestAllTypes_OptionalGroup::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.OptionalGroup.a)
  return _internal_a();
}
inline void TestAllTypes_OptionalGroup::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.OptionalGroup.a)
}
inline ::int32_t TestAllTypes_OptionalGroup::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestAllTypes_OptionalGroup::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestAllTypes_RepeatedGroup

// int32 a = 47;
inline bool TestAllTypes_RepeatedGroup::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestAllTypes_RepeatedGroup::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestAllTypes_RepeatedGroup::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.RepeatedGroup.a)
  return _internal_a();
}
inline void TestAllTypes_RepeatedGroup::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.RepeatedGroup.a)
}
inline ::int32_t TestAllTypes_RepeatedGroup::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestAllTypes_RepeatedGroup::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestAllTypes

// int32 optional_int32 = 1;
inline bool TestAllTypes::has_optional_int32() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int32_t TestAllTypes::optional_int32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_int32)
  return _internal_optional_int32();
}
inline void TestAllTypes::set_optional_int32(::int32_t value) {
  _internal_set_optional_int32(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_int32)
}
inline ::int32_t TestAllTypes::_internal_optional_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_;
}
inline void TestAllTypes::_internal_set_optional_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_ = value;
}

// int64 optional_int64 = 2;
inline bool TestAllTypes::has_optional_int64() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::int64_t TestAllTypes::optional_int64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_int64)
  return _internal_optional_int64();
}
inline void TestAllTypes::set_optional_int64(::int64_t value) {
  _internal_set_optional_int64(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_int64)
}
inline ::int64_t TestAllTypes::_internal_optional_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_;
}
inline void TestAllTypes::_internal_set_optional_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_ = value;
}

// uint32 optional_uint32 = 3;
inline bool TestAllTypes::has_optional_uint32() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_ = 0u;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::uint32_t TestAllTypes::optional_uint32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_uint32)
  return _internal_optional_uint32();
}
inline void TestAllTypes::set_optional_uint32(::uint32_t value) {
  _internal_set_optional_uint32(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_uint32)
}
inline ::uint32_t TestAllTypes::_internal_optional_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_;
}
inline void TestAllTypes::_internal_set_optional_uint32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_ = value;
}

// uint64 optional_uint64 = 4;
inline bool TestAllTypes::has_optional_uint64() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint64_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::uint64_t TestAllTypes::optional_uint64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_uint64)
  return _internal_optional_uint64();
}
inline void TestAllTypes::set_optional_uint64(::uint64_t value) {
  _internal_set_optional_uint64(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_uint64)
}
inline ::uint64_t TestAllTypes::_internal_optional_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint64_;
}
inline void TestAllTypes::_internal_set_optional_uint64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint64_ = value;
}

// sint32 optional_sint32 = 5;
inline bool TestAllTypes::has_optional_sint32() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_sint32_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int32_t TestAllTypes::optional_sint32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_sint32)
  return _internal_optional_sint32();
}
inline void TestAllTypes::set_optional_sint32(::int32_t value) {
  _internal_set_optional_sint32(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_sint32)
}
inline ::int32_t TestAllTypes::_internal_optional_sint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_sint32_;
}
inline void TestAllTypes::_internal_set_optional_sint32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_sint32_ = value;
}

// sint64 optional_sint64 = 6;
inline bool TestAllTypes::has_optional_sint64() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_sint64_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int64_t TestAllTypes::optional_sint64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_sint64)
  return _internal_optional_sint64();
}
inline void TestAllTypes::set_optional_sint64(::int64_t value) {
  _internal_set_optional_sint64(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_sint64)
}
inline ::int64_t TestAllTypes::_internal_optional_sint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_sint64_;
}
inline void TestAllTypes::_internal_set_optional_sint64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_sint64_ = value;
}

// fixed32 optional_fixed32 = 7;
inline bool TestAllTypes::has_optional_fixed32() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_fixed32_ = 0u;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::uint32_t TestAllTypes::optional_fixed32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_fixed32)
  return _internal_optional_fixed32();
}
inline void TestAllTypes::set_optional_fixed32(::uint32_t value) {
  _internal_set_optional_fixed32(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_fixed32)
}
inline ::uint32_t TestAllTypes::_internal_optional_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_fixed32_;
}
inline void TestAllTypes::_internal_set_optional_fixed32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_fixed32_ = value;
}

// fixed64 optional_fixed64 = 8;
inline bool TestAllTypes::has_optional_fixed64() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_fixed64_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::uint64_t TestAllTypes::optional_fixed64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_fixed64)
  return _internal_optional_fixed64();
}
inline void TestAllTypes::set_optional_fixed64(::uint64_t value) {
  _internal_set_optional_fixed64(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_fixed64)
}
inline ::uint64_t TestAllTypes::_internal_optional_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_fixed64_;
}
inline void TestAllTypes::_internal_set_optional_fixed64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_fixed64_ = value;
}

// sfixed32 optional_sfixed32 = 9;
inline bool TestAllTypes::has_optional_sfixed32() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_sfixed32_ = 0;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline ::int32_t TestAllTypes::optional_sfixed32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_sfixed32)
  return _internal_optional_sfixed32();
}
inline void TestAllTypes::set_optional_sfixed32(::int32_t value) {
  _internal_set_optional_sfixed32(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_sfixed32)
}
inline ::int32_t TestAllTypes::_internal_optional_sfixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_sfixed32_;
}
inline void TestAllTypes::_internal_set_optional_sfixed32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_sfixed32_ = value;
}

// sfixed64 optional_sfixed64 = 10;
inline bool TestAllTypes::has_optional_sfixed64() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_sfixed64_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline ::int64_t TestAllTypes::optional_sfixed64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_sfixed64)
  return _internal_optional_sfixed64();
}
inline void TestAllTypes::set_optional_sfixed64(::int64_t value) {
  _internal_set_optional_sfixed64(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_sfixed64)
}
inline ::int64_t TestAllTypes::_internal_optional_sfixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_sfixed64_;
}
inline void TestAllTypes::_internal_set_optional_sfixed64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_sfixed64_ = value;
}

// float optional_float = 11;
inline bool TestAllTypes::has_optional_float() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_float_ = 0;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline float TestAllTypes::optional_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_float)
  return _internal_optional_float();
}
inline void TestAllTypes::set_optional_float(float value) {
  _internal_set_optional_float(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_float)
}
inline float TestAllTypes::_internal_optional_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_float_;
}
inline void TestAllTypes::_internal_set_optional_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_float_ = value;
}

// double optional_double = 12;
inline bool TestAllTypes::has_optional_double() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_double_ = 0;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline double TestAllTypes::optional_double() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_double)
  return _internal_optional_double();
}
inline void TestAllTypes::set_optional_double(double value) {
  _internal_set_optional_double(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_double)
}
inline double TestAllTypes::_internal_optional_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_double_;
}
inline void TestAllTypes::_internal_set_optional_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_double_ = value;
}

// bool optional_bool = 13;
inline bool TestAllTypes::has_optional_bool() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bool_ = false;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline bool TestAllTypes::optional_bool() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_bool)
  return _internal_optional_bool();
}
inline void TestAllTypes::set_optional_bool(bool value) {
  _internal_set_optional_bool(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_bool)
}
inline bool TestAllTypes::_internal_optional_bool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_bool_;
}
inline void TestAllTypes::_internal_set_optional_bool(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bool_ = value;
}

// string optional_string = 14;
inline bool TestAllTypes::has_optional_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestAllTypes::optional_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_string)
  return _internal_optional_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_optional_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_string)
}
inline const std::string& TestAllTypes::_internal_optional_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_string_.Get();
}
inline void TestAllTypes::_internal_set_optional_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_string_.Set(value, GetArena());
}

// bytes optional_bytes = 15;
inline bool TestAllTypes::has_optional_bytes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bytes_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view TestAllTypes::optional_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_bytes)
  return _internal_optional_bytes();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_optional_bytes(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_bytes_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_bytes)
}
inline const std::string& TestAllTypes::_internal_optional_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_bytes_.Get();
}
inline void TestAllTypes::_internal_set_optional_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_bytes_.Set(value, GetArena());
}

// .edition_unittest.TestAllTypes.OptionalGroup optionalgroup = 16 [features = {
inline bool TestAllTypes::has_optionalgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optionalgroup_ != nullptr);
  return value;
}
inline void TestAllTypes::clear_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optionalgroup_ != nullptr) _impl_.optionalgroup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::edition_unittest::TestAllTypes_OptionalGroup& TestAllTypes::_internal_optionalgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes_OptionalGroup* p = _impl_.optionalgroup_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes_OptionalGroup&>(::edition_unittest::_TestAllTypes_OptionalGroup_default_instance_);
}
inline const ::edition_unittest::TestAllTypes_OptionalGroup& TestAllTypes::optionalgroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optionalgroup)
  return _internal_optionalgroup();
}
inline void TestAllTypes::unsafe_arena_set_allocated_optionalgroup(::edition_unittest::TestAllTypes_OptionalGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optionalgroup_);
  }
  _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestAllTypes_OptionalGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.optionalgroup)
}
inline ::edition_unittest::TestAllTypes_OptionalGroup* TestAllTypes::release_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::edition_unittest::TestAllTypes_OptionalGroup* released = _impl_.optionalgroup_;
  _impl_.optionalgroup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes_OptionalGroup* TestAllTypes::unsafe_arena_release_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optionalgroup)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::edition_unittest::TestAllTypes_OptionalGroup* temp = _impl_.optionalgroup_;
  _impl_.optionalgroup_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes_OptionalGroup* TestAllTypes::_internal_mutable_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optionalgroup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes_OptionalGroup>(GetArena());
    _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestAllTypes_OptionalGroup*>(p);
  }
  return _impl_.optionalgroup_;
}
inline ::edition_unittest::TestAllTypes_OptionalGroup* TestAllTypes::mutable_optionalgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::edition_unittest::TestAllTypes_OptionalGroup* _msg = _internal_mutable_optionalgroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optionalgroup)
  return _msg;
}
inline void TestAllTypes::set_allocated_optionalgroup(::edition_unittest::TestAllTypes_OptionalGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optionalgroup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestAllTypes_OptionalGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optionalgroup)
}

// .edition_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
inline bool TestAllTypes::has_optional_nested_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_nested_message_ != nullptr);
  return value;
}
inline void TestAllTypes::clear_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_message_ != nullptr) _impl_.optional_nested_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::_internal_optional_nested_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes_NestedMessage* p = _impl_.optional_nested_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes_NestedMessage&>(::edition_unittest::_TestAllTypes_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::optional_nested_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_nested_message)
  return _internal_optional_nested_message();
}
inline void TestAllTypes::unsafe_arena_set_allocated_optional_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_nested_message_);
  }
  _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.optional_nested_message)
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::release_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::edition_unittest::TestAllTypes_NestedMessage* released = _impl_.optional_nested_message_;
  _impl_.optional_nested_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::unsafe_arena_release_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optional_nested_message)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::edition_unittest::TestAllTypes_NestedMessage* temp = _impl_.optional_nested_message_;
  _impl_.optional_nested_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::_internal_mutable_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes_NestedMessage>(GetArena());
    _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(p);
  }
  return _impl_.optional_nested_message_;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_optional_nested_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::edition_unittest::TestAllTypes_NestedMessage* _msg = _internal_mutable_optional_nested_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optional_nested_message)
  return _msg;
}
inline void TestAllTypes::set_allocated_optional_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_nested_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optional_nested_message)
}

// .edition_unittest.ForeignMessage optional_foreign_message = 19;
inline bool TestAllTypes::has_optional_foreign_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_foreign_message_ != nullptr);
  return value;
}
inline void TestAllTypes::clear_optional_foreign_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_foreign_message_ != nullptr) _impl_.optional_foreign_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const ::edition_unittest::ForeignMessage& TestAllTypes::_internal_optional_foreign_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::ForeignMessage* p = _impl_.optional_foreign_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::ForeignMessage&>(::edition_unittest::_ForeignMessage_default_instance_);
}
inline const ::edition_unittest::ForeignMessage& TestAllTypes::optional_foreign_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_foreign_message)
  return _internal_optional_foreign_message();
}
inline void TestAllTypes::unsafe_arena_set_allocated_optional_foreign_message(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_foreign_message_);
  }
  _impl_.optional_foreign_message_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.optional_foreign_message)
}
inline ::edition_unittest::ForeignMessage* TestAllTypes::release_optional_foreign_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::edition_unittest::ForeignMessage* released = _impl_.optional_foreign_message_;
  _impl_.optional_foreign_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::ForeignMessage* TestAllTypes::unsafe_arena_release_optional_foreign_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optional_foreign_message)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::edition_unittest::ForeignMessage* temp = _impl_.optional_foreign_message_;
  _impl_.optional_foreign_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::ForeignMessage* TestAllTypes::_internal_mutable_optional_foreign_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_foreign_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::ForeignMessage>(GetArena());
    _impl_.optional_foreign_message_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(p);
  }
  return _impl_.optional_foreign_message_;
}
inline ::edition_unittest::ForeignMessage* TestAllTypes::mutable_optional_foreign_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::edition_unittest::ForeignMessage* _msg = _internal_mutable_optional_foreign_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optional_foreign_message)
  return _msg;
}
inline void TestAllTypes::set_allocated_optional_foreign_message(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_foreign_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.optional_foreign_message_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optional_foreign_message)
}

// .protobuf_unittest_import.ImportMessage optional_import_message = 20;
inline bool TestAllTypes::has_optional_import_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_import_message_ != nullptr);
  return value;
}
inline const ::protobuf_unittest_import::ImportMessage& TestAllTypes::_internal_optional_import_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::protobuf_unittest_import::ImportMessage* p = _impl_.optional_import_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest_import::ImportMessage&>(::protobuf_unittest_import::_ImportMessage_default_instance_);
}
inline const ::protobuf_unittest_import::ImportMessage& TestAllTypes::optional_import_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_import_message)
  return _internal_optional_import_message();
}
inline void TestAllTypes::unsafe_arena_set_allocated_optional_import_message(::protobuf_unittest_import::ImportMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_import_message_);
  }
  _impl_.optional_import_message_ = reinterpret_cast<::protobuf_unittest_import::ImportMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.optional_import_message)
}
inline ::protobuf_unittest_import::ImportMessage* TestAllTypes::release_optional_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::protobuf_unittest_import::ImportMessage* released = _impl_.optional_import_message_;
  _impl_.optional_import_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest_import::ImportMessage* TestAllTypes::unsafe_arena_release_optional_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optional_import_message)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::protobuf_unittest_import::ImportMessage* temp = _impl_.optional_import_message_;
  _impl_.optional_import_message_ = nullptr;
  return temp;
}
inline ::protobuf_unittest_import::ImportMessage* TestAllTypes::_internal_mutable_optional_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_import_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::protobuf_unittest_import::ImportMessage>(GetArena());
    _impl_.optional_import_message_ = reinterpret_cast<::protobuf_unittest_import::ImportMessage*>(p);
  }
  return _impl_.optional_import_message_;
}
inline ::protobuf_unittest_import::ImportMessage* TestAllTypes::mutable_optional_import_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::protobuf_unittest_import::ImportMessage* _msg = _internal_mutable_optional_import_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optional_import_message)
  return _msg;
}
inline void TestAllTypes::set_allocated_optional_import_message(::protobuf_unittest_import::ImportMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_import_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.optional_import_message_ = reinterpret_cast<::protobuf_unittest_import::ImportMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optional_import_message)
}

// .edition_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
inline bool TestAllTypes::has_optional_nested_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_nested_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_nested_enum_ = 1;
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline ::edition_unittest::TestAllTypes_NestedEnum TestAllTypes::optional_nested_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_nested_enum)
  return _internal_optional_nested_enum();
}
inline void TestAllTypes::set_optional_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value) {
  _internal_set_optional_nested_enum(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_nested_enum)
}
inline ::edition_unittest::TestAllTypes_NestedEnum TestAllTypes::_internal_optional_nested_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestAllTypes_NestedEnum>(_impl_.optional_nested_enum_);
}
inline void TestAllTypes::_internal_set_optional_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestAllTypes_NestedEnum_IsValid(value));
  _impl_.optional_nested_enum_ = value;
}

// .edition_unittest.ForeignEnum optional_foreign_enum = 22;
inline bool TestAllTypes::has_optional_foreign_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_foreign_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_foreign_enum_ = 4;
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline ::edition_unittest::ForeignEnum TestAllTypes::optional_foreign_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_foreign_enum)
  return _internal_optional_foreign_enum();
}
inline void TestAllTypes::set_optional_foreign_enum(::edition_unittest::ForeignEnum value) {
  _internal_set_optional_foreign_enum(value);
  _impl_._has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_foreign_enum)
}
inline ::edition_unittest::ForeignEnum TestAllTypes::_internal_optional_foreign_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.optional_foreign_enum_);
}
inline void TestAllTypes::_internal_set_optional_foreign_enum(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.optional_foreign_enum_ = value;
}

// .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
inline bool TestAllTypes::has_optional_import_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_import_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_import_enum_ = 7;
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline ::protobuf_unittest_import::ImportEnum TestAllTypes::optional_import_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_import_enum)
  return _internal_optional_import_enum();
}
inline void TestAllTypes::set_optional_import_enum(::protobuf_unittest_import::ImportEnum value) {
  _internal_set_optional_import_enum(value);
  _impl_._has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_import_enum)
}
inline ::protobuf_unittest_import::ImportEnum TestAllTypes::_internal_optional_import_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::protobuf_unittest_import::ImportEnum>(_impl_.optional_import_enum_);
}
inline void TestAllTypes::_internal_set_optional_import_enum(::protobuf_unittest_import::ImportEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::protobuf_unittest_import::ImportEnum_IsValid(value));
  _impl_.optional_import_enum_ = value;
}

// string optional_string_piece = 24 [ctype = STRING_PIECE];
inline bool TestAllTypes::has_optional_string_piece() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_string_piece_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& TestAllTypes::optional_string_piece() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_string_piece)
  return _internal_optional_string_piece();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_optional_string_piece(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.optional_string_piece_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_string_piece)
}
inline std::string* TestAllTypes::mutable_optional_string_piece() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_optional_string_piece();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optional_string_piece)
  return _s;
}
inline const std::string& TestAllTypes::_internal_optional_string_piece() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_string_piece_.Get();
}
inline void TestAllTypes::_internal_set_optional_string_piece(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.optional_string_piece_.Set(value, GetArena());
}
inline std::string* TestAllTypes::_internal_mutable_optional_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.optional_string_piece_.Mutable( GetArena());
}
inline std::string* TestAllTypes::release_optional_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optional_string_piece)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.optional_string_piece_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_string_piece_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestAllTypes::set_allocated_optional_string_piece(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.optional_string_piece_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.optional_string_piece_.IsDefault()) {
          _impl_.optional_string_piece_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optional_string_piece)
}

// string optional_cord = 25 [ctype = CORD];
inline bool TestAllTypes::has_optional_cord() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestAllTypes::clear_optional_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_cord_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& TestAllTypes::optional_cord() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_cord)
  return _internal_optional_cord();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_optional_cord(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.optional_cord_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.optional_cord)
}
inline std::string* TestAllTypes::mutable_optional_cord() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_optional_cord();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optional_cord)
  return _s;
}
inline const std::string& TestAllTypes::_internal_optional_cord() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_cord_.Get();
}
inline void TestAllTypes::_internal_set_optional_cord(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.optional_cord_.Set(value, GetArena());
}
inline std::string* TestAllTypes::_internal_mutable_optional_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.optional_cord_.Mutable( GetArena());
}
inline std::string* TestAllTypes::release_optional_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optional_cord)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.optional_cord_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_cord_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestAllTypes::set_allocated_optional_cord(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.optional_cord_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.optional_cord_.IsDefault()) {
          _impl_.optional_cord_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optional_cord)
}

// .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
inline bool TestAllTypes::has_optional_public_import_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_public_import_message_ != nullptr);
  return value;
}
inline const ::protobuf_unittest_import::PublicImportMessage& TestAllTypes::_internal_optional_public_import_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::protobuf_unittest_import::PublicImportMessage* p = _impl_.optional_public_import_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest_import::PublicImportMessage&>(::protobuf_unittest_import::_PublicImportMessage_default_instance_);
}
inline const ::protobuf_unittest_import::PublicImportMessage& TestAllTypes::optional_public_import_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_public_import_message)
  return _internal_optional_public_import_message();
}
inline void TestAllTypes::unsafe_arena_set_allocated_optional_public_import_message(::protobuf_unittest_import::PublicImportMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_public_import_message_);
  }
  _impl_.optional_public_import_message_ = reinterpret_cast<::protobuf_unittest_import::PublicImportMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.optional_public_import_message)
}
inline ::protobuf_unittest_import::PublicImportMessage* TestAllTypes::release_optional_public_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::protobuf_unittest_import::PublicImportMessage* released = _impl_.optional_public_import_message_;
  _impl_.optional_public_import_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest_import::PublicImportMessage* TestAllTypes::unsafe_arena_release_optional_public_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optional_public_import_message)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::protobuf_unittest_import::PublicImportMessage* temp = _impl_.optional_public_import_message_;
  _impl_.optional_public_import_message_ = nullptr;
  return temp;
}
inline ::protobuf_unittest_import::PublicImportMessage* TestAllTypes::_internal_mutable_optional_public_import_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_public_import_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::protobuf_unittest_import::PublicImportMessage>(GetArena());
    _impl_.optional_public_import_message_ = reinterpret_cast<::protobuf_unittest_import::PublicImportMessage*>(p);
  }
  return _impl_.optional_public_import_message_;
}
inline ::protobuf_unittest_import::PublicImportMessage* TestAllTypes::mutable_optional_public_import_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::protobuf_unittest_import::PublicImportMessage* _msg = _internal_mutable_optional_public_import_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optional_public_import_message)
  return _msg;
}
inline void TestAllTypes::set_allocated_optional_public_import_message(::protobuf_unittest_import::PublicImportMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_public_import_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.optional_public_import_message_ = reinterpret_cast<::protobuf_unittest_import::PublicImportMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optional_public_import_message)
}

// .edition_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
inline bool TestAllTypes::has_optional_lazy_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_lazy_message_ != nullptr);
  return value;
}
inline void TestAllTypes::clear_optional_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_lazy_message_ != nullptr) _impl_.optional_lazy_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::_internal_optional_lazy_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes_NestedMessage* p = _impl_.optional_lazy_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes_NestedMessage&>(::edition_unittest::_TestAllTypes_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::optional_lazy_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_lazy_message)
  return _internal_optional_lazy_message();
}
inline void TestAllTypes::unsafe_arena_set_allocated_optional_lazy_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_lazy_message_);
  }
  _impl_.optional_lazy_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.optional_lazy_message)
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::release_optional_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::edition_unittest::TestAllTypes_NestedMessage* released = _impl_.optional_lazy_message_;
  _impl_.optional_lazy_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::unsafe_arena_release_optional_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optional_lazy_message)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::edition_unittest::TestAllTypes_NestedMessage* temp = _impl_.optional_lazy_message_;
  _impl_.optional_lazy_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::_internal_mutable_optional_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_lazy_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes_NestedMessage>(GetArena());
    _impl_.optional_lazy_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(p);
  }
  return _impl_.optional_lazy_message_;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_optional_lazy_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::edition_unittest::TestAllTypes_NestedMessage* _msg = _internal_mutable_optional_lazy_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optional_lazy_message)
  return _msg;
}
inline void TestAllTypes::set_allocated_optional_lazy_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_lazy_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.optional_lazy_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optional_lazy_message)
}

// .edition_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
inline bool TestAllTypes::has_optional_unverified_lazy_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_unverified_lazy_message_ != nullptr);
  return value;
}
inline void TestAllTypes::clear_optional_unverified_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_unverified_lazy_message_ != nullptr) _impl_.optional_unverified_lazy_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::_internal_optional_unverified_lazy_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes_NestedMessage* p = _impl_.optional_unverified_lazy_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes_NestedMessage&>(::edition_unittest::_TestAllTypes_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::optional_unverified_lazy_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.optional_unverified_lazy_message)
  return _internal_optional_unverified_lazy_message();
}
inline void TestAllTypes::unsafe_arena_set_allocated_optional_unverified_lazy_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_unverified_lazy_message_);
  }
  _impl_.optional_unverified_lazy_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.optional_unverified_lazy_message)
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::release_optional_unverified_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::edition_unittest::TestAllTypes_NestedMessage* released = _impl_.optional_unverified_lazy_message_;
  _impl_.optional_unverified_lazy_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::unsafe_arena_release_optional_unverified_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.optional_unverified_lazy_message)

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::edition_unittest::TestAllTypes_NestedMessage* temp = _impl_.optional_unverified_lazy_message_;
  _impl_.optional_unverified_lazy_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::_internal_mutable_optional_unverified_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_unverified_lazy_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes_NestedMessage>(GetArena());
    _impl_.optional_unverified_lazy_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(p);
  }
  return _impl_.optional_unverified_lazy_message_;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_optional_unverified_lazy_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00004000u;
  ::edition_unittest::TestAllTypes_NestedMessage* _msg = _internal_mutable_optional_unverified_lazy_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.optional_unverified_lazy_message)
  return _msg;
}
inline void TestAllTypes::set_allocated_optional_unverified_lazy_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_unverified_lazy_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }

  _impl_.optional_unverified_lazy_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.optional_unverified_lazy_message)
}

// repeated int32 repeated_int32 = 31;
inline int TestAllTypes::_internal_repeated_int32_size() const {
  return _internal_repeated_int32().size();
}
inline int TestAllTypes::repeated_int32_size() const {
  return _internal_repeated_int32_size();
}
inline void TestAllTypes::clear_repeated_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int32_.Clear();
}
inline ::int32_t TestAllTypes::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_int32)
  return _internal_repeated_int32().Get(index);
}
inline void TestAllTypes::set_repeated_int32(int index, ::int32_t value) {
  _internal_mutable_repeated_int32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_int32)
}
inline void TestAllTypes::add_repeated_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_int32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestAllTypes::repeated_int32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_int32)
  return _internal_repeated_int32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestAllTypes::mutable_repeated_int32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_int32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestAllTypes::_internal_repeated_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestAllTypes::_internal_mutable_repeated_int32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int32_;
}

// repeated int64 repeated_int64 = 32;
inline int TestAllTypes::_internal_repeated_int64_size() const {
  return _internal_repeated_int64().size();
}
inline int TestAllTypes::repeated_int64_size() const {
  return _internal_repeated_int64_size();
}
inline void TestAllTypes::clear_repeated_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int64_.Clear();
}
inline ::int64_t TestAllTypes::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_int64)
  return _internal_repeated_int64().Get(index);
}
inline void TestAllTypes::set_repeated_int64(int index, ::int64_t value) {
  _internal_mutable_repeated_int64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_int64)
}
inline void TestAllTypes::add_repeated_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_int64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestAllTypes::repeated_int64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_int64)
  return _internal_repeated_int64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestAllTypes::mutable_repeated_int64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_int64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestAllTypes::_internal_repeated_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestAllTypes::_internal_mutable_repeated_int64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int64_;
}

// repeated uint32 repeated_uint32 = 33;
inline int TestAllTypes::_internal_repeated_uint32_size() const {
  return _internal_repeated_uint32().size();
}
inline int TestAllTypes::repeated_uint32_size() const {
  return _internal_repeated_uint32_size();
}
inline void TestAllTypes::clear_repeated_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_uint32_.Clear();
}
inline ::uint32_t TestAllTypes::repeated_uint32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_uint32)
  return _internal_repeated_uint32().Get(index);
}
inline void TestAllTypes::set_repeated_uint32(int index, ::uint32_t value) {
  _internal_mutable_repeated_uint32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_uint32)
}
inline void TestAllTypes::add_repeated_uint32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_uint32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_uint32)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestAllTypes::repeated_uint32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_uint32)
  return _internal_repeated_uint32();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestAllTypes::mutable_repeated_uint32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_uint32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_uint32();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestAllTypes::_internal_repeated_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_uint32_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestAllTypes::_internal_mutable_repeated_uint32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_uint32_;
}

// repeated uint64 repeated_uint64 = 34;
inline int TestAllTypes::_internal_repeated_uint64_size() const {
  return _internal_repeated_uint64().size();
}
inline int TestAllTypes::repeated_uint64_size() const {
  return _internal_repeated_uint64_size();
}
inline void TestAllTypes::clear_repeated_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_uint64_.Clear();
}
inline ::uint64_t TestAllTypes::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_uint64)
  return _internal_repeated_uint64().Get(index);
}
inline void TestAllTypes::set_repeated_uint64(int index, ::uint64_t value) {
  _internal_mutable_repeated_uint64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_uint64)
}
inline void TestAllTypes::add_repeated_uint64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_uint64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_uint64)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& TestAllTypes::repeated_uint64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_uint64)
  return _internal_repeated_uint64();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestAllTypes::mutable_repeated_uint64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_uint64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_uint64();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
TestAllTypes::_internal_repeated_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_uint64_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestAllTypes::_internal_mutable_repeated_uint64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_uint64_;
}

// repeated sint32 repeated_sint32 = 35;
inline int TestAllTypes::_internal_repeated_sint32_size() const {
  return _internal_repeated_sint32().size();
}
inline int TestAllTypes::repeated_sint32_size() const {
  return _internal_repeated_sint32_size();
}
inline void TestAllTypes::clear_repeated_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_sint32_.Clear();
}
inline ::int32_t TestAllTypes::repeated_sint32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_sint32)
  return _internal_repeated_sint32().Get(index);
}
inline void TestAllTypes::set_repeated_sint32(int index, ::int32_t value) {
  _internal_mutable_repeated_sint32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_sint32)
}
inline void TestAllTypes::add_repeated_sint32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_sint32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_sint32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestAllTypes::repeated_sint32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_sint32)
  return _internal_repeated_sint32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestAllTypes::mutable_repeated_sint32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_sint32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_sint32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestAllTypes::_internal_repeated_sint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_sint32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestAllTypes::_internal_mutable_repeated_sint32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_sint32_;
}

// repeated sint64 repeated_sint64 = 36;
inline int TestAllTypes::_internal_repeated_sint64_size() const {
  return _internal_repeated_sint64().size();
}
inline int TestAllTypes::repeated_sint64_size() const {
  return _internal_repeated_sint64_size();
}
inline void TestAllTypes::clear_repeated_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_sint64_.Clear();
}
inline ::int64_t TestAllTypes::repeated_sint64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_sint64)
  return _internal_repeated_sint64().Get(index);
}
inline void TestAllTypes::set_repeated_sint64(int index, ::int64_t value) {
  _internal_mutable_repeated_sint64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_sint64)
}
inline void TestAllTypes::add_repeated_sint64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_sint64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_sint64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestAllTypes::repeated_sint64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_sint64)
  return _internal_repeated_sint64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestAllTypes::mutable_repeated_sint64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_sint64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_sint64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestAllTypes::_internal_repeated_sint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_sint64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestAllTypes::_internal_mutable_repeated_sint64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_sint64_;
}

// repeated fixed32 repeated_fixed32 = 37;
inline int TestAllTypes::_internal_repeated_fixed32_size() const {
  return _internal_repeated_fixed32().size();
}
inline int TestAllTypes::repeated_fixed32_size() const {
  return _internal_repeated_fixed32_size();
}
inline void TestAllTypes::clear_repeated_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_fixed32_.Clear();
}
inline ::uint32_t TestAllTypes::repeated_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_fixed32)
  return _internal_repeated_fixed32().Get(index);
}
inline void TestAllTypes::set_repeated_fixed32(int index, ::uint32_t value) {
  _internal_mutable_repeated_fixed32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_fixed32)
}
inline void TestAllTypes::add_repeated_fixed32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_fixed32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_fixed32)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestAllTypes::repeated_fixed32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_fixed32)
  return _internal_repeated_fixed32();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestAllTypes::mutable_repeated_fixed32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_fixed32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_fixed32();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestAllTypes::_internal_repeated_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_fixed32_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestAllTypes::_internal_mutable_repeated_fixed32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_fixed32_;
}

// repeated fixed64 repeated_fixed64 = 38;
inline int TestAllTypes::_internal_repeated_fixed64_size() const {
  return _internal_repeated_fixed64().size();
}
inline int TestAllTypes::repeated_fixed64_size() const {
  return _internal_repeated_fixed64_size();
}
inline void TestAllTypes::clear_repeated_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_fixed64_.Clear();
}
inline ::uint64_t TestAllTypes::repeated_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_fixed64)
  return _internal_repeated_fixed64().Get(index);
}
inline void TestAllTypes::set_repeated_fixed64(int index, ::uint64_t value) {
  _internal_mutable_repeated_fixed64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_fixed64)
}
inline void TestAllTypes::add_repeated_fixed64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_fixed64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_fixed64)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& TestAllTypes::repeated_fixed64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_fixed64)
  return _internal_repeated_fixed64();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestAllTypes::mutable_repeated_fixed64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_fixed64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_fixed64();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
TestAllTypes::_internal_repeated_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_fixed64_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestAllTypes::_internal_mutable_repeated_fixed64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_fixed64_;
}

// repeated sfixed32 repeated_sfixed32 = 39;
inline int TestAllTypes::_internal_repeated_sfixed32_size() const {
  return _internal_repeated_sfixed32().size();
}
inline int TestAllTypes::repeated_sfixed32_size() const {
  return _internal_repeated_sfixed32_size();
}
inline void TestAllTypes::clear_repeated_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_sfixed32_.Clear();
}
inline ::int32_t TestAllTypes::repeated_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_sfixed32)
  return _internal_repeated_sfixed32().Get(index);
}
inline void TestAllTypes::set_repeated_sfixed32(int index, ::int32_t value) {
  _internal_mutable_repeated_sfixed32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_sfixed32)
}
inline void TestAllTypes::add_repeated_sfixed32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_sfixed32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_sfixed32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestAllTypes::repeated_sfixed32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_sfixed32)
  return _internal_repeated_sfixed32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestAllTypes::mutable_repeated_sfixed32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_sfixed32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_sfixed32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestAllTypes::_internal_repeated_sfixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_sfixed32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestAllTypes::_internal_mutable_repeated_sfixed32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_sfixed32_;
}

// repeated sfixed64 repeated_sfixed64 = 40;
inline int TestAllTypes::_internal_repeated_sfixed64_size() const {
  return _internal_repeated_sfixed64().size();
}
inline int TestAllTypes::repeated_sfixed64_size() const {
  return _internal_repeated_sfixed64_size();
}
inline void TestAllTypes::clear_repeated_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_sfixed64_.Clear();
}
inline ::int64_t TestAllTypes::repeated_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_sfixed64)
  return _internal_repeated_sfixed64().Get(index);
}
inline void TestAllTypes::set_repeated_sfixed64(int index, ::int64_t value) {
  _internal_mutable_repeated_sfixed64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_sfixed64)
}
inline void TestAllTypes::add_repeated_sfixed64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_sfixed64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_sfixed64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestAllTypes::repeated_sfixed64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_sfixed64)
  return _internal_repeated_sfixed64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestAllTypes::mutable_repeated_sfixed64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_sfixed64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_sfixed64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestAllTypes::_internal_repeated_sfixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_sfixed64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestAllTypes::_internal_mutable_repeated_sfixed64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_sfixed64_;
}

// repeated float repeated_float = 41;
inline int TestAllTypes::_internal_repeated_float_size() const {
  return _internal_repeated_float().size();
}
inline int TestAllTypes::repeated_float_size() const {
  return _internal_repeated_float_size();
}
inline void TestAllTypes::clear_repeated_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_float_.Clear();
}
inline float TestAllTypes::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_float)
  return _internal_repeated_float().Get(index);
}
inline void TestAllTypes::set_repeated_float(int index, float value) {
  _internal_mutable_repeated_float()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_float)
}
inline void TestAllTypes::add_repeated_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_float()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_float)
}
inline const ::google::protobuf::RepeatedField<float>& TestAllTypes::repeated_float() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_float)
  return _internal_repeated_float();
}
inline ::google::protobuf::RepeatedField<float>* TestAllTypes::mutable_repeated_float()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_float)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_float();
}
inline const ::google::protobuf::RepeatedField<float>&
TestAllTypes::_internal_repeated_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_float_;
}
inline ::google::protobuf::RepeatedField<float>* TestAllTypes::_internal_mutable_repeated_float() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_float_;
}

// repeated double repeated_double = 42;
inline int TestAllTypes::_internal_repeated_double_size() const {
  return _internal_repeated_double().size();
}
inline int TestAllTypes::repeated_double_size() const {
  return _internal_repeated_double_size();
}
inline void TestAllTypes::clear_repeated_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_double_.Clear();
}
inline double TestAllTypes::repeated_double(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_double)
  return _internal_repeated_double().Get(index);
}
inline void TestAllTypes::set_repeated_double(int index, double value) {
  _internal_mutable_repeated_double()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_double)
}
inline void TestAllTypes::add_repeated_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_double()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_double)
}
inline const ::google::protobuf::RepeatedField<double>& TestAllTypes::repeated_double() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_double)
  return _internal_repeated_double();
}
inline ::google::protobuf::RepeatedField<double>* TestAllTypes::mutable_repeated_double()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_double)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_double();
}
inline const ::google::protobuf::RepeatedField<double>&
TestAllTypes::_internal_repeated_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_double_;
}
inline ::google::protobuf::RepeatedField<double>* TestAllTypes::_internal_mutable_repeated_double() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_double_;
}

// repeated bool repeated_bool = 43;
inline int TestAllTypes::_internal_repeated_bool_size() const {
  return _internal_repeated_bool().size();
}
inline int TestAllTypes::repeated_bool_size() const {
  return _internal_repeated_bool_size();
}
inline void TestAllTypes::clear_repeated_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_bool_.Clear();
}
inline bool TestAllTypes::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_bool)
  return _internal_repeated_bool().Get(index);
}
inline void TestAllTypes::set_repeated_bool(int index, bool value) {
  _internal_mutable_repeated_bool()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_bool)
}
inline void TestAllTypes::add_repeated_bool(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bool()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_bool)
}
inline const ::google::protobuf::RepeatedField<bool>& TestAllTypes::repeated_bool() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_bool)
  return _internal_repeated_bool();
}
inline ::google::protobuf::RepeatedField<bool>* TestAllTypes::mutable_repeated_bool()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_bool)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_bool();
}
inline const ::google::protobuf::RepeatedField<bool>&
TestAllTypes::_internal_repeated_bool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_bool_;
}
inline ::google::protobuf::RepeatedField<bool>* TestAllTypes::_internal_mutable_repeated_bool() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_bool_;
}

// repeated string repeated_string = 44;
inline int TestAllTypes::_internal_repeated_string_size() const {
  return _internal_repeated_string().size();
}
inline int TestAllTypes::repeated_string_size() const {
  return _internal_repeated_string_size();
}
inline void TestAllTypes::clear_repeated_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_.Clear();
}
inline absl::string_view TestAllTypes::repeated_string(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_string)
  return _internal_repeated_string().Get(index);
}
inline void TestAllTypes::set_repeated_string(int index, const std::string& value) {
  _internal_mutable_repeated_string()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_string)
}
inline void TestAllTypes::set_repeated_string(int index, std::string&& value) {
  _internal_mutable_repeated_string()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_string)
}
inline void TestAllTypes::set_repeated_string(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestAllTypes.repeated_string)
}
inline void TestAllTypes::set_repeated_string(int index, absl::string_view value) {
  _internal_mutable_repeated_string()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestAllTypes.repeated_string)
}
inline void TestAllTypes::add_repeated_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_string)
}
inline void TestAllTypes::add_repeated_string(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_string)
}
inline void TestAllTypes::add_repeated_string(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestAllTypes.repeated_string)
}
inline void TestAllTypes::add_repeated_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestAllTypes.repeated_string)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestAllTypes::repeated_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_string)
  return _internal_repeated_string();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestAllTypes::mutable_repeated_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_string)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestAllTypes::_internal_repeated_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestAllTypes::_internal_mutable_repeated_string() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_;
}

// repeated bytes repeated_bytes = 45;
inline int TestAllTypes::_internal_repeated_bytes_size() const {
  return _internal_repeated_bytes().size();
}
inline int TestAllTypes::repeated_bytes_size() const {
  return _internal_repeated_bytes_size();
}
inline void TestAllTypes::clear_repeated_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_bytes_.Clear();
}
inline absl::string_view TestAllTypes::repeated_bytes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_bytes)
  return _internal_repeated_bytes().Get(index);
}
inline void TestAllTypes::set_repeated_bytes(int index, const std::string& value) {
  _internal_mutable_repeated_bytes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_bytes)
}
inline void TestAllTypes::set_repeated_bytes(int index, std::string&& value) {
  _internal_mutable_repeated_bytes()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_bytes)
}
inline void TestAllTypes::set_repeated_bytes(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_bytes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestAllTypes.repeated_bytes)
}
inline void TestAllTypes::set_repeated_bytes(int index, absl::string_view value) {
  _internal_mutable_repeated_bytes()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestAllTypes.repeated_bytes)
}
inline void TestAllTypes::add_repeated_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_bytes)
}
inline void TestAllTypes::add_repeated_bytes(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_bytes)
}
inline void TestAllTypes::add_repeated_bytes(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestAllTypes.repeated_bytes)
}
inline void TestAllTypes::add_repeated_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestAllTypes.repeated_bytes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestAllTypes::repeated_bytes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_bytes)
  return _internal_repeated_bytes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestAllTypes::mutable_repeated_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_bytes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_bytes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestAllTypes::_internal_repeated_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_bytes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestAllTypes::_internal_mutable_repeated_bytes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_bytes_;
}

// repeated .edition_unittest.TestAllTypes.RepeatedGroup repeatedgroup = 46 [features = {
inline int TestAllTypes::_internal_repeatedgroup_size() const {
  return _internal_repeatedgroup().size();
}
inline int TestAllTypes::repeatedgroup_size() const {
  return _internal_repeatedgroup_size();
}
inline void TestAllTypes::clear_repeatedgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedgroup_.Clear();
}
inline ::edition_unittest::TestAllTypes_RepeatedGroup* TestAllTypes::mutable_repeatedgroup(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.repeatedgroup)
  return _internal_mutable_repeatedgroup()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_RepeatedGroup>* TestAllTypes::mutable_repeatedgroup()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeatedgroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedgroup();
}
inline const ::edition_unittest::TestAllTypes_RepeatedGroup& TestAllTypes::repeatedgroup(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeatedgroup)
  return _internal_repeatedgroup().Get(index);
}
inline ::edition_unittest::TestAllTypes_RepeatedGroup* TestAllTypes::add_repeatedgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes_RepeatedGroup* _add = _internal_mutable_repeatedgroup()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeatedgroup)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_RepeatedGroup>& TestAllTypes::repeatedgroup() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeatedgroup)
  return _internal_repeatedgroup();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_RepeatedGroup>&
TestAllTypes::_internal_repeatedgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedgroup_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_RepeatedGroup>*
TestAllTypes::_internal_mutable_repeatedgroup() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedgroup_;
}

// repeated .edition_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
inline int TestAllTypes::_internal_repeated_nested_message_size() const {
  return _internal_repeated_nested_message().size();
}
inline int TestAllTypes::repeated_nested_message_size() const {
  return _internal_repeated_nested_message_size();
}
inline void TestAllTypes::clear_repeated_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_nested_message_.Clear();
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_repeated_nested_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.repeated_nested_message)
  return _internal_mutable_repeated_nested_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>* TestAllTypes::mutable_repeated_nested_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_nested_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_nested_message();
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::repeated_nested_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_nested_message)
  return _internal_repeated_nested_message().Get(index);
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::add_repeated_nested_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes_NestedMessage* _add = _internal_mutable_repeated_nested_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_nested_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>& TestAllTypes::repeated_nested_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_nested_message)
  return _internal_repeated_nested_message();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>&
TestAllTypes::_internal_repeated_nested_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_nested_message_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>*
TestAllTypes::_internal_mutable_repeated_nested_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_nested_message_;
}

// repeated .edition_unittest.ForeignMessage repeated_foreign_message = 49;
inline int TestAllTypes::_internal_repeated_foreign_message_size() const {
  return _internal_repeated_foreign_message().size();
}
inline int TestAllTypes::repeated_foreign_message_size() const {
  return _internal_repeated_foreign_message_size();
}
inline void TestAllTypes::clear_repeated_foreign_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_foreign_message_.Clear();
}
inline ::edition_unittest::ForeignMessage* TestAllTypes::mutable_repeated_foreign_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.repeated_foreign_message)
  return _internal_mutable_repeated_foreign_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* TestAllTypes::mutable_repeated_foreign_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_foreign_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_foreign_message();
}
inline const ::edition_unittest::ForeignMessage& TestAllTypes::repeated_foreign_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_foreign_message)
  return _internal_repeated_foreign_message().Get(index);
}
inline ::edition_unittest::ForeignMessage* TestAllTypes::add_repeated_foreign_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::ForeignMessage* _add = _internal_mutable_repeated_foreign_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_foreign_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& TestAllTypes::repeated_foreign_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_foreign_message)
  return _internal_repeated_foreign_message();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>&
TestAllTypes::_internal_repeated_foreign_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_foreign_message_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>*
TestAllTypes::_internal_mutable_repeated_foreign_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_foreign_message_;
}

// repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
inline int TestAllTypes::_internal_repeated_import_message_size() const {
  return _internal_repeated_import_message().size();
}
inline int TestAllTypes::repeated_import_message_size() const {
  return _internal_repeated_import_message_size();
}
inline ::protobuf_unittest_import::ImportMessage* TestAllTypes::mutable_repeated_import_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.repeated_import_message)
  return _internal_mutable_repeated_import_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest_import::ImportMessage>* TestAllTypes::mutable_repeated_import_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_import_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_import_message();
}
inline const ::protobuf_unittest_import::ImportMessage& TestAllTypes::repeated_import_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_import_message)
  return _internal_repeated_import_message().Get(index);
}
inline ::protobuf_unittest_import::ImportMessage* TestAllTypes::add_repeated_import_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_unittest_import::ImportMessage* _add = _internal_mutable_repeated_import_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_import_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest_import::ImportMessage>& TestAllTypes::repeated_import_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_import_message)
  return _internal_repeated_import_message();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest_import::ImportMessage>&
TestAllTypes::_internal_repeated_import_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_import_message_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest_import::ImportMessage>*
TestAllTypes::_internal_mutable_repeated_import_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_import_message_;
}

// repeated .edition_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
inline int TestAllTypes::_internal_repeated_nested_enum_size() const {
  return _internal_repeated_nested_enum().size();
}
inline int TestAllTypes::repeated_nested_enum_size() const {
  return _internal_repeated_nested_enum_size();
}
inline void TestAllTypes::clear_repeated_nested_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_nested_enum_.Clear();
}
inline ::edition_unittest::TestAllTypes_NestedEnum TestAllTypes::repeated_nested_enum(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_nested_enum)
  return static_cast<::edition_unittest::TestAllTypes_NestedEnum>(_internal_repeated_nested_enum().Get(index));
}
inline void TestAllTypes::set_repeated_nested_enum(int index, ::edition_unittest::TestAllTypes_NestedEnum value) {
  assert(::edition_unittest::TestAllTypes_NestedEnum_IsValid(value));
  _internal_mutable_repeated_nested_enum()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_nested_enum)
}
inline void TestAllTypes::add_repeated_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value) {
  assert(::edition_unittest::TestAllTypes_NestedEnum_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_nested_enum()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_nested_enum)
}
inline const ::google::protobuf::RepeatedField<int>& TestAllTypes::repeated_nested_enum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_nested_enum)
  return _internal_repeated_nested_enum();
}
inline ::google::protobuf::RepeatedField<int>* TestAllTypes::mutable_repeated_nested_enum()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_nested_enum)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_nested_enum();
}
inline const ::google::protobuf::RepeatedField<int>& TestAllTypes::_internal_repeated_nested_enum()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_nested_enum_;
}
inline ::google::protobuf::RepeatedField<int>* TestAllTypes::_internal_mutable_repeated_nested_enum() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_nested_enum_;
}

// repeated .edition_unittest.ForeignEnum repeated_foreign_enum = 52;
inline int TestAllTypes::_internal_repeated_foreign_enum_size() const {
  return _internal_repeated_foreign_enum().size();
}
inline int TestAllTypes::repeated_foreign_enum_size() const {
  return _internal_repeated_foreign_enum_size();
}
inline void TestAllTypes::clear_repeated_foreign_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_foreign_enum_.Clear();
}
inline ::edition_unittest::ForeignEnum TestAllTypes::repeated_foreign_enum(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_foreign_enum)
  return static_cast<::edition_unittest::ForeignEnum>(_internal_repeated_foreign_enum().Get(index));
}
inline void TestAllTypes::set_repeated_foreign_enum(int index, ::edition_unittest::ForeignEnum value) {
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _internal_mutable_repeated_foreign_enum()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_foreign_enum)
}
inline void TestAllTypes::add_repeated_foreign_enum(::edition_unittest::ForeignEnum value) {
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_foreign_enum()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_foreign_enum)
}
inline const ::google::protobuf::RepeatedField<int>& TestAllTypes::repeated_foreign_enum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_foreign_enum)
  return _internal_repeated_foreign_enum();
}
inline ::google::protobuf::RepeatedField<int>* TestAllTypes::mutable_repeated_foreign_enum()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_foreign_enum)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_foreign_enum();
}
inline const ::google::protobuf::RepeatedField<int>& TestAllTypes::_internal_repeated_foreign_enum()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_foreign_enum_;
}
inline ::google::protobuf::RepeatedField<int>* TestAllTypes::_internal_mutable_repeated_foreign_enum() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_foreign_enum_;
}

// repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
inline int TestAllTypes::_internal_repeated_import_enum_size() const {
  return _internal_repeated_import_enum().size();
}
inline int TestAllTypes::repeated_import_enum_size() const {
  return _internal_repeated_import_enum_size();
}
inline void TestAllTypes::clear_repeated_import_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_import_enum_.Clear();
}
inline ::protobuf_unittest_import::ImportEnum TestAllTypes::repeated_import_enum(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_import_enum)
  return static_cast<::protobuf_unittest_import::ImportEnum>(_internal_repeated_import_enum().Get(index));
}
inline void TestAllTypes::set_repeated_import_enum(int index, ::protobuf_unittest_import::ImportEnum value) {
  assert(::protobuf_unittest_import::ImportEnum_IsValid(value));
  _internal_mutable_repeated_import_enum()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_import_enum)
}
inline void TestAllTypes::add_repeated_import_enum(::protobuf_unittest_import::ImportEnum value) {
  assert(::protobuf_unittest_import::ImportEnum_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_import_enum()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_import_enum)
}
inline const ::google::protobuf::RepeatedField<int>& TestAllTypes::repeated_import_enum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_import_enum)
  return _internal_repeated_import_enum();
}
inline ::google::protobuf::RepeatedField<int>* TestAllTypes::mutable_repeated_import_enum()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_import_enum)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_import_enum();
}
inline const ::google::protobuf::RepeatedField<int>& TestAllTypes::_internal_repeated_import_enum()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_import_enum_;
}
inline ::google::protobuf::RepeatedField<int>* TestAllTypes::_internal_mutable_repeated_import_enum() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_import_enum_;
}

// repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
inline int TestAllTypes::_internal_repeated_string_piece_size() const {
  return _internal_repeated_string_piece().size();
}
inline int TestAllTypes::repeated_string_piece_size() const {
  return _internal_repeated_string_piece_size();
}
inline void TestAllTypes::clear_repeated_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_piece_.Clear();
}
inline std::string* TestAllTypes::add_repeated_string_piece() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_repeated_string_piece()->Add();
  // @@protoc_insertion_point(field_add_mutable:edition_unittest.TestAllTypes.repeated_string_piece)
  return _s;
}
inline const std::string& TestAllTypes::repeated_string_piece(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_string_piece)
  return _internal_repeated_string_piece().Get(index);
}
inline std::string* TestAllTypes::mutable_repeated_string_piece(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.repeated_string_piece)
  return _internal_mutable_repeated_string_piece()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestAllTypes::set_repeated_string_piece(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_repeated_string_piece()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_string_piece)
}
template <typename Arg_, typename... Args_>
inline void TestAllTypes::add_repeated_string_piece(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_repeated_string_piece(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_string_piece)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestAllTypes::repeated_string_piece() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_string_piece)
  return _internal_repeated_string_piece();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestAllTypes::mutable_repeated_string_piece() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_string_piece)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_piece();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestAllTypes::_internal_repeated_string_piece() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_piece_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestAllTypes::_internal_mutable_repeated_string_piece() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_piece_;
}

// repeated string repeated_cord = 55 [ctype = CORD];
inline int TestAllTypes::_internal_repeated_cord_size() const {
  return _internal_repeated_cord().size();
}
inline int TestAllTypes::repeated_cord_size() const {
  return _internal_repeated_cord_size();
}
inline void TestAllTypes::clear_repeated_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_cord_.Clear();
}
inline std::string* TestAllTypes::add_repeated_cord() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_repeated_cord()->Add();
  // @@protoc_insertion_point(field_add_mutable:edition_unittest.TestAllTypes.repeated_cord)
  return _s;
}
inline const std::string& TestAllTypes::repeated_cord(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_cord)
  return _internal_repeated_cord().Get(index);
}
inline std::string* TestAllTypes::mutable_repeated_cord(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.repeated_cord)
  return _internal_mutable_repeated_cord()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestAllTypes::set_repeated_cord(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_repeated_cord()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.repeated_cord)
}
template <typename Arg_, typename... Args_>
inline void TestAllTypes::add_repeated_cord(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_repeated_cord(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_cord)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestAllTypes::repeated_cord() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_cord)
  return _internal_repeated_cord();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestAllTypes::mutable_repeated_cord() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_cord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_cord();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestAllTypes::_internal_repeated_cord() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_cord_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestAllTypes::_internal_mutable_repeated_cord() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_cord_;
}

// repeated .edition_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57;
inline int TestAllTypes::_internal_repeated_lazy_message_size() const {
  return _internal_repeated_lazy_message().size();
}
inline int TestAllTypes::repeated_lazy_message_size() const {
  return _internal_repeated_lazy_message_size();
}
inline void TestAllTypes::clear_repeated_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_lazy_message_.Clear();
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_repeated_lazy_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.repeated_lazy_message)
  return _internal_mutable_repeated_lazy_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>* TestAllTypes::mutable_repeated_lazy_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestAllTypes.repeated_lazy_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_lazy_message();
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::repeated_lazy_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.repeated_lazy_message)
  return _internal_repeated_lazy_message().Get(index);
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::add_repeated_lazy_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes_NestedMessage* _add = _internal_mutable_repeated_lazy_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestAllTypes.repeated_lazy_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>& TestAllTypes::repeated_lazy_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestAllTypes.repeated_lazy_message)
  return _internal_repeated_lazy_message();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>&
TestAllTypes::_internal_repeated_lazy_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_lazy_message_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes_NestedMessage>*
TestAllTypes::_internal_mutable_repeated_lazy_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_lazy_message_;
}

// int32 default_int32 = 61 [default = 41];
inline bool TestAllTypes::has_default_int32() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_int32_ = 41;
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline ::int32_t TestAllTypes::default_int32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_int32)
  return _internal_default_int32();
}
inline void TestAllTypes::set_default_int32(::int32_t value) {
  _internal_set_default_int32(value);
  _impl_._has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_int32)
}
inline ::int32_t TestAllTypes::_internal_default_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_int32_;
}
inline void TestAllTypes::_internal_set_default_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_int32_ = value;
}

// int64 default_int64 = 62 [default = 42];
inline bool TestAllTypes::has_default_int64() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_int64_ = ::int64_t{42};
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline ::int64_t TestAllTypes::default_int64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_int64)
  return _internal_default_int64();
}
inline void TestAllTypes::set_default_int64(::int64_t value) {
  _internal_set_default_int64(value);
  _impl_._has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_int64)
}
inline ::int64_t TestAllTypes::_internal_default_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_int64_;
}
inline void TestAllTypes::_internal_set_default_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_int64_ = value;
}

// uint32 default_uint32 = 63 [default = 43];
inline bool TestAllTypes::has_default_uint32() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_uint32_ = 43u;
  _impl_._has_bits_[1] &= ~0x00000008u;
}
inline ::uint32_t TestAllTypes::default_uint32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_uint32)
  return _internal_default_uint32();
}
inline void TestAllTypes::set_default_uint32(::uint32_t value) {
  _internal_set_default_uint32(value);
  _impl_._has_bits_[1] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_uint32)
}
inline ::uint32_t TestAllTypes::_internal_default_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_uint32_;
}
inline void TestAllTypes::_internal_set_default_uint32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_uint32_ = value;
}

// uint64 default_uint64 = 64 [default = 44];
inline bool TestAllTypes::has_default_uint64() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_uint64_ = ::uint64_t{44u};
  _impl_._has_bits_[1] &= ~0x00000004u;
}
inline ::uint64_t TestAllTypes::default_uint64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_uint64)
  return _internal_default_uint64();
}
inline void TestAllTypes::set_default_uint64(::uint64_t value) {
  _internal_set_default_uint64(value);
  _impl_._has_bits_[1] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_uint64)
}
inline ::uint64_t TestAllTypes::_internal_default_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_uint64_;
}
inline void TestAllTypes::_internal_set_default_uint64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_uint64_ = value;
}

// sint32 default_sint32 = 65 [default = -45];
inline bool TestAllTypes::has_default_sint32() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_sint32_ = -45;
  _impl_._has_bits_[1] &= ~0x00000010u;
}
inline ::int32_t TestAllTypes::default_sint32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_sint32)
  return _internal_default_sint32();
}
inline void TestAllTypes::set_default_sint32(::int32_t value) {
  _internal_set_default_sint32(value);
  _impl_._has_bits_[1] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_sint32)
}
inline ::int32_t TestAllTypes::_internal_default_sint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_sint32_;
}
inline void TestAllTypes::_internal_set_default_sint32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_sint32_ = value;
}

// sint64 default_sint64 = 66 [default = 46];
inline bool TestAllTypes::has_default_sint64() const {
  bool value = (_impl_._has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_sint64_ = ::int64_t{46};
  _impl_._has_bits_[1] &= ~0x00000020u;
}
inline ::int64_t TestAllTypes::default_sint64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_sint64)
  return _internal_default_sint64();
}
inline void TestAllTypes::set_default_sint64(::int64_t value) {
  _internal_set_default_sint64(value);
  _impl_._has_bits_[1] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_sint64)
}
inline ::int64_t TestAllTypes::_internal_default_sint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_sint64_;
}
inline void TestAllTypes::_internal_set_default_sint64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_sint64_ = value;
}

// fixed32 default_fixed32 = 67 [default = 47];
inline bool TestAllTypes::has_default_fixed32() const {
  bool value = (_impl_._has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_fixed32_ = 47u;
  _impl_._has_bits_[1] &= ~0x00000080u;
}
inline ::uint32_t TestAllTypes::default_fixed32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_fixed32)
  return _internal_default_fixed32();
}
inline void TestAllTypes::set_default_fixed32(::uint32_t value) {
  _internal_set_default_fixed32(value);
  _impl_._has_bits_[1] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_fixed32)
}
inline ::uint32_t TestAllTypes::_internal_default_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_fixed32_;
}
inline void TestAllTypes::_internal_set_default_fixed32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_fixed32_ = value;
}

// fixed64 default_fixed64 = 68 [default = 48];
inline bool TestAllTypes::has_default_fixed64() const {
  bool value = (_impl_._has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_fixed64_ = ::uint64_t{48u};
  _impl_._has_bits_[1] &= ~0x00000040u;
}
inline ::uint64_t TestAllTypes::default_fixed64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_fixed64)
  return _internal_default_fixed64();
}
inline void TestAllTypes::set_default_fixed64(::uint64_t value) {
  _internal_set_default_fixed64(value);
  _impl_._has_bits_[1] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_fixed64)
}
inline ::uint64_t TestAllTypes::_internal_default_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_fixed64_;
}
inline void TestAllTypes::_internal_set_default_fixed64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_fixed64_ = value;
}

// sfixed32 default_sfixed32 = 69 [default = 49];
inline bool TestAllTypes::has_default_sfixed32() const {
  bool value = (_impl_._has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_sfixed32_ = 49;
  _impl_._has_bits_[1] &= ~0x00000100u;
}
inline ::int32_t TestAllTypes::default_sfixed32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_sfixed32)
  return _internal_default_sfixed32();
}
inline void TestAllTypes::set_default_sfixed32(::int32_t value) {
  _internal_set_default_sfixed32(value);
  _impl_._has_bits_[1] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_sfixed32)
}
inline ::int32_t TestAllTypes::_internal_default_sfixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_sfixed32_;
}
inline void TestAllTypes::_internal_set_default_sfixed32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_sfixed32_ = value;
}

// sfixed64 default_sfixed64 = 70 [default = -50];
inline bool TestAllTypes::has_default_sfixed64() const {
  bool value = (_impl_._has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_sfixed64_ = ::int64_t{-50};
  _impl_._has_bits_[1] &= ~0x00000200u;
}
inline ::int64_t TestAllTypes::default_sfixed64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_sfixed64)
  return _internal_default_sfixed64();
}
inline void TestAllTypes::set_default_sfixed64(::int64_t value) {
  _internal_set_default_sfixed64(value);
  _impl_._has_bits_[1] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_sfixed64)
}
inline ::int64_t TestAllTypes::_internal_default_sfixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_sfixed64_;
}
inline void TestAllTypes::_internal_set_default_sfixed64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_sfixed64_ = value;
}

// float default_float = 71 [default = 51.5];
inline bool TestAllTypes::has_default_float() const {
  bool value = (_impl_._has_bits_[1] & 0x00000800u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_float_ = 51.5f;
  _impl_._has_bits_[1] &= ~0x00000800u;
}
inline float TestAllTypes::default_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_float)
  return _internal_default_float();
}
inline void TestAllTypes::set_default_float(float value) {
  _internal_set_default_float(value);
  _impl_._has_bits_[1] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_float)
}
inline float TestAllTypes::_internal_default_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_float_;
}
inline void TestAllTypes::_internal_set_default_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_float_ = value;
}

// double default_double = 72 [default = 52000];
inline bool TestAllTypes::has_default_double() const {
  bool value = (_impl_._has_bits_[1] & 0x00000400u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_double_ = 52000;
  _impl_._has_bits_[1] &= ~0x00000400u;
}
inline double TestAllTypes::default_double() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_double)
  return _internal_default_double();
}
inline void TestAllTypes::set_default_double(double value) {
  _internal_set_default_double(value);
  _impl_._has_bits_[1] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_double)
}
inline double TestAllTypes::_internal_default_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_double_;
}
inline void TestAllTypes::_internal_set_default_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_double_ = value;
}

// bool default_bool = 73 [default = true];
inline bool TestAllTypes::has_default_bool() const {
  bool value = (_impl_._has_bits_[1] & 0x00001000u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_bool_ = true;
  _impl_._has_bits_[1] &= ~0x00001000u;
}
inline bool TestAllTypes::default_bool() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_bool)
  return _internal_default_bool();
}
inline void TestAllTypes::set_default_bool(bool value) {
  _internal_set_default_bool(value);
  _impl_._has_bits_[1] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_bool)
}
inline bool TestAllTypes::_internal_default_bool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_bool_;
}
inline void TestAllTypes::_internal_set_default_bool(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_bool_ = value;
}

// string default_string = 74 [default = "hello"];
inline bool TestAllTypes::has_default_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_string_.ClearToDefault(::edition_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_string_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline absl::string_view TestAllTypes::default_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_string)
  if (_impl_.default_string_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_default_string_.get();
  }
  return _internal_default_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_default_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.default_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_string)
}
inline const std::string& TestAllTypes::_internal_default_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_string_.Get();
}
inline void TestAllTypes::_internal_set_default_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.default_string_.Set(value, GetArena());
}

// bytes default_bytes = 75 [default = "world"];
inline bool TestAllTypes::has_default_bytes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_bytes_.ClearToDefault(::edition_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_bytes_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline absl::string_view TestAllTypes::default_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_bytes)
  if (_impl_.default_bytes_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_default_bytes_.get();
  }
  return _internal_default_bytes();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_default_bytes(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.default_bytes_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_bytes)
}
inline const std::string& TestAllTypes::_internal_default_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_bytes_.Get();
}
inline void TestAllTypes::_internal_set_default_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.default_bytes_.Set(value, GetArena());
}

// .edition_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
inline bool TestAllTypes::has_default_nested_enum() const {
  bool value = (_impl_._has_bits_[1] & 0x00002000u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_nested_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_nested_enum_ = 2;
  _impl_._has_bits_[1] &= ~0x00002000u;
}
inline ::edition_unittest::TestAllTypes_NestedEnum TestAllTypes::default_nested_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_nested_enum)
  return _internal_default_nested_enum();
}
inline void TestAllTypes::set_default_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value) {
  _internal_set_default_nested_enum(value);
  _impl_._has_bits_[1] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_nested_enum)
}
inline ::edition_unittest::TestAllTypes_NestedEnum TestAllTypes::_internal_default_nested_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestAllTypes_NestedEnum>(_impl_.default_nested_enum_);
}
inline void TestAllTypes::_internal_set_default_nested_enum(::edition_unittest::TestAllTypes_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestAllTypes_NestedEnum_IsValid(value));
  _impl_.default_nested_enum_ = value;
}

// .edition_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
inline bool TestAllTypes::has_default_foreign_enum() const {
  bool value = (_impl_._has_bits_[1] & 0x00004000u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_foreign_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_foreign_enum_ = 5;
  _impl_._has_bits_[1] &= ~0x00004000u;
}
inline ::edition_unittest::ForeignEnum TestAllTypes::default_foreign_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_foreign_enum)
  return _internal_default_foreign_enum();
}
inline void TestAllTypes::set_default_foreign_enum(::edition_unittest::ForeignEnum value) {
  _internal_set_default_foreign_enum(value);
  _impl_._has_bits_[1] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_foreign_enum)
}
inline ::edition_unittest::ForeignEnum TestAllTypes::_internal_default_foreign_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.default_foreign_enum_);
}
inline void TestAllTypes::_internal_set_default_foreign_enum(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.default_foreign_enum_ = value;
}

// .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
inline bool TestAllTypes::has_default_import_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_import_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_import_enum_ = 8;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::protobuf_unittest_import::ImportEnum TestAllTypes::default_import_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_import_enum)
  return _internal_default_import_enum();
}
inline void TestAllTypes::set_default_import_enum(::protobuf_unittest_import::ImportEnum value) {
  _internal_set_default_import_enum(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_import_enum)
}
inline ::protobuf_unittest_import::ImportEnum TestAllTypes::_internal_default_import_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::protobuf_unittest_import::ImportEnum>(_impl_.default_import_enum_);
}
inline void TestAllTypes::_internal_set_default_import_enum(::protobuf_unittest_import::ImportEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::protobuf_unittest_import::ImportEnum_IsValid(value));
  _impl_.default_import_enum_ = value;
}

// string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
inline bool TestAllTypes::has_default_string_piece() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_string_piece_.ClearToDefault(::edition_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_string_piece_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& TestAllTypes::default_string_piece() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_string_piece)
  if (_impl_.default_string_piece_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_default_string_piece_.get();
  }
  return _internal_default_string_piece();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_default_string_piece(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.default_string_piece_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_string_piece)
}
inline std::string* TestAllTypes::mutable_default_string_piece() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_default_string_piece();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.default_string_piece)
  return _s;
}
inline const std::string& TestAllTypes::_internal_default_string_piece() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_string_piece_.Get();
}
inline void TestAllTypes::_internal_set_default_string_piece(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.default_string_piece_.Set(value, GetArena());
}
inline std::string* TestAllTypes::_internal_mutable_default_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.default_string_piece_.Mutable(::edition_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_string_piece_, GetArena());
}
inline std::string* TestAllTypes::release_default_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.default_string_piece)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  return _impl_.default_string_piece_.Release();
}
inline void TestAllTypes::set_allocated_default_string_piece(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.default_string_piece_.SetAllocated(value, GetArena());
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.default_string_piece)
}

// string default_cord = 85 [default = "123", ctype = CORD];
inline bool TestAllTypes::has_default_cord() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TestAllTypes::clear_default_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_cord_.ClearToDefault(::edition_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_cord_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& TestAllTypes::default_cord() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.default_cord)
  if (_impl_.default_cord_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_default_cord_.get();
  }
  return _internal_default_cord();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_default_cord(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.default_cord_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.default_cord)
}
inline std::string* TestAllTypes::mutable_default_cord() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_default_cord();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.default_cord)
  return _s;
}
inline const std::string& TestAllTypes::_internal_default_cord() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_cord_.Get();
}
inline void TestAllTypes::_internal_set_default_cord(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.default_cord_.Set(value, GetArena());
}
inline std::string* TestAllTypes::_internal_mutable_default_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.default_cord_.Mutable(::edition_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_cord_, GetArena());
}
inline std::string* TestAllTypes::release_default_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.default_cord)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  return _impl_.default_cord_.Release();
}
inline void TestAllTypes::set_allocated_default_cord(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.default_cord_.SetAllocated(value, GetArena());
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.default_cord)
}

// uint32 oneof_uint32 = 111;
inline bool TestAllTypes::has_oneof_uint32() const {
  return oneof_field_case() == kOneofUint32;
}
inline void TestAllTypes::set_has_oneof_uint32() {
  _impl_._oneof_case_[0] = kOneofUint32;
}
inline void TestAllTypes::clear_oneof_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofUint32) {
    _impl_.oneof_field_.oneof_uint32_ = 0u;
    clear_has_oneof_field();
  }
}
inline ::uint32_t TestAllTypes::oneof_uint32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.oneof_uint32)
  return _internal_oneof_uint32();
}
inline void TestAllTypes::set_oneof_uint32(::uint32_t value) {
  if (oneof_field_case() != kOneofUint32) {
    clear_oneof_field();
    set_has_oneof_uint32();
  }
  _impl_.oneof_field_.oneof_uint32_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.oneof_uint32)
}
inline ::uint32_t TestAllTypes::_internal_oneof_uint32() const {
  if (oneof_field_case() == kOneofUint32) {
    return _impl_.oneof_field_.oneof_uint32_;
  }
  return 0u;
}

// .edition_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
inline bool TestAllTypes::has_oneof_nested_message() const {
  return oneof_field_case() == kOneofNestedMessage;
}
inline bool TestAllTypes::_internal_has_oneof_nested_message() const {
  return oneof_field_case() == kOneofNestedMessage;
}
inline void TestAllTypes::set_has_oneof_nested_message() {
  _impl_._oneof_case_[0] = kOneofNestedMessage;
}
inline void TestAllTypes::clear_oneof_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofNestedMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.oneof_field_.oneof_nested_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.oneof_field_.oneof_nested_message_);
    }
    clear_has_oneof_field();
  }
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::release_oneof_nested_message() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.oneof_nested_message)
  if (oneof_field_case() == kOneofNestedMessage) {
    clear_has_oneof_field();
    auto* temp = _impl_.oneof_field_.oneof_nested_message_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.oneof_field_.oneof_nested_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::_internal_oneof_nested_message() const {
  return oneof_field_case() == kOneofNestedMessage ? *_impl_.oneof_field_.oneof_nested_message_ : reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage&>(::edition_unittest::_TestAllTypes_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::oneof_nested_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.oneof_nested_message)
  return _internal_oneof_nested_message();
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::unsafe_arena_release_oneof_nested_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestAllTypes.oneof_nested_message)
  if (oneof_field_case() == kOneofNestedMessage) {
    clear_has_oneof_field();
    auto* temp = _impl_.oneof_field_.oneof_nested_message_;
    _impl_.oneof_field_.oneof_nested_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestAllTypes::unsafe_arena_set_allocated_oneof_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_oneof_field();
  if (value) {
    set_has_oneof_nested_message();
    _impl_.oneof_field_.oneof_nested_message_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.oneof_nested_message)
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::_internal_mutable_oneof_nested_message() {
  if (oneof_field_case() != kOneofNestedMessage) {
    clear_oneof_field();
    set_has_oneof_nested_message();
    _impl_.oneof_field_.oneof_nested_message_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes_NestedMessage>(GetArena());
  }
  return _impl_.oneof_field_.oneof_nested_message_;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_oneof_nested_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestAllTypes_NestedMessage* _msg = _internal_mutable_oneof_nested_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.oneof_nested_message)
  return _msg;
}

// string oneof_string = 113;
inline bool TestAllTypes::has_oneof_string() const {
  return oneof_field_case() == kOneofString;
}
inline void TestAllTypes::set_has_oneof_string() {
  _impl_._oneof_case_[0] = kOneofString;
}
inline void TestAllTypes::clear_oneof_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofString) {
    _impl_.oneof_field_.oneof_string_.Destroy();
    clear_has_oneof_field();
  }
}
inline absl::string_view TestAllTypes::oneof_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.oneof_string)
  return _internal_oneof_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_oneof_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofString) {
    clear_oneof_field();

    set_has_oneof_string();
    _impl_.oneof_field_.oneof_string_.InitDefault();
  }
  _impl_.oneof_field_.oneof_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.oneof_string)
}
inline const std::string& TestAllTypes::_internal_oneof_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (oneof_field_case() != kOneofString) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.oneof_field_.oneof_string_.Get();
}
inline void TestAllTypes::_internal_set_oneof_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofString) {
    clear_oneof_field();

    set_has_oneof_string();
    _impl_.oneof_field_.oneof_string_.InitDefault();
  }
  _impl_.oneof_field_.oneof_string_.Set(value, GetArena());
}

// bytes oneof_bytes = 114;
inline bool TestAllTypes::has_oneof_bytes() const {
  return oneof_field_case() == kOneofBytes;
}
inline void TestAllTypes::set_has_oneof_bytes() {
  _impl_._oneof_case_[0] = kOneofBytes;
}
inline void TestAllTypes::clear_oneof_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofBytes) {
    _impl_.oneof_field_.oneof_bytes_.Destroy();
    clear_has_oneof_field();
  }
}
inline absl::string_view TestAllTypes::oneof_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.oneof_bytes)
  return _internal_oneof_bytes();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_oneof_bytes(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofBytes) {
    clear_oneof_field();

    set_has_oneof_bytes();
    _impl_.oneof_field_.oneof_bytes_.InitDefault();
  }
  _impl_.oneof_field_.oneof_bytes_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.oneof_bytes)
}
inline const std::string& TestAllTypes::_internal_oneof_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (oneof_field_case() != kOneofBytes) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.oneof_field_.oneof_bytes_.Get();
}
inline void TestAllTypes::_internal_set_oneof_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofBytes) {
    clear_oneof_field();

    set_has_oneof_bytes();
    _impl_.oneof_field_.oneof_bytes_.InitDefault();
  }
  _impl_.oneof_field_.oneof_bytes_.Set(value, GetArena());
}

// string oneof_cord = 115 [ctype = CORD];
inline bool TestAllTypes::has_oneof_cord() const {
  return oneof_field_case() == kOneofCord;
}
inline void TestAllTypes::set_has_oneof_cord() {
  _impl_._oneof_case_[0] = kOneofCord;
}
inline void TestAllTypes::clear_oneof_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofCord) {
    _impl_.oneof_field_.oneof_cord_.Destroy();
    clear_has_oneof_field();
  }
}
inline const std::string& TestAllTypes::oneof_cord() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.oneof_cord)
  return _internal_oneof_cord();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_oneof_cord(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofCord) {
    clear_oneof_field();

    set_has_oneof_cord();
    _impl_.oneof_field_.oneof_cord_.InitDefault();
  }
  _impl_.oneof_field_.oneof_cord_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.oneof_cord)
}
inline std::string* TestAllTypes::mutable_oneof_cord() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_oneof_cord();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.oneof_cord)
  return _s;
}
inline const std::string& TestAllTypes::_internal_oneof_cord() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (oneof_field_case() != kOneofCord) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.oneof_field_.oneof_cord_.Get();
}
inline void TestAllTypes::_internal_set_oneof_cord(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofCord) {
    clear_oneof_field();

    set_has_oneof_cord();
    _impl_.oneof_field_.oneof_cord_.InitDefault();
  }
  _impl_.oneof_field_.oneof_cord_.Set(value, GetArena());
}
inline std::string* TestAllTypes::_internal_mutable_oneof_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofCord) {
    clear_oneof_field();

    set_has_oneof_cord();
    _impl_.oneof_field_.oneof_cord_.InitDefault();
  }
  return _impl_.oneof_field_.oneof_cord_.Mutable( GetArena());
}
inline std::string* TestAllTypes::release_oneof_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.oneof_cord)
  if (oneof_field_case() != kOneofCord) {
    return nullptr;
  }
  clear_has_oneof_field();
  return _impl_.oneof_field_.oneof_cord_.Release();
}
inline void TestAllTypes::set_allocated_oneof_cord(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  if (value != nullptr) {
    set_has_oneof_cord();
    _impl_.oneof_field_.oneof_cord_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.oneof_cord)
}

// string oneof_string_piece = 116 [ctype = STRING_PIECE];
inline bool TestAllTypes::has_oneof_string_piece() const {
  return oneof_field_case() == kOneofStringPiece;
}
inline void TestAllTypes::set_has_oneof_string_piece() {
  _impl_._oneof_case_[0] = kOneofStringPiece;
}
inline void TestAllTypes::clear_oneof_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofStringPiece) {
    _impl_.oneof_field_.oneof_string_piece_.Destroy();
    clear_has_oneof_field();
  }
}
inline const std::string& TestAllTypes::oneof_string_piece() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.oneof_string_piece)
  return _internal_oneof_string_piece();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestAllTypes::set_oneof_string_piece(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofStringPiece) {
    clear_oneof_field();

    set_has_oneof_string_piece();
    _impl_.oneof_field_.oneof_string_piece_.InitDefault();
  }
  _impl_.oneof_field_.oneof_string_piece_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestAllTypes.oneof_string_piece)
}
inline std::string* TestAllTypes::mutable_oneof_string_piece() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_oneof_string_piece();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.oneof_string_piece)
  return _s;
}
inline const std::string& TestAllTypes::_internal_oneof_string_piece() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (oneof_field_case() != kOneofStringPiece) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.oneof_field_.oneof_string_piece_.Get();
}
inline void TestAllTypes::_internal_set_oneof_string_piece(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofStringPiece) {
    clear_oneof_field();

    set_has_oneof_string_piece();
    _impl_.oneof_field_.oneof_string_piece_.InitDefault();
  }
  _impl_.oneof_field_.oneof_string_piece_.Set(value, GetArena());
}
inline std::string* TestAllTypes::_internal_mutable_oneof_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofStringPiece) {
    clear_oneof_field();

    set_has_oneof_string_piece();
    _impl_.oneof_field_.oneof_string_piece_.InitDefault();
  }
  return _impl_.oneof_field_.oneof_string_piece_.Mutable( GetArena());
}
inline std::string* TestAllTypes::release_oneof_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.oneof_string_piece)
  if (oneof_field_case() != kOneofStringPiece) {
    return nullptr;
  }
  clear_has_oneof_field();
  return _impl_.oneof_field_.oneof_string_piece_.Release();
}
inline void TestAllTypes::set_allocated_oneof_string_piece(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  if (value != nullptr) {
    set_has_oneof_string_piece();
    _impl_.oneof_field_.oneof_string_piece_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestAllTypes.oneof_string_piece)
}

// .edition_unittest.TestAllTypes.NestedMessage oneof_lazy_nested_message = 117 [lazy = true];
inline bool TestAllTypes::has_oneof_lazy_nested_message() const {
  return oneof_field_case() == kOneofLazyNestedMessage;
}
inline bool TestAllTypes::_internal_has_oneof_lazy_nested_message() const {
  return oneof_field_case() == kOneofLazyNestedMessage;
}
inline void TestAllTypes::set_has_oneof_lazy_nested_message() {
  _impl_._oneof_case_[0] = kOneofLazyNestedMessage;
}
inline void TestAllTypes::clear_oneof_lazy_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofLazyNestedMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.oneof_field_.oneof_lazy_nested_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.oneof_field_.oneof_lazy_nested_message_);
    }
    clear_has_oneof_field();
  }
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::release_oneof_lazy_nested_message() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestAllTypes.oneof_lazy_nested_message)
  if (oneof_field_case() == kOneofLazyNestedMessage) {
    clear_has_oneof_field();
    auto* temp = _impl_.oneof_field_.oneof_lazy_nested_message_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.oneof_field_.oneof_lazy_nested_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::_internal_oneof_lazy_nested_message() const {
  return oneof_field_case() == kOneofLazyNestedMessage ? *_impl_.oneof_field_.oneof_lazy_nested_message_ : reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage&>(::edition_unittest::_TestAllTypes_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestAllTypes::oneof_lazy_nested_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestAllTypes.oneof_lazy_nested_message)
  return _internal_oneof_lazy_nested_message();
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::unsafe_arena_release_oneof_lazy_nested_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestAllTypes.oneof_lazy_nested_message)
  if (oneof_field_case() == kOneofLazyNestedMessage) {
    clear_has_oneof_field();
    auto* temp = _impl_.oneof_field_.oneof_lazy_nested_message_;
    _impl_.oneof_field_.oneof_lazy_nested_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestAllTypes::unsafe_arena_set_allocated_oneof_lazy_nested_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_oneof_field();
  if (value) {
    set_has_oneof_lazy_nested_message();
    _impl_.oneof_field_.oneof_lazy_nested_message_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestAllTypes.oneof_lazy_nested_message)
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::_internal_mutable_oneof_lazy_nested_message() {
  if (oneof_field_case() != kOneofLazyNestedMessage) {
    clear_oneof_field();
    set_has_oneof_lazy_nested_message();
    _impl_.oneof_field_.oneof_lazy_nested_message_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes_NestedMessage>(GetArena());
  }
  return _impl_.oneof_field_.oneof_lazy_nested_message_;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestAllTypes::mutable_oneof_lazy_nested_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestAllTypes_NestedMessage* _msg = _internal_mutable_oneof_lazy_nested_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestAllTypes.oneof_lazy_nested_message)
  return _msg;
}

inline bool TestAllTypes::has_oneof_field() const {
  return oneof_field_case() != ONEOF_FIELD_NOT_SET;
}
inline void TestAllTypes::clear_has_oneof_field() {
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}
inline TestAllTypes::OneofFieldCase TestAllTypes::oneof_field_case() const {
  return TestAllTypes::OneofFieldCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// NestedTestAllTypes

// .edition_unittest.NestedTestAllTypes child = 1;
inline bool NestedTestAllTypes::has_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.child_ != nullptr);
  return value;
}
inline void NestedTestAllTypes::clear_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ != nullptr) _impl_.child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::NestedTestAllTypes& NestedTestAllTypes::_internal_child() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::NestedTestAllTypes* p = _impl_.child_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::NestedTestAllTypes&>(::edition_unittest::_NestedTestAllTypes_default_instance_);
}
inline const ::edition_unittest::NestedTestAllTypes& NestedTestAllTypes::child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.NestedTestAllTypes.child)
  return _internal_child();
}
inline void NestedTestAllTypes::unsafe_arena_set_allocated_child(::edition_unittest::NestedTestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.child_);
  }
  _impl_.child_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.NestedTestAllTypes.child)
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::NestedTestAllTypes* released = _impl_.child_;
  _impl_.child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::unsafe_arena_release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.NestedTestAllTypes.child)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::NestedTestAllTypes* temp = _impl_.child_;
  _impl_.child_ = nullptr;
  return temp;
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::_internal_mutable_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::NestedTestAllTypes>(GetArena());
    _impl_.child_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(p);
  }
  return _impl_.child_;
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::mutable_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::NestedTestAllTypes* _msg = _internal_mutable_child();
  // @@protoc_insertion_point(field_mutable:edition_unittest.NestedTestAllTypes.child)
  return _msg;
}
inline void NestedTestAllTypes::set_allocated_child(::edition_unittest::NestedTestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.child_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.NestedTestAllTypes.child)
}

// .edition_unittest.TestAllTypes payload = 2;
inline bool NestedTestAllTypes::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline void NestedTestAllTypes::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ != nullptr) _impl_.payload_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestAllTypes& NestedTestAllTypes::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& NestedTestAllTypes::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.NestedTestAllTypes.payload)
  return _internal_payload();
}
inline void NestedTestAllTypes::unsafe_arena_set_allocated_payload(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.NestedTestAllTypes.payload)
}
inline ::edition_unittest::TestAllTypes* NestedTestAllTypes::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* NestedTestAllTypes::unsafe_arena_release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.NestedTestAllTypes.payload)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* NestedTestAllTypes::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.payload_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.payload_;
}
inline ::edition_unittest::TestAllTypes* NestedTestAllTypes::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:edition_unittest.NestedTestAllTypes.payload)
  return _msg;
}
inline void NestedTestAllTypes::set_allocated_payload(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.payload_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.NestedTestAllTypes.payload)
}

// repeated .edition_unittest.NestedTestAllTypes repeated_child = 3;
inline int NestedTestAllTypes::_internal_repeated_child_size() const {
  return _internal_repeated_child().size();
}
inline int NestedTestAllTypes::repeated_child_size() const {
  return _internal_repeated_child_size();
}
inline void NestedTestAllTypes::clear_repeated_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_child_.Clear();
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::mutable_repeated_child(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.NestedTestAllTypes.repeated_child)
  return _internal_mutable_repeated_child()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::NestedTestAllTypes>* NestedTestAllTypes::mutable_repeated_child()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.NestedTestAllTypes.repeated_child)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_child();
}
inline const ::edition_unittest::NestedTestAllTypes& NestedTestAllTypes::repeated_child(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.NestedTestAllTypes.repeated_child)
  return _internal_repeated_child().Get(index);
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::add_repeated_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::NestedTestAllTypes* _add = _internal_mutable_repeated_child()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.NestedTestAllTypes.repeated_child)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::NestedTestAllTypes>& NestedTestAllTypes::repeated_child() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.NestedTestAllTypes.repeated_child)
  return _internal_repeated_child();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::NestedTestAllTypes>&
NestedTestAllTypes::_internal_repeated_child() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_child_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::NestedTestAllTypes>*
NestedTestAllTypes::_internal_mutable_repeated_child() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_child_;
}

// .edition_unittest.NestedTestAllTypes lazy_child = 4 [lazy = true];
inline bool NestedTestAllTypes::has_lazy_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lazy_child_ != nullptr);
  return value;
}
inline void NestedTestAllTypes::clear_lazy_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lazy_child_ != nullptr) _impl_.lazy_child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::NestedTestAllTypes& NestedTestAllTypes::_internal_lazy_child() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::NestedTestAllTypes* p = _impl_.lazy_child_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::NestedTestAllTypes&>(::edition_unittest::_NestedTestAllTypes_default_instance_);
}
inline const ::edition_unittest::NestedTestAllTypes& NestedTestAllTypes::lazy_child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.NestedTestAllTypes.lazy_child)
  return _internal_lazy_child();
}
inline void NestedTestAllTypes::unsafe_arena_set_allocated_lazy_child(::edition_unittest::NestedTestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lazy_child_);
  }
  _impl_.lazy_child_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.NestedTestAllTypes.lazy_child)
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::release_lazy_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::NestedTestAllTypes* released = _impl_.lazy_child_;
  _impl_.lazy_child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::unsafe_arena_release_lazy_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.NestedTestAllTypes.lazy_child)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::NestedTestAllTypes* temp = _impl_.lazy_child_;
  _impl_.lazy_child_ = nullptr;
  return temp;
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::_internal_mutable_lazy_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lazy_child_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::NestedTestAllTypes>(GetArena());
    _impl_.lazy_child_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(p);
  }
  return _impl_.lazy_child_;
}
inline ::edition_unittest::NestedTestAllTypes* NestedTestAllTypes::mutable_lazy_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::NestedTestAllTypes* _msg = _internal_mutable_lazy_child();
  // @@protoc_insertion_point(field_mutable:edition_unittest.NestedTestAllTypes.lazy_child)
  return _msg;
}
inline void NestedTestAllTypes::set_allocated_lazy_child(::edition_unittest::NestedTestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lazy_child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.lazy_child_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.NestedTestAllTypes.lazy_child)
}

// .edition_unittest.TestAllTypes eager_child = 5 [lazy = false];
inline bool NestedTestAllTypes::has_eager_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eager_child_ != nullptr);
  return value;
}
inline void NestedTestAllTypes::clear_eager_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eager_child_ != nullptr) _impl_.eager_child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::edition_unittest::TestAllTypes& NestedTestAllTypes::_internal_eager_child() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.eager_child_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& NestedTestAllTypes::eager_child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.NestedTestAllTypes.eager_child)
  return _internal_eager_child();
}
inline void NestedTestAllTypes::unsafe_arena_set_allocated_eager_child(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eager_child_);
  }
  _impl_.eager_child_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.NestedTestAllTypes.eager_child)
}
inline ::edition_unittest::TestAllTypes* NestedTestAllTypes::release_eager_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::TestAllTypes* released = _impl_.eager_child_;
  _impl_.eager_child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* NestedTestAllTypes::unsafe_arena_release_eager_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.NestedTestAllTypes.eager_child)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::TestAllTypes* temp = _impl_.eager_child_;
  _impl_.eager_child_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* NestedTestAllTypes::_internal_mutable_eager_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eager_child_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.eager_child_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.eager_child_;
}
inline ::edition_unittest::TestAllTypes* NestedTestAllTypes::mutable_eager_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_eager_child();
  // @@protoc_insertion_point(field_mutable:edition_unittest.NestedTestAllTypes.eager_child)
  return _msg;
}
inline void NestedTestAllTypes::set_allocated_eager_child(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.eager_child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.eager_child_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.NestedTestAllTypes.eager_child)
}

// -------------------------------------------------------------------

// TestDeprecatedFields

// int32 deprecated_int32 = 1 [deprecated = true];
inline bool TestDeprecatedFields::has_deprecated_int32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestDeprecatedFields::clear_deprecated_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deprecated_int32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestDeprecatedFields::deprecated_int32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDeprecatedFields.deprecated_int32)
  return _internal_deprecated_int32();
}
inline void TestDeprecatedFields::set_deprecated_int32(::int32_t value) {
  _internal_set_deprecated_int32(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDeprecatedFields.deprecated_int32)
}
inline ::int32_t TestDeprecatedFields::_internal_deprecated_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deprecated_int32_;
}
inline void TestDeprecatedFields::_internal_set_deprecated_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deprecated_int32_ = value;
}

// repeated string deprecated_repeated_string = 4 [deprecated = true];
inline int TestDeprecatedFields::_internal_deprecated_repeated_string_size() const {
  return _internal_deprecated_repeated_string().size();
}
inline int TestDeprecatedFields::deprecated_repeated_string_size() const {
  return _internal_deprecated_repeated_string_size();
}
inline void TestDeprecatedFields::clear_deprecated_repeated_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deprecated_repeated_string_.Clear();
}
inline absl::string_view TestDeprecatedFields::deprecated_repeated_string(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
  return _internal_deprecated_repeated_string().Get(index);
}
inline void TestDeprecatedFields::set_deprecated_repeated_string(int index, const std::string& value) {
  _internal_mutable_deprecated_repeated_string()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
}
inline void TestDeprecatedFields::set_deprecated_repeated_string(int index, std::string&& value) {
  _internal_mutable_deprecated_repeated_string()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
}
inline void TestDeprecatedFields::set_deprecated_repeated_string(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_deprecated_repeated_string()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
}
inline void TestDeprecatedFields::set_deprecated_repeated_string(int index, absl::string_view value) {
  _internal_mutable_deprecated_repeated_string()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
}
inline void TestDeprecatedFields::add_deprecated_repeated_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deprecated_repeated_string()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
}
inline void TestDeprecatedFields::add_deprecated_repeated_string(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deprecated_repeated_string()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
}
inline void TestDeprecatedFields::add_deprecated_repeated_string(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deprecated_repeated_string()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
}
inline void TestDeprecatedFields::add_deprecated_repeated_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deprecated_repeated_string()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestDeprecatedFields::deprecated_repeated_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
  return _internal_deprecated_repeated_string();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestDeprecatedFields::mutable_deprecated_repeated_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestDeprecatedFields.deprecated_repeated_string)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_deprecated_repeated_string();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestDeprecatedFields::_internal_deprecated_repeated_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deprecated_repeated_string_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestDeprecatedFields::_internal_mutable_deprecated_repeated_string() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.deprecated_repeated_string_;
}

// .edition_unittest.TestAllTypes.NestedMessage deprecated_message = 3 [deprecated = true];
inline bool TestDeprecatedFields::has_deprecated_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deprecated_message_ != nullptr);
  return value;
}
inline void TestDeprecatedFields::clear_deprecated_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deprecated_message_ != nullptr) _impl_.deprecated_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestDeprecatedFields::_internal_deprecated_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes_NestedMessage* p = _impl_.deprecated_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes_NestedMessage&>(::edition_unittest::_TestAllTypes_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestDeprecatedFields::deprecated_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDeprecatedFields.deprecated_message)
  return _internal_deprecated_message();
}
inline void TestDeprecatedFields::unsafe_arena_set_allocated_deprecated_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deprecated_message_);
  }
  _impl_.deprecated_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestDeprecatedFields.deprecated_message)
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestDeprecatedFields::release_deprecated_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes_NestedMessage* released = _impl_.deprecated_message_;
  _impl_.deprecated_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestDeprecatedFields::unsafe_arena_release_deprecated_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestDeprecatedFields.deprecated_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes_NestedMessage* temp = _impl_.deprecated_message_;
  _impl_.deprecated_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestDeprecatedFields::_internal_mutable_deprecated_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deprecated_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes_NestedMessage>(GetArena());
    _impl_.deprecated_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(p);
  }
  return _impl_.deprecated_message_;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestDeprecatedFields::mutable_deprecated_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes_NestedMessage* _msg = _internal_mutable_deprecated_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestDeprecatedFields.deprecated_message)
  return _msg;
}
inline void TestDeprecatedFields::set_allocated_deprecated_message(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.deprecated_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.deprecated_message_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestDeprecatedFields.deprecated_message)
}

// int32 deprecated_int32_in_oneof = 2 [deprecated = true];
inline bool TestDeprecatedFields::has_deprecated_int32_in_oneof() const {
  return oneof_fields_case() == kDeprecatedInt32InOneof;
}
inline void TestDeprecatedFields::set_has_deprecated_int32_in_oneof() {
  _impl_._oneof_case_[0] = kDeprecatedInt32InOneof;
}
inline void TestDeprecatedFields::clear_deprecated_int32_in_oneof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_fields_case() == kDeprecatedInt32InOneof) {
    _impl_.oneof_fields_.deprecated_int32_in_oneof_ = 0;
    clear_has_oneof_fields();
  }
}
inline ::int32_t TestDeprecatedFields::deprecated_int32_in_oneof() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDeprecatedFields.deprecated_int32_in_oneof)
  return _internal_deprecated_int32_in_oneof();
}
inline void TestDeprecatedFields::set_deprecated_int32_in_oneof(::int32_t value) {
  if (oneof_fields_case() != kDeprecatedInt32InOneof) {
    clear_oneof_fields();
    set_has_deprecated_int32_in_oneof();
  }
  _impl_.oneof_fields_.deprecated_int32_in_oneof_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDeprecatedFields.deprecated_int32_in_oneof)
}
inline ::int32_t TestDeprecatedFields::_internal_deprecated_int32_in_oneof() const {
  if (oneof_fields_case() == kDeprecatedInt32InOneof) {
    return _impl_.oneof_fields_.deprecated_int32_in_oneof_;
  }
  return 0;
}

// .edition_unittest.TestDeprecatedFields nested = 5;
inline bool TestDeprecatedFields::has_nested() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nested_ != nullptr);
  return value;
}
inline void TestDeprecatedFields::clear_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nested_ != nullptr) _impl_.nested_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestDeprecatedFields& TestDeprecatedFields::_internal_nested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestDeprecatedFields* p = _impl_.nested_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestDeprecatedFields&>(::edition_unittest::_TestDeprecatedFields_default_instance_);
}
inline const ::edition_unittest::TestDeprecatedFields& TestDeprecatedFields::nested() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDeprecatedFields.nested)
  return _internal_nested();
}
inline void TestDeprecatedFields::unsafe_arena_set_allocated_nested(::edition_unittest::TestDeprecatedFields* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nested_);
  }
  _impl_.nested_ = reinterpret_cast<::edition_unittest::TestDeprecatedFields*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestDeprecatedFields.nested)
}
inline ::edition_unittest::TestDeprecatedFields* TestDeprecatedFields::release_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestDeprecatedFields* released = _impl_.nested_;
  _impl_.nested_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestDeprecatedFields* TestDeprecatedFields::unsafe_arena_release_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestDeprecatedFields.nested)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestDeprecatedFields* temp = _impl_.nested_;
  _impl_.nested_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestDeprecatedFields* TestDeprecatedFields::_internal_mutable_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nested_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestDeprecatedFields>(GetArena());
    _impl_.nested_ = reinterpret_cast<::edition_unittest::TestDeprecatedFields*>(p);
  }
  return _impl_.nested_;
}
inline ::edition_unittest::TestDeprecatedFields* TestDeprecatedFields::mutable_nested() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestDeprecatedFields* _msg = _internal_mutable_nested();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestDeprecatedFields.nested)
  return _msg;
}
inline void TestDeprecatedFields::set_allocated_nested(::edition_unittest::TestDeprecatedFields* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.nested_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.nested_ = reinterpret_cast<::edition_unittest::TestDeprecatedFields*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestDeprecatedFields.nested)
}

inline bool TestDeprecatedFields::has_oneof_fields() const {
  return oneof_fields_case() != ONEOF_FIELDS_NOT_SET;
}
inline void TestDeprecatedFields::clear_has_oneof_fields() {
  _impl_._oneof_case_[0] = ONEOF_FIELDS_NOT_SET;
}
inline TestDeprecatedFields::OneofFieldsCase TestDeprecatedFields::oneof_fields_case() const {
  return TestDeprecatedFields::OneofFieldsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TestDeprecatedMessage

// -------------------------------------------------------------------

// ForeignMessage

// int32 c = 1;
inline bool ForeignMessage::has_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ForeignMessage::clear_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t ForeignMessage::c() const {
  // @@protoc_insertion_point(field_get:edition_unittest.ForeignMessage.c)
  return _internal_c();
}
inline void ForeignMessage::set_c(::int32_t value) {
  _internal_set_c(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.ForeignMessage.c)
}
inline ::int32_t ForeignMessage::_internal_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_;
}
inline void ForeignMessage::_internal_set_c(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = value;
}

// int32 d = 2;
inline bool ForeignMessage::has_d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ForeignMessage::clear_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t ForeignMessage::d() const {
  // @@protoc_insertion_point(field_get:edition_unittest.ForeignMessage.d)
  return _internal_d();
}
inline void ForeignMessage::set_d(::int32_t value) {
  _internal_set_d(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.ForeignMessage.d)
}
inline ::int32_t ForeignMessage::_internal_d() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.d_;
}
inline void ForeignMessage::_internal_set_d(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_ = value;
}

// -------------------------------------------------------------------

// TestReservedFields

// -------------------------------------------------------------------

// TestAllExtensions

// -------------------------------------------------------------------

// OptionalGroup_extension

// int32 a = 17;
inline bool OptionalGroup_extension::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OptionalGroup_extension::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t OptionalGroup_extension::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.OptionalGroup_extension.a)
  return _internal_a();
}
inline void OptionalGroup_extension::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.OptionalGroup_extension.a)
}
inline ::int32_t OptionalGroup_extension::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void OptionalGroup_extension::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// RepeatedGroup_extension

// int32 a = 47;
inline bool RepeatedGroup_extension::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void RepeatedGroup_extension::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t RepeatedGroup_extension::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.RepeatedGroup_extension.a)
  return _internal_a();
}
inline void RepeatedGroup_extension::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.RepeatedGroup_extension.a)
}
inline ::int32_t RepeatedGroup_extension::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void RepeatedGroup_extension::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestMixedFieldsAndExtensions

// int32 a = 1;
inline bool TestMixedFieldsAndExtensions::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestMixedFieldsAndExtensions::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestMixedFieldsAndExtensions::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMixedFieldsAndExtensions.a)
  return _internal_a();
}
inline void TestMixedFieldsAndExtensions::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestMixedFieldsAndExtensions.a)
}
inline ::int32_t TestMixedFieldsAndExtensions::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestMixedFieldsAndExtensions::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// repeated fixed32 b = 3;
inline int TestMixedFieldsAndExtensions::_internal_b_size() const {
  return _internal_b().size();
}
inline int TestMixedFieldsAndExtensions::b_size() const {
  return _internal_b_size();
}
inline void TestMixedFieldsAndExtensions::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_.Clear();
}
inline ::uint32_t TestMixedFieldsAndExtensions::b(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMixedFieldsAndExtensions.b)
  return _internal_b().Get(index);
}
inline void TestMixedFieldsAndExtensions::set_b(int index, ::uint32_t value) {
  _internal_mutable_b()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMixedFieldsAndExtensions.b)
}
inline void TestMixedFieldsAndExtensions::add_b(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_b()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMixedFieldsAndExtensions.b)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestMixedFieldsAndExtensions::b() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMixedFieldsAndExtensions.b)
  return _internal_b();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestMixedFieldsAndExtensions::mutable_b()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMixedFieldsAndExtensions.b)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_b();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestMixedFieldsAndExtensions::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestMixedFieldsAndExtensions::_internal_mutable_b() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.b_;
}

// -------------------------------------------------------------------

// TestGroup_OptionalGroup

// int32 a = 17;
inline bool TestGroup_OptionalGroup::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestGroup_OptionalGroup::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestGroup_OptionalGroup::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestGroup.OptionalGroup.a)
  return _internal_a();
}
inline void TestGroup_OptionalGroup::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestGroup.OptionalGroup.a)
}
inline ::int32_t TestGroup_OptionalGroup::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestGroup_OptionalGroup::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// int32 zz = 89;
inline bool TestGroup_OptionalGroup::has_zz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestGroup_OptionalGroup::clear_zz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zz_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestGroup_OptionalGroup::zz() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestGroup.OptionalGroup.zz)
  return _internal_zz();
}
inline void TestGroup_OptionalGroup::set_zz(::int32_t value) {
  _internal_set_zz(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestGroup.OptionalGroup.zz)
}
inline ::int32_t TestGroup_OptionalGroup::_internal_zz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zz_;
}
inline void TestGroup_OptionalGroup::_internal_set_zz(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zz_ = value;
}

// -------------------------------------------------------------------

// TestGroup

// .edition_unittest.TestGroup.OptionalGroup optionalgroup = 16 [features = {
inline bool TestGroup::has_optionalgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optionalgroup_ != nullptr);
  return value;
}
inline void TestGroup::clear_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optionalgroup_ != nullptr) _impl_.optionalgroup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestGroup_OptionalGroup& TestGroup::_internal_optionalgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestGroup_OptionalGroup* p = _impl_.optionalgroup_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestGroup_OptionalGroup&>(::edition_unittest::_TestGroup_OptionalGroup_default_instance_);
}
inline const ::edition_unittest::TestGroup_OptionalGroup& TestGroup::optionalgroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestGroup.optionalgroup)
  return _internal_optionalgroup();
}
inline void TestGroup::unsafe_arena_set_allocated_optionalgroup(::edition_unittest::TestGroup_OptionalGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optionalgroup_);
  }
  _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestGroup_OptionalGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestGroup.optionalgroup)
}
inline ::edition_unittest::TestGroup_OptionalGroup* TestGroup::release_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestGroup_OptionalGroup* released = _impl_.optionalgroup_;
  _impl_.optionalgroup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestGroup_OptionalGroup* TestGroup::unsafe_arena_release_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestGroup.optionalgroup)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestGroup_OptionalGroup* temp = _impl_.optionalgroup_;
  _impl_.optionalgroup_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestGroup_OptionalGroup* TestGroup::_internal_mutable_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optionalgroup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestGroup_OptionalGroup>(GetArena());
    _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestGroup_OptionalGroup*>(p);
  }
  return _impl_.optionalgroup_;
}
inline ::edition_unittest::TestGroup_OptionalGroup* TestGroup::mutable_optionalgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestGroup_OptionalGroup* _msg = _internal_mutable_optionalgroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestGroup.optionalgroup)
  return _msg;
}
inline void TestGroup::set_allocated_optionalgroup(::edition_unittest::TestGroup_OptionalGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optionalgroup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestGroup_OptionalGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestGroup.optionalgroup)
}

// .edition_unittest.ForeignEnum optional_foreign_enum = 22;
inline bool TestGroup::has_optional_foreign_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestGroup::clear_optional_foreign_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_foreign_enum_ = 4;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::edition_unittest::ForeignEnum TestGroup::optional_foreign_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestGroup.optional_foreign_enum)
  return _internal_optional_foreign_enum();
}
inline void TestGroup::set_optional_foreign_enum(::edition_unittest::ForeignEnum value) {
  _internal_set_optional_foreign_enum(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestGroup.optional_foreign_enum)
}
inline ::edition_unittest::ForeignEnum TestGroup::_internal_optional_foreign_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.optional_foreign_enum_);
}
inline void TestGroup::_internal_set_optional_foreign_enum(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.optional_foreign_enum_ = value;
}

// -------------------------------------------------------------------

// TestGroupExtension

// -------------------------------------------------------------------

// TestNestedExtension_OptionalGroup_extension

// int32 a = 17;
inline bool TestNestedExtension_OptionalGroup_extension::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestNestedExtension_OptionalGroup_extension::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestNestedExtension_OptionalGroup_extension::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedExtension.OptionalGroup_extension.a)
  return _internal_a();
}
inline void TestNestedExtension_OptionalGroup_extension::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedExtension.OptionalGroup_extension.a)
}
inline ::int32_t TestNestedExtension_OptionalGroup_extension::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestNestedExtension_OptionalGroup_extension::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestNestedExtension

// -------------------------------------------------------------------

// TestChildExtension

// string a = 1;
inline bool TestChildExtension::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestChildExtension::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestChildExtension::a() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtension.a)
  return _internal_a();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestChildExtension::set_a(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestChildExtension.a)
}
inline const std::string& TestChildExtension::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_.Get();
}
inline void TestChildExtension::_internal_set_a(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_.Set(value, GetArena());
}

// string b = 2;
inline bool TestChildExtension::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestChildExtension::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view TestChildExtension::b() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtension.b)
  return _internal_b();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestChildExtension::set_b(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.b_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestChildExtension.b)
}
inline const std::string& TestChildExtension::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_.Get();
}
inline void TestChildExtension::_internal_set_b(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.b_.Set(value, GetArena());
}

// .edition_unittest.TestAllExtensions optional_extension = 3;
inline bool TestChildExtension::has_optional_extension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_extension_ != nullptr);
  return value;
}
inline void TestChildExtension::clear_optional_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_extension_ != nullptr) _impl_.optional_extension_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::TestAllExtensions& TestChildExtension::_internal_optional_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllExtensions* p = _impl_.optional_extension_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllExtensions&>(::edition_unittest::_TestAllExtensions_default_instance_);
}
inline const ::edition_unittest::TestAllExtensions& TestChildExtension::optional_extension() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtension.optional_extension)
  return _internal_optional_extension();
}
inline void TestChildExtension::unsafe_arena_set_allocated_optional_extension(::edition_unittest::TestAllExtensions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_extension_);
  }
  _impl_.optional_extension_ = reinterpret_cast<::edition_unittest::TestAllExtensions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestChildExtension.optional_extension)
}
inline ::edition_unittest::TestAllExtensions* TestChildExtension::release_optional_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestAllExtensions* released = _impl_.optional_extension_;
  _impl_.optional_extension_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllExtensions* TestChildExtension::unsafe_arena_release_optional_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestChildExtension.optional_extension)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestAllExtensions* temp = _impl_.optional_extension_;
  _impl_.optional_extension_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllExtensions* TestChildExtension::_internal_mutable_optional_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_extension_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllExtensions>(GetArena());
    _impl_.optional_extension_ = reinterpret_cast<::edition_unittest::TestAllExtensions*>(p);
  }
  return _impl_.optional_extension_;
}
inline ::edition_unittest::TestAllExtensions* TestChildExtension::mutable_optional_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::TestAllExtensions* _msg = _internal_mutable_optional_extension();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestChildExtension.optional_extension)
  return _msg;
}
inline void TestChildExtension::set_allocated_optional_extension(::edition_unittest::TestAllExtensions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_extension_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.optional_extension_ = reinterpret_cast<::edition_unittest::TestAllExtensions*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestChildExtension.optional_extension)
}

// -------------------------------------------------------------------

// TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions

// int32 a = 1;
inline bool TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.a)
  return _internal_a();
}
inline void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.a)
}
inline ::int32_t TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// int32 b = 2;
inline bool TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::b() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.b)
  return _internal_b();
}
inline void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::set_b(::int32_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.b)
}
inline ::int32_t TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_internal_set_b(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// -------------------------------------------------------------------

// TestChildExtensionData_NestedTestAllExtensionsData

// .edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions dynamic = 409707008;
inline bool TestChildExtensionData_NestedTestAllExtensionsData::has_dynamic() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dynamic_ != nullptr);
  return value;
}
inline void TestChildExtensionData_NestedTestAllExtensionsData::clear_dynamic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamic_ != nullptr) _impl_.dynamic_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& TestChildExtensionData_NestedTestAllExtensionsData::_internal_dynamic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* p = _impl_.dynamic_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions&>(::edition_unittest::_TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions_default_instance_);
}
inline const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& TestChildExtensionData_NestedTestAllExtensionsData::dynamic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.dynamic)
  return _internal_dynamic();
}
inline void TestChildExtensionData_NestedTestAllExtensionsData::unsafe_arena_set_allocated_dynamic(::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamic_);
  }
  _impl_.dynamic_ = reinterpret_cast<::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.dynamic)
}
inline ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* TestChildExtensionData_NestedTestAllExtensionsData::release_dynamic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* released = _impl_.dynamic_;
  _impl_.dynamic_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* TestChildExtensionData_NestedTestAllExtensionsData::unsafe_arena_release_dynamic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.dynamic)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* temp = _impl_.dynamic_;
  _impl_.dynamic_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* TestChildExtensionData_NestedTestAllExtensionsData::_internal_mutable_dynamic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamic_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions>(GetArena());
    _impl_.dynamic_ = reinterpret_cast<::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions*>(p);
  }
  return _impl_.dynamic_;
}
inline ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* TestChildExtensionData_NestedTestAllExtensionsData::mutable_dynamic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* _msg = _internal_mutable_dynamic();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.dynamic)
  return _msg;
}
inline void TestChildExtensionData_NestedTestAllExtensionsData::set_allocated_dynamic(::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dynamic_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dynamic_ = reinterpret_cast<::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData.dynamic)
}

// -------------------------------------------------------------------

// TestChildExtensionData

// string a = 1;
inline bool TestChildExtensionData::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestChildExtensionData::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestChildExtensionData::a() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtensionData.a)
  return _internal_a();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestChildExtensionData::set_a(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestChildExtensionData.a)
}
inline const std::string& TestChildExtensionData::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_.Get();
}
inline void TestChildExtensionData::_internal_set_a(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_.Set(value, GetArena());
}

// string b = 2;
inline bool TestChildExtensionData::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestChildExtensionData::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view TestChildExtensionData::b() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtensionData.b)
  return _internal_b();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestChildExtensionData::set_b(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.b_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestChildExtensionData.b)
}
inline const std::string& TestChildExtensionData::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_.Get();
}
inline void TestChildExtensionData::_internal_set_b(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.b_.Set(value, GetArena());
}

// .edition_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
inline bool TestChildExtensionData::has_optional_extension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_extension_ != nullptr);
  return value;
}
inline void TestChildExtensionData::clear_optional_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_extension_ != nullptr) _impl_.optional_extension_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData& TestChildExtensionData::_internal_optional_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* p = _impl_.optional_extension_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData&>(::edition_unittest::_TestChildExtensionData_NestedTestAllExtensionsData_default_instance_);
}
inline const ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData& TestChildExtensionData::optional_extension() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestChildExtensionData.optional_extension)
  return _internal_optional_extension();
}
inline void TestChildExtensionData::unsafe_arena_set_allocated_optional_extension(::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_extension_);
  }
  _impl_.optional_extension_ = reinterpret_cast<::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestChildExtensionData.optional_extension)
}
inline ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* TestChildExtensionData::release_optional_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* released = _impl_.optional_extension_;
  _impl_.optional_extension_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* TestChildExtensionData::unsafe_arena_release_optional_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestChildExtensionData.optional_extension)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* temp = _impl_.optional_extension_;
  _impl_.optional_extension_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* TestChildExtensionData::_internal_mutable_optional_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_extension_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData>(GetArena());
    _impl_.optional_extension_ = reinterpret_cast<::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData*>(p);
  }
  return _impl_.optional_extension_;
}
inline ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* TestChildExtensionData::mutable_optional_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* _msg = _internal_mutable_optional_extension();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestChildExtensionData.optional_extension)
  return _msg;
}
inline void TestChildExtensionData::set_allocated_optional_extension(::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_extension_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.optional_extension_ = reinterpret_cast<::edition_unittest::TestChildExtensionData_NestedTestAllExtensionsData*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestChildExtensionData.optional_extension)
}

// -------------------------------------------------------------------

// TestNestedChildExtension

// int32 a = 1;
inline bool TestNestedChildExtension::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestNestedChildExtension::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestNestedChildExtension::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedChildExtension.a)
  return _internal_a();
}
inline void TestNestedChildExtension::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedChildExtension.a)
}
inline ::int32_t TestNestedChildExtension::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestNestedChildExtension::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// .edition_unittest.TestChildExtension child = 2;
inline bool TestNestedChildExtension::has_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.child_ != nullptr);
  return value;
}
inline void TestNestedChildExtension::clear_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ != nullptr) _impl_.child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestChildExtension& TestNestedChildExtension::_internal_child() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestChildExtension* p = _impl_.child_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestChildExtension&>(::edition_unittest::_TestChildExtension_default_instance_);
}
inline const ::edition_unittest::TestChildExtension& TestNestedChildExtension::child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedChildExtension.child)
  return _internal_child();
}
inline void TestNestedChildExtension::unsafe_arena_set_allocated_child(::edition_unittest::TestChildExtension* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.child_);
  }
  _impl_.child_ = reinterpret_cast<::edition_unittest::TestChildExtension*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedChildExtension.child)
}
inline ::edition_unittest::TestChildExtension* TestNestedChildExtension::release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestChildExtension* released = _impl_.child_;
  _impl_.child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestChildExtension* TestNestedChildExtension::unsafe_arena_release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedChildExtension.child)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestChildExtension* temp = _impl_.child_;
  _impl_.child_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestChildExtension* TestNestedChildExtension::_internal_mutable_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestChildExtension>(GetArena());
    _impl_.child_ = reinterpret_cast<::edition_unittest::TestChildExtension*>(p);
  }
  return _impl_.child_;
}
inline ::edition_unittest::TestChildExtension* TestNestedChildExtension::mutable_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestChildExtension* _msg = _internal_mutable_child();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedChildExtension.child)
  return _msg;
}
inline void TestNestedChildExtension::set_allocated_child(::edition_unittest::TestChildExtension* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.child_ = reinterpret_cast<::edition_unittest::TestChildExtension*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedChildExtension.child)
}

// -------------------------------------------------------------------

// TestNestedChildExtensionData

// int32 a = 1;
inline bool TestNestedChildExtensionData::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestNestedChildExtensionData::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestNestedChildExtensionData::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedChildExtensionData.a)
  return _internal_a();
}
inline void TestNestedChildExtensionData::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedChildExtensionData.a)
}
inline ::int32_t TestNestedChildExtensionData::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestNestedChildExtensionData::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// .edition_unittest.TestChildExtensionData child = 2;
inline bool TestNestedChildExtensionData::has_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.child_ != nullptr);
  return value;
}
inline void TestNestedChildExtensionData::clear_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ != nullptr) _impl_.child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestChildExtensionData& TestNestedChildExtensionData::_internal_child() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestChildExtensionData* p = _impl_.child_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestChildExtensionData&>(::edition_unittest::_TestChildExtensionData_default_instance_);
}
inline const ::edition_unittest::TestChildExtensionData& TestNestedChildExtensionData::child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedChildExtensionData.child)
  return _internal_child();
}
inline void TestNestedChildExtensionData::unsafe_arena_set_allocated_child(::edition_unittest::TestChildExtensionData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.child_);
  }
  _impl_.child_ = reinterpret_cast<::edition_unittest::TestChildExtensionData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedChildExtensionData.child)
}
inline ::edition_unittest::TestChildExtensionData* TestNestedChildExtensionData::release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestChildExtensionData* released = _impl_.child_;
  _impl_.child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestChildExtensionData* TestNestedChildExtensionData::unsafe_arena_release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedChildExtensionData.child)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestChildExtensionData* temp = _impl_.child_;
  _impl_.child_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestChildExtensionData* TestNestedChildExtensionData::_internal_mutable_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestChildExtensionData>(GetArena());
    _impl_.child_ = reinterpret_cast<::edition_unittest::TestChildExtensionData*>(p);
  }
  return _impl_.child_;
}
inline ::edition_unittest::TestChildExtensionData* TestNestedChildExtensionData::mutable_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestChildExtensionData* _msg = _internal_mutable_child();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedChildExtensionData.child)
  return _msg;
}
inline void TestNestedChildExtensionData::set_allocated_child(::edition_unittest::TestChildExtensionData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.child_ = reinterpret_cast<::edition_unittest::TestChildExtensionData*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedChildExtensionData.child)
}

// -------------------------------------------------------------------

// TestRequiredEnum

// .edition_unittest.ForeignEnum required_enum = 1 [features = {
inline bool TestRequiredEnum::has_required_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestRequiredEnum::clear_required_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_ = 4;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::edition_unittest::ForeignEnum TestRequiredEnum::required_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredEnum.required_enum)
  return _internal_required_enum();
}
inline void TestRequiredEnum::set_required_enum(::edition_unittest::ForeignEnum value) {
  _internal_set_required_enum(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredEnum.required_enum)
}
inline ::edition_unittest::ForeignEnum TestRequiredEnum::_internal_required_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.required_enum_);
}
inline void TestRequiredEnum::_internal_set_required_enum(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.required_enum_ = value;
}

// int32 a = 2;
inline bool TestRequiredEnum::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestRequiredEnum::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestRequiredEnum::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredEnum.a)
  return _internal_a();
}
inline void TestRequiredEnum::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredEnum.a)
}
inline ::int32_t TestRequiredEnum::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestRequiredEnum::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestRequiredEnumNoMask

// .edition_unittest.TestRequiredEnumNoMask.NestedEnum required_enum = 1 [features = {
inline bool TestRequiredEnumNoMask::has_required_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestRequiredEnumNoMask::clear_required_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::edition_unittest::TestRequiredEnumNoMask_NestedEnum TestRequiredEnumNoMask::required_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredEnumNoMask.required_enum)
  return _internal_required_enum();
}
inline void TestRequiredEnumNoMask::set_required_enum(::edition_unittest::TestRequiredEnumNoMask_NestedEnum value) {
  _internal_set_required_enum(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredEnumNoMask.required_enum)
}
inline ::edition_unittest::TestRequiredEnumNoMask_NestedEnum TestRequiredEnumNoMask::_internal_required_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestRequiredEnumNoMask_NestedEnum>(_impl_.required_enum_);
}
inline void TestRequiredEnumNoMask::_internal_set_required_enum(::edition_unittest::TestRequiredEnumNoMask_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestRequiredEnumNoMask_NestedEnum_IsValid(value));
  _impl_.required_enum_ = value;
}

// int32 a = 2;
inline bool TestRequiredEnumNoMask::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestRequiredEnumNoMask::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestRequiredEnumNoMask::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredEnumNoMask.a)
  return _internal_a();
}
inline void TestRequiredEnumNoMask::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredEnumNoMask.a)
}
inline ::int32_t TestRequiredEnumNoMask::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestRequiredEnumNoMask::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestRequiredEnumMulti

// .edition_unittest.TestRequiredEnumMulti.NestedEnum required_enum_4 = 4 [features = {
inline bool TestRequiredEnumMulti::has_required_enum_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestRequiredEnumMulti::clear_required_enum_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::edition_unittest::TestRequiredEnumMulti_NestedEnum TestRequiredEnumMulti::required_enum_4() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredEnumMulti.required_enum_4)
  return _internal_required_enum_4();
}
inline void TestRequiredEnumMulti::set_required_enum_4(::edition_unittest::TestRequiredEnumMulti_NestedEnum value) {
  _internal_set_required_enum_4(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredEnumMulti.required_enum_4)
}
inline ::edition_unittest::TestRequiredEnumMulti_NestedEnum TestRequiredEnumMulti::_internal_required_enum_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestRequiredEnumMulti_NestedEnum>(_impl_.required_enum_4_);
}
inline void TestRequiredEnumMulti::_internal_set_required_enum_4(::edition_unittest::TestRequiredEnumMulti_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestRequiredEnumMulti_NestedEnum_IsValid(value));
  _impl_.required_enum_4_ = value;
}

// int32 a_3 = 3;
inline bool TestRequiredEnumMulti::has_a_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestRequiredEnumMulti::clear_a_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestRequiredEnumMulti::a_3() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredEnumMulti.a_3)
  return _internal_a_3();
}
inline void TestRequiredEnumMulti::set_a_3(::int32_t value) {
  _internal_set_a_3(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredEnumMulti.a_3)
}
inline ::int32_t TestRequiredEnumMulti::_internal_a_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_3_;
}
inline void TestRequiredEnumMulti::_internal_set_a_3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_3_ = value;
}

// .edition_unittest.TestRequiredEnumMulti.NestedEnum required_enum_2 = 2 [features = {
inline bool TestRequiredEnumMulti::has_required_enum_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestRequiredEnumMulti::clear_required_enum_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::edition_unittest::TestRequiredEnumMulti_NestedEnum TestRequiredEnumMulti::required_enum_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredEnumMulti.required_enum_2)
  return _internal_required_enum_2();
}
inline void TestRequiredEnumMulti::set_required_enum_2(::edition_unittest::TestRequiredEnumMulti_NestedEnum value) {
  _internal_set_required_enum_2(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredEnumMulti.required_enum_2)
}
inline ::edition_unittest::TestRequiredEnumMulti_NestedEnum TestRequiredEnumMulti::_internal_required_enum_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestRequiredEnumMulti_NestedEnum>(_impl_.required_enum_2_);
}
inline void TestRequiredEnumMulti::_internal_set_required_enum_2(::edition_unittest::TestRequiredEnumMulti_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestRequiredEnumMulti_NestedEnum_IsValid(value));
  _impl_.required_enum_2_ = value;
}

// .edition_unittest.ForeignEnum required_enum_1 = 1 [features = {
inline bool TestRequiredEnumMulti::has_required_enum_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestRequiredEnumMulti::clear_required_enum_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_1_ = 4;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::edition_unittest::ForeignEnum TestRequiredEnumMulti::required_enum_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredEnumMulti.required_enum_1)
  return _internal_required_enum_1();
}
inline void TestRequiredEnumMulti::set_required_enum_1(::edition_unittest::ForeignEnum value) {
  _internal_set_required_enum_1(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredEnumMulti.required_enum_1)
}
inline ::edition_unittest::ForeignEnum TestRequiredEnumMulti::_internal_required_enum_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.required_enum_1_);
}
inline void TestRequiredEnumMulti::_internal_set_required_enum_1(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.required_enum_1_ = value;
}

// -------------------------------------------------------------------

// TestRequiredNoMaskMulti

// fixed32 required_fixed32_80 = 80 [features = {
inline bool TestRequiredNoMaskMulti::has_required_fixed32_80() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestRequiredNoMaskMulti::clear_required_fixed32_80() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_fixed32_80_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t TestRequiredNoMaskMulti::required_fixed32_80() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredNoMaskMulti.required_fixed32_80)
  return _internal_required_fixed32_80();
}
inline void TestRequiredNoMaskMulti::set_required_fixed32_80(::uint32_t value) {
  _internal_set_required_fixed32_80(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredNoMaskMulti.required_fixed32_80)
}
inline ::uint32_t TestRequiredNoMaskMulti::_internal_required_fixed32_80() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_fixed32_80_;
}
inline void TestRequiredNoMaskMulti::_internal_set_required_fixed32_80(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_fixed32_80_ = value;
}

// fixed32 required_fixed32_70 = 70 [features = {
inline bool TestRequiredNoMaskMulti::has_required_fixed32_70() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestRequiredNoMaskMulti::clear_required_fixed32_70() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_fixed32_70_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t TestRequiredNoMaskMulti::required_fixed32_70() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredNoMaskMulti.required_fixed32_70)
  return _internal_required_fixed32_70();
}
inline void TestRequiredNoMaskMulti::set_required_fixed32_70(::uint32_t value) {
  _internal_set_required_fixed32_70(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredNoMaskMulti.required_fixed32_70)
}
inline ::uint32_t TestRequiredNoMaskMulti::_internal_required_fixed32_70() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_fixed32_70_;
}
inline void TestRequiredNoMaskMulti::_internal_set_required_fixed32_70(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_fixed32_70_ = value;
}

// .edition_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_64 = 64 [features = {
inline bool TestRequiredNoMaskMulti::has_required_enum_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestRequiredNoMaskMulti::clear_required_enum_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_64_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum TestRequiredNoMaskMulti::required_enum_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredNoMaskMulti.required_enum_64)
  return _internal_required_enum_64();
}
inline void TestRequiredNoMaskMulti::set_required_enum_64(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value) {
  _internal_set_required_enum_64(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredNoMaskMulti.required_enum_64)
}
inline ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum TestRequiredNoMaskMulti::_internal_required_enum_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestRequiredNoMaskMulti_NestedEnum>(_impl_.required_enum_64_);
}
inline void TestRequiredNoMaskMulti::_internal_set_required_enum_64(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum_IsValid(value));
  _impl_.required_enum_64_ = value;
}

// .edition_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_4 = 4 [features = {
inline bool TestRequiredNoMaskMulti::has_required_enum_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestRequiredNoMaskMulti::clear_required_enum_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum TestRequiredNoMaskMulti::required_enum_4() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredNoMaskMulti.required_enum_4)
  return _internal_required_enum_4();
}
inline void TestRequiredNoMaskMulti::set_required_enum_4(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value) {
  _internal_set_required_enum_4(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredNoMaskMulti.required_enum_4)
}
inline ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum TestRequiredNoMaskMulti::_internal_required_enum_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestRequiredNoMaskMulti_NestedEnum>(_impl_.required_enum_4_);
}
inline void TestRequiredNoMaskMulti::_internal_set_required_enum_4(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum_IsValid(value));
  _impl_.required_enum_4_ = value;
}

// int32 a_3 = 3;
inline bool TestRequiredNoMaskMulti::has_a_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestRequiredNoMaskMulti::clear_a_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestRequiredNoMaskMulti::a_3() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredNoMaskMulti.a_3)
  return _internal_a_3();
}
inline void TestRequiredNoMaskMulti::set_a_3(::int32_t value) {
  _internal_set_a_3(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredNoMaskMulti.a_3)
}
inline ::int32_t TestRequiredNoMaskMulti::_internal_a_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_3_;
}
inline void TestRequiredNoMaskMulti::_internal_set_a_3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_3_ = value;
}

// .edition_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_2 = 2 [features = {
inline bool TestRequiredNoMaskMulti::has_required_enum_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestRequiredNoMaskMulti::clear_required_enum_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum TestRequiredNoMaskMulti::required_enum_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredNoMaskMulti.required_enum_2)
  return _internal_required_enum_2();
}
inline void TestRequiredNoMaskMulti::set_required_enum_2(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value) {
  _internal_set_required_enum_2(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredNoMaskMulti.required_enum_2)
}
inline ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum TestRequiredNoMaskMulti::_internal_required_enum_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestRequiredNoMaskMulti_NestedEnum>(_impl_.required_enum_2_);
}
inline void TestRequiredNoMaskMulti::_internal_set_required_enum_2(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestRequiredNoMaskMulti_NestedEnum_IsValid(value));
  _impl_.required_enum_2_ = value;
}

// .edition_unittest.ForeignEnum required_enum_1 = 1 [features = {
inline bool TestRequiredNoMaskMulti::has_required_enum_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestRequiredNoMaskMulti::clear_required_enum_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_enum_1_ = 4;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::edition_unittest::ForeignEnum TestRequiredNoMaskMulti::required_enum_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredNoMaskMulti.required_enum_1)
  return _internal_required_enum_1();
}
inline void TestRequiredNoMaskMulti::set_required_enum_1(::edition_unittest::ForeignEnum value) {
  _internal_set_required_enum_1(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredNoMaskMulti.required_enum_1)
}
inline ::edition_unittest::ForeignEnum TestRequiredNoMaskMulti::_internal_required_enum_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.required_enum_1_);
}
inline void TestRequiredNoMaskMulti::_internal_set_required_enum_1(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.required_enum_1_ = value;
}

// -------------------------------------------------------------------

// TestRequired

// int32 a = 1 [features = {
inline bool TestRequired::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestRequired::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestRequired::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.a)
  return _internal_a();
}
inline void TestRequired::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.a)
}
inline ::int32_t TestRequired::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestRequired::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// int32 dummy2 = 2;
inline bool TestRequired::has_dummy2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestRequired::clear_dummy2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestRequired::dummy2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy2)
  return _internal_dummy2();
}
inline void TestRequired::set_dummy2(::int32_t value) {
  _internal_set_dummy2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy2)
}
inline ::int32_t TestRequired::_internal_dummy2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy2_;
}
inline void TestRequired::_internal_set_dummy2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy2_ = value;
}

// int32 b = 3 [features = {
inline bool TestRequired::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestRequired::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestRequired::b() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.b)
  return _internal_b();
}
inline void TestRequired::set_b(::int32_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.b)
}
inline ::int32_t TestRequired::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void TestRequired::_internal_set_b(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// int32 dummy4 = 4;
inline bool TestRequired::has_dummy4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestRequired::clear_dummy4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestRequired::dummy4() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy4)
  return _internal_dummy4();
}
inline void TestRequired::set_dummy4(::int32_t value) {
  _internal_set_dummy4(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy4)
}
inline ::int32_t TestRequired::_internal_dummy4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy4_;
}
inline void TestRequired::_internal_set_dummy4(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy4_ = value;
}

// int32 dummy5 = 5;
inline bool TestRequired::has_dummy5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestRequired::clear_dummy5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy5_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t TestRequired::dummy5() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy5)
  return _internal_dummy5();
}
inline void TestRequired::set_dummy5(::int32_t value) {
  _internal_set_dummy5(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy5)
}
inline ::int32_t TestRequired::_internal_dummy5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy5_;
}
inline void TestRequired::_internal_set_dummy5(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy5_ = value;
}

// int32 dummy6 = 6;
inline bool TestRequired::has_dummy6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestRequired::clear_dummy6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy6_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t TestRequired::dummy6() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy6)
  return _internal_dummy6();
}
inline void TestRequired::set_dummy6(::int32_t value) {
  _internal_set_dummy6(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy6)
}
inline ::int32_t TestRequired::_internal_dummy6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy6_;
}
inline void TestRequired::_internal_set_dummy6(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy6_ = value;
}

// int32 dummy7 = 7;
inline bool TestRequired::has_dummy7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TestRequired::clear_dummy7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy7_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t TestRequired::dummy7() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy7)
  return _internal_dummy7();
}
inline void TestRequired::set_dummy7(::int32_t value) {
  _internal_set_dummy7(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy7)
}
inline ::int32_t TestRequired::_internal_dummy7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy7_;
}
inline void TestRequired::_internal_set_dummy7(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy7_ = value;
}

// int32 dummy8 = 8;
inline bool TestRequired::has_dummy8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void TestRequired::clear_dummy8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy8_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t TestRequired::dummy8() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy8)
  return _internal_dummy8();
}
inline void TestRequired::set_dummy8(::int32_t value) {
  _internal_set_dummy8(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy8)
}
inline ::int32_t TestRequired::_internal_dummy8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy8_;
}
inline void TestRequired::_internal_set_dummy8(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy8_ = value;
}

// int32 dummy9 = 9;
inline bool TestRequired::has_dummy9() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void TestRequired::clear_dummy9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy9_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t TestRequired::dummy9() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy9)
  return _internal_dummy9();
}
inline void TestRequired::set_dummy9(::int32_t value) {
  _internal_set_dummy9(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy9)
}
inline ::int32_t TestRequired::_internal_dummy9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy9_;
}
inline void TestRequired::_internal_set_dummy9(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy9_ = value;
}

// int32 dummy10 = 10;
inline bool TestRequired::has_dummy10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void TestRequired::clear_dummy10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy10_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t TestRequired::dummy10() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy10)
  return _internal_dummy10();
}
inline void TestRequired::set_dummy10(::int32_t value) {
  _internal_set_dummy10(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy10)
}
inline ::int32_t TestRequired::_internal_dummy10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy10_;
}
inline void TestRequired::_internal_set_dummy10(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy10_ = value;
}

// int32 dummy11 = 11;
inline bool TestRequired::has_dummy11() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void TestRequired::clear_dummy11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy11_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int32_t TestRequired::dummy11() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy11)
  return _internal_dummy11();
}
inline void TestRequired::set_dummy11(::int32_t value) {
  _internal_set_dummy11(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy11)
}
inline ::int32_t TestRequired::_internal_dummy11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy11_;
}
inline void TestRequired::_internal_set_dummy11(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy11_ = value;
}

// int32 dummy12 = 12;
inline bool TestRequired::has_dummy12() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy12_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int32_t TestRequired::dummy12() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy12)
  return _internal_dummy12();
}
inline void TestRequired::set_dummy12(::int32_t value) {
  _internal_set_dummy12(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy12)
}
inline ::int32_t TestRequired::_internal_dummy12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy12_;
}
inline void TestRequired::_internal_set_dummy12(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy12_ = value;
}

// int32 dummy13 = 13;
inline bool TestRequired::has_dummy13() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy13_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int32_t TestRequired::dummy13() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy13)
  return _internal_dummy13();
}
inline void TestRequired::set_dummy13(::int32_t value) {
  _internal_set_dummy13(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy13)
}
inline ::int32_t TestRequired::_internal_dummy13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy13_;
}
inline void TestRequired::_internal_set_dummy13(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy13_ = value;
}

// int32 dummy14 = 14;
inline bool TestRequired::has_dummy14() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy14_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t TestRequired::dummy14() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy14)
  return _internal_dummy14();
}
inline void TestRequired::set_dummy14(::int32_t value) {
  _internal_set_dummy14(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy14)
}
inline ::int32_t TestRequired::_internal_dummy14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy14_;
}
inline void TestRequired::_internal_set_dummy14(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy14_ = value;
}

// int32 dummy15 = 15;
inline bool TestRequired::has_dummy15() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy15_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::int32_t TestRequired::dummy15() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy15)
  return _internal_dummy15();
}
inline void TestRequired::set_dummy15(::int32_t value) {
  _internal_set_dummy15(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy15)
}
inline ::int32_t TestRequired::_internal_dummy15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy15_;
}
inline void TestRequired::_internal_set_dummy15(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy15_ = value;
}

// int32 dummy16 = 16;
inline bool TestRequired::has_dummy16() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy16_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int32_t TestRequired::dummy16() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy16)
  return _internal_dummy16();
}
inline void TestRequired::set_dummy16(::int32_t value) {
  _internal_set_dummy16(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy16)
}
inline ::int32_t TestRequired::_internal_dummy16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy16_;
}
inline void TestRequired::_internal_set_dummy16(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy16_ = value;
}

// int32 dummy17 = 17;
inline bool TestRequired::has_dummy17() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy17_ = 0;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::int32_t TestRequired::dummy17() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy17)
  return _internal_dummy17();
}
inline void TestRequired::set_dummy17(::int32_t value) {
  _internal_set_dummy17(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy17)
}
inline ::int32_t TestRequired::_internal_dummy17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy17_;
}
inline void TestRequired::_internal_set_dummy17(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy17_ = value;
}

// int32 dummy18 = 18;
inline bool TestRequired::has_dummy18() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy18_ = 0;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::int32_t TestRequired::dummy18() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy18)
  return _internal_dummy18();
}
inline void TestRequired::set_dummy18(::int32_t value) {
  _internal_set_dummy18(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy18)
}
inline ::int32_t TestRequired::_internal_dummy18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy18_;
}
inline void TestRequired::_internal_set_dummy18(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy18_ = value;
}

// int32 dummy19 = 19;
inline bool TestRequired::has_dummy19() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy19_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int32_t TestRequired::dummy19() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy19)
  return _internal_dummy19();
}
inline void TestRequired::set_dummy19(::int32_t value) {
  _internal_set_dummy19(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy19)
}
inline ::int32_t TestRequired::_internal_dummy19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy19_;
}
inline void TestRequired::_internal_set_dummy19(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy19_ = value;
}

// int32 dummy20 = 20;
inline bool TestRequired::has_dummy20() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy20_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int32_t TestRequired::dummy20() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy20)
  return _internal_dummy20();
}
inline void TestRequired::set_dummy20(::int32_t value) {
  _internal_set_dummy20(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy20)
}
inline ::int32_t TestRequired::_internal_dummy20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy20_;
}
inline void TestRequired::_internal_set_dummy20(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy20_ = value;
}

// int32 dummy21 = 21;
inline bool TestRequired::has_dummy21() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy21_ = 0;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::int32_t TestRequired::dummy21() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy21)
  return _internal_dummy21();
}
inline void TestRequired::set_dummy21(::int32_t value) {
  _internal_set_dummy21(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy21)
}
inline ::int32_t TestRequired::_internal_dummy21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy21_;
}
inline void TestRequired::_internal_set_dummy21(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy21_ = value;
}

// int32 dummy22 = 22;
inline bool TestRequired::has_dummy22() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy22_ = 0;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::int32_t TestRequired::dummy22() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy22)
  return _internal_dummy22();
}
inline void TestRequired::set_dummy22(::int32_t value) {
  _internal_set_dummy22(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy22)
}
inline ::int32_t TestRequired::_internal_dummy22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy22_;
}
inline void TestRequired::_internal_set_dummy22(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy22_ = value;
}

// int32 dummy23 = 23;
inline bool TestRequired::has_dummy23() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy23_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline ::int32_t TestRequired::dummy23() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy23)
  return _internal_dummy23();
}
inline void TestRequired::set_dummy23(::int32_t value) {
  _internal_set_dummy23(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy23)
}
inline ::int32_t TestRequired::_internal_dummy23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy23_;
}
inline void TestRequired::_internal_set_dummy23(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy23_ = value;
}

// int32 dummy24 = 24;
inline bool TestRequired::has_dummy24() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy24_ = 0;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline ::int32_t TestRequired::dummy24() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy24)
  return _internal_dummy24();
}
inline void TestRequired::set_dummy24(::int32_t value) {
  _internal_set_dummy24(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy24)
}
inline ::int32_t TestRequired::_internal_dummy24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy24_;
}
inline void TestRequired::_internal_set_dummy24(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy24_ = value;
}

// int32 dummy25 = 25;
inline bool TestRequired::has_dummy25() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy25_ = 0;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::int32_t TestRequired::dummy25() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy25)
  return _internal_dummy25();
}
inline void TestRequired::set_dummy25(::int32_t value) {
  _internal_set_dummy25(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy25)
}
inline ::int32_t TestRequired::_internal_dummy25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy25_;
}
inline void TestRequired::_internal_set_dummy25(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy25_ = value;
}

// int32 dummy26 = 26;
inline bool TestRequired::has_dummy26() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy26_ = 0;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline ::int32_t TestRequired::dummy26() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy26)
  return _internal_dummy26();
}
inline void TestRequired::set_dummy26(::int32_t value) {
  _internal_set_dummy26(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy26)
}
inline ::int32_t TestRequired::_internal_dummy26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy26_;
}
inline void TestRequired::_internal_set_dummy26(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy26_ = value;
}

// int32 dummy27 = 27;
inline bool TestRequired::has_dummy27() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy27_ = 0;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline ::int32_t TestRequired::dummy27() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy27)
  return _internal_dummy27();
}
inline void TestRequired::set_dummy27(::int32_t value) {
  _internal_set_dummy27(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy27)
}
inline ::int32_t TestRequired::_internal_dummy27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy27_;
}
inline void TestRequired::_internal_set_dummy27(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy27_ = value;
}

// int32 dummy28 = 28;
inline bool TestRequired::has_dummy28() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy28_ = 0;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::int32_t TestRequired::dummy28() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy28)
  return _internal_dummy28();
}
inline void TestRequired::set_dummy28(::int32_t value) {
  _internal_set_dummy28(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy28)
}
inline ::int32_t TestRequired::_internal_dummy28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy28_;
}
inline void TestRequired::_internal_set_dummy28(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy28_ = value;
}

// int32 dummy29 = 29;
inline bool TestRequired::has_dummy29() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy29_ = 0;
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline ::int32_t TestRequired::dummy29() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy29)
  return _internal_dummy29();
}
inline void TestRequired::set_dummy29(::int32_t value) {
  _internal_set_dummy29(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy29)
}
inline ::int32_t TestRequired::_internal_dummy29() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy29_;
}
inline void TestRequired::_internal_set_dummy29(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy29_ = value;
}

// int32 dummy30 = 30;
inline bool TestRequired::has_dummy30() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy30_ = 0;
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline ::int32_t TestRequired::dummy30() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy30)
  return _internal_dummy30();
}
inline void TestRequired::set_dummy30(::int32_t value) {
  _internal_set_dummy30(value);
  _impl_._has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy30)
}
inline ::int32_t TestRequired::_internal_dummy30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy30_;
}
inline void TestRequired::_internal_set_dummy30(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy30_ = value;
}

// int32 dummy31 = 31;
inline bool TestRequired::has_dummy31() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void TestRequired::clear_dummy31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy31_ = 0;
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline ::int32_t TestRequired::dummy31() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy31)
  return _internal_dummy31();
}
inline void TestRequired::set_dummy31(::int32_t value) {
  _internal_set_dummy31(value);
  _impl_._has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy31)
}
inline ::int32_t TestRequired::_internal_dummy31() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy31_;
}
inline void TestRequired::_internal_set_dummy31(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy31_ = value;
}

// int32 dummy32 = 32;
inline bool TestRequired::has_dummy32() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline void TestRequired::clear_dummy32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy32_ = 0;
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline ::int32_t TestRequired::dummy32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.dummy32)
  return _internal_dummy32();
}
inline void TestRequired::set_dummy32(::int32_t value) {
  _internal_set_dummy32(value);
  _impl_._has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.dummy32)
}
inline ::int32_t TestRequired::_internal_dummy32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy32_;
}
inline void TestRequired::_internal_set_dummy32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy32_ = value;
}

// int32 c = 33 [features = {
inline bool TestRequired::has_c() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline void TestRequired::clear_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = 0;
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline ::int32_t TestRequired::c() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.c)
  return _internal_c();
}
inline void TestRequired::set_c(::int32_t value) {
  _internal_set_c(value);
  _impl_._has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequired.c)
}
inline ::int32_t TestRequired::_internal_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_;
}
inline void TestRequired::_internal_set_c(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_ = value;
}

// .edition_unittest.ForeignMessage optional_foreign = 34;
inline bool TestRequired::has_optional_foreign() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_foreign_ != nullptr);
  return value;
}
inline void TestRequired::clear_optional_foreign() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_foreign_ != nullptr) _impl_.optional_foreign_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::ForeignMessage& TestRequired::_internal_optional_foreign() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::ForeignMessage* p = _impl_.optional_foreign_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::ForeignMessage&>(::edition_unittest::_ForeignMessage_default_instance_);
}
inline const ::edition_unittest::ForeignMessage& TestRequired::optional_foreign() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequired.optional_foreign)
  return _internal_optional_foreign();
}
inline void TestRequired::unsafe_arena_set_allocated_optional_foreign(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_foreign_);
  }
  _impl_.optional_foreign_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestRequired.optional_foreign)
}
inline ::edition_unittest::ForeignMessage* TestRequired::release_optional_foreign() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::ForeignMessage* released = _impl_.optional_foreign_;
  _impl_.optional_foreign_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::ForeignMessage* TestRequired::unsafe_arena_release_optional_foreign() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestRequired.optional_foreign)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::ForeignMessage* temp = _impl_.optional_foreign_;
  _impl_.optional_foreign_ = nullptr;
  return temp;
}
inline ::edition_unittest::ForeignMessage* TestRequired::_internal_mutable_optional_foreign() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_foreign_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::ForeignMessage>(GetArena());
    _impl_.optional_foreign_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(p);
  }
  return _impl_.optional_foreign_;
}
inline ::edition_unittest::ForeignMessage* TestRequired::mutable_optional_foreign() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::ForeignMessage* _msg = _internal_mutable_optional_foreign();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequired.optional_foreign)
  return _msg;
}
inline void TestRequired::set_allocated_optional_foreign(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_foreign_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_foreign_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestRequired.optional_foreign)
}

// -------------------------------------------------------------------

// TestRequiredForeign

// .edition_unittest.TestRequired optional_message = 1;
inline bool TestRequiredForeign::has_optional_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_message_ != nullptr);
  return value;
}
inline void TestRequiredForeign::clear_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_message_ != nullptr) _impl_.optional_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestRequired& TestRequiredForeign::_internal_optional_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRequired* p = _impl_.optional_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRequired&>(::edition_unittest::_TestRequired_default_instance_);
}
inline const ::edition_unittest::TestRequired& TestRequiredForeign::optional_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredForeign.optional_message)
  return _internal_optional_message();
}
inline void TestRequiredForeign::unsafe_arena_set_allocated_optional_message(::edition_unittest::TestRequired* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_message_);
  }
  _impl_.optional_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestRequiredForeign.optional_message)
}
inline ::edition_unittest::TestRequired* TestRequiredForeign::release_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestRequired* released = _impl_.optional_message_;
  _impl_.optional_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRequired* TestRequiredForeign::unsafe_arena_release_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestRequiredForeign.optional_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestRequired* temp = _impl_.optional_message_;
  _impl_.optional_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRequired* TestRequiredForeign::_internal_mutable_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequired>(GetArena());
    _impl_.optional_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(p);
  }
  return _impl_.optional_message_;
}
inline ::edition_unittest::TestRequired* TestRequiredForeign::mutable_optional_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestRequired* _msg = _internal_mutable_optional_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequiredForeign.optional_message)
  return _msg;
}
inline void TestRequiredForeign::set_allocated_optional_message(::edition_unittest::TestRequired* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestRequiredForeign.optional_message)
}

// repeated .edition_unittest.TestRequired repeated_message = 2;
inline int TestRequiredForeign::_internal_repeated_message_size() const {
  return _internal_repeated_message().size();
}
inline int TestRequiredForeign::repeated_message_size() const {
  return _internal_repeated_message_size();
}
inline void TestRequiredForeign::clear_repeated_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_message_.Clear();
}
inline ::edition_unittest::TestRequired* TestRequiredForeign::mutable_repeated_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequiredForeign.repeated_message)
  return _internal_mutable_repeated_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>* TestRequiredForeign::mutable_repeated_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRequiredForeign.repeated_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_message();
}
inline const ::edition_unittest::TestRequired& TestRequiredForeign::repeated_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredForeign.repeated_message)
  return _internal_repeated_message().Get(index);
}
inline ::edition_unittest::TestRequired* TestRequiredForeign::add_repeated_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestRequired* _add = _internal_mutable_repeated_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestRequiredForeign.repeated_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>& TestRequiredForeign::repeated_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRequiredForeign.repeated_message)
  return _internal_repeated_message();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>&
TestRequiredForeign::_internal_repeated_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_message_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>*
TestRequiredForeign::_internal_mutable_repeated_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_message_;
}

// int32 dummy = 3;
inline bool TestRequiredForeign::has_dummy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestRequiredForeign::clear_dummy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestRequiredForeign::dummy() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredForeign.dummy)
  return _internal_dummy();
}
inline void TestRequiredForeign::set_dummy(::int32_t value) {
  _internal_set_dummy(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredForeign.dummy)
}
inline ::int32_t TestRequiredForeign::_internal_dummy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy_;
}
inline void TestRequiredForeign::_internal_set_dummy(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_ = value;
}

// .edition_unittest.NestedTestAllTypes optional_lazy_message = 4 [lazy = true];
inline bool TestRequiredForeign::has_optional_lazy_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_lazy_message_ != nullptr);
  return value;
}
inline void TestRequiredForeign::clear_optional_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_lazy_message_ != nullptr) _impl_.optional_lazy_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::NestedTestAllTypes& TestRequiredForeign::_internal_optional_lazy_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::NestedTestAllTypes* p = _impl_.optional_lazy_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::NestedTestAllTypes&>(::edition_unittest::_NestedTestAllTypes_default_instance_);
}
inline const ::edition_unittest::NestedTestAllTypes& TestRequiredForeign::optional_lazy_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredForeign.optional_lazy_message)
  return _internal_optional_lazy_message();
}
inline void TestRequiredForeign::unsafe_arena_set_allocated_optional_lazy_message(::edition_unittest::NestedTestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_lazy_message_);
  }
  _impl_.optional_lazy_message_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestRequiredForeign.optional_lazy_message)
}
inline ::edition_unittest::NestedTestAllTypes* TestRequiredForeign::release_optional_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::NestedTestAllTypes* released = _impl_.optional_lazy_message_;
  _impl_.optional_lazy_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::NestedTestAllTypes* TestRequiredForeign::unsafe_arena_release_optional_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestRequiredForeign.optional_lazy_message)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::NestedTestAllTypes* temp = _impl_.optional_lazy_message_;
  _impl_.optional_lazy_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::NestedTestAllTypes* TestRequiredForeign::_internal_mutable_optional_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_lazy_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::NestedTestAllTypes>(GetArena());
    _impl_.optional_lazy_message_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(p);
  }
  return _impl_.optional_lazy_message_;
}
inline ::edition_unittest::NestedTestAllTypes* TestRequiredForeign::mutable_optional_lazy_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::NestedTestAllTypes* _msg = _internal_mutable_optional_lazy_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequiredForeign.optional_lazy_message)
  return _msg;
}
inline void TestRequiredForeign::set_allocated_optional_lazy_message(::edition_unittest::NestedTestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_lazy_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.optional_lazy_message_ = reinterpret_cast<::edition_unittest::NestedTestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestRequiredForeign.optional_lazy_message)
}

// -------------------------------------------------------------------

// TestRequiredMessage

// .edition_unittest.TestRequired optional_message = 1;
inline bool TestRequiredMessage::has_optional_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_message_ != nullptr);
  return value;
}
inline void TestRequiredMessage::clear_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_message_ != nullptr) _impl_.optional_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestRequired& TestRequiredMessage::_internal_optional_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRequired* p = _impl_.optional_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRequired&>(::edition_unittest::_TestRequired_default_instance_);
}
inline const ::edition_unittest::TestRequired& TestRequiredMessage::optional_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredMessage.optional_message)
  return _internal_optional_message();
}
inline void TestRequiredMessage::unsafe_arena_set_allocated_optional_message(::edition_unittest::TestRequired* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_message_);
  }
  _impl_.optional_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestRequiredMessage.optional_message)
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::release_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestRequired* released = _impl_.optional_message_;
  _impl_.optional_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::unsafe_arena_release_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestRequiredMessage.optional_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestRequired* temp = _impl_.optional_message_;
  _impl_.optional_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::_internal_mutable_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequired>(GetArena());
    _impl_.optional_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(p);
  }
  return _impl_.optional_message_;
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::mutable_optional_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestRequired* _msg = _internal_mutable_optional_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequiredMessage.optional_message)
  return _msg;
}
inline void TestRequiredMessage::set_allocated_optional_message(::edition_unittest::TestRequired* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestRequiredMessage.optional_message)
}

// repeated .edition_unittest.TestRequired repeated_message = 2;
inline int TestRequiredMessage::_internal_repeated_message_size() const {
  return _internal_repeated_message().size();
}
inline int TestRequiredMessage::repeated_message_size() const {
  return _internal_repeated_message_size();
}
inline void TestRequiredMessage::clear_repeated_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_message_.Clear();
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::mutable_repeated_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequiredMessage.repeated_message)
  return _internal_mutable_repeated_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>* TestRequiredMessage::mutable_repeated_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRequiredMessage.repeated_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_message();
}
inline const ::edition_unittest::TestRequired& TestRequiredMessage::repeated_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredMessage.repeated_message)
  return _internal_repeated_message().Get(index);
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::add_repeated_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestRequired* _add = _internal_mutable_repeated_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestRequiredMessage.repeated_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>& TestRequiredMessage::repeated_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRequiredMessage.repeated_message)
  return _internal_repeated_message();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>&
TestRequiredMessage::_internal_repeated_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_message_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestRequired>*
TestRequiredMessage::_internal_mutable_repeated_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_message_;
}

// .edition_unittest.TestRequired required_message = 3 [features = {
inline bool TestRequiredMessage::has_required_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.required_message_ != nullptr);
  return value;
}
inline void TestRequiredMessage::clear_required_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_message_ != nullptr) _impl_.required_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestRequired& TestRequiredMessage::_internal_required_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRequired* p = _impl_.required_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRequired&>(::edition_unittest::_TestRequired_default_instance_);
}
inline const ::edition_unittest::TestRequired& TestRequiredMessage::required_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredMessage.required_message)
  return _internal_required_message();
}
inline void TestRequiredMessage::unsafe_arena_set_allocated_required_message(::edition_unittest::TestRequired* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.required_message_);
  }
  _impl_.required_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestRequiredMessage.required_message)
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::release_required_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestRequired* released = _impl_.required_message_;
  _impl_.required_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::unsafe_arena_release_required_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestRequiredMessage.required_message)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestRequired* temp = _impl_.required_message_;
  _impl_.required_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::_internal_mutable_required_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequired>(GetArena());
    _impl_.required_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(p);
  }
  return _impl_.required_message_;
}
inline ::edition_unittest::TestRequired* TestRequiredMessage::mutable_required_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestRequired* _msg = _internal_mutable_required_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequiredMessage.required_message)
  return _msg;
}
inline void TestRequiredMessage::set_allocated_required_message(::edition_unittest::TestRequired* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.required_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.required_message_ = reinterpret_cast<::edition_unittest::TestRequired*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestRequiredMessage.required_message)
}

// -------------------------------------------------------------------

// TestNestedRequiredForeign

// .edition_unittest.TestNestedRequiredForeign child = 1;
inline bool TestNestedRequiredForeign::has_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.child_ != nullptr);
  return value;
}
inline void TestNestedRequiredForeign::clear_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ != nullptr) _impl_.child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestNestedRequiredForeign& TestNestedRequiredForeign::_internal_child() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestNestedRequiredForeign* p = _impl_.child_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestNestedRequiredForeign&>(::edition_unittest::_TestNestedRequiredForeign_default_instance_);
}
inline const ::edition_unittest::TestNestedRequiredForeign& TestNestedRequiredForeign::child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedRequiredForeign.child)
  return _internal_child();
}
inline void TestNestedRequiredForeign::unsafe_arena_set_allocated_child(::edition_unittest::TestNestedRequiredForeign* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.child_);
  }
  _impl_.child_ = reinterpret_cast<::edition_unittest::TestNestedRequiredForeign*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedRequiredForeign.child)
}
inline ::edition_unittest::TestNestedRequiredForeign* TestNestedRequiredForeign::release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestNestedRequiredForeign* released = _impl_.child_;
  _impl_.child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestNestedRequiredForeign* TestNestedRequiredForeign::unsafe_arena_release_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedRequiredForeign.child)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestNestedRequiredForeign* temp = _impl_.child_;
  _impl_.child_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestNestedRequiredForeign* TestNestedRequiredForeign::_internal_mutable_child() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.child_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestNestedRequiredForeign>(GetArena());
    _impl_.child_ = reinterpret_cast<::edition_unittest::TestNestedRequiredForeign*>(p);
  }
  return _impl_.child_;
}
inline ::edition_unittest::TestNestedRequiredForeign* TestNestedRequiredForeign::mutable_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestNestedRequiredForeign* _msg = _internal_mutable_child();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedRequiredForeign.child)
  return _msg;
}
inline void TestNestedRequiredForeign::set_allocated_child(::edition_unittest::TestNestedRequiredForeign* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.child_ = reinterpret_cast<::edition_unittest::TestNestedRequiredForeign*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedRequiredForeign.child)
}

// .edition_unittest.TestRequiredForeign payload = 2;
inline bool TestNestedRequiredForeign::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline void TestNestedRequiredForeign::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ != nullptr) _impl_.payload_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestRequiredForeign& TestNestedRequiredForeign::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRequiredForeign* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRequiredForeign&>(::edition_unittest::_TestRequiredForeign_default_instance_);
}
inline const ::edition_unittest::TestRequiredForeign& TestNestedRequiredForeign::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedRequiredForeign.payload)
  return _internal_payload();
}
inline void TestNestedRequiredForeign::unsafe_arena_set_allocated_payload(::edition_unittest::TestRequiredForeign* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::edition_unittest::TestRequiredForeign*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedRequiredForeign.payload)
}
inline ::edition_unittest::TestRequiredForeign* TestNestedRequiredForeign::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestRequiredForeign* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRequiredForeign* TestNestedRequiredForeign::unsafe_arena_release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedRequiredForeign.payload)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestRequiredForeign* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRequiredForeign* TestNestedRequiredForeign::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequiredForeign>(GetArena());
    _impl_.payload_ = reinterpret_cast<::edition_unittest::TestRequiredForeign*>(p);
  }
  return _impl_.payload_;
}
inline ::edition_unittest::TestRequiredForeign* TestNestedRequiredForeign::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestRequiredForeign* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedRequiredForeign.payload)
  return _msg;
}
inline void TestNestedRequiredForeign::set_allocated_payload(::edition_unittest::TestRequiredForeign* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.payload_ = reinterpret_cast<::edition_unittest::TestRequiredForeign*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedRequiredForeign.payload)
}

// int32 dummy = 3;
inline bool TestNestedRequiredForeign::has_dummy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestNestedRequiredForeign::clear_dummy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t TestNestedRequiredForeign::dummy() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedRequiredForeign.dummy)
  return _internal_dummy();
}
inline void TestNestedRequiredForeign::set_dummy(::int32_t value) {
  _internal_set_dummy(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedRequiredForeign.dummy)
}
inline ::int32_t TestNestedRequiredForeign::_internal_dummy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy_;
}
inline void TestNestedRequiredForeign::_internal_set_dummy(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_ = value;
}

// .edition_unittest.TestRequiredEnum required_enum = 5;
inline bool TestNestedRequiredForeign::has_required_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.required_enum_ != nullptr);
  return value;
}
inline void TestNestedRequiredForeign::clear_required_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_enum_ != nullptr) _impl_.required_enum_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::TestRequiredEnum& TestNestedRequiredForeign::_internal_required_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRequiredEnum* p = _impl_.required_enum_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRequiredEnum&>(::edition_unittest::_TestRequiredEnum_default_instance_);
}
inline const ::edition_unittest::TestRequiredEnum& TestNestedRequiredForeign::required_enum() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedRequiredForeign.required_enum)
  return _internal_required_enum();
}
inline void TestNestedRequiredForeign::unsafe_arena_set_allocated_required_enum(::edition_unittest::TestRequiredEnum* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.required_enum_);
  }
  _impl_.required_enum_ = reinterpret_cast<::edition_unittest::TestRequiredEnum*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedRequiredForeign.required_enum)
}
inline ::edition_unittest::TestRequiredEnum* TestNestedRequiredForeign::release_required_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestRequiredEnum* released = _impl_.required_enum_;
  _impl_.required_enum_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRequiredEnum* TestNestedRequiredForeign::unsafe_arena_release_required_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedRequiredForeign.required_enum)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestRequiredEnum* temp = _impl_.required_enum_;
  _impl_.required_enum_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRequiredEnum* TestNestedRequiredForeign::_internal_mutable_required_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_enum_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequiredEnum>(GetArena());
    _impl_.required_enum_ = reinterpret_cast<::edition_unittest::TestRequiredEnum*>(p);
  }
  return _impl_.required_enum_;
}
inline ::edition_unittest::TestRequiredEnum* TestNestedRequiredForeign::mutable_required_enum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::TestRequiredEnum* _msg = _internal_mutable_required_enum();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedRequiredForeign.required_enum)
  return _msg;
}
inline void TestNestedRequiredForeign::set_allocated_required_enum(::edition_unittest::TestRequiredEnum* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.required_enum_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.required_enum_ = reinterpret_cast<::edition_unittest::TestRequiredEnum*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedRequiredForeign.required_enum)
}

// .edition_unittest.TestRequiredEnumNoMask required_enum_no_mask = 6;
inline bool TestNestedRequiredForeign::has_required_enum_no_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.required_enum_no_mask_ != nullptr);
  return value;
}
inline void TestNestedRequiredForeign::clear_required_enum_no_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_enum_no_mask_ != nullptr) _impl_.required_enum_no_mask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::edition_unittest::TestRequiredEnumNoMask& TestNestedRequiredForeign::_internal_required_enum_no_mask() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRequiredEnumNoMask* p = _impl_.required_enum_no_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRequiredEnumNoMask&>(::edition_unittest::_TestRequiredEnumNoMask_default_instance_);
}
inline const ::edition_unittest::TestRequiredEnumNoMask& TestNestedRequiredForeign::required_enum_no_mask() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedRequiredForeign.required_enum_no_mask)
  return _internal_required_enum_no_mask();
}
inline void TestNestedRequiredForeign::unsafe_arena_set_allocated_required_enum_no_mask(::edition_unittest::TestRequiredEnumNoMask* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.required_enum_no_mask_);
  }
  _impl_.required_enum_no_mask_ = reinterpret_cast<::edition_unittest::TestRequiredEnumNoMask*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedRequiredForeign.required_enum_no_mask)
}
inline ::edition_unittest::TestRequiredEnumNoMask* TestNestedRequiredForeign::release_required_enum_no_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::TestRequiredEnumNoMask* released = _impl_.required_enum_no_mask_;
  _impl_.required_enum_no_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRequiredEnumNoMask* TestNestedRequiredForeign::unsafe_arena_release_required_enum_no_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedRequiredForeign.required_enum_no_mask)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::TestRequiredEnumNoMask* temp = _impl_.required_enum_no_mask_;
  _impl_.required_enum_no_mask_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRequiredEnumNoMask* TestNestedRequiredForeign::_internal_mutable_required_enum_no_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_enum_no_mask_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequiredEnumNoMask>(GetArena());
    _impl_.required_enum_no_mask_ = reinterpret_cast<::edition_unittest::TestRequiredEnumNoMask*>(p);
  }
  return _impl_.required_enum_no_mask_;
}
inline ::edition_unittest::TestRequiredEnumNoMask* TestNestedRequiredForeign::mutable_required_enum_no_mask() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::edition_unittest::TestRequiredEnumNoMask* _msg = _internal_mutable_required_enum_no_mask();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedRequiredForeign.required_enum_no_mask)
  return _msg;
}
inline void TestNestedRequiredForeign::set_allocated_required_enum_no_mask(::edition_unittest::TestRequiredEnumNoMask* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.required_enum_no_mask_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.required_enum_no_mask_ = reinterpret_cast<::edition_unittest::TestRequiredEnumNoMask*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedRequiredForeign.required_enum_no_mask)
}

// .edition_unittest.TestRequiredEnumMulti required_enum_multi = 7;
inline bool TestNestedRequiredForeign::has_required_enum_multi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.required_enum_multi_ != nullptr);
  return value;
}
inline void TestNestedRequiredForeign::clear_required_enum_multi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_enum_multi_ != nullptr) _impl_.required_enum_multi_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::edition_unittest::TestRequiredEnumMulti& TestNestedRequiredForeign::_internal_required_enum_multi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRequiredEnumMulti* p = _impl_.required_enum_multi_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRequiredEnumMulti&>(::edition_unittest::_TestRequiredEnumMulti_default_instance_);
}
inline const ::edition_unittest::TestRequiredEnumMulti& TestNestedRequiredForeign::required_enum_multi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedRequiredForeign.required_enum_multi)
  return _internal_required_enum_multi();
}
inline void TestNestedRequiredForeign::unsafe_arena_set_allocated_required_enum_multi(::edition_unittest::TestRequiredEnumMulti* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.required_enum_multi_);
  }
  _impl_.required_enum_multi_ = reinterpret_cast<::edition_unittest::TestRequiredEnumMulti*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedRequiredForeign.required_enum_multi)
}
inline ::edition_unittest::TestRequiredEnumMulti* TestNestedRequiredForeign::release_required_enum_multi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::edition_unittest::TestRequiredEnumMulti* released = _impl_.required_enum_multi_;
  _impl_.required_enum_multi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRequiredEnumMulti* TestNestedRequiredForeign::unsafe_arena_release_required_enum_multi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedRequiredForeign.required_enum_multi)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::edition_unittest::TestRequiredEnumMulti* temp = _impl_.required_enum_multi_;
  _impl_.required_enum_multi_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRequiredEnumMulti* TestNestedRequiredForeign::_internal_mutable_required_enum_multi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_enum_multi_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequiredEnumMulti>(GetArena());
    _impl_.required_enum_multi_ = reinterpret_cast<::edition_unittest::TestRequiredEnumMulti*>(p);
  }
  return _impl_.required_enum_multi_;
}
inline ::edition_unittest::TestRequiredEnumMulti* TestNestedRequiredForeign::mutable_required_enum_multi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::edition_unittest::TestRequiredEnumMulti* _msg = _internal_mutable_required_enum_multi();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedRequiredForeign.required_enum_multi)
  return _msg;
}
inline void TestNestedRequiredForeign::set_allocated_required_enum_multi(::edition_unittest::TestRequiredEnumMulti* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.required_enum_multi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.required_enum_multi_ = reinterpret_cast<::edition_unittest::TestRequiredEnumMulti*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedRequiredForeign.required_enum_multi)
}

// .edition_unittest.TestRequiredNoMaskMulti required_no_mask = 9;
inline bool TestNestedRequiredForeign::has_required_no_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.required_no_mask_ != nullptr);
  return value;
}
inline void TestNestedRequiredForeign::clear_required_no_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_no_mask_ != nullptr) _impl_.required_no_mask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::edition_unittest::TestRequiredNoMaskMulti& TestNestedRequiredForeign::_internal_required_no_mask() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRequiredNoMaskMulti* p = _impl_.required_no_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRequiredNoMaskMulti&>(::edition_unittest::_TestRequiredNoMaskMulti_default_instance_);
}
inline const ::edition_unittest::TestRequiredNoMaskMulti& TestNestedRequiredForeign::required_no_mask() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedRequiredForeign.required_no_mask)
  return _internal_required_no_mask();
}
inline void TestNestedRequiredForeign::unsafe_arena_set_allocated_required_no_mask(::edition_unittest::TestRequiredNoMaskMulti* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.required_no_mask_);
  }
  _impl_.required_no_mask_ = reinterpret_cast<::edition_unittest::TestRequiredNoMaskMulti*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedRequiredForeign.required_no_mask)
}
inline ::edition_unittest::TestRequiredNoMaskMulti* TestNestedRequiredForeign::release_required_no_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::edition_unittest::TestRequiredNoMaskMulti* released = _impl_.required_no_mask_;
  _impl_.required_no_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRequiredNoMaskMulti* TestNestedRequiredForeign::unsafe_arena_release_required_no_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedRequiredForeign.required_no_mask)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::edition_unittest::TestRequiredNoMaskMulti* temp = _impl_.required_no_mask_;
  _impl_.required_no_mask_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRequiredNoMaskMulti* TestNestedRequiredForeign::_internal_mutable_required_no_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_no_mask_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequiredNoMaskMulti>(GetArena());
    _impl_.required_no_mask_ = reinterpret_cast<::edition_unittest::TestRequiredNoMaskMulti*>(p);
  }
  return _impl_.required_no_mask_;
}
inline ::edition_unittest::TestRequiredNoMaskMulti* TestNestedRequiredForeign::mutable_required_no_mask() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::edition_unittest::TestRequiredNoMaskMulti* _msg = _internal_mutable_required_no_mask();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedRequiredForeign.required_no_mask)
  return _msg;
}
inline void TestNestedRequiredForeign::set_allocated_required_no_mask(::edition_unittest::TestRequiredNoMaskMulti* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.required_no_mask_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.required_no_mask_ = reinterpret_cast<::edition_unittest::TestRequiredNoMaskMulti*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedRequiredForeign.required_no_mask)
}

// -------------------------------------------------------------------

// TestForeignNested

// .edition_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
inline bool TestForeignNested::has_foreign_nested() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.foreign_nested_ != nullptr);
  return value;
}
inline void TestForeignNested::clear_foreign_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.foreign_nested_ != nullptr) _impl_.foreign_nested_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestForeignNested::_internal_foreign_nested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes_NestedMessage* p = _impl_.foreign_nested_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes_NestedMessage&>(::edition_unittest::_TestAllTypes_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestAllTypes_NestedMessage& TestForeignNested::foreign_nested() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestForeignNested.foreign_nested)
  return _internal_foreign_nested();
}
inline void TestForeignNested::unsafe_arena_set_allocated_foreign_nested(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.foreign_nested_);
  }
  _impl_.foreign_nested_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestForeignNested.foreign_nested)
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestForeignNested::release_foreign_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes_NestedMessage* released = _impl_.foreign_nested_;
  _impl_.foreign_nested_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestForeignNested::unsafe_arena_release_foreign_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestForeignNested.foreign_nested)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes_NestedMessage* temp = _impl_.foreign_nested_;
  _impl_.foreign_nested_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestForeignNested::_internal_mutable_foreign_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.foreign_nested_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes_NestedMessage>(GetArena());
    _impl_.foreign_nested_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(p);
  }
  return _impl_.foreign_nested_;
}
inline ::edition_unittest::TestAllTypes_NestedMessage* TestForeignNested::mutable_foreign_nested() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes_NestedMessage* _msg = _internal_mutable_foreign_nested();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestForeignNested.foreign_nested)
  return _msg;
}
inline void TestForeignNested::set_allocated_foreign_nested(::edition_unittest::TestAllTypes_NestedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.foreign_nested_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.foreign_nested_ = reinterpret_cast<::edition_unittest::TestAllTypes_NestedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestForeignNested.foreign_nested)
}

// -------------------------------------------------------------------

// TestEmptyMessage

// -------------------------------------------------------------------

// TestEmptyMessageWithExtensions

// -------------------------------------------------------------------

// TestPickleNestedMessage_NestedMessage_NestedNestedMessage

// int32 cc = 1;
inline bool TestPickleNestedMessage_NestedMessage_NestedNestedMessage::has_cc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::clear_cc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cc_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestPickleNestedMessage_NestedMessage_NestedNestedMessage::cc() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.cc)
  return _internal_cc();
}
inline void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::set_cc(::int32_t value) {
  _internal_set_cc(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.cc)
}
inline ::int32_t TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_internal_cc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cc_;
}
inline void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_internal_set_cc(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cc_ = value;
}

// -------------------------------------------------------------------

// TestPickleNestedMessage_NestedMessage

// int32 bb = 1;
inline bool TestPickleNestedMessage_NestedMessage::has_bb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestPickleNestedMessage_NestedMessage::clear_bb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bb_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestPickleNestedMessage_NestedMessage::bb() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPickleNestedMessage.NestedMessage.bb)
  return _internal_bb();
}
inline void TestPickleNestedMessage_NestedMessage::set_bb(::int32_t value) {
  _internal_set_bb(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestPickleNestedMessage.NestedMessage.bb)
}
inline ::int32_t TestPickleNestedMessage_NestedMessage::_internal_bb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bb_;
}
inline void TestPickleNestedMessage_NestedMessage::_internal_set_bb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bb_ = value;
}

// -------------------------------------------------------------------

// TestPickleNestedMessage

// -------------------------------------------------------------------

// TestMultipleExtensionRanges

// -------------------------------------------------------------------

// TestReallyLargeTagNumber

// int32 a = 1;
inline bool TestReallyLargeTagNumber::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestReallyLargeTagNumber::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestReallyLargeTagNumber::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestReallyLargeTagNumber.a)
  return _internal_a();
}
inline void TestReallyLargeTagNumber::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestReallyLargeTagNumber.a)
}
inline ::int32_t TestReallyLargeTagNumber::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestReallyLargeTagNumber::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// int32 bb = 268435455;
inline bool TestReallyLargeTagNumber::has_bb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestReallyLargeTagNumber::clear_bb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bb_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestReallyLargeTagNumber::bb() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestReallyLargeTagNumber.bb)
  return _internal_bb();
}
inline void TestReallyLargeTagNumber::set_bb(::int32_t value) {
  _internal_set_bb(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestReallyLargeTagNumber.bb)
}
inline ::int32_t TestReallyLargeTagNumber::_internal_bb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bb_;
}
inline void TestReallyLargeTagNumber::_internal_set_bb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bb_ = value;
}

// -------------------------------------------------------------------

// TestRecursiveMessage

// .edition_unittest.TestRecursiveMessage a = 1;
inline bool TestRecursiveMessage::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.a_ != nullptr);
  return value;
}
inline void TestRecursiveMessage::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a_ != nullptr) _impl_.a_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestRecursiveMessage& TestRecursiveMessage::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestRecursiveMessage* p = _impl_.a_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestRecursiveMessage&>(::edition_unittest::_TestRecursiveMessage_default_instance_);
}
inline const ::edition_unittest::TestRecursiveMessage& TestRecursiveMessage::a() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRecursiveMessage.a)
  return _internal_a();
}
inline void TestRecursiveMessage::unsafe_arena_set_allocated_a(::edition_unittest::TestRecursiveMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.a_);
  }
  _impl_.a_ = reinterpret_cast<::edition_unittest::TestRecursiveMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestRecursiveMessage.a)
}
inline ::edition_unittest::TestRecursiveMessage* TestRecursiveMessage::release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestRecursiveMessage* released = _impl_.a_;
  _impl_.a_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestRecursiveMessage* TestRecursiveMessage::unsafe_arena_release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestRecursiveMessage.a)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestRecursiveMessage* temp = _impl_.a_;
  _impl_.a_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestRecursiveMessage* TestRecursiveMessage::_internal_mutable_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRecursiveMessage>(GetArena());
    _impl_.a_ = reinterpret_cast<::edition_unittest::TestRecursiveMessage*>(p);
  }
  return _impl_.a_;
}
inline ::edition_unittest::TestRecursiveMessage* TestRecursiveMessage::mutable_a() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestRecursiveMessage* _msg = _internal_mutable_a();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRecursiveMessage.a)
  return _msg;
}
inline void TestRecursiveMessage::set_allocated_a(::edition_unittest::TestRecursiveMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.a_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.a_ = reinterpret_cast<::edition_unittest::TestRecursiveMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestRecursiveMessage.a)
}

// int32 i = 2;
inline bool TestRecursiveMessage::has_i() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestRecursiveMessage::clear_i() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestRecursiveMessage::i() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRecursiveMessage.i)
  return _internal_i();
}
inline void TestRecursiveMessage::set_i(::int32_t value) {
  _internal_set_i(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRecursiveMessage.i)
}
inline ::int32_t TestRecursiveMessage::_internal_i() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i_;
}
inline void TestRecursiveMessage::_internal_set_i(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_ = value;
}

// -------------------------------------------------------------------

// TestMutualRecursionA_SubMessage

// .edition_unittest.TestMutualRecursionB b = 1;
inline bool TestMutualRecursionA_SubMessage::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.b_ != nullptr);
  return value;
}
inline void TestMutualRecursionA_SubMessage::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.b_ != nullptr) _impl_.b_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestMutualRecursionB& TestMutualRecursionA_SubMessage::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestMutualRecursionB* p = _impl_.b_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestMutualRecursionB&>(::edition_unittest::_TestMutualRecursionB_default_instance_);
}
inline const ::edition_unittest::TestMutualRecursionB& TestMutualRecursionA_SubMessage::b() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionA.SubMessage.b)
  return _internal_b();
}
inline void TestMutualRecursionA_SubMessage::unsafe_arena_set_allocated_b(::edition_unittest::TestMutualRecursionB* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.b_);
  }
  _impl_.b_ = reinterpret_cast<::edition_unittest::TestMutualRecursionB*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestMutualRecursionA.SubMessage.b)
}
inline ::edition_unittest::TestMutualRecursionB* TestMutualRecursionA_SubMessage::release_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestMutualRecursionB* released = _impl_.b_;
  _impl_.b_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestMutualRecursionB* TestMutualRecursionA_SubMessage::unsafe_arena_release_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestMutualRecursionA.SubMessage.b)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestMutualRecursionB* temp = _impl_.b_;
  _impl_.b_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestMutualRecursionB* TestMutualRecursionA_SubMessage::_internal_mutable_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.b_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestMutualRecursionB>(GetArena());
    _impl_.b_ = reinterpret_cast<::edition_unittest::TestMutualRecursionB*>(p);
  }
  return _impl_.b_;
}
inline ::edition_unittest::TestMutualRecursionB* TestMutualRecursionA_SubMessage::mutable_b() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestMutualRecursionB* _msg = _internal_mutable_b();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMutualRecursionA.SubMessage.b)
  return _msg;
}
inline void TestMutualRecursionA_SubMessage::set_allocated_b(::edition_unittest::TestMutualRecursionB* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.b_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.b_ = reinterpret_cast<::edition_unittest::TestMutualRecursionB*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestMutualRecursionA.SubMessage.b)
}

// -------------------------------------------------------------------

// TestMutualRecursionA_SubGroup

// .edition_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
inline bool TestMutualRecursionA_SubGroup::has_sub_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sub_message_ != nullptr);
  return value;
}
inline void TestMutualRecursionA_SubGroup::clear_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_message_ != nullptr) _impl_.sub_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestMutualRecursionA_SubMessage& TestMutualRecursionA_SubGroup::_internal_sub_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestMutualRecursionA_SubMessage* p = _impl_.sub_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestMutualRecursionA_SubMessage&>(::edition_unittest::_TestMutualRecursionA_SubMessage_default_instance_);
}
inline const ::edition_unittest::TestMutualRecursionA_SubMessage& TestMutualRecursionA_SubGroup::sub_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionA.SubGroup.sub_message)
  return _internal_sub_message();
}
inline void TestMutualRecursionA_SubGroup::unsafe_arena_set_allocated_sub_message(::edition_unittest::TestMutualRecursionA_SubMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sub_message_);
  }
  _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA_SubMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestMutualRecursionA.SubGroup.sub_message)
}
inline ::edition_unittest::TestMutualRecursionA_SubMessage* TestMutualRecursionA_SubGroup::release_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestMutualRecursionA_SubMessage* released = _impl_.sub_message_;
  _impl_.sub_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestMutualRecursionA_SubMessage* TestMutualRecursionA_SubGroup::unsafe_arena_release_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestMutualRecursionA.SubGroup.sub_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestMutualRecursionA_SubMessage* temp = _impl_.sub_message_;
  _impl_.sub_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestMutualRecursionA_SubMessage* TestMutualRecursionA_SubGroup::_internal_mutable_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestMutualRecursionA_SubMessage>(GetArena());
    _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA_SubMessage*>(p);
  }
  return _impl_.sub_message_;
}
inline ::edition_unittest::TestMutualRecursionA_SubMessage* TestMutualRecursionA_SubGroup::mutable_sub_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestMutualRecursionA_SubMessage* _msg = _internal_mutable_sub_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMutualRecursionA.SubGroup.sub_message)
  return _msg;
}
inline void TestMutualRecursionA_SubGroup::set_allocated_sub_message(::edition_unittest::TestMutualRecursionA_SubMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sub_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA_SubMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestMutualRecursionA.SubGroup.sub_message)
}

// .edition_unittest.TestAllTypes not_in_this_scc = 4;
inline bool TestMutualRecursionA_SubGroup::has_not_in_this_scc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.not_in_this_scc_ != nullptr);
  return value;
}
inline void TestMutualRecursionA_SubGroup::clear_not_in_this_scc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.not_in_this_scc_ != nullptr) _impl_.not_in_this_scc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestAllTypes& TestMutualRecursionA_SubGroup::_internal_not_in_this_scc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.not_in_this_scc_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestMutualRecursionA_SubGroup::not_in_this_scc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionA.SubGroup.not_in_this_scc)
  return _internal_not_in_this_scc();
}
inline void TestMutualRecursionA_SubGroup::unsafe_arena_set_allocated_not_in_this_scc(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.not_in_this_scc_);
  }
  _impl_.not_in_this_scc_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestMutualRecursionA.SubGroup.not_in_this_scc)
}
inline ::edition_unittest::TestAllTypes* TestMutualRecursionA_SubGroup::release_not_in_this_scc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* released = _impl_.not_in_this_scc_;
  _impl_.not_in_this_scc_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestMutualRecursionA_SubGroup::unsafe_arena_release_not_in_this_scc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestMutualRecursionA.SubGroup.not_in_this_scc)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* temp = _impl_.not_in_this_scc_;
  _impl_.not_in_this_scc_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestMutualRecursionA_SubGroup::_internal_mutable_not_in_this_scc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.not_in_this_scc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.not_in_this_scc_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.not_in_this_scc_;
}
inline ::edition_unittest::TestAllTypes* TestMutualRecursionA_SubGroup::mutable_not_in_this_scc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_not_in_this_scc();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMutualRecursionA.SubGroup.not_in_this_scc)
  return _msg;
}
inline void TestMutualRecursionA_SubGroup::set_allocated_not_in_this_scc(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.not_in_this_scc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.not_in_this_scc_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestMutualRecursionA.SubGroup.not_in_this_scc)
}

// -------------------------------------------------------------------

// TestMutualRecursionA_SubGroupR

// .edition_unittest.TestAllTypes payload = 6;
inline bool TestMutualRecursionA_SubGroupR::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline void TestMutualRecursionA_SubGroupR::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ != nullptr) _impl_.payload_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestMutualRecursionA_SubGroupR::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestMutualRecursionA_SubGroupR::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionA.SubGroupR.payload)
  return _internal_payload();
}
inline void TestMutualRecursionA_SubGroupR::unsafe_arena_set_allocated_payload(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestMutualRecursionA.SubGroupR.payload)
}
inline ::edition_unittest::TestAllTypes* TestMutualRecursionA_SubGroupR::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestMutualRecursionA_SubGroupR::unsafe_arena_release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestMutualRecursionA.SubGroupR.payload)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestMutualRecursionA_SubGroupR::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.payload_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.payload_;
}
inline ::edition_unittest::TestAllTypes* TestMutualRecursionA_SubGroupR::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMutualRecursionA.SubGroupR.payload)
  return _msg;
}
inline void TestMutualRecursionA_SubGroupR::set_allocated_payload(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payload_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestMutualRecursionA.SubGroupR.payload)
}

// -------------------------------------------------------------------

// TestMutualRecursionA

// .edition_unittest.TestMutualRecursionB bb = 1;
inline bool TestMutualRecursionA::has_bb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bb_ != nullptr);
  return value;
}
inline void TestMutualRecursionA::clear_bb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bb_ != nullptr) _impl_.bb_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestMutualRecursionB& TestMutualRecursionA::_internal_bb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestMutualRecursionB* p = _impl_.bb_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestMutualRecursionB&>(::edition_unittest::_TestMutualRecursionB_default_instance_);
}
inline const ::edition_unittest::TestMutualRecursionB& TestMutualRecursionA::bb() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionA.bb)
  return _internal_bb();
}
inline void TestMutualRecursionA::unsafe_arena_set_allocated_bb(::edition_unittest::TestMutualRecursionB* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bb_);
  }
  _impl_.bb_ = reinterpret_cast<::edition_unittest::TestMutualRecursionB*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestMutualRecursionA.bb)
}
inline ::edition_unittest::TestMutualRecursionB* TestMutualRecursionA::release_bb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestMutualRecursionB* released = _impl_.bb_;
  _impl_.bb_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestMutualRecursionB* TestMutualRecursionA::unsafe_arena_release_bb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestMutualRecursionA.bb)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestMutualRecursionB* temp = _impl_.bb_;
  _impl_.bb_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestMutualRecursionB* TestMutualRecursionA::_internal_mutable_bb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bb_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestMutualRecursionB>(GetArena());
    _impl_.bb_ = reinterpret_cast<::edition_unittest::TestMutualRecursionB*>(p);
  }
  return _impl_.bb_;
}
inline ::edition_unittest::TestMutualRecursionB* TestMutualRecursionA::mutable_bb() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestMutualRecursionB* _msg = _internal_mutable_bb();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMutualRecursionA.bb)
  return _msg;
}
inline void TestMutualRecursionA::set_allocated_bb(::edition_unittest::TestMutualRecursionB* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bb_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bb_ = reinterpret_cast<::edition_unittest::TestMutualRecursionB*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestMutualRecursionA.bb)
}

// .edition_unittest.TestMutualRecursionA.SubGroup subgroup = 2 [features = {
inline bool TestMutualRecursionA::has_subgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subgroup_ != nullptr);
  return value;
}
inline void TestMutualRecursionA::clear_subgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.subgroup_ != nullptr) _impl_.subgroup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestMutualRecursionA_SubGroup& TestMutualRecursionA::_internal_subgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestMutualRecursionA_SubGroup* p = _impl_.subgroup_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestMutualRecursionA_SubGroup&>(::edition_unittest::_TestMutualRecursionA_SubGroup_default_instance_);
}
inline const ::edition_unittest::TestMutualRecursionA_SubGroup& TestMutualRecursionA::subgroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionA.subgroup)
  return _internal_subgroup();
}
inline void TestMutualRecursionA::unsafe_arena_set_allocated_subgroup(::edition_unittest::TestMutualRecursionA_SubGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subgroup_);
  }
  _impl_.subgroup_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA_SubGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestMutualRecursionA.subgroup)
}
inline ::edition_unittest::TestMutualRecursionA_SubGroup* TestMutualRecursionA::release_subgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestMutualRecursionA_SubGroup* released = _impl_.subgroup_;
  _impl_.subgroup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestMutualRecursionA_SubGroup* TestMutualRecursionA::unsafe_arena_release_subgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestMutualRecursionA.subgroup)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestMutualRecursionA_SubGroup* temp = _impl_.subgroup_;
  _impl_.subgroup_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestMutualRecursionA_SubGroup* TestMutualRecursionA::_internal_mutable_subgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.subgroup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestMutualRecursionA_SubGroup>(GetArena());
    _impl_.subgroup_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA_SubGroup*>(p);
  }
  return _impl_.subgroup_;
}
inline ::edition_unittest::TestMutualRecursionA_SubGroup* TestMutualRecursionA::mutable_subgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestMutualRecursionA_SubGroup* _msg = _internal_mutable_subgroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMutualRecursionA.subgroup)
  return _msg;
}
inline void TestMutualRecursionA::set_allocated_subgroup(::edition_unittest::TestMutualRecursionA_SubGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.subgroup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.subgroup_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA_SubGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestMutualRecursionA.subgroup)
}

// repeated .edition_unittest.TestMutualRecursionA.SubGroupR subgroupr = 5 [features = {
inline int TestMutualRecursionA::_internal_subgroupr_size() const {
  return _internal_subgroupr().size();
}
inline int TestMutualRecursionA::subgroupr_size() const {
  return _internal_subgroupr_size();
}
inline void TestMutualRecursionA::clear_subgroupr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subgroupr_.Clear();
}
inline ::edition_unittest::TestMutualRecursionA_SubGroupR* TestMutualRecursionA::mutable_subgroupr(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMutualRecursionA.subgroupr)
  return _internal_mutable_subgroupr()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestMutualRecursionA_SubGroupR>* TestMutualRecursionA::mutable_subgroupr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMutualRecursionA.subgroupr)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subgroupr();
}
inline const ::edition_unittest::TestMutualRecursionA_SubGroupR& TestMutualRecursionA::subgroupr(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionA.subgroupr)
  return _internal_subgroupr().Get(index);
}
inline ::edition_unittest::TestMutualRecursionA_SubGroupR* TestMutualRecursionA::add_subgroupr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestMutualRecursionA_SubGroupR* _add = _internal_mutable_subgroupr()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestMutualRecursionA.subgroupr)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestMutualRecursionA_SubGroupR>& TestMutualRecursionA::subgroupr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMutualRecursionA.subgroupr)
  return _internal_subgroupr();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestMutualRecursionA_SubGroupR>&
TestMutualRecursionA::_internal_subgroupr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subgroupr_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestMutualRecursionA_SubGroupR>*
TestMutualRecursionA::_internal_mutable_subgroupr() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subgroupr_;
}

// -------------------------------------------------------------------

// TestMutualRecursionB

// .edition_unittest.TestMutualRecursionA a = 1;
inline bool TestMutualRecursionB::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.a_ != nullptr);
  return value;
}
inline void TestMutualRecursionB::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a_ != nullptr) _impl_.a_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestMutualRecursionA& TestMutualRecursionB::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestMutualRecursionA* p = _impl_.a_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestMutualRecursionA&>(::edition_unittest::_TestMutualRecursionA_default_instance_);
}
inline const ::edition_unittest::TestMutualRecursionA& TestMutualRecursionB::a() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionB.a)
  return _internal_a();
}
inline void TestMutualRecursionB::unsafe_arena_set_allocated_a(::edition_unittest::TestMutualRecursionA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.a_);
  }
  _impl_.a_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestMutualRecursionB.a)
}
inline ::edition_unittest::TestMutualRecursionA* TestMutualRecursionB::release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestMutualRecursionA* released = _impl_.a_;
  _impl_.a_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestMutualRecursionA* TestMutualRecursionB::unsafe_arena_release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestMutualRecursionB.a)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestMutualRecursionA* temp = _impl_.a_;
  _impl_.a_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestMutualRecursionA* TestMutualRecursionB::_internal_mutable_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestMutualRecursionA>(GetArena());
    _impl_.a_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA*>(p);
  }
  return _impl_.a_;
}
inline ::edition_unittest::TestMutualRecursionA* TestMutualRecursionB::mutable_a() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestMutualRecursionA* _msg = _internal_mutable_a();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMutualRecursionB.a)
  return _msg;
}
inline void TestMutualRecursionB::set_allocated_a(::edition_unittest::TestMutualRecursionA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.a_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.a_ = reinterpret_cast<::edition_unittest::TestMutualRecursionA*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestMutualRecursionB.a)
}

// int32 optional_int32 = 2;
inline bool TestMutualRecursionB::has_optional_int32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestMutualRecursionB::clear_optional_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestMutualRecursionB::optional_int32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMutualRecursionB.optional_int32)
  return _internal_optional_int32();
}
inline void TestMutualRecursionB::set_optional_int32(::int32_t value) {
  _internal_set_optional_int32(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestMutualRecursionB.optional_int32)
}
inline ::int32_t TestMutualRecursionB::_internal_optional_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_;
}
inline void TestMutualRecursionB::_internal_set_optional_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_ = value;
}

// -------------------------------------------------------------------

// TestIsInitialized_SubMessage_SubGroup

// int32 i = 2 [features = {
inline bool TestIsInitialized_SubMessage_SubGroup::has_i() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestIsInitialized_SubMessage_SubGroup::clear_i() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestIsInitialized_SubMessage_SubGroup::i() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestIsInitialized.SubMessage.SubGroup.i)
  return _internal_i();
}
inline void TestIsInitialized_SubMessage_SubGroup::set_i(::int32_t value) {
  _internal_set_i(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestIsInitialized.SubMessage.SubGroup.i)
}
inline ::int32_t TestIsInitialized_SubMessage_SubGroup::_internal_i() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i_;
}
inline void TestIsInitialized_SubMessage_SubGroup::_internal_set_i(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_ = value;
}

// -------------------------------------------------------------------

// TestIsInitialized_SubMessage

// .edition_unittest.TestIsInitialized.SubMessage.SubGroup subgroup = 1 [features = {
inline bool TestIsInitialized_SubMessage::has_subgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subgroup_ != nullptr);
  return value;
}
inline void TestIsInitialized_SubMessage::clear_subgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.subgroup_ != nullptr) _impl_.subgroup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestIsInitialized_SubMessage_SubGroup& TestIsInitialized_SubMessage::_internal_subgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* p = _impl_.subgroup_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestIsInitialized_SubMessage_SubGroup&>(::edition_unittest::_TestIsInitialized_SubMessage_SubGroup_default_instance_);
}
inline const ::edition_unittest::TestIsInitialized_SubMessage_SubGroup& TestIsInitialized_SubMessage::subgroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestIsInitialized.SubMessage.subgroup)
  return _internal_subgroup();
}
inline void TestIsInitialized_SubMessage::unsafe_arena_set_allocated_subgroup(::edition_unittest::TestIsInitialized_SubMessage_SubGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subgroup_);
  }
  _impl_.subgroup_ = reinterpret_cast<::edition_unittest::TestIsInitialized_SubMessage_SubGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestIsInitialized.SubMessage.subgroup)
}
inline ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* TestIsInitialized_SubMessage::release_subgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* released = _impl_.subgroup_;
  _impl_.subgroup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* TestIsInitialized_SubMessage::unsafe_arena_release_subgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestIsInitialized.SubMessage.subgroup)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* temp = _impl_.subgroup_;
  _impl_.subgroup_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* TestIsInitialized_SubMessage::_internal_mutable_subgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.subgroup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestIsInitialized_SubMessage_SubGroup>(GetArena());
    _impl_.subgroup_ = reinterpret_cast<::edition_unittest::TestIsInitialized_SubMessage_SubGroup*>(p);
  }
  return _impl_.subgroup_;
}
inline ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* TestIsInitialized_SubMessage::mutable_subgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestIsInitialized_SubMessage_SubGroup* _msg = _internal_mutable_subgroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestIsInitialized.SubMessage.subgroup)
  return _msg;
}
inline void TestIsInitialized_SubMessage::set_allocated_subgroup(::edition_unittest::TestIsInitialized_SubMessage_SubGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.subgroup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.subgroup_ = reinterpret_cast<::edition_unittest::TestIsInitialized_SubMessage_SubGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestIsInitialized.SubMessage.subgroup)
}

// -------------------------------------------------------------------

// TestIsInitialized

// .edition_unittest.TestIsInitialized.SubMessage sub_message = 1;
inline bool TestIsInitialized::has_sub_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sub_message_ != nullptr);
  return value;
}
inline void TestIsInitialized::clear_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_message_ != nullptr) _impl_.sub_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestIsInitialized_SubMessage& TestIsInitialized::_internal_sub_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestIsInitialized_SubMessage* p = _impl_.sub_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestIsInitialized_SubMessage&>(::edition_unittest::_TestIsInitialized_SubMessage_default_instance_);
}
inline const ::edition_unittest::TestIsInitialized_SubMessage& TestIsInitialized::sub_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestIsInitialized.sub_message)
  return _internal_sub_message();
}
inline void TestIsInitialized::unsafe_arena_set_allocated_sub_message(::edition_unittest::TestIsInitialized_SubMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sub_message_);
  }
  _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestIsInitialized_SubMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestIsInitialized.sub_message)
}
inline ::edition_unittest::TestIsInitialized_SubMessage* TestIsInitialized::release_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestIsInitialized_SubMessage* released = _impl_.sub_message_;
  _impl_.sub_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestIsInitialized_SubMessage* TestIsInitialized::unsafe_arena_release_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestIsInitialized.sub_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestIsInitialized_SubMessage* temp = _impl_.sub_message_;
  _impl_.sub_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestIsInitialized_SubMessage* TestIsInitialized::_internal_mutable_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestIsInitialized_SubMessage>(GetArena());
    _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestIsInitialized_SubMessage*>(p);
  }
  return _impl_.sub_message_;
}
inline ::edition_unittest::TestIsInitialized_SubMessage* TestIsInitialized::mutable_sub_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestIsInitialized_SubMessage* _msg = _internal_mutable_sub_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestIsInitialized.sub_message)
  return _msg;
}
inline void TestIsInitialized::set_allocated_sub_message(::edition_unittest::TestIsInitialized_SubMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sub_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestIsInitialized_SubMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestIsInitialized.sub_message)
}

// -------------------------------------------------------------------

// TestDupFieldNumber_Foo

// int32 a = 1;
inline bool TestDupFieldNumber_Foo::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestDupFieldNumber_Foo::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestDupFieldNumber_Foo::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDupFieldNumber.Foo.a)
  return _internal_a();
}
inline void TestDupFieldNumber_Foo::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDupFieldNumber.Foo.a)
}
inline ::int32_t TestDupFieldNumber_Foo::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestDupFieldNumber_Foo::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestDupFieldNumber_Bar

// int32 a = 1;
inline bool TestDupFieldNumber_Bar::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestDupFieldNumber_Bar::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestDupFieldNumber_Bar::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDupFieldNumber.Bar.a)
  return _internal_a();
}
inline void TestDupFieldNumber_Bar::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDupFieldNumber.Bar.a)
}
inline ::int32_t TestDupFieldNumber_Bar::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestDupFieldNumber_Bar::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// TestDupFieldNumber

// int32 a = 1;
inline bool TestDupFieldNumber::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestDupFieldNumber::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestDupFieldNumber::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDupFieldNumber.a)
  return _internal_a();
}
inline void TestDupFieldNumber::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDupFieldNumber.a)
}
inline ::int32_t TestDupFieldNumber::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestDupFieldNumber::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// .edition_unittest.TestDupFieldNumber.Foo foo = 2 [features = {
inline bool TestDupFieldNumber::has_foo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.foo_ != nullptr);
  return value;
}
inline void TestDupFieldNumber::clear_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.foo_ != nullptr) _impl_.foo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestDupFieldNumber_Foo& TestDupFieldNumber::_internal_foo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestDupFieldNumber_Foo* p = _impl_.foo_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestDupFieldNumber_Foo&>(::edition_unittest::_TestDupFieldNumber_Foo_default_instance_);
}
inline const ::edition_unittest::TestDupFieldNumber_Foo& TestDupFieldNumber::foo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDupFieldNumber.foo)
  return _internal_foo();
}
inline void TestDupFieldNumber::unsafe_arena_set_allocated_foo(::edition_unittest::TestDupFieldNumber_Foo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.foo_);
  }
  _impl_.foo_ = reinterpret_cast<::edition_unittest::TestDupFieldNumber_Foo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestDupFieldNumber.foo)
}
inline ::edition_unittest::TestDupFieldNumber_Foo* TestDupFieldNumber::release_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestDupFieldNumber_Foo* released = _impl_.foo_;
  _impl_.foo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestDupFieldNumber_Foo* TestDupFieldNumber::unsafe_arena_release_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestDupFieldNumber.foo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestDupFieldNumber_Foo* temp = _impl_.foo_;
  _impl_.foo_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestDupFieldNumber_Foo* TestDupFieldNumber::_internal_mutable_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.foo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestDupFieldNumber_Foo>(GetArena());
    _impl_.foo_ = reinterpret_cast<::edition_unittest::TestDupFieldNumber_Foo*>(p);
  }
  return _impl_.foo_;
}
inline ::edition_unittest::TestDupFieldNumber_Foo* TestDupFieldNumber::mutable_foo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestDupFieldNumber_Foo* _msg = _internal_mutable_foo();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestDupFieldNumber.foo)
  return _msg;
}
inline void TestDupFieldNumber::set_allocated_foo(::edition_unittest::TestDupFieldNumber_Foo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.foo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.foo_ = reinterpret_cast<::edition_unittest::TestDupFieldNumber_Foo*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestDupFieldNumber.foo)
}

// .edition_unittest.TestDupFieldNumber.Bar bar = 3 [features = {
inline bool TestDupFieldNumber::has_bar() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bar_ != nullptr);
  return value;
}
inline void TestDupFieldNumber::clear_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bar_ != nullptr) _impl_.bar_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestDupFieldNumber_Bar& TestDupFieldNumber::_internal_bar() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestDupFieldNumber_Bar* p = _impl_.bar_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestDupFieldNumber_Bar&>(::edition_unittest::_TestDupFieldNumber_Bar_default_instance_);
}
inline const ::edition_unittest::TestDupFieldNumber_Bar& TestDupFieldNumber::bar() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDupFieldNumber.bar)
  return _internal_bar();
}
inline void TestDupFieldNumber::unsafe_arena_set_allocated_bar(::edition_unittest::TestDupFieldNumber_Bar* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bar_);
  }
  _impl_.bar_ = reinterpret_cast<::edition_unittest::TestDupFieldNumber_Bar*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestDupFieldNumber.bar)
}
inline ::edition_unittest::TestDupFieldNumber_Bar* TestDupFieldNumber::release_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestDupFieldNumber_Bar* released = _impl_.bar_;
  _impl_.bar_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestDupFieldNumber_Bar* TestDupFieldNumber::unsafe_arena_release_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestDupFieldNumber.bar)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestDupFieldNumber_Bar* temp = _impl_.bar_;
  _impl_.bar_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestDupFieldNumber_Bar* TestDupFieldNumber::_internal_mutable_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bar_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestDupFieldNumber_Bar>(GetArena());
    _impl_.bar_ = reinterpret_cast<::edition_unittest::TestDupFieldNumber_Bar*>(p);
  }
  return _impl_.bar_;
}
inline ::edition_unittest::TestDupFieldNumber_Bar* TestDupFieldNumber::mutable_bar() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestDupFieldNumber_Bar* _msg = _internal_mutable_bar();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestDupFieldNumber.bar)
  return _msg;
}
inline void TestDupFieldNumber::set_allocated_bar(::edition_unittest::TestDupFieldNumber_Bar* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bar_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.bar_ = reinterpret_cast<::edition_unittest::TestDupFieldNumber_Bar*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestDupFieldNumber.bar)
}

// -------------------------------------------------------------------

// TestEagerMessage

// .edition_unittest.TestAllTypes sub_message = 1 [lazy = false];
inline bool TestEagerMessage::has_sub_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sub_message_ != nullptr);
  return value;
}
inline void TestEagerMessage::clear_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_message_ != nullptr) _impl_.sub_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestEagerMessage::_internal_sub_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.sub_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestEagerMessage::sub_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestEagerMessage.sub_message)
  return _internal_sub_message();
}
inline void TestEagerMessage::unsafe_arena_set_allocated_sub_message(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sub_message_);
  }
  _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestEagerMessage.sub_message)
}
inline ::edition_unittest::TestAllTypes* TestEagerMessage::release_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.sub_message_;
  _impl_.sub_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestEagerMessage::unsafe_arena_release_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestEagerMessage.sub_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.sub_message_;
  _impl_.sub_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestEagerMessage::_internal_mutable_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.sub_message_;
}
inline ::edition_unittest::TestAllTypes* TestEagerMessage::mutable_sub_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_sub_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestEagerMessage.sub_message)
  return _msg;
}
inline void TestEagerMessage::set_allocated_sub_message(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sub_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestEagerMessage.sub_message)
}

// -------------------------------------------------------------------

// TestLazyMessage

// .edition_unittest.TestAllTypes sub_message = 1 [lazy = true];
inline bool TestLazyMessage::has_sub_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sub_message_ != nullptr);
  return value;
}
inline void TestLazyMessage::clear_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_message_ != nullptr) _impl_.sub_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestLazyMessage::_internal_sub_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.sub_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestLazyMessage::sub_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestLazyMessage.sub_message)
  return _internal_sub_message();
}
inline void TestLazyMessage::unsafe_arena_set_allocated_sub_message(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sub_message_);
  }
  _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestLazyMessage.sub_message)
}
inline ::edition_unittest::TestAllTypes* TestLazyMessage::release_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.sub_message_;
  _impl_.sub_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestLazyMessage::unsafe_arena_release_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestLazyMessage.sub_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.sub_message_;
  _impl_.sub_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestLazyMessage::_internal_mutable_sub_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.sub_message_;
}
inline ::edition_unittest::TestAllTypes* TestLazyMessage::mutable_sub_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_sub_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestLazyMessage.sub_message)
  return _msg;
}
inline void TestLazyMessage::set_allocated_sub_message(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sub_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sub_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestLazyMessage.sub_message)
}

// -------------------------------------------------------------------

// TestLazyMessageRepeated

// repeated .edition_unittest.TestLazyMessage repeated_message = 1;
inline int TestLazyMessageRepeated::_internal_repeated_message_size() const {
  return _internal_repeated_message().size();
}
inline int TestLazyMessageRepeated::repeated_message_size() const {
  return _internal_repeated_message_size();
}
inline void TestLazyMessageRepeated::clear_repeated_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_message_.Clear();
}
inline ::edition_unittest::TestLazyMessage* TestLazyMessageRepeated::mutable_repeated_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestLazyMessageRepeated.repeated_message)
  return _internal_mutable_repeated_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestLazyMessage>* TestLazyMessageRepeated::mutable_repeated_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestLazyMessageRepeated.repeated_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_message();
}
inline const ::edition_unittest::TestLazyMessage& TestLazyMessageRepeated::repeated_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestLazyMessageRepeated.repeated_message)
  return _internal_repeated_message().Get(index);
}
inline ::edition_unittest::TestLazyMessage* TestLazyMessageRepeated::add_repeated_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestLazyMessage* _add = _internal_mutable_repeated_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestLazyMessageRepeated.repeated_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestLazyMessage>& TestLazyMessageRepeated::repeated_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestLazyMessageRepeated.repeated_message)
  return _internal_repeated_message();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestLazyMessage>&
TestLazyMessageRepeated::_internal_repeated_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_message_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestLazyMessage>*
TestLazyMessageRepeated::_internal_mutable_repeated_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_message_;
}

// -------------------------------------------------------------------

// TestEagerMaybeLazy_NestedMessage

// .edition_unittest.TestPackedTypes packed = 1;
inline bool TestEagerMaybeLazy_NestedMessage::has_packed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.packed_ != nullptr);
  return value;
}
inline void TestEagerMaybeLazy_NestedMessage::clear_packed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.packed_ != nullptr) _impl_.packed_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestPackedTypes& TestEagerMaybeLazy_NestedMessage::_internal_packed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestPackedTypes* p = _impl_.packed_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestPackedTypes&>(::edition_unittest::_TestPackedTypes_default_instance_);
}
inline const ::edition_unittest::TestPackedTypes& TestEagerMaybeLazy_NestedMessage::packed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestEagerMaybeLazy.NestedMessage.packed)
  return _internal_packed();
}
inline void TestEagerMaybeLazy_NestedMessage::unsafe_arena_set_allocated_packed(::edition_unittest::TestPackedTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.packed_);
  }
  _impl_.packed_ = reinterpret_cast<::edition_unittest::TestPackedTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestEagerMaybeLazy.NestedMessage.packed)
}
inline ::edition_unittest::TestPackedTypes* TestEagerMaybeLazy_NestedMessage::release_packed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestPackedTypes* released = _impl_.packed_;
  _impl_.packed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestPackedTypes* TestEagerMaybeLazy_NestedMessage::unsafe_arena_release_packed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestEagerMaybeLazy.NestedMessage.packed)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestPackedTypes* temp = _impl_.packed_;
  _impl_.packed_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestPackedTypes* TestEagerMaybeLazy_NestedMessage::_internal_mutable_packed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.packed_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestPackedTypes>(GetArena());
    _impl_.packed_ = reinterpret_cast<::edition_unittest::TestPackedTypes*>(p);
  }
  return _impl_.packed_;
}
inline ::edition_unittest::TestPackedTypes* TestEagerMaybeLazy_NestedMessage::mutable_packed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestPackedTypes* _msg = _internal_mutable_packed();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestEagerMaybeLazy.NestedMessage.packed)
  return _msg;
}
inline void TestEagerMaybeLazy_NestedMessage::set_allocated_packed(::edition_unittest::TestPackedTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.packed_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.packed_ = reinterpret_cast<::edition_unittest::TestPackedTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestEagerMaybeLazy.NestedMessage.packed)
}

// -------------------------------------------------------------------

// TestEagerMaybeLazy

// .edition_unittest.TestAllTypes message_foo = 1;
inline bool TestEagerMaybeLazy::has_message_foo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_foo_ != nullptr);
  return value;
}
inline void TestEagerMaybeLazy::clear_message_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_foo_ != nullptr) _impl_.message_foo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestEagerMaybeLazy::_internal_message_foo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.message_foo_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestEagerMaybeLazy::message_foo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestEagerMaybeLazy.message_foo)
  return _internal_message_foo();
}
inline void TestEagerMaybeLazy::unsafe_arena_set_allocated_message_foo(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_foo_);
  }
  _impl_.message_foo_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestEagerMaybeLazy.message_foo)
}
inline ::edition_unittest::TestAllTypes* TestEagerMaybeLazy::release_message_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.message_foo_;
  _impl_.message_foo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestEagerMaybeLazy::unsafe_arena_release_message_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestEagerMaybeLazy.message_foo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.message_foo_;
  _impl_.message_foo_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestEagerMaybeLazy::_internal_mutable_message_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_foo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.message_foo_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.message_foo_;
}
inline ::edition_unittest::TestAllTypes* TestEagerMaybeLazy::mutable_message_foo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_message_foo();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestEagerMaybeLazy.message_foo)
  return _msg;
}
inline void TestEagerMaybeLazy::set_allocated_message_foo(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.message_foo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_foo_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestEagerMaybeLazy.message_foo)
}

// .edition_unittest.TestAllTypes message_bar = 2;
inline bool TestEagerMaybeLazy::has_message_bar() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_bar_ != nullptr);
  return value;
}
inline void TestEagerMaybeLazy::clear_message_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_bar_ != nullptr) _impl_.message_bar_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestAllTypes& TestEagerMaybeLazy::_internal_message_bar() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.message_bar_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestEagerMaybeLazy::message_bar() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestEagerMaybeLazy.message_bar)
  return _internal_message_bar();
}
inline void TestEagerMaybeLazy::unsafe_arena_set_allocated_message_bar(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_bar_);
  }
  _impl_.message_bar_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestEagerMaybeLazy.message_bar)
}
inline ::edition_unittest::TestAllTypes* TestEagerMaybeLazy::release_message_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* released = _impl_.message_bar_;
  _impl_.message_bar_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestEagerMaybeLazy::unsafe_arena_release_message_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestEagerMaybeLazy.message_bar)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* temp = _impl_.message_bar_;
  _impl_.message_bar_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestEagerMaybeLazy::_internal_mutable_message_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_bar_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.message_bar_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.message_bar_;
}
inline ::edition_unittest::TestAllTypes* TestEagerMaybeLazy::mutable_message_bar() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_message_bar();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestEagerMaybeLazy.message_bar)
  return _msg;
}
inline void TestEagerMaybeLazy::set_allocated_message_bar(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.message_bar_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.message_bar_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestEagerMaybeLazy.message_bar)
}

// .edition_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
inline bool TestEagerMaybeLazy::has_message_baz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_baz_ != nullptr);
  return value;
}
inline void TestEagerMaybeLazy::clear_message_baz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_baz_ != nullptr) _impl_.message_baz_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::TestEagerMaybeLazy_NestedMessage& TestEagerMaybeLazy::_internal_message_baz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestEagerMaybeLazy_NestedMessage* p = _impl_.message_baz_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestEagerMaybeLazy_NestedMessage&>(::edition_unittest::_TestEagerMaybeLazy_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestEagerMaybeLazy_NestedMessage& TestEagerMaybeLazy::message_baz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestEagerMaybeLazy.message_baz)
  return _internal_message_baz();
}
inline void TestEagerMaybeLazy::unsafe_arena_set_allocated_message_baz(::edition_unittest::TestEagerMaybeLazy_NestedMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_baz_);
  }
  _impl_.message_baz_ = reinterpret_cast<::edition_unittest::TestEagerMaybeLazy_NestedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestEagerMaybeLazy.message_baz)
}
inline ::edition_unittest::TestEagerMaybeLazy_NestedMessage* TestEagerMaybeLazy::release_message_baz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestEagerMaybeLazy_NestedMessage* released = _impl_.message_baz_;
  _impl_.message_baz_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestEagerMaybeLazy_NestedMessage* TestEagerMaybeLazy::unsafe_arena_release_message_baz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestEagerMaybeLazy.message_baz)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestEagerMaybeLazy_NestedMessage* temp = _impl_.message_baz_;
  _impl_.message_baz_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestEagerMaybeLazy_NestedMessage* TestEagerMaybeLazy::_internal_mutable_message_baz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_baz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestEagerMaybeLazy_NestedMessage>(GetArena());
    _impl_.message_baz_ = reinterpret_cast<::edition_unittest::TestEagerMaybeLazy_NestedMessage*>(p);
  }
  return _impl_.message_baz_;
}
inline ::edition_unittest::TestEagerMaybeLazy_NestedMessage* TestEagerMaybeLazy::mutable_message_baz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::TestEagerMaybeLazy_NestedMessage* _msg = _internal_mutable_message_baz();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestEagerMaybeLazy.message_baz)
  return _msg;
}
inline void TestEagerMaybeLazy::set_allocated_message_baz(::edition_unittest::TestEagerMaybeLazy_NestedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.message_baz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.message_baz_ = reinterpret_cast<::edition_unittest::TestEagerMaybeLazy_NestedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestEagerMaybeLazy.message_baz)
}

// -------------------------------------------------------------------

// TestNestedMessageHasBits_NestedMessage

// repeated int32 nestedmessage_repeated_int32 = 1;
inline int TestNestedMessageHasBits_NestedMessage::_internal_nestedmessage_repeated_int32_size() const {
  return _internal_nestedmessage_repeated_int32().size();
}
inline int TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_int32_size() const {
  return _internal_nestedmessage_repeated_int32_size();
}
inline void TestNestedMessageHasBits_NestedMessage::clear_nestedmessage_repeated_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nestedmessage_repeated_int32_.Clear();
}
inline ::int32_t TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
  return _internal_nestedmessage_repeated_int32().Get(index);
}
inline void TestNestedMessageHasBits_NestedMessage::set_nestedmessage_repeated_int32(int index, ::int32_t value) {
  _internal_mutable_nestedmessage_repeated_int32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
}
inline void TestNestedMessageHasBits_NestedMessage::add_nestedmessage_repeated_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_nestedmessage_repeated_int32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_int32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
  return _internal_nestedmessage_repeated_int32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestNestedMessageHasBits_NestedMessage::mutable_nestedmessage_repeated_int32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_int32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nestedmessage_repeated_int32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestNestedMessageHasBits_NestedMessage::_internal_nestedmessage_repeated_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nestedmessage_repeated_int32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestNestedMessageHasBits_NestedMessage::_internal_mutable_nestedmessage_repeated_int32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nestedmessage_repeated_int32_;
}

// repeated .edition_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
inline int TestNestedMessageHasBits_NestedMessage::_internal_nestedmessage_repeated_foreignmessage_size() const {
  return _internal_nestedmessage_repeated_foreignmessage().size();
}
inline int TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_foreignmessage_size() const {
  return _internal_nestedmessage_repeated_foreignmessage_size();
}
inline void TestNestedMessageHasBits_NestedMessage::clear_nestedmessage_repeated_foreignmessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nestedmessage_repeated_foreignmessage_.Clear();
}
inline ::edition_unittest::ForeignMessage* TestNestedMessageHasBits_NestedMessage::mutable_nestedmessage_repeated_foreignmessage(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return _internal_mutable_nestedmessage_repeated_foreignmessage()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* TestNestedMessageHasBits_NestedMessage::mutable_nestedmessage_repeated_foreignmessage()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nestedmessage_repeated_foreignmessage();
}
inline const ::edition_unittest::ForeignMessage& TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_foreignmessage(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return _internal_nestedmessage_repeated_foreignmessage().Get(index);
}
inline ::edition_unittest::ForeignMessage* TestNestedMessageHasBits_NestedMessage::add_nestedmessage_repeated_foreignmessage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::ForeignMessage* _add = _internal_mutable_nestedmessage_repeated_foreignmessage()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& TestNestedMessageHasBits_NestedMessage::nestedmessage_repeated_foreignmessage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestNestedMessageHasBits.NestedMessage.nestedmessage_repeated_foreignmessage)
  return _internal_nestedmessage_repeated_foreignmessage();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>&
TestNestedMessageHasBits_NestedMessage::_internal_nestedmessage_repeated_foreignmessage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nestedmessage_repeated_foreignmessage_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>*
TestNestedMessageHasBits_NestedMessage::_internal_mutable_nestedmessage_repeated_foreignmessage() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nestedmessage_repeated_foreignmessage_;
}

// -------------------------------------------------------------------

// TestNestedMessageHasBits

// .edition_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
inline bool TestNestedMessageHasBits::has_optional_nested_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_nested_message_ != nullptr);
  return value;
}
inline void TestNestedMessageHasBits::clear_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_message_ != nullptr) _impl_.optional_nested_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestNestedMessageHasBits_NestedMessage& TestNestedMessageHasBits::_internal_optional_nested_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestNestedMessageHasBits_NestedMessage* p = _impl_.optional_nested_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestNestedMessageHasBits_NestedMessage&>(::edition_unittest::_TestNestedMessageHasBits_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestNestedMessageHasBits_NestedMessage& TestNestedMessageHasBits::optional_nested_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedMessageHasBits.optional_nested_message)
  return _internal_optional_nested_message();
}
inline void TestNestedMessageHasBits::unsafe_arena_set_allocated_optional_nested_message(::edition_unittest::TestNestedMessageHasBits_NestedMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_nested_message_);
  }
  _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageHasBits_NestedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedMessageHasBits.optional_nested_message)
}
inline ::edition_unittest::TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits::release_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestNestedMessageHasBits_NestedMessage* released = _impl_.optional_nested_message_;
  _impl_.optional_nested_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits::unsafe_arena_release_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedMessageHasBits.optional_nested_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestNestedMessageHasBits_NestedMessage* temp = _impl_.optional_nested_message_;
  _impl_.optional_nested_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits::_internal_mutable_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestNestedMessageHasBits_NestedMessage>(GetArena());
    _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageHasBits_NestedMessage*>(p);
  }
  return _impl_.optional_nested_message_;
}
inline ::edition_unittest::TestNestedMessageHasBits_NestedMessage* TestNestedMessageHasBits::mutable_optional_nested_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestNestedMessageHasBits_NestedMessage* _msg = _internal_mutable_optional_nested_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedMessageHasBits.optional_nested_message)
  return _msg;
}
inline void TestNestedMessageHasBits::set_allocated_optional_nested_message(::edition_unittest::TestNestedMessageHasBits_NestedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_nested_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageHasBits_NestedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedMessageHasBits.optional_nested_message)
}

// -------------------------------------------------------------------

// TestCamelCaseFieldNames

// int32 PrimitiveField = 1;
inline bool TestCamelCaseFieldNames::has_primitivefield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestCamelCaseFieldNames::clear_primitivefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.primitivefield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestCamelCaseFieldNames::primitivefield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.PrimitiveField)
  return _internal_primitivefield();
}
inline void TestCamelCaseFieldNames::set_primitivefield(::int32_t value) {
  _internal_set_primitivefield(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.PrimitiveField)
}
inline ::int32_t TestCamelCaseFieldNames::_internal_primitivefield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.primitivefield_;
}
inline void TestCamelCaseFieldNames::_internal_set_primitivefield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.primitivefield_ = value;
}

// string StringField = 2;
inline bool TestCamelCaseFieldNames::has_stringfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestCamelCaseFieldNames::clear_stringfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stringfield_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestCamelCaseFieldNames::stringfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.StringField)
  return _internal_stringfield();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestCamelCaseFieldNames::set_stringfield(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.stringfield_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.StringField)
}
inline const std::string& TestCamelCaseFieldNames::_internal_stringfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stringfield_.Get();
}
inline void TestCamelCaseFieldNames::_internal_set_stringfield(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.stringfield_.Set(value, GetArena());
}

// .edition_unittest.ForeignEnum EnumField = 3;
inline bool TestCamelCaseFieldNames::has_enumfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestCamelCaseFieldNames::clear_enumfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enumfield_ = 4;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::edition_unittest::ForeignEnum TestCamelCaseFieldNames::enumfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.EnumField)
  return _internal_enumfield();
}
inline void TestCamelCaseFieldNames::set_enumfield(::edition_unittest::ForeignEnum value) {
  _internal_set_enumfield(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.EnumField)
}
inline ::edition_unittest::ForeignEnum TestCamelCaseFieldNames::_internal_enumfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.enumfield_);
}
inline void TestCamelCaseFieldNames::_internal_set_enumfield(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.enumfield_ = value;
}

// .edition_unittest.ForeignMessage MessageField = 4;
inline bool TestCamelCaseFieldNames::has_messagefield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.messagefield_ != nullptr);
  return value;
}
inline void TestCamelCaseFieldNames::clear_messagefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.messagefield_ != nullptr) _impl_.messagefield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::edition_unittest::ForeignMessage& TestCamelCaseFieldNames::_internal_messagefield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::ForeignMessage* p = _impl_.messagefield_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::ForeignMessage&>(::edition_unittest::_ForeignMessage_default_instance_);
}
inline const ::edition_unittest::ForeignMessage& TestCamelCaseFieldNames::messagefield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.MessageField)
  return _internal_messagefield();
}
inline void TestCamelCaseFieldNames::unsafe_arena_set_allocated_messagefield(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.messagefield_);
  }
  _impl_.messagefield_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestCamelCaseFieldNames.MessageField)
}
inline ::edition_unittest::ForeignMessage* TestCamelCaseFieldNames::release_messagefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::ForeignMessage* released = _impl_.messagefield_;
  _impl_.messagefield_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::ForeignMessage* TestCamelCaseFieldNames::unsafe_arena_release_messagefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestCamelCaseFieldNames.MessageField)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::ForeignMessage* temp = _impl_.messagefield_;
  _impl_.messagefield_ = nullptr;
  return temp;
}
inline ::edition_unittest::ForeignMessage* TestCamelCaseFieldNames::_internal_mutable_messagefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.messagefield_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::ForeignMessage>(GetArena());
    _impl_.messagefield_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(p);
  }
  return _impl_.messagefield_;
}
inline ::edition_unittest::ForeignMessage* TestCamelCaseFieldNames::mutable_messagefield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::edition_unittest::ForeignMessage* _msg = _internal_mutable_messagefield();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestCamelCaseFieldNames.MessageField)
  return _msg;
}
inline void TestCamelCaseFieldNames::set_allocated_messagefield(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.messagefield_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.messagefield_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestCamelCaseFieldNames.MessageField)
}

// string StringPieceField = 5 [ctype = STRING_PIECE];
inline bool TestCamelCaseFieldNames::has_stringpiecefield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestCamelCaseFieldNames::clear_stringpiecefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stringpiecefield_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& TestCamelCaseFieldNames::stringpiecefield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.StringPieceField)
  return _internal_stringpiecefield();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestCamelCaseFieldNames::set_stringpiecefield(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.stringpiecefield_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.StringPieceField)
}
inline std::string* TestCamelCaseFieldNames::mutable_stringpiecefield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stringpiecefield();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestCamelCaseFieldNames.StringPieceField)
  return _s;
}
inline const std::string& TestCamelCaseFieldNames::_internal_stringpiecefield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stringpiecefield_.Get();
}
inline void TestCamelCaseFieldNames::_internal_set_stringpiecefield(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.stringpiecefield_.Set(value, GetArena());
}
inline std::string* TestCamelCaseFieldNames::_internal_mutable_stringpiecefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.stringpiecefield_.Mutable( GetArena());
}
inline std::string* TestCamelCaseFieldNames::release_stringpiecefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestCamelCaseFieldNames.StringPieceField)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.stringpiecefield_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.stringpiecefield_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestCamelCaseFieldNames::set_allocated_stringpiecefield(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.stringpiecefield_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.stringpiecefield_.IsDefault()) {
          _impl_.stringpiecefield_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestCamelCaseFieldNames.StringPieceField)
}

// string CordField = 6 [ctype = CORD];
inline bool TestCamelCaseFieldNames::has_cordfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestCamelCaseFieldNames::clear_cordfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cordfield_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& TestCamelCaseFieldNames::cordfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.CordField)
  return _internal_cordfield();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestCamelCaseFieldNames::set_cordfield(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.cordfield_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.CordField)
}
inline std::string* TestCamelCaseFieldNames::mutable_cordfield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cordfield();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestCamelCaseFieldNames.CordField)
  return _s;
}
inline const std::string& TestCamelCaseFieldNames::_internal_cordfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cordfield_.Get();
}
inline void TestCamelCaseFieldNames::_internal_set_cordfield(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.cordfield_.Set(value, GetArena());
}
inline std::string* TestCamelCaseFieldNames::_internal_mutable_cordfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.cordfield_.Mutable( GetArena());
}
inline std::string* TestCamelCaseFieldNames::release_cordfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestCamelCaseFieldNames.CordField)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.cordfield_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cordfield_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestCamelCaseFieldNames::set_allocated_cordfield(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.cordfield_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cordfield_.IsDefault()) {
          _impl_.cordfield_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestCamelCaseFieldNames.CordField)
}

// repeated int32 RepeatedPrimitiveField = 7;
inline int TestCamelCaseFieldNames::_internal_repeatedprimitivefield_size() const {
  return _internal_repeatedprimitivefield().size();
}
inline int TestCamelCaseFieldNames::repeatedprimitivefield_size() const {
  return _internal_repeatedprimitivefield_size();
}
inline void TestCamelCaseFieldNames::clear_repeatedprimitivefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedprimitivefield_.Clear();
}
inline ::int32_t TestCamelCaseFieldNames::repeatedprimitivefield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
  return _internal_repeatedprimitivefield().Get(index);
}
inline void TestCamelCaseFieldNames::set_repeatedprimitivefield(int index, ::int32_t value) {
  _internal_mutable_repeatedprimitivefield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
}
inline void TestCamelCaseFieldNames::add_repeatedprimitivefield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeatedprimitivefield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestCamelCaseFieldNames::repeatedprimitivefield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
  return _internal_repeatedprimitivefield();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestCamelCaseFieldNames::mutable_repeatedprimitivefield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestCamelCaseFieldNames.RepeatedPrimitiveField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedprimitivefield();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestCamelCaseFieldNames::_internal_repeatedprimitivefield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedprimitivefield_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestCamelCaseFieldNames::_internal_mutable_repeatedprimitivefield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedprimitivefield_;
}

// repeated string RepeatedStringField = 8;
inline int TestCamelCaseFieldNames::_internal_repeatedstringfield_size() const {
  return _internal_repeatedstringfield().size();
}
inline int TestCamelCaseFieldNames::repeatedstringfield_size() const {
  return _internal_repeatedstringfield_size();
}
inline void TestCamelCaseFieldNames::clear_repeatedstringfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedstringfield_.Clear();
}
inline absl::string_view TestCamelCaseFieldNames::repeatedstringfield(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  return _internal_repeatedstringfield().Get(index);
}
inline void TestCamelCaseFieldNames::set_repeatedstringfield(int index, const std::string& value) {
  _internal_mutable_repeatedstringfield()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
inline void TestCamelCaseFieldNames::set_repeatedstringfield(int index, std::string&& value) {
  _internal_mutable_repeatedstringfield()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
inline void TestCamelCaseFieldNames::set_repeatedstringfield(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeatedstringfield()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
inline void TestCamelCaseFieldNames::set_repeatedstringfield(int index, absl::string_view value) {
  _internal_mutable_repeatedstringfield()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
inline void TestCamelCaseFieldNames::add_repeatedstringfield(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeatedstringfield()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
inline void TestCamelCaseFieldNames::add_repeatedstringfield(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeatedstringfield()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
inline void TestCamelCaseFieldNames::add_repeatedstringfield(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeatedstringfield()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
inline void TestCamelCaseFieldNames::add_repeatedstringfield(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeatedstringfield()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestCamelCaseFieldNames::repeatedstringfield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  return _internal_repeatedstringfield();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestCamelCaseFieldNames::mutable_repeatedstringfield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestCamelCaseFieldNames.RepeatedStringField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedstringfield();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestCamelCaseFieldNames::_internal_repeatedstringfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedstringfield_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestCamelCaseFieldNames::_internal_mutable_repeatedstringfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedstringfield_;
}

// repeated .edition_unittest.ForeignEnum RepeatedEnumField = 9;
inline int TestCamelCaseFieldNames::_internal_repeatedenumfield_size() const {
  return _internal_repeatedenumfield().size();
}
inline int TestCamelCaseFieldNames::repeatedenumfield_size() const {
  return _internal_repeatedenumfield_size();
}
inline void TestCamelCaseFieldNames::clear_repeatedenumfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedenumfield_.Clear();
}
inline ::edition_unittest::ForeignEnum TestCamelCaseFieldNames::repeatedenumfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
  return static_cast<::edition_unittest::ForeignEnum>(_internal_repeatedenumfield().Get(index));
}
inline void TestCamelCaseFieldNames::set_repeatedenumfield(int index, ::edition_unittest::ForeignEnum value) {
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _internal_mutable_repeatedenumfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
}
inline void TestCamelCaseFieldNames::add_repeatedenumfield(::edition_unittest::ForeignEnum value) {
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeatedenumfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
}
inline const ::google::protobuf::RepeatedField<int>& TestCamelCaseFieldNames::repeatedenumfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
  return _internal_repeatedenumfield();
}
inline ::google::protobuf::RepeatedField<int>* TestCamelCaseFieldNames::mutable_repeatedenumfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestCamelCaseFieldNames.RepeatedEnumField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedenumfield();
}
inline const ::google::protobuf::RepeatedField<int>& TestCamelCaseFieldNames::_internal_repeatedenumfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedenumfield_;
}
inline ::google::protobuf::RepeatedField<int>* TestCamelCaseFieldNames::_internal_mutable_repeatedenumfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedenumfield_;
}

// repeated .edition_unittest.ForeignMessage RepeatedMessageField = 10;
inline int TestCamelCaseFieldNames::_internal_repeatedmessagefield_size() const {
  return _internal_repeatedmessagefield().size();
}
inline int TestCamelCaseFieldNames::repeatedmessagefield_size() const {
  return _internal_repeatedmessagefield_size();
}
inline void TestCamelCaseFieldNames::clear_repeatedmessagefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedmessagefield_.Clear();
}
inline ::edition_unittest::ForeignMessage* TestCamelCaseFieldNames::mutable_repeatedmessagefield(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return _internal_mutable_repeatedmessagefield()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>* TestCamelCaseFieldNames::mutable_repeatedmessagefield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedmessagefield();
}
inline const ::edition_unittest::ForeignMessage& TestCamelCaseFieldNames::repeatedmessagefield(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return _internal_repeatedmessagefield().Get(index);
}
inline ::edition_unittest::ForeignMessage* TestCamelCaseFieldNames::add_repeatedmessagefield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::ForeignMessage* _add = _internal_mutable_repeatedmessagefield()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>& TestCamelCaseFieldNames::repeatedmessagefield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestCamelCaseFieldNames.RepeatedMessageField)
  return _internal_repeatedmessagefield();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>&
TestCamelCaseFieldNames::_internal_repeatedmessagefield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedmessagefield_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::ForeignMessage>*
TestCamelCaseFieldNames::_internal_mutable_repeatedmessagefield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedmessagefield_;
}

// repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
inline int TestCamelCaseFieldNames::_internal_repeatedstringpiecefield_size() const {
  return _internal_repeatedstringpiecefield().size();
}
inline int TestCamelCaseFieldNames::repeatedstringpiecefield_size() const {
  return _internal_repeatedstringpiecefield_size();
}
inline void TestCamelCaseFieldNames::clear_repeatedstringpiecefield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedstringpiecefield_.Clear();
}
inline std::string* TestCamelCaseFieldNames::add_repeatedstringpiecefield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_repeatedstringpiecefield()->Add();
  // @@protoc_insertion_point(field_add_mutable:edition_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return _s;
}
inline const std::string& TestCamelCaseFieldNames::repeatedstringpiecefield(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return _internal_repeatedstringpiecefield().Get(index);
}
inline std::string* TestCamelCaseFieldNames::mutable_repeatedstringpiecefield(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return _internal_mutable_repeatedstringpiecefield()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestCamelCaseFieldNames::set_repeatedstringpiecefield(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_repeatedstringpiecefield()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
}
template <typename Arg_, typename... Args_>
inline void TestCamelCaseFieldNames::add_repeatedstringpiecefield(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_repeatedstringpiecefield(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:edition_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestCamelCaseFieldNames::repeatedstringpiecefield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  return _internal_repeatedstringpiecefield();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestCamelCaseFieldNames::mutable_repeatedstringpiecefield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedstringpiecefield();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestCamelCaseFieldNames::_internal_repeatedstringpiecefield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedstringpiecefield_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestCamelCaseFieldNames::_internal_mutable_repeatedstringpiecefield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedstringpiecefield_;
}

// repeated string RepeatedCordField = 12 [ctype = CORD];
inline int TestCamelCaseFieldNames::_internal_repeatedcordfield_size() const {
  return _internal_repeatedcordfield().size();
}
inline int TestCamelCaseFieldNames::repeatedcordfield_size() const {
  return _internal_repeatedcordfield_size();
}
inline void TestCamelCaseFieldNames::clear_repeatedcordfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedcordfield_.Clear();
}
inline std::string* TestCamelCaseFieldNames::add_repeatedcordfield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_repeatedcordfield()->Add();
  // @@protoc_insertion_point(field_add_mutable:edition_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return _s;
}
inline const std::string& TestCamelCaseFieldNames::repeatedcordfield(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return _internal_repeatedcordfield().Get(index);
}
inline std::string* TestCamelCaseFieldNames::mutable_repeatedcordfield(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return _internal_mutable_repeatedcordfield()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestCamelCaseFieldNames::set_repeatedcordfield(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_repeatedcordfield()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:edition_unittest.TestCamelCaseFieldNames.RepeatedCordField)
}
template <typename Arg_, typename... Args_>
inline void TestCamelCaseFieldNames::add_repeatedcordfield(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_repeatedcordfield(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:edition_unittest.TestCamelCaseFieldNames.RepeatedCordField)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestCamelCaseFieldNames::repeatedcordfield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  return _internal_repeatedcordfield();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestCamelCaseFieldNames::mutable_repeatedcordfield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestCamelCaseFieldNames.RepeatedCordField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedcordfield();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestCamelCaseFieldNames::_internal_repeatedcordfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedcordfield_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestCamelCaseFieldNames::_internal_mutable_repeatedcordfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedcordfield_;
}

// -------------------------------------------------------------------

// TestFieldOrderings_NestedMessage

// int64 oo = 2;
inline bool TestFieldOrderings_NestedMessage::has_oo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestFieldOrderings_NestedMessage::clear_oo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oo_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t TestFieldOrderings_NestedMessage::oo() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestFieldOrderings.NestedMessage.oo)
  return _internal_oo();
}
inline void TestFieldOrderings_NestedMessage::set_oo(::int64_t value) {
  _internal_set_oo(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestFieldOrderings.NestedMessage.oo)
}
inline ::int64_t TestFieldOrderings_NestedMessage::_internal_oo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.oo_;
}
inline void TestFieldOrderings_NestedMessage::_internal_set_oo(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oo_ = value;
}

// int32 bb = 1;
inline bool TestFieldOrderings_NestedMessage::has_bb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestFieldOrderings_NestedMessage::clear_bb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bb_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestFieldOrderings_NestedMessage::bb() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestFieldOrderings.NestedMessage.bb)
  return _internal_bb();
}
inline void TestFieldOrderings_NestedMessage::set_bb(::int32_t value) {
  _internal_set_bb(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestFieldOrderings.NestedMessage.bb)
}
inline ::int32_t TestFieldOrderings_NestedMessage::_internal_bb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bb_;
}
inline void TestFieldOrderings_NestedMessage::_internal_set_bb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bb_ = value;
}

// -------------------------------------------------------------------

// TestFieldOrderings

// string my_string = 11;
inline bool TestFieldOrderings::has_my_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestFieldOrderings::clear_my_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestFieldOrderings::my_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestFieldOrderings.my_string)
  return _internal_my_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestFieldOrderings::set_my_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.my_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestFieldOrderings.my_string)
}
inline const std::string& TestFieldOrderings::_internal_my_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_string_.Get();
}
inline void TestFieldOrderings::_internal_set_my_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.my_string_.Set(value, GetArena());
}

// int64 my_int = 1;
inline bool TestFieldOrderings::has_my_int() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestFieldOrderings::clear_my_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_int_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t TestFieldOrderings::my_int() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestFieldOrderings.my_int)
  return _internal_my_int();
}
inline void TestFieldOrderings::set_my_int(::int64_t value) {
  _internal_set_my_int(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestFieldOrderings.my_int)
}
inline ::int64_t TestFieldOrderings::_internal_my_int() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_int_;
}
inline void TestFieldOrderings::_internal_set_my_int(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_int_ = value;
}

// float my_float = 101;
inline bool TestFieldOrderings::has_my_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestFieldOrderings::clear_my_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_float_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float TestFieldOrderings::my_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestFieldOrderings.my_float)
  return _internal_my_float();
}
inline void TestFieldOrderings::set_my_float(float value) {
  _internal_set_my_float(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestFieldOrderings.my_float)
}
inline float TestFieldOrderings::_internal_my_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_float_;
}
inline void TestFieldOrderings::_internal_set_my_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_float_ = value;
}

// .edition_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
inline bool TestFieldOrderings::has_optional_nested_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_nested_message_ != nullptr);
  return value;
}
inline void TestFieldOrderings::clear_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_message_ != nullptr) _impl_.optional_nested_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestFieldOrderings_NestedMessage& TestFieldOrderings::_internal_optional_nested_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestFieldOrderings_NestedMessage* p = _impl_.optional_nested_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestFieldOrderings_NestedMessage&>(::edition_unittest::_TestFieldOrderings_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestFieldOrderings_NestedMessage& TestFieldOrderings::optional_nested_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestFieldOrderings.optional_nested_message)
  return _internal_optional_nested_message();
}
inline void TestFieldOrderings::unsafe_arena_set_allocated_optional_nested_message(::edition_unittest::TestFieldOrderings_NestedMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_nested_message_);
  }
  _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestFieldOrderings_NestedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestFieldOrderings.optional_nested_message)
}
inline ::edition_unittest::TestFieldOrderings_NestedMessage* TestFieldOrderings::release_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestFieldOrderings_NestedMessage* released = _impl_.optional_nested_message_;
  _impl_.optional_nested_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestFieldOrderings_NestedMessage* TestFieldOrderings::unsafe_arena_release_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestFieldOrderings.optional_nested_message)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestFieldOrderings_NestedMessage* temp = _impl_.optional_nested_message_;
  _impl_.optional_nested_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestFieldOrderings_NestedMessage* TestFieldOrderings::_internal_mutable_optional_nested_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestFieldOrderings_NestedMessage>(GetArena());
    _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestFieldOrderings_NestedMessage*>(p);
  }
  return _impl_.optional_nested_message_;
}
inline ::edition_unittest::TestFieldOrderings_NestedMessage* TestFieldOrderings::mutable_optional_nested_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestFieldOrderings_NestedMessage* _msg = _internal_mutable_optional_nested_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestFieldOrderings.optional_nested_message)
  return _msg;
}
inline void TestFieldOrderings::set_allocated_optional_nested_message(::edition_unittest::TestFieldOrderings_NestedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_nested_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.optional_nested_message_ = reinterpret_cast<::edition_unittest::TestFieldOrderings_NestedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestFieldOrderings.optional_nested_message)
}

// -------------------------------------------------------------------

// TestExtensionOrderings1

// string my_string = 1;
inline bool TestExtensionOrderings1::has_my_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestExtensionOrderings1::clear_my_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestExtensionOrderings1::my_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionOrderings1.my_string)
  return _internal_my_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtensionOrderings1::set_my_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.my_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionOrderings1.my_string)
}
inline const std::string& TestExtensionOrderings1::_internal_my_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_string_.Get();
}
inline void TestExtensionOrderings1::_internal_set_my_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.my_string_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestExtensionOrderings2_TestExtensionOrderings3

// string my_string = 1;
inline bool TestExtensionOrderings2_TestExtensionOrderings3::has_my_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestExtensionOrderings2_TestExtensionOrderings3::clear_my_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestExtensionOrderings2_TestExtensionOrderings3::my_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionOrderings2.TestExtensionOrderings3.my_string)
  return _internal_my_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtensionOrderings2_TestExtensionOrderings3::set_my_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.my_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionOrderings2.TestExtensionOrderings3.my_string)
}
inline const std::string& TestExtensionOrderings2_TestExtensionOrderings3::_internal_my_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_string_.Get();
}
inline void TestExtensionOrderings2_TestExtensionOrderings3::_internal_set_my_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.my_string_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestExtensionOrderings2

// string my_string = 1;
inline bool TestExtensionOrderings2::has_my_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestExtensionOrderings2::clear_my_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestExtensionOrderings2::my_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionOrderings2.my_string)
  return _internal_my_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtensionOrderings2::set_my_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.my_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionOrderings2.my_string)
}
inline const std::string& TestExtensionOrderings2::_internal_my_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_string_.Get();
}
inline void TestExtensionOrderings2::_internal_set_my_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.my_string_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestExtremeDefaultValues

// bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
inline bool TestExtremeDefaultValues::has_escaped_bytes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_escaped_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escaped_bytes_.ClearToDefault(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_escaped_bytes_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestExtremeDefaultValues::escaped_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.escaped_bytes)
  if (_impl_.escaped_bytes_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_escaped_bytes_.get();
  }
  return _internal_escaped_bytes();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtremeDefaultValues::set_escaped_bytes(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.escaped_bytes_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.escaped_bytes)
}
inline const std::string& TestExtremeDefaultValues::_internal_escaped_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escaped_bytes_.Get();
}
inline void TestExtremeDefaultValues::_internal_set_escaped_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.escaped_bytes_.Set(value, GetArena());
}

// uint32 large_uint32 = 2 [default = 4294967295];
inline bool TestExtremeDefaultValues::has_large_uint32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_large_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.large_uint32_ = 4294967295u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t TestExtremeDefaultValues::large_uint32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.large_uint32)
  return _internal_large_uint32();
}
inline void TestExtremeDefaultValues::set_large_uint32(::uint32_t value) {
  _internal_set_large_uint32(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.large_uint32)
}
inline ::uint32_t TestExtremeDefaultValues::_internal_large_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.large_uint32_;
}
inline void TestExtremeDefaultValues::_internal_set_large_uint32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.large_uint32_ = value;
}

// uint64 large_uint64 = 3 [default = 18446744073709551615];
inline bool TestExtremeDefaultValues::has_large_uint64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_large_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.large_uint64_ = ::uint64_t{18446744073709551615u};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint64_t TestExtremeDefaultValues::large_uint64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.large_uint64)
  return _internal_large_uint64();
}
inline void TestExtremeDefaultValues::set_large_uint64(::uint64_t value) {
  _internal_set_large_uint64(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.large_uint64)
}
inline ::uint64_t TestExtremeDefaultValues::_internal_large_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.large_uint64_;
}
inline void TestExtremeDefaultValues::_internal_set_large_uint64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.large_uint64_ = value;
}

// int32 small_int32 = 4 [default = -2147483647];
inline bool TestExtremeDefaultValues::has_small_int32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_small_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.small_int32_ = -2147483647;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int32_t TestExtremeDefaultValues::small_int32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.small_int32)
  return _internal_small_int32();
}
inline void TestExtremeDefaultValues::set_small_int32(::int32_t value) {
  _internal_set_small_int32(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.small_int32)
}
inline ::int32_t TestExtremeDefaultValues::_internal_small_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.small_int32_;
}
inline void TestExtremeDefaultValues::_internal_set_small_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.small_int32_ = value;
}

// int64 small_int64 = 5 [default = -9223372036854775807];
inline bool TestExtremeDefaultValues::has_small_int64() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_small_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.small_int64_ = ::int64_t{-9223372036854775807};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t TestExtremeDefaultValues::small_int64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.small_int64)
  return _internal_small_int64();
}
inline void TestExtremeDefaultValues::set_small_int64(::int64_t value) {
  _internal_set_small_int64(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.small_int64)
}
inline ::int64_t TestExtremeDefaultValues::_internal_small_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.small_int64_;
}
inline void TestExtremeDefaultValues::_internal_set_small_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.small_int64_ = value;
}

// int32 really_small_int32 = 21 [default = -2147483648];
inline bool TestExtremeDefaultValues::has_really_small_int32() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_really_small_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.really_small_int32_ = -2147483647 - 1;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::int32_t TestExtremeDefaultValues::really_small_int32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.really_small_int32)
  return _internal_really_small_int32();
}
inline void TestExtremeDefaultValues::set_really_small_int32(::int32_t value) {
  _internal_set_really_small_int32(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.really_small_int32)
}
inline ::int32_t TestExtremeDefaultValues::_internal_really_small_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.really_small_int32_;
}
inline void TestExtremeDefaultValues::_internal_set_really_small_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.really_small_int32_ = value;
}

// int64 really_small_int64 = 22 [default = -9223372036854775808];
inline bool TestExtremeDefaultValues::has_really_small_int64() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_really_small_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.really_small_int64_ = ::int64_t{-9223372036854775807} - 1;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline ::int64_t TestExtremeDefaultValues::really_small_int64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.really_small_int64)
  return _internal_really_small_int64();
}
inline void TestExtremeDefaultValues::set_really_small_int64(::int64_t value) {
  _internal_set_really_small_int64(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.really_small_int64)
}
inline ::int64_t TestExtremeDefaultValues::_internal_really_small_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.really_small_int64_;
}
inline void TestExtremeDefaultValues::_internal_set_really_small_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.really_small_int64_ = value;
}

// string utf8_string = 6 [default = "\341\210\264"];
inline bool TestExtremeDefaultValues::has_utf8_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_utf8_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.utf8_string_.ClearToDefault(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_utf8_string_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view TestExtremeDefaultValues::utf8_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.utf8_string)
  if (_impl_.utf8_string_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_utf8_string_.get();
  }
  return _internal_utf8_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtremeDefaultValues::set_utf8_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.utf8_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.utf8_string)
}
inline const std::string& TestExtremeDefaultValues::_internal_utf8_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.utf8_string_.Get();
}
inline void TestExtremeDefaultValues::_internal_set_utf8_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.utf8_string_.Set(value, GetArena());
}

// float zero_float = 7 [default = 0];
inline bool TestExtremeDefaultValues::has_zero_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_zero_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_float_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline float TestExtremeDefaultValues::zero_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.zero_float)
  return _internal_zero_float();
}
inline void TestExtremeDefaultValues::set_zero_float(float value) {
  _internal_set_zero_float(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.zero_float)
}
inline float TestExtremeDefaultValues::_internal_zero_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zero_float_;
}
inline void TestExtremeDefaultValues::_internal_set_zero_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_float_ = value;
}

// float one_float = 8 [default = 1];
inline bool TestExtremeDefaultValues::has_one_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_one_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.one_float_ = 1;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline float TestExtremeDefaultValues::one_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.one_float)
  return _internal_one_float();
}
inline void TestExtremeDefaultValues::set_one_float(float value) {
  _internal_set_one_float(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.one_float)
}
inline float TestExtremeDefaultValues::_internal_one_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.one_float_;
}
inline void TestExtremeDefaultValues::_internal_set_one_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.one_float_ = value;
}

// float small_float = 9 [default = 1.5];
inline bool TestExtremeDefaultValues::has_small_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_small_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.small_float_ = 1.5f;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline float TestExtremeDefaultValues::small_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.small_float)
  return _internal_small_float();
}
inline void TestExtremeDefaultValues::set_small_float(float value) {
  _internal_set_small_float(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.small_float)
}
inline float TestExtremeDefaultValues::_internal_small_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.small_float_;
}
inline void TestExtremeDefaultValues::_internal_set_small_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.small_float_ = value;
}

// float negative_one_float = 10 [default = -1];
inline bool TestExtremeDefaultValues::has_negative_one_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_negative_one_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.negative_one_float_ = -1;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline float TestExtremeDefaultValues::negative_one_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.negative_one_float)
  return _internal_negative_one_float();
}
inline void TestExtremeDefaultValues::set_negative_one_float(float value) {
  _internal_set_negative_one_float(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.negative_one_float)
}
inline float TestExtremeDefaultValues::_internal_negative_one_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.negative_one_float_;
}
inline void TestExtremeDefaultValues::_internal_set_negative_one_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.negative_one_float_ = value;
}

// float negative_float = 11 [default = -1.5];
inline bool TestExtremeDefaultValues::has_negative_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_negative_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.negative_float_ = -1.5f;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline float TestExtremeDefaultValues::negative_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.negative_float)
  return _internal_negative_float();
}
inline void TestExtremeDefaultValues::set_negative_float(float value) {
  _internal_set_negative_float(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.negative_float)
}
inline float TestExtremeDefaultValues::_internal_negative_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.negative_float_;
}
inline void TestExtremeDefaultValues::_internal_set_negative_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.negative_float_ = value;
}

// float large_float = 12 [default = 2e+08];
inline bool TestExtremeDefaultValues::has_large_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_large_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.large_float_ = 2e+08f;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline float TestExtremeDefaultValues::large_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.large_float)
  return _internal_large_float();
}
inline void TestExtremeDefaultValues::set_large_float(float value) {
  _internal_set_large_float(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.large_float)
}
inline float TestExtremeDefaultValues::_internal_large_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.large_float_;
}
inline void TestExtremeDefaultValues::_internal_set_large_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.large_float_ = value;
}

// float small_negative_float = 13 [default = -8e-28];
inline bool TestExtremeDefaultValues::has_small_negative_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_small_negative_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.small_negative_float_ = -8e-28f;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline float TestExtremeDefaultValues::small_negative_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.small_negative_float)
  return _internal_small_negative_float();
}
inline void TestExtremeDefaultValues::set_small_negative_float(float value) {
  _internal_set_small_negative_float(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.small_negative_float)
}
inline float TestExtremeDefaultValues::_internal_small_negative_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.small_negative_float_;
}
inline void TestExtremeDefaultValues::_internal_set_small_negative_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.small_negative_float_ = value;
}

// double inf_double = 14 [default = inf];
inline bool TestExtremeDefaultValues::has_inf_double() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_inf_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inf_double_ = std::numeric_limits<double>::infinity();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline double TestExtremeDefaultValues::inf_double() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.inf_double)
  return _internal_inf_double();
}
inline void TestExtremeDefaultValues::set_inf_double(double value) {
  _internal_set_inf_double(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.inf_double)
}
inline double TestExtremeDefaultValues::_internal_inf_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inf_double_;
}
inline void TestExtremeDefaultValues::_internal_set_inf_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inf_double_ = value;
}

// double neg_inf_double = 15 [default = -inf];
inline bool TestExtremeDefaultValues::has_neg_inf_double() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_neg_inf_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.neg_inf_double_ = -std::numeric_limits<double>::infinity();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline double TestExtremeDefaultValues::neg_inf_double() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.neg_inf_double)
  return _internal_neg_inf_double();
}
inline void TestExtremeDefaultValues::set_neg_inf_double(double value) {
  _internal_set_neg_inf_double(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.neg_inf_double)
}
inline double TestExtremeDefaultValues::_internal_neg_inf_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.neg_inf_double_;
}
inline void TestExtremeDefaultValues::_internal_set_neg_inf_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.neg_inf_double_ = value;
}

// double nan_double = 16 [default = nan];
inline bool TestExtremeDefaultValues::has_nan_double() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_nan_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nan_double_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline double TestExtremeDefaultValues::nan_double() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.nan_double)
  return _internal_nan_double();
}
inline void TestExtremeDefaultValues::set_nan_double(double value) {
  _internal_set_nan_double(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.nan_double)
}
inline double TestExtremeDefaultValues::_internal_nan_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nan_double_;
}
inline void TestExtremeDefaultValues::_internal_set_nan_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nan_double_ = value;
}

// float inf_float = 17 [default = inf];
inline bool TestExtremeDefaultValues::has_inf_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_inf_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inf_float_ = std::numeric_limits<float>::infinity();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline float TestExtremeDefaultValues::inf_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.inf_float)
  return _internal_inf_float();
}
inline void TestExtremeDefaultValues::set_inf_float(float value) {
  _internal_set_inf_float(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.inf_float)
}
inline float TestExtremeDefaultValues::_internal_inf_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inf_float_;
}
inline void TestExtremeDefaultValues::_internal_set_inf_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inf_float_ = value;
}

// float neg_inf_float = 18 [default = -inf];
inline bool TestExtremeDefaultValues::has_neg_inf_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_neg_inf_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.neg_inf_float_ = -std::numeric_limits<float>::infinity();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline float TestExtremeDefaultValues::neg_inf_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.neg_inf_float)
  return _internal_neg_inf_float();
}
inline void TestExtremeDefaultValues::set_neg_inf_float(float value) {
  _internal_set_neg_inf_float(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.neg_inf_float)
}
inline float TestExtremeDefaultValues::_internal_neg_inf_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.neg_inf_float_;
}
inline void TestExtremeDefaultValues::_internal_set_neg_inf_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.neg_inf_float_ = value;
}

// float nan_float = 19 [default = nan];
inline bool TestExtremeDefaultValues::has_nan_float() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_nan_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nan_float_ = std::numeric_limits<float>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline float TestExtremeDefaultValues::nan_float() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.nan_float)
  return _internal_nan_float();
}
inline void TestExtremeDefaultValues::set_nan_float(float value) {
  _internal_set_nan_float(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.nan_float)
}
inline float TestExtremeDefaultValues::_internal_nan_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nan_float_;
}
inline void TestExtremeDefaultValues::_internal_set_nan_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nan_float_ = value;
}

// string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
inline bool TestExtremeDefaultValues::has_cpp_trigraph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_cpp_trigraph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpp_trigraph_.ClearToDefault(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_cpp_trigraph_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline absl::string_view TestExtremeDefaultValues::cpp_trigraph() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.cpp_trigraph)
  if (_impl_.cpp_trigraph_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_cpp_trigraph_.get();
  }
  return _internal_cpp_trigraph();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtremeDefaultValues::set_cpp_trigraph(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.cpp_trigraph_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.cpp_trigraph)
}
inline const std::string& TestExtremeDefaultValues::_internal_cpp_trigraph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpp_trigraph_.Get();
}
inline void TestExtremeDefaultValues::_internal_set_cpp_trigraph(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.cpp_trigraph_.Set(value, GetArena());
}

// string string_with_zero = 23 [default = "hel\000lo"];
inline bool TestExtremeDefaultValues::has_string_with_zero() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_string_with_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_with_zero_.ClearToDefault(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_string_with_zero_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline absl::string_view TestExtremeDefaultValues::string_with_zero() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.string_with_zero)
  if (_impl_.string_with_zero_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_string_with_zero_.get();
  }
  return _internal_string_with_zero();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtremeDefaultValues::set_string_with_zero(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.string_with_zero_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.string_with_zero)
}
inline const std::string& TestExtremeDefaultValues::_internal_string_with_zero() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_with_zero_.Get();
}
inline void TestExtremeDefaultValues::_internal_set_string_with_zero(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.string_with_zero_.Set(value, GetArena());
}

// bytes bytes_with_zero = 24 [default = "wor\000ld"];
inline bool TestExtremeDefaultValues::has_bytes_with_zero() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_bytes_with_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_with_zero_.ClearToDefault(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_bytes_with_zero_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline absl::string_view TestExtremeDefaultValues::bytes_with_zero() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.bytes_with_zero)
  if (_impl_.bytes_with_zero_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_bytes_with_zero_.get();
  }
  return _internal_bytes_with_zero();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtremeDefaultValues::set_bytes_with_zero(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.bytes_with_zero_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.bytes_with_zero)
}
inline const std::string& TestExtremeDefaultValues::_internal_bytes_with_zero() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_with_zero_.Get();
}
inline void TestExtremeDefaultValues::_internal_set_bytes_with_zero(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.bytes_with_zero_.Set(value, GetArena());
}

// string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
inline bool TestExtremeDefaultValues::has_string_piece_with_zero() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_string_piece_with_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_piece_with_zero_.ClearToDefault(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_string_piece_with_zero_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& TestExtremeDefaultValues::string_piece_with_zero() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.string_piece_with_zero)
  if (_impl_.string_piece_with_zero_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_string_piece_with_zero_.get();
  }
  return _internal_string_piece_with_zero();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestExtremeDefaultValues::set_string_piece_with_zero(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.string_piece_with_zero_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.string_piece_with_zero)
}
inline std::string* TestExtremeDefaultValues::mutable_string_piece_with_zero() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_string_piece_with_zero();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestExtremeDefaultValues.string_piece_with_zero)
  return _s;
}
inline const std::string& TestExtremeDefaultValues::_internal_string_piece_with_zero() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_piece_with_zero_.Get();
}
inline void TestExtremeDefaultValues::_internal_set_string_piece_with_zero(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.string_piece_with_zero_.Set(value, GetArena());
}
inline std::string* TestExtremeDefaultValues::_internal_mutable_string_piece_with_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.string_piece_with_zero_.Mutable(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_string_piece_with_zero_, GetArena());
}
inline std::string* TestExtremeDefaultValues::release_string_piece_with_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestExtremeDefaultValues.string_piece_with_zero)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  return _impl_.string_piece_with_zero_.Release();
}
inline void TestExtremeDefaultValues::set_allocated_string_piece_with_zero(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.string_piece_with_zero_.SetAllocated(value, GetArena());
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestExtremeDefaultValues.string_piece_with_zero)
}

// string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
inline bool TestExtremeDefaultValues::has_cord_with_zero() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_cord_with_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cord_with_zero_.ClearToDefault(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_cord_with_zero_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& TestExtremeDefaultValues::cord_with_zero() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.cord_with_zero)
  if (_impl_.cord_with_zero_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_cord_with_zero_.get();
  }
  return _internal_cord_with_zero();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestExtremeDefaultValues::set_cord_with_zero(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.cord_with_zero_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.cord_with_zero)
}
inline std::string* TestExtremeDefaultValues::mutable_cord_with_zero() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cord_with_zero();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestExtremeDefaultValues.cord_with_zero)
  return _s;
}
inline const std::string& TestExtremeDefaultValues::_internal_cord_with_zero() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cord_with_zero_.Get();
}
inline void TestExtremeDefaultValues::_internal_set_cord_with_zero(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.cord_with_zero_.Set(value, GetArena());
}
inline std::string* TestExtremeDefaultValues::_internal_mutable_cord_with_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.cord_with_zero_.Mutable(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_cord_with_zero_, GetArena());
}
inline std::string* TestExtremeDefaultValues::release_cord_with_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestExtremeDefaultValues.cord_with_zero)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  return _impl_.cord_with_zero_.Release();
}
inline void TestExtremeDefaultValues::set_allocated_cord_with_zero(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.cord_with_zero_.SetAllocated(value, GetArena());
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestExtremeDefaultValues.cord_with_zero)
}

// string replacement_string = 27 [default = "${unknown}"];
inline bool TestExtremeDefaultValues::has_replacement_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TestExtremeDefaultValues::clear_replacement_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replacement_string_.ClearToDefault(::edition_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_replacement_string_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline absl::string_view TestExtremeDefaultValues::replacement_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtremeDefaultValues.replacement_string)
  if (_impl_.replacement_string_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_replacement_string_.get();
  }
  return _internal_replacement_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestExtremeDefaultValues::set_replacement_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.replacement_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtremeDefaultValues.replacement_string)
}
inline const std::string& TestExtremeDefaultValues::_internal_replacement_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replacement_string_.Get();
}
inline void TestExtremeDefaultValues::_internal_set_replacement_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.replacement_string_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// SparseEnumMessage

// .edition_unittest.TestSparseEnum sparse_enum = 1;
inline bool SparseEnumMessage::has_sparse_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SparseEnumMessage::clear_sparse_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sparse_enum_ = 123;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::edition_unittest::TestSparseEnum SparseEnumMessage::sparse_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.SparseEnumMessage.sparse_enum)
  return _internal_sparse_enum();
}
inline void SparseEnumMessage::set_sparse_enum(::edition_unittest::TestSparseEnum value) {
  _internal_set_sparse_enum(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.SparseEnumMessage.sparse_enum)
}
inline ::edition_unittest::TestSparseEnum SparseEnumMessage::_internal_sparse_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestSparseEnum>(_impl_.sparse_enum_);
}
inline void SparseEnumMessage::_internal_set_sparse_enum(::edition_unittest::TestSparseEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestSparseEnum_IsValid(value));
  _impl_.sparse_enum_ = value;
}

// -------------------------------------------------------------------

// OneString

// string data = 1;
inline bool OneString::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OneString::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view OneString::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.OneString.data)
  return _internal_data();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void OneString::set_data(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.OneString.data)
}
inline const std::string& OneString::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void OneString::_internal_set_data(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// MoreString

// repeated string data = 1;
inline int MoreString::_internal_data_size() const {
  return _internal_data().size();
}
inline int MoreString::data_size() const {
  return _internal_data_size();
}
inline void MoreString::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
inline absl::string_view MoreString::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.MoreString.data)
  return _internal_data().Get(index);
}
inline void MoreString::set_data(int index, const std::string& value) {
  _internal_mutable_data()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.MoreString.data)
}
inline void MoreString::set_data(int index, std::string&& value) {
  _internal_mutable_data()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.MoreString.data)
}
inline void MoreString::set_data(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_data()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.MoreString.data)
}
inline void MoreString::set_data(int index, absl::string_view value) {
  _internal_mutable_data()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.MoreString.data)
}
inline void MoreString::add_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_data()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.MoreString.data)
}
inline void MoreString::add_data(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_data()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.MoreString.data)
}
inline void MoreString::add_data(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_data()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.MoreString.data)
}
inline void MoreString::add_data(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_data()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.MoreString.data)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MoreString::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.MoreString.data)
  return _internal_data();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MoreString::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.MoreString.data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MoreString::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MoreString::_internal_mutable_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_;
}

// -------------------------------------------------------------------

// OneBytes

// bytes data = 1;
inline bool OneBytes::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OneBytes::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view OneBytes::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.OneBytes.data)
  return _internal_data();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void OneBytes::set_data(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.OneBytes.data)
}
inline const std::string& OneBytes::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void OneBytes::_internal_set_data(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// MoreBytes

// repeated bytes data = 1;
inline int MoreBytes::_internal_data_size() const {
  return _internal_data().size();
}
inline int MoreBytes::data_size() const {
  return _internal_data_size();
}
inline void MoreBytes::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
inline absl::string_view MoreBytes::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.MoreBytes.data)
  return _internal_data().Get(index);
}
inline void MoreBytes::set_data(int index, const std::string& value) {
  _internal_mutable_data()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.MoreBytes.data)
}
inline void MoreBytes::set_data(int index, std::string&& value) {
  _internal_mutable_data()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.MoreBytes.data)
}
inline void MoreBytes::set_data(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_data()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.MoreBytes.data)
}
inline void MoreBytes::set_data(int index, absl::string_view value) {
  _internal_mutable_data()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.MoreBytes.data)
}
inline void MoreBytes::add_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_data()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.MoreBytes.data)
}
inline void MoreBytes::add_data(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_data()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.MoreBytes.data)
}
inline void MoreBytes::add_data(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_data()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.MoreBytes.data)
}
inline void MoreBytes::add_data(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_data()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.MoreBytes.data)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MoreBytes::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.MoreBytes.data)
  return _internal_data();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MoreBytes::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.MoreBytes.data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MoreBytes::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MoreBytes::_internal_mutable_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_;
}

// -------------------------------------------------------------------

// ManyOptionalString

// string str1 = 1;
inline bool ManyOptionalString::has_str1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str1_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view ManyOptionalString::str1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str1)
  return _internal_str1();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str1(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str1_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str1)
}
inline const std::string& ManyOptionalString::_internal_str1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str1_.Get();
}
inline void ManyOptionalString::_internal_set_str1(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str1_.Set(value, GetArena());
}

// string str2 = 2;
inline bool ManyOptionalString::has_str2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str2_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view ManyOptionalString::str2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str2)
  return _internal_str2();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str2(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.str2_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str2)
}
inline const std::string& ManyOptionalString::_internal_str2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str2_.Get();
}
inline void ManyOptionalString::_internal_set_str2(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.str2_.Set(value, GetArena());
}

// string str3 = 3;
inline bool ManyOptionalString::has_str3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str3_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline absl::string_view ManyOptionalString::str3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str3)
  return _internal_str3();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str3(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.str3_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str3)
}
inline const std::string& ManyOptionalString::_internal_str3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str3_.Get();
}
inline void ManyOptionalString::_internal_set_str3(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.str3_.Set(value, GetArena());
}

// string str4 = 4;
inline bool ManyOptionalString::has_str4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str4_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline absl::string_view ManyOptionalString::str4() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str4)
  return _internal_str4();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str4(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.str4_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str4)
}
inline const std::string& ManyOptionalString::_internal_str4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str4_.Get();
}
inline void ManyOptionalString::_internal_set_str4(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.str4_.Set(value, GetArena());
}

// string str5 = 5;
inline bool ManyOptionalString::has_str5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str5_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline absl::string_view ManyOptionalString::str5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str5)
  return _internal_str5();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str5(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.str5_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str5)
}
inline const std::string& ManyOptionalString::_internal_str5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str5_.Get();
}
inline void ManyOptionalString::_internal_set_str5(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.str5_.Set(value, GetArena());
}

// string str6 = 6;
inline bool ManyOptionalString::has_str6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str6_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline absl::string_view ManyOptionalString::str6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str6)
  return _internal_str6();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str6(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.str6_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str6)
}
inline const std::string& ManyOptionalString::_internal_str6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str6_.Get();
}
inline void ManyOptionalString::_internal_set_str6(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.str6_.Set(value, GetArena());
}

// string str7 = 7;
inline bool ManyOptionalString::has_str7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str7_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline absl::string_view ManyOptionalString::str7() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str7)
  return _internal_str7();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str7(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.str7_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str7)
}
inline const std::string& ManyOptionalString::_internal_str7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str7_.Get();
}
inline void ManyOptionalString::_internal_set_str7(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.str7_.Set(value, GetArena());
}

// string str8 = 8;
inline bool ManyOptionalString::has_str8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str8_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline absl::string_view ManyOptionalString::str8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str8)
  return _internal_str8();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str8(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.str8_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str8)
}
inline const std::string& ManyOptionalString::_internal_str8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str8_.Get();
}
inline void ManyOptionalString::_internal_set_str8(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.str8_.Set(value, GetArena());
}

// string str9 = 9;
inline bool ManyOptionalString::has_str9() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str9_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline absl::string_view ManyOptionalString::str9() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str9)
  return _internal_str9();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str9(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.str9_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str9)
}
inline const std::string& ManyOptionalString::_internal_str9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str9_.Get();
}
inline void ManyOptionalString::_internal_set_str9(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.str9_.Set(value, GetArena());
}

// string str10 = 10;
inline bool ManyOptionalString::has_str10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str10_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline absl::string_view ManyOptionalString::str10() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str10)
  return _internal_str10();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str10(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.str10_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str10)
}
inline const std::string& ManyOptionalString::_internal_str10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str10_.Get();
}
inline void ManyOptionalString::_internal_set_str10(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.str10_.Set(value, GetArena());
}

// string str11 = 11;
inline bool ManyOptionalString::has_str11() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str11_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline absl::string_view ManyOptionalString::str11() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str11)
  return _internal_str11();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str11(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.str11_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str11)
}
inline const std::string& ManyOptionalString::_internal_str11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str11_.Get();
}
inline void ManyOptionalString::_internal_set_str11(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.str11_.Set(value, GetArena());
}

// string str12 = 12;
inline bool ManyOptionalString::has_str12() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str12_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline absl::string_view ManyOptionalString::str12() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str12)
  return _internal_str12();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str12(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.str12_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str12)
}
inline const std::string& ManyOptionalString::_internal_str12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str12_.Get();
}
inline void ManyOptionalString::_internal_set_str12(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.str12_.Set(value, GetArena());
}

// string str13 = 13;
inline bool ManyOptionalString::has_str13() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str13_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline absl::string_view ManyOptionalString::str13() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str13)
  return _internal_str13();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str13(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.str13_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str13)
}
inline const std::string& ManyOptionalString::_internal_str13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str13_.Get();
}
inline void ManyOptionalString::_internal_set_str13(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.str13_.Set(value, GetArena());
}

// string str14 = 14;
inline bool ManyOptionalString::has_str14() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str14_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline absl::string_view ManyOptionalString::str14() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str14)
  return _internal_str14();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str14(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.str14_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str14)
}
inline const std::string& ManyOptionalString::_internal_str14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str14_.Get();
}
inline void ManyOptionalString::_internal_set_str14(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.str14_.Set(value, GetArena());
}

// string str15 = 15;
inline bool ManyOptionalString::has_str15() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str15_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline absl::string_view ManyOptionalString::str15() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str15)
  return _internal_str15();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str15(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.str15_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str15)
}
inline const std::string& ManyOptionalString::_internal_str15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str15_.Get();
}
inline void ManyOptionalString::_internal_set_str15(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.str15_.Set(value, GetArena());
}

// string str16 = 16;
inline bool ManyOptionalString::has_str16() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str16_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline absl::string_view ManyOptionalString::str16() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str16)
  return _internal_str16();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str16(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.str16_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str16)
}
inline const std::string& ManyOptionalString::_internal_str16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str16_.Get();
}
inline void ManyOptionalString::_internal_set_str16(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.str16_.Set(value, GetArena());
}

// string str17 = 17;
inline bool ManyOptionalString::has_str17() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str17_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline absl::string_view ManyOptionalString::str17() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str17)
  return _internal_str17();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str17(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.str17_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str17)
}
inline const std::string& ManyOptionalString::_internal_str17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str17_.Get();
}
inline void ManyOptionalString::_internal_set_str17(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.str17_.Set(value, GetArena());
}

// string str18 = 18;
inline bool ManyOptionalString::has_str18() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str18_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline absl::string_view ManyOptionalString::str18() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str18)
  return _internal_str18();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str18(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.str18_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str18)
}
inline const std::string& ManyOptionalString::_internal_str18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str18_.Get();
}
inline void ManyOptionalString::_internal_set_str18(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.str18_.Set(value, GetArena());
}

// string str19 = 19;
inline bool ManyOptionalString::has_str19() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str19_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline absl::string_view ManyOptionalString::str19() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str19)
  return _internal_str19();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str19(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.str19_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str19)
}
inline const std::string& ManyOptionalString::_internal_str19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str19_.Get();
}
inline void ManyOptionalString::_internal_set_str19(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.str19_.Set(value, GetArena());
}

// string str20 = 20;
inline bool ManyOptionalString::has_str20() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str20_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline absl::string_view ManyOptionalString::str20() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str20)
  return _internal_str20();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str20(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00080000u;
  _impl_.str20_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str20)
}
inline const std::string& ManyOptionalString::_internal_str20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str20_.Get();
}
inline void ManyOptionalString::_internal_set_str20(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00080000u;
  _impl_.str20_.Set(value, GetArena());
}

// string str21 = 21;
inline bool ManyOptionalString::has_str21() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str21_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline absl::string_view ManyOptionalString::str21() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str21)
  return _internal_str21();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str21(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00100000u;
  _impl_.str21_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str21)
}
inline const std::string& ManyOptionalString::_internal_str21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str21_.Get();
}
inline void ManyOptionalString::_internal_set_str21(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00100000u;
  _impl_.str21_.Set(value, GetArena());
}

// string str22 = 22;
inline bool ManyOptionalString::has_str22() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str22_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline absl::string_view ManyOptionalString::str22() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str22)
  return _internal_str22();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str22(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00200000u;
  _impl_.str22_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str22)
}
inline const std::string& ManyOptionalString::_internal_str22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str22_.Get();
}
inline void ManyOptionalString::_internal_set_str22(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00200000u;
  _impl_.str22_.Set(value, GetArena());
}

// string str23 = 23;
inline bool ManyOptionalString::has_str23() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str23_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline absl::string_view ManyOptionalString::str23() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str23)
  return _internal_str23();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str23(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00400000u;
  _impl_.str23_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str23)
}
inline const std::string& ManyOptionalString::_internal_str23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str23_.Get();
}
inline void ManyOptionalString::_internal_set_str23(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00400000u;
  _impl_.str23_.Set(value, GetArena());
}

// string str24 = 24;
inline bool ManyOptionalString::has_str24() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str24_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline absl::string_view ManyOptionalString::str24() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str24)
  return _internal_str24();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str24(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00800000u;
  _impl_.str24_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str24)
}
inline const std::string& ManyOptionalString::_internal_str24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str24_.Get();
}
inline void ManyOptionalString::_internal_set_str24(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00800000u;
  _impl_.str24_.Set(value, GetArena());
}

// string str25 = 25;
inline bool ManyOptionalString::has_str25() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str25_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline absl::string_view ManyOptionalString::str25() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str25)
  return _internal_str25();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str25(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x01000000u;
  _impl_.str25_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str25)
}
inline const std::string& ManyOptionalString::_internal_str25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str25_.Get();
}
inline void ManyOptionalString::_internal_set_str25(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x01000000u;
  _impl_.str25_.Set(value, GetArena());
}

// string str26 = 26;
inline bool ManyOptionalString::has_str26() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str26_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline absl::string_view ManyOptionalString::str26() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str26)
  return _internal_str26();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str26(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x02000000u;
  _impl_.str26_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str26)
}
inline const std::string& ManyOptionalString::_internal_str26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str26_.Get();
}
inline void ManyOptionalString::_internal_set_str26(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x02000000u;
  _impl_.str26_.Set(value, GetArena());
}

// string str27 = 27;
inline bool ManyOptionalString::has_str27() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str27_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline absl::string_view ManyOptionalString::str27() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str27)
  return _internal_str27();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str27(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x04000000u;
  _impl_.str27_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str27)
}
inline const std::string& ManyOptionalString::_internal_str27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str27_.Get();
}
inline void ManyOptionalString::_internal_set_str27(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x04000000u;
  _impl_.str27_.Set(value, GetArena());
}

// string str28 = 28;
inline bool ManyOptionalString::has_str28() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str28_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline absl::string_view ManyOptionalString::str28() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str28)
  return _internal_str28();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str28(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x08000000u;
  _impl_.str28_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str28)
}
inline const std::string& ManyOptionalString::_internal_str28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str28_.Get();
}
inline void ManyOptionalString::_internal_set_str28(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x08000000u;
  _impl_.str28_.Set(value, GetArena());
}

// string str29 = 29;
inline bool ManyOptionalString::has_str29() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str29_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline absl::string_view ManyOptionalString::str29() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str29)
  return _internal_str29();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str29(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x10000000u;
  _impl_.str29_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str29)
}
inline const std::string& ManyOptionalString::_internal_str29() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str29_.Get();
}
inline void ManyOptionalString::_internal_set_str29(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x10000000u;
  _impl_.str29_.Set(value, GetArena());
}

// string str30 = 30;
inline bool ManyOptionalString::has_str30() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str30_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline absl::string_view ManyOptionalString::str30() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str30)
  return _internal_str30();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str30(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x20000000u;
  _impl_.str30_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str30)
}
inline const std::string& ManyOptionalString::_internal_str30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str30_.Get();
}
inline void ManyOptionalString::_internal_set_str30(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x20000000u;
  _impl_.str30_.Set(value, GetArena());
}

// string str31 = 31;
inline bool ManyOptionalString::has_str31() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str31_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline absl::string_view ManyOptionalString::str31() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str31)
  return _internal_str31();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str31(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x40000000u;
  _impl_.str31_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str31)
}
inline const std::string& ManyOptionalString::_internal_str31() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str31_.Get();
}
inline void ManyOptionalString::_internal_set_str31(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x40000000u;
  _impl_.str31_.Set(value, GetArena());
}

// string str32 = 32;
inline bool ManyOptionalString::has_str32() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void ManyOptionalString::clear_str32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str32_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline absl::string_view ManyOptionalString::str32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.ManyOptionalString.str32)
  return _internal_str32();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void ManyOptionalString::set_str32(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x80000000u;
  _impl_.str32_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.ManyOptionalString.str32)
}
inline const std::string& ManyOptionalString::_internal_str32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str32_.Get();
}
inline void ManyOptionalString::_internal_set_str32(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x80000000u;
  _impl_.str32_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// Int32Message

// int32 data = 1;
inline bool Int32Message::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Int32Message::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t Int32Message::data() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32Message.data)
  return _internal_data();
}
inline void Int32Message::set_data(::int32_t value) {
  _internal_set_data(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int32Message.data)
}
inline ::int32_t Int32Message::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline void Int32Message::_internal_set_data(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = value;
}

// -------------------------------------------------------------------

// Uint32Message

// uint32 data = 1;
inline bool Uint32Message::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Uint32Message::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Uint32Message::data() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Uint32Message.data)
  return _internal_data();
}
inline void Uint32Message::set_data(::uint32_t value) {
  _internal_set_data(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.Uint32Message.data)
}
inline ::uint32_t Uint32Message::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline void Uint32Message::_internal_set_data(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = value;
}

// -------------------------------------------------------------------

// Int64Message

// int64 data = 1;
inline bool Int64Message::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Int64Message::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Int64Message::data() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64Message.data)
  return _internal_data();
}
inline void Int64Message::set_data(::int64_t value) {
  _internal_set_data(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int64Message.data)
}
inline ::int64_t Int64Message::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline void Int64Message::_internal_set_data(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = value;
}

// -------------------------------------------------------------------

// Uint64Message

// uint64 data = 1;
inline bool Uint64Message::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Uint64Message::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t Uint64Message::data() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Uint64Message.data)
  return _internal_data();
}
inline void Uint64Message::set_data(::uint64_t value) {
  _internal_set_data(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.Uint64Message.data)
}
inline ::uint64_t Uint64Message::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline void Uint64Message::_internal_set_data(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = value;
}

// -------------------------------------------------------------------

// BoolMessage

// bool data = 1;
inline bool BoolMessage::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BoolMessage::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool BoolMessage::data() const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolMessage.data)
  return _internal_data();
}
inline void BoolMessage::set_data(bool value) {
  _internal_set_data(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.BoolMessage.data)
}
inline bool BoolMessage::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline void BoolMessage::_internal_set_data(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = value;
}

// -------------------------------------------------------------------

// TestOneof_FooGroup

// int32 a = 5;
inline bool TestOneof_FooGroup::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestOneof_FooGroup::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestOneof_FooGroup::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof.FooGroup.a)
  return _internal_a();
}
inline void TestOneof_FooGroup::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof.FooGroup.a)
}
inline ::int32_t TestOneof_FooGroup::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestOneof_FooGroup::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// string b = 6;
inline bool TestOneof_FooGroup::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestOneof_FooGroup::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestOneof_FooGroup::b() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof.FooGroup.b)
  return _internal_b();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof_FooGroup::set_b(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.b_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof.FooGroup.b)
}
inline const std::string& TestOneof_FooGroup::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_.Get();
}
inline void TestOneof_FooGroup::_internal_set_b(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.b_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestOneof

// int32 foo_int = 1;
inline bool TestOneof::has_foo_int() const {
  return foo_case() == kFooInt;
}
inline void TestOneof::set_has_foo_int() {
  _impl_._oneof_case_[0] = kFooInt;
}
inline void TestOneof::clear_foo_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooInt) {
    _impl_.foo_.foo_int_ = 0;
    clear_has_foo();
  }
}
inline ::int32_t TestOneof::foo_int() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof.foo_int)
  return _internal_foo_int();
}
inline void TestOneof::set_foo_int(::int32_t value) {
  if (foo_case() != kFooInt) {
    clear_foo();
    set_has_foo_int();
  }
  _impl_.foo_.foo_int_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof.foo_int)
}
inline ::int32_t TestOneof::_internal_foo_int() const {
  if (foo_case() == kFooInt) {
    return _impl_.foo_.foo_int_;
  }
  return 0;
}

// string foo_string = 2;
inline bool TestOneof::has_foo_string() const {
  return foo_case() == kFooString;
}
inline void TestOneof::set_has_foo_string() {
  _impl_._oneof_case_[0] = kFooString;
}
inline void TestOneof::clear_foo_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooString) {
    _impl_.foo_.foo_string_.Destroy();
    clear_has_foo();
  }
}
inline absl::string_view TestOneof::foo_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof.foo_string)
  return _internal_foo_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof::set_foo_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooString) {
    clear_foo();

    set_has_foo_string();
    _impl_.foo_.foo_string_.InitDefault();
  }
  _impl_.foo_.foo_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof.foo_string)
}
inline const std::string& TestOneof::_internal_foo_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (foo_case() != kFooString) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.foo_.foo_string_.Get();
}
inline void TestOneof::_internal_set_foo_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooString) {
    clear_foo();

    set_has_foo_string();
    _impl_.foo_.foo_string_.InitDefault();
  }
  _impl_.foo_.foo_string_.Set(value, GetArena());
}

// .edition_unittest.TestAllTypes foo_message = 3;
inline bool TestOneof::has_foo_message() const {
  return foo_case() == kFooMessage;
}
inline bool TestOneof::_internal_has_foo_message() const {
  return foo_case() == kFooMessage;
}
inline void TestOneof::set_has_foo_message() {
  _impl_._oneof_case_[0] = kFooMessage;
}
inline void TestOneof::clear_foo_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.foo_.foo_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.foo_.foo_message_);
    }
    clear_has_foo();
  }
}
inline ::edition_unittest::TestAllTypes* TestOneof::release_foo_message() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof.foo_message)
  if (foo_case() == kFooMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_message_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.foo_.foo_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestAllTypes& TestOneof::_internal_foo_message() const {
  return foo_case() == kFooMessage ? *_impl_.foo_.foo_message_ : reinterpret_cast<::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestOneof::foo_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof.foo_message)
  return _internal_foo_message();
}
inline ::edition_unittest::TestAllTypes* TestOneof::unsafe_arena_release_foo_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestOneof.foo_message)
  if (foo_case() == kFooMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_message_;
    _impl_.foo_.foo_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestOneof::unsafe_arena_set_allocated_foo_message(::edition_unittest::TestAllTypes* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_foo();
  if (value) {
    set_has_foo_message();
    _impl_.foo_.foo_message_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestOneof.foo_message)
}
inline ::edition_unittest::TestAllTypes* TestOneof::_internal_mutable_foo_message() {
  if (foo_case() != kFooMessage) {
    clear_foo();
    set_has_foo_message();
    _impl_.foo_.foo_message_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
  }
  return _impl_.foo_.foo_message_;
}
inline ::edition_unittest::TestAllTypes* TestOneof::mutable_foo_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_foo_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof.foo_message)
  return _msg;
}

// .edition_unittest.TestOneof.FooGroup foogroup = 4 [features = {
inline bool TestOneof::has_foogroup() const {
  return foo_case() == kFoogroup;
}
inline bool TestOneof::_internal_has_foogroup() const {
  return foo_case() == kFoogroup;
}
inline void TestOneof::set_has_foogroup() {
  _impl_._oneof_case_[0] = kFoogroup;
}
inline void TestOneof::clear_foogroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFoogroup) {
    if (GetArena() == nullptr) {
      delete _impl_.foo_.foogroup_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.foo_.foogroup_);
    }
    clear_has_foo();
  }
}
inline ::edition_unittest::TestOneof_FooGroup* TestOneof::release_foogroup() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof.foogroup)
  if (foo_case() == kFoogroup) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foogroup_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.foo_.foogroup_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestOneof_FooGroup& TestOneof::_internal_foogroup() const {
  return foo_case() == kFoogroup ? *_impl_.foo_.foogroup_ : reinterpret_cast<::edition_unittest::TestOneof_FooGroup&>(::edition_unittest::_TestOneof_FooGroup_default_instance_);
}
inline const ::edition_unittest::TestOneof_FooGroup& TestOneof::foogroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof.foogroup)
  return _internal_foogroup();
}
inline ::edition_unittest::TestOneof_FooGroup* TestOneof::unsafe_arena_release_foogroup() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestOneof.foogroup)
  if (foo_case() == kFoogroup) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foogroup_;
    _impl_.foo_.foogroup_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestOneof::unsafe_arena_set_allocated_foogroup(::edition_unittest::TestOneof_FooGroup* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_foo();
  if (value) {
    set_has_foogroup();
    _impl_.foo_.foogroup_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestOneof.foogroup)
}
inline ::edition_unittest::TestOneof_FooGroup* TestOneof::_internal_mutable_foogroup() {
  if (foo_case() != kFoogroup) {
    clear_foo();
    set_has_foogroup();
    _impl_.foo_.foogroup_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestOneof_FooGroup>(GetArena());
  }
  return _impl_.foo_.foogroup_;
}
inline ::edition_unittest::TestOneof_FooGroup* TestOneof::mutable_foogroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestOneof_FooGroup* _msg = _internal_mutable_foogroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof.foogroup)
  return _msg;
}

inline bool TestOneof::has_foo() const {
  return foo_case() != FOO_NOT_SET;
}
inline void TestOneof::clear_has_foo() {
  _impl_._oneof_case_[0] = FOO_NOT_SET;
}
inline TestOneof::FooCase TestOneof::foo_case() const {
  return TestOneof::FooCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TestOneofBackwardsCompatible_FooGroup

// int32 a = 5;
inline bool TestOneofBackwardsCompatible_FooGroup::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestOneofBackwardsCompatible_FooGroup::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestOneofBackwardsCompatible_FooGroup::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneofBackwardsCompatible.FooGroup.a)
  return _internal_a();
}
inline void TestOneofBackwardsCompatible_FooGroup::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneofBackwardsCompatible.FooGroup.a)
}
inline ::int32_t TestOneofBackwardsCompatible_FooGroup::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestOneofBackwardsCompatible_FooGroup::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// string b = 6;
inline bool TestOneofBackwardsCompatible_FooGroup::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestOneofBackwardsCompatible_FooGroup::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestOneofBackwardsCompatible_FooGroup::b() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneofBackwardsCompatible.FooGroup.b)
  return _internal_b();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneofBackwardsCompatible_FooGroup::set_b(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.b_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneofBackwardsCompatible.FooGroup.b)
}
inline const std::string& TestOneofBackwardsCompatible_FooGroup::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_.Get();
}
inline void TestOneofBackwardsCompatible_FooGroup::_internal_set_b(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.b_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestOneofBackwardsCompatible

// int32 foo_int = 1;
inline bool TestOneofBackwardsCompatible::has_foo_int() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestOneofBackwardsCompatible::clear_foo_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_int_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestOneofBackwardsCompatible::foo_int() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneofBackwardsCompatible.foo_int)
  return _internal_foo_int();
}
inline void TestOneofBackwardsCompatible::set_foo_int(::int32_t value) {
  _internal_set_foo_int(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneofBackwardsCompatible.foo_int)
}
inline ::int32_t TestOneofBackwardsCompatible::_internal_foo_int() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.foo_int_;
}
inline void TestOneofBackwardsCompatible::_internal_set_foo_int(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_int_ = value;
}

// string foo_string = 2;
inline bool TestOneofBackwardsCompatible::has_foo_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestOneofBackwardsCompatible::clear_foo_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestOneofBackwardsCompatible::foo_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneofBackwardsCompatible.foo_string)
  return _internal_foo_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneofBackwardsCompatible::set_foo_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.foo_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneofBackwardsCompatible.foo_string)
}
inline const std::string& TestOneofBackwardsCompatible::_internal_foo_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.foo_string_.Get();
}
inline void TestOneofBackwardsCompatible::_internal_set_foo_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.foo_string_.Set(value, GetArena());
}

// .edition_unittest.TestAllTypes foo_message = 3;
inline bool TestOneofBackwardsCompatible::has_foo_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.foo_message_ != nullptr);
  return value;
}
inline void TestOneofBackwardsCompatible::clear_foo_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.foo_message_ != nullptr) _impl_.foo_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestAllTypes& TestOneofBackwardsCompatible::_internal_foo_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.foo_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestOneofBackwardsCompatible::foo_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneofBackwardsCompatible.foo_message)
  return _internal_foo_message();
}
inline void TestOneofBackwardsCompatible::unsafe_arena_set_allocated_foo_message(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.foo_message_);
  }
  _impl_.foo_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestOneofBackwardsCompatible.foo_message)
}
inline ::edition_unittest::TestAllTypes* TestOneofBackwardsCompatible::release_foo_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* released = _impl_.foo_message_;
  _impl_.foo_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestOneofBackwardsCompatible::unsafe_arena_release_foo_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneofBackwardsCompatible.foo_message)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* temp = _impl_.foo_message_;
  _impl_.foo_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestOneofBackwardsCompatible::_internal_mutable_foo_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.foo_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.foo_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.foo_message_;
}
inline ::edition_unittest::TestAllTypes* TestOneofBackwardsCompatible::mutable_foo_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_foo_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneofBackwardsCompatible.foo_message)
  return _msg;
}
inline void TestOneofBackwardsCompatible::set_allocated_foo_message(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.foo_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.foo_message_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestOneofBackwardsCompatible.foo_message)
}

// .edition_unittest.TestOneofBackwardsCompatible.FooGroup foogroup = 4 [features = {
inline bool TestOneofBackwardsCompatible::has_foogroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.foogroup_ != nullptr);
  return value;
}
inline void TestOneofBackwardsCompatible::clear_foogroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.foogroup_ != nullptr) _impl_.foogroup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::TestOneofBackwardsCompatible_FooGroup& TestOneofBackwardsCompatible::_internal_foogroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* p = _impl_.foogroup_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestOneofBackwardsCompatible_FooGroup&>(::edition_unittest::_TestOneofBackwardsCompatible_FooGroup_default_instance_);
}
inline const ::edition_unittest::TestOneofBackwardsCompatible_FooGroup& TestOneofBackwardsCompatible::foogroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneofBackwardsCompatible.foogroup)
  return _internal_foogroup();
}
inline void TestOneofBackwardsCompatible::unsafe_arena_set_allocated_foogroup(::edition_unittest::TestOneofBackwardsCompatible_FooGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.foogroup_);
  }
  _impl_.foogroup_ = reinterpret_cast<::edition_unittest::TestOneofBackwardsCompatible_FooGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestOneofBackwardsCompatible.foogroup)
}
inline ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible::release_foogroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* released = _impl_.foogroup_;
  _impl_.foogroup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible::unsafe_arena_release_foogroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneofBackwardsCompatible.foogroup)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* temp = _impl_.foogroup_;
  _impl_.foogroup_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible::_internal_mutable_foogroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.foogroup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestOneofBackwardsCompatible_FooGroup>(GetArena());
    _impl_.foogroup_ = reinterpret_cast<::edition_unittest::TestOneofBackwardsCompatible_FooGroup*>(p);
  }
  return _impl_.foogroup_;
}
inline ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* TestOneofBackwardsCompatible::mutable_foogroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::TestOneofBackwardsCompatible_FooGroup* _msg = _internal_mutable_foogroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneofBackwardsCompatible.foogroup)
  return _msg;
}
inline void TestOneofBackwardsCompatible::set_allocated_foogroup(::edition_unittest::TestOneofBackwardsCompatible_FooGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.foogroup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.foogroup_ = reinterpret_cast<::edition_unittest::TestOneofBackwardsCompatible_FooGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestOneofBackwardsCompatible.foogroup)
}

// -------------------------------------------------------------------

// TestOneof2_FooGroup

// int32 a = 9;
inline bool TestOneof2_FooGroup::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestOneof2_FooGroup::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestOneof2_FooGroup::a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.FooGroup.a)
  return _internal_a();
}
inline void TestOneof2_FooGroup::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.FooGroup.a)
}
inline ::int32_t TestOneof2_FooGroup::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void TestOneof2_FooGroup::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// string b = 10;
inline bool TestOneof2_FooGroup::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestOneof2_FooGroup::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestOneof2_FooGroup::b() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.FooGroup.b)
  return _internal_b();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2_FooGroup::set_b(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.b_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.FooGroup.b)
}
inline const std::string& TestOneof2_FooGroup::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_.Get();
}
inline void TestOneof2_FooGroup::_internal_set_b(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.b_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestOneof2_NestedMessage

// int64 moo_int = 1;
inline bool TestOneof2_NestedMessage::has_moo_int() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestOneof2_NestedMessage::clear_moo_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.moo_int_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t TestOneof2_NestedMessage::moo_int() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.NestedMessage.moo_int)
  return _internal_moo_int();
}
inline void TestOneof2_NestedMessage::set_moo_int(::int64_t value) {
  _internal_set_moo_int(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.NestedMessage.moo_int)
}
inline ::int64_t TestOneof2_NestedMessage::_internal_moo_int() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.moo_int_;
}
inline void TestOneof2_NestedMessage::_internal_set_moo_int(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.moo_int_ = value;
}

// repeated int32 corge_int = 2;
inline int TestOneof2_NestedMessage::_internal_corge_int_size() const {
  return _internal_corge_int().size();
}
inline int TestOneof2_NestedMessage::corge_int_size() const {
  return _internal_corge_int_size();
}
inline void TestOneof2_NestedMessage::clear_corge_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.corge_int_.Clear();
}
inline ::int32_t TestOneof2_NestedMessage::corge_int(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.NestedMessage.corge_int)
  return _internal_corge_int().Get(index);
}
inline void TestOneof2_NestedMessage::set_corge_int(int index, ::int32_t value) {
  _internal_mutable_corge_int()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.NestedMessage.corge_int)
}
inline void TestOneof2_NestedMessage::add_corge_int(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_corge_int()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestOneof2.NestedMessage.corge_int)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestOneof2_NestedMessage::corge_int() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestOneof2.NestedMessage.corge_int)
  return _internal_corge_int();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestOneof2_NestedMessage::mutable_corge_int()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestOneof2.NestedMessage.corge_int)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_corge_int();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestOneof2_NestedMessage::_internal_corge_int() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.corge_int_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestOneof2_NestedMessage::_internal_mutable_corge_int() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.corge_int_;
}

// -------------------------------------------------------------------

// TestOneof2

// int32 foo_int = 1;
inline bool TestOneof2::has_foo_int() const {
  return foo_case() == kFooInt;
}
inline void TestOneof2::set_has_foo_int() {
  _impl_._oneof_case_[0] = kFooInt;
}
inline void TestOneof2::clear_foo_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooInt) {
    _impl_.foo_.foo_int_ = 0;
    clear_has_foo();
  }
}
inline ::int32_t TestOneof2::foo_int() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_int)
  return _internal_foo_int();
}
inline void TestOneof2::set_foo_int(::int32_t value) {
  if (foo_case() != kFooInt) {
    clear_foo();
    set_has_foo_int();
  }
  _impl_.foo_.foo_int_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.foo_int)
}
inline ::int32_t TestOneof2::_internal_foo_int() const {
  if (foo_case() == kFooInt) {
    return _impl_.foo_.foo_int_;
  }
  return 0;
}

// string foo_string = 2;
inline bool TestOneof2::has_foo_string() const {
  return foo_case() == kFooString;
}
inline void TestOneof2::set_has_foo_string() {
  _impl_._oneof_case_[0] = kFooString;
}
inline void TestOneof2::clear_foo_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooString) {
    _impl_.foo_.foo_string_.Destroy();
    clear_has_foo();
  }
}
inline absl::string_view TestOneof2::foo_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_string)
  return _internal_foo_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_foo_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooString) {
    clear_foo();

    set_has_foo_string();
    _impl_.foo_.foo_string_.InitDefault();
  }
  _impl_.foo_.foo_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.foo_string)
}
inline const std::string& TestOneof2::_internal_foo_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (foo_case() != kFooString) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.foo_.foo_string_.Get();
}
inline void TestOneof2::_internal_set_foo_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooString) {
    clear_foo();

    set_has_foo_string();
    _impl_.foo_.foo_string_.InitDefault();
  }
  _impl_.foo_.foo_string_.Set(value, GetArena());
}

// string foo_cord = 3 [ctype = CORD];
inline bool TestOneof2::has_foo_cord() const {
  return foo_case() == kFooCord;
}
inline void TestOneof2::set_has_foo_cord() {
  _impl_._oneof_case_[0] = kFooCord;
}
inline void TestOneof2::clear_foo_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooCord) {
    _impl_.foo_.foo_cord_.Destroy();
    clear_has_foo();
  }
}
inline const std::string& TestOneof2::foo_cord() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_cord)
  return _internal_foo_cord();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_foo_cord(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooCord) {
    clear_foo();

    set_has_foo_cord();
    _impl_.foo_.foo_cord_.InitDefault();
  }
  _impl_.foo_.foo_cord_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.foo_cord)
}
inline std::string* TestOneof2::mutable_foo_cord() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_foo_cord();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.foo_cord)
  return _s;
}
inline const std::string& TestOneof2::_internal_foo_cord() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (foo_case() != kFooCord) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.foo_.foo_cord_.Get();
}
inline void TestOneof2::_internal_set_foo_cord(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooCord) {
    clear_foo();

    set_has_foo_cord();
    _impl_.foo_.foo_cord_.InitDefault();
  }
  _impl_.foo_.foo_cord_.Set(value, GetArena());
}
inline std::string* TestOneof2::_internal_mutable_foo_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooCord) {
    clear_foo();

    set_has_foo_cord();
    _impl_.foo_.foo_cord_.InitDefault();
  }
  return _impl_.foo_.foo_cord_.Mutable( GetArena());
}
inline std::string* TestOneof2::release_foo_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.foo_cord)
  if (foo_case() != kFooCord) {
    return nullptr;
  }
  clear_has_foo();
  return _impl_.foo_.foo_cord_.Release();
}
inline void TestOneof2::set_allocated_foo_cord(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_foo()) {
    clear_foo();
  }
  if (value != nullptr) {
    set_has_foo_cord();
    _impl_.foo_.foo_cord_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestOneof2.foo_cord)
}

// string foo_string_piece = 4 [ctype = STRING_PIECE];
inline bool TestOneof2::has_foo_string_piece() const {
  return foo_case() == kFooStringPiece;
}
inline void TestOneof2::set_has_foo_string_piece() {
  _impl_._oneof_case_[0] = kFooStringPiece;
}
inline void TestOneof2::clear_foo_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooStringPiece) {
    _impl_.foo_.foo_string_piece_.Destroy();
    clear_has_foo();
  }
}
inline const std::string& TestOneof2::foo_string_piece() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_string_piece)
  return _internal_foo_string_piece();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_foo_string_piece(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooStringPiece) {
    clear_foo();

    set_has_foo_string_piece();
    _impl_.foo_.foo_string_piece_.InitDefault();
  }
  _impl_.foo_.foo_string_piece_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.foo_string_piece)
}
inline std::string* TestOneof2::mutable_foo_string_piece() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_foo_string_piece();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.foo_string_piece)
  return _s;
}
inline const std::string& TestOneof2::_internal_foo_string_piece() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (foo_case() != kFooStringPiece) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.foo_.foo_string_piece_.Get();
}
inline void TestOneof2::_internal_set_foo_string_piece(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooStringPiece) {
    clear_foo();

    set_has_foo_string_piece();
    _impl_.foo_.foo_string_piece_.InitDefault();
  }
  _impl_.foo_.foo_string_piece_.Set(value, GetArena());
}
inline std::string* TestOneof2::_internal_mutable_foo_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooStringPiece) {
    clear_foo();

    set_has_foo_string_piece();
    _impl_.foo_.foo_string_piece_.InitDefault();
  }
  return _impl_.foo_.foo_string_piece_.Mutable( GetArena());
}
inline std::string* TestOneof2::release_foo_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.foo_string_piece)
  if (foo_case() != kFooStringPiece) {
    return nullptr;
  }
  clear_has_foo();
  return _impl_.foo_.foo_string_piece_.Release();
}
inline void TestOneof2::set_allocated_foo_string_piece(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_foo()) {
    clear_foo();
  }
  if (value != nullptr) {
    set_has_foo_string_piece();
    _impl_.foo_.foo_string_piece_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestOneof2.foo_string_piece)
}

// bytes foo_bytes = 5;
inline bool TestOneof2::has_foo_bytes() const {
  return foo_case() == kFooBytes;
}
inline void TestOneof2::set_has_foo_bytes() {
  _impl_._oneof_case_[0] = kFooBytes;
}
inline void TestOneof2::clear_foo_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooBytes) {
    _impl_.foo_.foo_bytes_.Destroy();
    clear_has_foo();
  }
}
inline absl::string_view TestOneof2::foo_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_bytes)
  return _internal_foo_bytes();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_foo_bytes(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooBytes) {
    clear_foo();

    set_has_foo_bytes();
    _impl_.foo_.foo_bytes_.InitDefault();
  }
  _impl_.foo_.foo_bytes_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.foo_bytes)
}
inline const std::string& TestOneof2::_internal_foo_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (foo_case() != kFooBytes) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.foo_.foo_bytes_.Get();
}
inline void TestOneof2::_internal_set_foo_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooBytes) {
    clear_foo();

    set_has_foo_bytes();
    _impl_.foo_.foo_bytes_.InitDefault();
  }
  _impl_.foo_.foo_bytes_.Set(value, GetArena());
}

// .edition_unittest.TestOneof2.NestedEnum foo_enum = 6;
inline bool TestOneof2::has_foo_enum() const {
  return foo_case() == kFooEnum;
}
inline void TestOneof2::set_has_foo_enum() {
  _impl_._oneof_case_[0] = kFooEnum;
}
inline void TestOneof2::clear_foo_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooEnum) {
    _impl_.foo_.foo_enum_ = 0;
    clear_has_foo();
  }
}
inline ::edition_unittest::TestOneof2_NestedEnum TestOneof2::foo_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_enum)
  return _internal_foo_enum();
}
inline void TestOneof2::set_foo_enum(::edition_unittest::TestOneof2_NestedEnum value) {
  assert(::edition_unittest::TestOneof2_NestedEnum_IsValid(value));
  if (foo_case() != kFooEnum) {
    clear_foo();
    set_has_foo_enum();
  }
  _impl_.foo_.foo_enum_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.foo_enum)
}
inline ::edition_unittest::TestOneof2_NestedEnum TestOneof2::_internal_foo_enum() const {
  if (foo_case() == kFooEnum) {
    return static_cast<::edition_unittest::TestOneof2_NestedEnum>(_impl_.foo_.foo_enum_);
  }
  return static_cast<::edition_unittest::TestOneof2_NestedEnum>(0);
}

// .edition_unittest.TestOneof2.NestedMessage foo_message = 7;
inline bool TestOneof2::has_foo_message() const {
  return foo_case() == kFooMessage;
}
inline bool TestOneof2::_internal_has_foo_message() const {
  return foo_case() == kFooMessage;
}
inline void TestOneof2::set_has_foo_message() {
  _impl_._oneof_case_[0] = kFooMessage;
}
inline void TestOneof2::clear_foo_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.foo_.foo_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.foo_.foo_message_);
    }
    clear_has_foo();
  }
}
inline ::edition_unittest::TestOneof2_NestedMessage* TestOneof2::release_foo_message() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.foo_message)
  if (foo_case() == kFooMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_message_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.foo_.foo_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestOneof2_NestedMessage& TestOneof2::_internal_foo_message() const {
  return foo_case() == kFooMessage ? *_impl_.foo_.foo_message_ : reinterpret_cast<::edition_unittest::TestOneof2_NestedMessage&>(::edition_unittest::_TestOneof2_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestOneof2_NestedMessage& TestOneof2::foo_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_message)
  return _internal_foo_message();
}
inline ::edition_unittest::TestOneof2_NestedMessage* TestOneof2::unsafe_arena_release_foo_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestOneof2.foo_message)
  if (foo_case() == kFooMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_message_;
    _impl_.foo_.foo_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestOneof2::unsafe_arena_set_allocated_foo_message(::edition_unittest::TestOneof2_NestedMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_foo();
  if (value) {
    set_has_foo_message();
    _impl_.foo_.foo_message_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestOneof2.foo_message)
}
inline ::edition_unittest::TestOneof2_NestedMessage* TestOneof2::_internal_mutable_foo_message() {
  if (foo_case() != kFooMessage) {
    clear_foo();
    set_has_foo_message();
    _impl_.foo_.foo_message_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestOneof2_NestedMessage>(GetArena());
  }
  return _impl_.foo_.foo_message_;
}
inline ::edition_unittest::TestOneof2_NestedMessage* TestOneof2::mutable_foo_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestOneof2_NestedMessage* _msg = _internal_mutable_foo_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.foo_message)
  return _msg;
}

// .edition_unittest.TestOneof2.FooGroup foogroup = 8 [features = {
inline bool TestOneof2::has_foogroup() const {
  return foo_case() == kFoogroup;
}
inline bool TestOneof2::_internal_has_foogroup() const {
  return foo_case() == kFoogroup;
}
inline void TestOneof2::set_has_foogroup() {
  _impl_._oneof_case_[0] = kFoogroup;
}
inline void TestOneof2::clear_foogroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFoogroup) {
    if (GetArena() == nullptr) {
      delete _impl_.foo_.foogroup_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.foo_.foogroup_);
    }
    clear_has_foo();
  }
}
inline ::edition_unittest::TestOneof2_FooGroup* TestOneof2::release_foogroup() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.foogroup)
  if (foo_case() == kFoogroup) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foogroup_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.foo_.foogroup_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestOneof2_FooGroup& TestOneof2::_internal_foogroup() const {
  return foo_case() == kFoogroup ? *_impl_.foo_.foogroup_ : reinterpret_cast<::edition_unittest::TestOneof2_FooGroup&>(::edition_unittest::_TestOneof2_FooGroup_default_instance_);
}
inline const ::edition_unittest::TestOneof2_FooGroup& TestOneof2::foogroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foogroup)
  return _internal_foogroup();
}
inline ::edition_unittest::TestOneof2_FooGroup* TestOneof2::unsafe_arena_release_foogroup() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestOneof2.foogroup)
  if (foo_case() == kFoogroup) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foogroup_;
    _impl_.foo_.foogroup_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestOneof2::unsafe_arena_set_allocated_foogroup(::edition_unittest::TestOneof2_FooGroup* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_foo();
  if (value) {
    set_has_foogroup();
    _impl_.foo_.foogroup_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestOneof2.foogroup)
}
inline ::edition_unittest::TestOneof2_FooGroup* TestOneof2::_internal_mutable_foogroup() {
  if (foo_case() != kFoogroup) {
    clear_foo();
    set_has_foogroup();
    _impl_.foo_.foogroup_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestOneof2_FooGroup>(GetArena());
  }
  return _impl_.foo_.foogroup_;
}
inline ::edition_unittest::TestOneof2_FooGroup* TestOneof2::mutable_foogroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestOneof2_FooGroup* _msg = _internal_mutable_foogroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.foogroup)
  return _msg;
}

// .edition_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
inline bool TestOneof2::has_foo_lazy_message() const {
  return foo_case() == kFooLazyMessage;
}
inline bool TestOneof2::_internal_has_foo_lazy_message() const {
  return foo_case() == kFooLazyMessage;
}
inline void TestOneof2::set_has_foo_lazy_message() {
  _impl_._oneof_case_[0] = kFooLazyMessage;
}
inline void TestOneof2::clear_foo_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooLazyMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.foo_.foo_lazy_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.foo_.foo_lazy_message_);
    }
    clear_has_foo();
  }
}
inline ::edition_unittest::TestOneof2_NestedMessage* TestOneof2::release_foo_lazy_message() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.foo_lazy_message)
  if (foo_case() == kFooLazyMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_lazy_message_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.foo_.foo_lazy_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestOneof2_NestedMessage& TestOneof2::_internal_foo_lazy_message() const {
  return foo_case() == kFooLazyMessage ? *_impl_.foo_.foo_lazy_message_ : reinterpret_cast<::edition_unittest::TestOneof2_NestedMessage&>(::edition_unittest::_TestOneof2_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestOneof2_NestedMessage& TestOneof2::foo_lazy_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_lazy_message)
  return _internal_foo_lazy_message();
}
inline ::edition_unittest::TestOneof2_NestedMessage* TestOneof2::unsafe_arena_release_foo_lazy_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestOneof2.foo_lazy_message)
  if (foo_case() == kFooLazyMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_lazy_message_;
    _impl_.foo_.foo_lazy_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestOneof2::unsafe_arena_set_allocated_foo_lazy_message(::edition_unittest::TestOneof2_NestedMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_foo();
  if (value) {
    set_has_foo_lazy_message();
    _impl_.foo_.foo_lazy_message_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestOneof2.foo_lazy_message)
}
inline ::edition_unittest::TestOneof2_NestedMessage* TestOneof2::_internal_mutable_foo_lazy_message() {
  if (foo_case() != kFooLazyMessage) {
    clear_foo();
    set_has_foo_lazy_message();
    _impl_.foo_.foo_lazy_message_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestOneof2_NestedMessage>(GetArena());
  }
  return _impl_.foo_.foo_lazy_message_;
}
inline ::edition_unittest::TestOneof2_NestedMessage* TestOneof2::mutable_foo_lazy_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestOneof2_NestedMessage* _msg = _internal_mutable_foo_lazy_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.foo_lazy_message)
  return _msg;
}

// bytes foo_bytes_cord = 30 [ctype = CORD];
inline bool TestOneof2::has_foo_bytes_cord() const {
  return foo_case() == kFooBytesCord;
}
inline void TestOneof2::set_has_foo_bytes_cord() {
  _impl_._oneof_case_[0] = kFooBytesCord;
}
inline void TestOneof2::clear_foo_bytes_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooBytesCord) {
    if (GetArena() == nullptr) {
      delete _impl_.foo_.foo_bytes_cord_;
    }
    clear_has_foo();
  }
}
inline const ::absl::Cord& TestOneof2::_internal_foo_bytes_cord() const {
  if (foo_case() == kFooBytesCord) {
    return *_impl_.foo_.foo_bytes_cord_;
  }
  return ::google::protobuf::internal::GetEmptyCordAlreadyInited();
}
inline const ::absl::Cord& TestOneof2::foo_bytes_cord() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.foo_bytes_cord)
  return _internal_foo_bytes_cord();
}
inline void TestOneof2::set_foo_bytes_cord(const ::absl::Cord& value) {
  if (foo_case() != kFooBytesCord) {
    clear_foo();
    set_has_foo_bytes_cord();
    _impl_.foo_.foo_bytes_cord_ = new ::absl::Cord;
    ::google::protobuf::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(_impl_.foo_.foo_bytes_cord_);
    }
  }
  *_impl_.foo_.foo_bytes_cord_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.foo_bytes_cord)
}
inline void TestOneof2::set_foo_bytes_cord(::absl::string_view value) {
  if (foo_case() != kFooBytesCord) {
    clear_foo();
    set_has_foo_bytes_cord();
    _impl_.foo_.foo_bytes_cord_ = new ::absl::Cord;
    ::google::protobuf::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(_impl_.foo_.foo_bytes_cord_);
    }
  }
  *_impl_.foo_.foo_bytes_cord_ = value;
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestOneof2.foo_bytes_cord)
}
inline ::absl::Cord* TestOneof2::_internal_mutable_foo_bytes_cord() {
  if (foo_case() != kFooBytesCord) {
    clear_foo();
    set_has_foo_bytes_cord();
    _impl_.foo_.foo_bytes_cord_ = new ::absl::Cord;
    ::google::protobuf::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(_impl_.foo_.foo_bytes_cord_);
    }
  }
  return _impl_.foo_.foo_bytes_cord_;
}

// int32 bar_int = 12 [default = 5];
inline bool TestOneof2::has_bar_int() const {
  return bar_case() == kBarInt;
}
inline void TestOneof2::set_has_bar_int() {
  _impl_._oneof_case_[1] = kBarInt;
}
inline void TestOneof2::clear_bar_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarInt) {
    _impl_.bar_.bar_int_ = 5;
    clear_has_bar();
  }
}
inline ::int32_t TestOneof2::bar_int() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_int)
  return _internal_bar_int();
}
inline void TestOneof2::set_bar_int(::int32_t value) {
  if (bar_case() != kBarInt) {
    clear_bar();
    set_has_bar_int();
  }
  _impl_.bar_.bar_int_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_int)
}
inline ::int32_t TestOneof2::_internal_bar_int() const {
  if (bar_case() == kBarInt) {
    return _impl_.bar_.bar_int_;
  }
  return 5;
}

// string bar_string = 13 [default = "STRING"];
inline bool TestOneof2::has_bar_string() const {
  return bar_case() == kBarString;
}
inline void TestOneof2::set_has_bar_string() {
  _impl_._oneof_case_[1] = kBarString;
}
inline void TestOneof2::clear_bar_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarString) {
    _impl_.bar_.bar_string_.Destroy();
    clear_has_bar();
  }
}
inline absl::string_view TestOneof2::bar_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_string)
  return _internal_bar_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_bar_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarString) {
    clear_bar();

    set_has_bar_string();
    _impl_.bar_.bar_string_.InitDefault();
  }
  _impl_.bar_.bar_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_string)
}
inline const std::string& TestOneof2::_internal_bar_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (bar_case() != kBarString) {
    return ::edition_unittest::TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_string_.get();
  }
  return _impl_.bar_.bar_string_.Get();
}
inline void TestOneof2::_internal_set_bar_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarString) {
    clear_bar();

    set_has_bar_string();
    _impl_.bar_.bar_string_.InitDefault();
  }
  _impl_.bar_.bar_string_.Set(value, GetArena());
}

// string bar_cord = 14 [default = "CORD", ctype = CORD];
inline bool TestOneof2::has_bar_cord() const {
  return bar_case() == kBarCord;
}
inline void TestOneof2::set_has_bar_cord() {
  _impl_._oneof_case_[1] = kBarCord;
}
inline void TestOneof2::clear_bar_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarCord) {
    _impl_.bar_.bar_cord_.Destroy();
    clear_has_bar();
  }
}
inline const std::string& TestOneof2::bar_cord() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_cord)
  return _internal_bar_cord();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_bar_cord(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarCord) {
    clear_bar();

    set_has_bar_cord();
    _impl_.bar_.bar_cord_.InitDefault();
  }
  _impl_.bar_.bar_cord_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_cord)
}
inline std::string* TestOneof2::mutable_bar_cord() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bar_cord();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.bar_cord)
  return _s;
}
inline const std::string& TestOneof2::_internal_bar_cord() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (bar_case() != kBarCord) {
    return ::edition_unittest::TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_cord_.get();
  }
  return _impl_.bar_.bar_cord_.Get();
}
inline void TestOneof2::_internal_set_bar_cord(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarCord) {
    clear_bar();

    set_has_bar_cord();
    _impl_.bar_.bar_cord_.InitDefault();
  }
  _impl_.bar_.bar_cord_.Set(value, GetArena());
}
inline std::string* TestOneof2::_internal_mutable_bar_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarCord) {
    clear_bar();

    set_has_bar_cord();
    _impl_.bar_.bar_cord_.InitDefault();
  }
  return _impl_.bar_.bar_cord_.Mutable(::edition_unittest::TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_cord_, GetArena());
}
inline std::string* TestOneof2::release_bar_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.bar_cord)
  if (bar_case() != kBarCord) {
    return nullptr;
  }
  clear_has_bar();
  return _impl_.bar_.bar_cord_.Release();
}
inline void TestOneof2::set_allocated_bar_cord(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_bar()) {
    clear_bar();
  }
  if (value != nullptr) {
    set_has_bar_cord();
    _impl_.bar_.bar_cord_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestOneof2.bar_cord)
}

// string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
inline bool TestOneof2::has_bar_string_piece() const {
  return bar_case() == kBarStringPiece;
}
inline void TestOneof2::set_has_bar_string_piece() {
  _impl_._oneof_case_[1] = kBarStringPiece;
}
inline void TestOneof2::clear_bar_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarStringPiece) {
    _impl_.bar_.bar_string_piece_.Destroy();
    clear_has_bar();
  }
}
inline const std::string& TestOneof2::bar_string_piece() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_string_piece)
  return _internal_bar_string_piece();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_bar_string_piece(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarStringPiece) {
    clear_bar();

    set_has_bar_string_piece();
    _impl_.bar_.bar_string_piece_.InitDefault();
  }
  _impl_.bar_.bar_string_piece_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_string_piece)
}
inline std::string* TestOneof2::mutable_bar_string_piece() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bar_string_piece();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.bar_string_piece)
  return _s;
}
inline const std::string& TestOneof2::_internal_bar_string_piece() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (bar_case() != kBarStringPiece) {
    return ::edition_unittest::TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_string_piece_.get();
  }
  return _impl_.bar_.bar_string_piece_.Get();
}
inline void TestOneof2::_internal_set_bar_string_piece(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarStringPiece) {
    clear_bar();

    set_has_bar_string_piece();
    _impl_.bar_.bar_string_piece_.InitDefault();
  }
  _impl_.bar_.bar_string_piece_.Set(value, GetArena());
}
inline std::string* TestOneof2::_internal_mutable_bar_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarStringPiece) {
    clear_bar();

    set_has_bar_string_piece();
    _impl_.bar_.bar_string_piece_.InitDefault();
  }
  return _impl_.bar_.bar_string_piece_.Mutable(::edition_unittest::TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_string_piece_, GetArena());
}
inline std::string* TestOneof2::release_bar_string_piece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.bar_string_piece)
  if (bar_case() != kBarStringPiece) {
    return nullptr;
  }
  clear_has_bar();
  return _impl_.bar_.bar_string_piece_.Release();
}
inline void TestOneof2::set_allocated_bar_string_piece(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_bar()) {
    clear_bar();
  }
  if (value != nullptr) {
    set_has_bar_string_piece();
    _impl_.bar_.bar_string_piece_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestOneof2.bar_string_piece)
}

// bytes bar_bytes = 16 [default = "BYTES"];
inline bool TestOneof2::has_bar_bytes() const {
  return bar_case() == kBarBytes;
}
inline void TestOneof2::set_has_bar_bytes() {
  _impl_._oneof_case_[1] = kBarBytes;
}
inline void TestOneof2::clear_bar_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarBytes) {
    _impl_.bar_.bar_bytes_.Destroy();
    clear_has_bar();
  }
}
inline absl::string_view TestOneof2::bar_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_bytes)
  return _internal_bar_bytes();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_bar_bytes(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarBytes) {
    clear_bar();

    set_has_bar_bytes();
    _impl_.bar_.bar_bytes_.InitDefault();
  }
  _impl_.bar_.bar_bytes_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_bytes)
}
inline const std::string& TestOneof2::_internal_bar_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (bar_case() != kBarBytes) {
    return ::edition_unittest::TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_bytes_.get();
  }
  return _impl_.bar_.bar_bytes_.Get();
}
inline void TestOneof2::_internal_set_bar_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarBytes) {
    clear_bar();

    set_has_bar_bytes();
    _impl_.bar_.bar_bytes_.InitDefault();
  }
  _impl_.bar_.bar_bytes_.Set(value, GetArena());
}

// .edition_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
inline bool TestOneof2::has_bar_enum() const {
  return bar_case() == kBarEnum;
}
inline void TestOneof2::set_has_bar_enum() {
  _impl_._oneof_case_[1] = kBarEnum;
}
inline void TestOneof2::clear_bar_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarEnum) {
    _impl_.bar_.bar_enum_ = 2;
    clear_has_bar();
  }
}
inline ::edition_unittest::TestOneof2_NestedEnum TestOneof2::bar_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_enum)
  return _internal_bar_enum();
}
inline void TestOneof2::set_bar_enum(::edition_unittest::TestOneof2_NestedEnum value) {
  assert(::edition_unittest::TestOneof2_NestedEnum_IsValid(value));
  if (bar_case() != kBarEnum) {
    clear_bar();
    set_has_bar_enum();
  }
  _impl_.bar_.bar_enum_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_enum)
}
inline ::edition_unittest::TestOneof2_NestedEnum TestOneof2::_internal_bar_enum() const {
  if (bar_case() == kBarEnum) {
    return static_cast<::edition_unittest::TestOneof2_NestedEnum>(_impl_.bar_.bar_enum_);
  }
  return static_cast<::edition_unittest::TestOneof2_NestedEnum>(2);
}

// string bar_string_with_empty_default = 20 [default = ""];
inline bool TestOneof2::has_bar_string_with_empty_default() const {
  return bar_case() == kBarStringWithEmptyDefault;
}
inline void TestOneof2::set_has_bar_string_with_empty_default() {
  _impl_._oneof_case_[1] = kBarStringWithEmptyDefault;
}
inline void TestOneof2::clear_bar_string_with_empty_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarStringWithEmptyDefault) {
    _impl_.bar_.bar_string_with_empty_default_.Destroy();
    clear_has_bar();
  }
}
inline absl::string_view TestOneof2::bar_string_with_empty_default() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_string_with_empty_default)
  return _internal_bar_string_with_empty_default();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_bar_string_with_empty_default(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarStringWithEmptyDefault) {
    clear_bar();

    set_has_bar_string_with_empty_default();
    _impl_.bar_.bar_string_with_empty_default_.InitDefault();
  }
  _impl_.bar_.bar_string_with_empty_default_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_string_with_empty_default)
}
inline const std::string& TestOneof2::_internal_bar_string_with_empty_default() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (bar_case() != kBarStringWithEmptyDefault) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.bar_.bar_string_with_empty_default_.Get();
}
inline void TestOneof2::_internal_set_bar_string_with_empty_default(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarStringWithEmptyDefault) {
    clear_bar();

    set_has_bar_string_with_empty_default();
    _impl_.bar_.bar_string_with_empty_default_.InitDefault();
  }
  _impl_.bar_.bar_string_with_empty_default_.Set(value, GetArena());
}

// string bar_cord_with_empty_default = 21 [default = "", ctype = CORD];
inline bool TestOneof2::has_bar_cord_with_empty_default() const {
  return bar_case() == kBarCordWithEmptyDefault;
}
inline void TestOneof2::set_has_bar_cord_with_empty_default() {
  _impl_._oneof_case_[1] = kBarCordWithEmptyDefault;
}
inline void TestOneof2::clear_bar_cord_with_empty_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarCordWithEmptyDefault) {
    _impl_.bar_.bar_cord_with_empty_default_.Destroy();
    clear_has_bar();
  }
}
inline const std::string& TestOneof2::bar_cord_with_empty_default() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_cord_with_empty_default)
  return _internal_bar_cord_with_empty_default();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_bar_cord_with_empty_default(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarCordWithEmptyDefault) {
    clear_bar();

    set_has_bar_cord_with_empty_default();
    _impl_.bar_.bar_cord_with_empty_default_.InitDefault();
  }
  _impl_.bar_.bar_cord_with_empty_default_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_cord_with_empty_default)
}
inline std::string* TestOneof2::mutable_bar_cord_with_empty_default() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bar_cord_with_empty_default();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.bar_cord_with_empty_default)
  return _s;
}
inline const std::string& TestOneof2::_internal_bar_cord_with_empty_default() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (bar_case() != kBarCordWithEmptyDefault) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.bar_.bar_cord_with_empty_default_.Get();
}
inline void TestOneof2::_internal_set_bar_cord_with_empty_default(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarCordWithEmptyDefault) {
    clear_bar();

    set_has_bar_cord_with_empty_default();
    _impl_.bar_.bar_cord_with_empty_default_.InitDefault();
  }
  _impl_.bar_.bar_cord_with_empty_default_.Set(value, GetArena());
}
inline std::string* TestOneof2::_internal_mutable_bar_cord_with_empty_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarCordWithEmptyDefault) {
    clear_bar();

    set_has_bar_cord_with_empty_default();
    _impl_.bar_.bar_cord_with_empty_default_.InitDefault();
  }
  return _impl_.bar_.bar_cord_with_empty_default_.Mutable( GetArena());
}
inline std::string* TestOneof2::release_bar_cord_with_empty_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.bar_cord_with_empty_default)
  if (bar_case() != kBarCordWithEmptyDefault) {
    return nullptr;
  }
  clear_has_bar();
  return _impl_.bar_.bar_cord_with_empty_default_.Release();
}
inline void TestOneof2::set_allocated_bar_cord_with_empty_default(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_bar()) {
    clear_bar();
  }
  if (value != nullptr) {
    set_has_bar_cord_with_empty_default();
    _impl_.bar_.bar_cord_with_empty_default_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestOneof2.bar_cord_with_empty_default)
}

// string bar_string_piece_with_empty_default = 22 [default = "", ctype = STRING_PIECE];
inline bool TestOneof2::has_bar_string_piece_with_empty_default() const {
  return bar_case() == kBarStringPieceWithEmptyDefault;
}
inline void TestOneof2::set_has_bar_string_piece_with_empty_default() {
  _impl_._oneof_case_[1] = kBarStringPieceWithEmptyDefault;
}
inline void TestOneof2::clear_bar_string_piece_with_empty_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarStringPieceWithEmptyDefault) {
    _impl_.bar_.bar_string_piece_with_empty_default_.Destroy();
    clear_has_bar();
  }
}
inline const std::string& TestOneof2::bar_string_piece_with_empty_default() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_string_piece_with_empty_default)
  return _internal_bar_string_piece_with_empty_default();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_bar_string_piece_with_empty_default(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarStringPieceWithEmptyDefault) {
    clear_bar();

    set_has_bar_string_piece_with_empty_default();
    _impl_.bar_.bar_string_piece_with_empty_default_.InitDefault();
  }
  _impl_.bar_.bar_string_piece_with_empty_default_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_string_piece_with_empty_default)
}
inline std::string* TestOneof2::mutable_bar_string_piece_with_empty_default() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bar_string_piece_with_empty_default();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestOneof2.bar_string_piece_with_empty_default)
  return _s;
}
inline const std::string& TestOneof2::_internal_bar_string_piece_with_empty_default() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (bar_case() != kBarStringPieceWithEmptyDefault) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.bar_.bar_string_piece_with_empty_default_.Get();
}
inline void TestOneof2::_internal_set_bar_string_piece_with_empty_default(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarStringPieceWithEmptyDefault) {
    clear_bar();

    set_has_bar_string_piece_with_empty_default();
    _impl_.bar_.bar_string_piece_with_empty_default_.InitDefault();
  }
  _impl_.bar_.bar_string_piece_with_empty_default_.Set(value, GetArena());
}
inline std::string* TestOneof2::_internal_mutable_bar_string_piece_with_empty_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarStringPieceWithEmptyDefault) {
    clear_bar();

    set_has_bar_string_piece_with_empty_default();
    _impl_.bar_.bar_string_piece_with_empty_default_.InitDefault();
  }
  return _impl_.bar_.bar_string_piece_with_empty_default_.Mutable( GetArena());
}
inline std::string* TestOneof2::release_bar_string_piece_with_empty_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestOneof2.bar_string_piece_with_empty_default)
  if (bar_case() != kBarStringPieceWithEmptyDefault) {
    return nullptr;
  }
  clear_has_bar();
  return _impl_.bar_.bar_string_piece_with_empty_default_.Release();
}
inline void TestOneof2::set_allocated_bar_string_piece_with_empty_default(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_bar()) {
    clear_bar();
  }
  if (value != nullptr) {
    set_has_bar_string_piece_with_empty_default();
    _impl_.bar_.bar_string_piece_with_empty_default_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestOneof2.bar_string_piece_with_empty_default)
}

// bytes bar_bytes_with_empty_default = 23 [default = ""];
inline bool TestOneof2::has_bar_bytes_with_empty_default() const {
  return bar_case() == kBarBytesWithEmptyDefault;
}
inline void TestOneof2::set_has_bar_bytes_with_empty_default() {
  _impl_._oneof_case_[1] = kBarBytesWithEmptyDefault;
}
inline void TestOneof2::clear_bar_bytes_with_empty_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() == kBarBytesWithEmptyDefault) {
    _impl_.bar_.bar_bytes_with_empty_default_.Destroy();
    clear_has_bar();
  }
}
inline absl::string_view TestOneof2::bar_bytes_with_empty_default() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.bar_bytes_with_empty_default)
  return _internal_bar_bytes_with_empty_default();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_bar_bytes_with_empty_default(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarBytesWithEmptyDefault) {
    clear_bar();

    set_has_bar_bytes_with_empty_default();
    _impl_.bar_.bar_bytes_with_empty_default_.InitDefault();
  }
  _impl_.bar_.bar_bytes_with_empty_default_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.bar_bytes_with_empty_default)
}
inline const std::string& TestOneof2::_internal_bar_bytes_with_empty_default() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (bar_case() != kBarBytesWithEmptyDefault) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.bar_.bar_bytes_with_empty_default_.Get();
}
inline void TestOneof2::_internal_set_bar_bytes_with_empty_default(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (bar_case() != kBarBytesWithEmptyDefault) {
    clear_bar();

    set_has_bar_bytes_with_empty_default();
    _impl_.bar_.bar_bytes_with_empty_default_.InitDefault();
  }
  _impl_.bar_.bar_bytes_with_empty_default_.Set(value, GetArena());
}

// int32 baz_int = 18;
inline bool TestOneof2::has_baz_int() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestOneof2::clear_baz_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baz_int_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestOneof2::baz_int() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.baz_int)
  return _internal_baz_int();
}
inline void TestOneof2::set_baz_int(::int32_t value) {
  _internal_set_baz_int(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.baz_int)
}
inline ::int32_t TestOneof2::_internal_baz_int() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.baz_int_;
}
inline void TestOneof2::_internal_set_baz_int(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baz_int_ = value;
}

// string baz_string = 19 [default = "BAZ"];
inline bool TestOneof2::has_baz_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestOneof2::clear_baz_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baz_string_.ClearToDefault(::edition_unittest::TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_baz_string_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestOneof2::baz_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestOneof2.baz_string)
  if (_impl_.baz_string_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_baz_string_.get();
  }
  return _internal_baz_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestOneof2::set_baz_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.baz_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestOneof2.baz_string)
}
inline const std::string& TestOneof2::_internal_baz_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.baz_string_.Get();
}
inline void TestOneof2::_internal_set_baz_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.baz_string_.Set(value, GetArena());
}

inline bool TestOneof2::has_foo() const {
  return foo_case() != FOO_NOT_SET;
}
inline void TestOneof2::clear_has_foo() {
  _impl_._oneof_case_[0] = FOO_NOT_SET;
}
inline bool TestOneof2::has_bar() const {
  return bar_case() != BAR_NOT_SET;
}
inline void TestOneof2::clear_has_bar() {
  _impl_._oneof_case_[1] = BAR_NOT_SET;
}
inline TestOneof2::FooCase TestOneof2::foo_case() const {
  return TestOneof2::FooCase(_impl_._oneof_case_[0]);
}
inline TestOneof2::BarCase TestOneof2::bar_case() const {
  return TestOneof2::BarCase(_impl_._oneof_case_[1]);
}
// -------------------------------------------------------------------

// TestRequiredOneof_NestedMessage

// double required_double = 1 [features = {
inline bool TestRequiredOneof_NestedMessage::has_required_double() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestRequiredOneof_NestedMessage::clear_required_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_double_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double TestRequiredOneof_NestedMessage::required_double() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredOneof.NestedMessage.required_double)
  return _internal_required_double();
}
inline void TestRequiredOneof_NestedMessage::set_required_double(double value) {
  _internal_set_required_double(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredOneof.NestedMessage.required_double)
}
inline double TestRequiredOneof_NestedMessage::_internal_required_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_double_;
}
inline void TestRequiredOneof_NestedMessage::_internal_set_required_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_double_ = value;
}

// -------------------------------------------------------------------

// TestRequiredOneof

// int32 foo_int = 1;
inline bool TestRequiredOneof::has_foo_int() const {
  return foo_case() == kFooInt;
}
inline void TestRequiredOneof::set_has_foo_int() {
  _impl_._oneof_case_[0] = kFooInt;
}
inline void TestRequiredOneof::clear_foo_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooInt) {
    _impl_.foo_.foo_int_ = 0;
    clear_has_foo();
  }
}
inline ::int32_t TestRequiredOneof::foo_int() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredOneof.foo_int)
  return _internal_foo_int();
}
inline void TestRequiredOneof::set_foo_int(::int32_t value) {
  if (foo_case() != kFooInt) {
    clear_foo();
    set_has_foo_int();
  }
  _impl_.foo_.foo_int_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredOneof.foo_int)
}
inline ::int32_t TestRequiredOneof::_internal_foo_int() const {
  if (foo_case() == kFooInt) {
    return _impl_.foo_.foo_int_;
  }
  return 0;
}

// string foo_string = 2;
inline bool TestRequiredOneof::has_foo_string() const {
  return foo_case() == kFooString;
}
inline void TestRequiredOneof::set_has_foo_string() {
  _impl_._oneof_case_[0] = kFooString;
}
inline void TestRequiredOneof::clear_foo_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooString) {
    _impl_.foo_.foo_string_.Destroy();
    clear_has_foo();
  }
}
inline absl::string_view TestRequiredOneof::foo_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredOneof.foo_string)
  return _internal_foo_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestRequiredOneof::set_foo_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooString) {
    clear_foo();

    set_has_foo_string();
    _impl_.foo_.foo_string_.InitDefault();
  }
  _impl_.foo_.foo_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestRequiredOneof.foo_string)
}
inline const std::string& TestRequiredOneof::_internal_foo_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (foo_case() != kFooString) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.foo_.foo_string_.Get();
}
inline void TestRequiredOneof::_internal_set_foo_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() != kFooString) {
    clear_foo();

    set_has_foo_string();
    _impl_.foo_.foo_string_.InitDefault();
  }
  _impl_.foo_.foo_string_.Set(value, GetArena());
}

// .edition_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
inline bool TestRequiredOneof::has_foo_message() const {
  return foo_case() == kFooMessage;
}
inline bool TestRequiredOneof::_internal_has_foo_message() const {
  return foo_case() == kFooMessage;
}
inline void TestRequiredOneof::set_has_foo_message() {
  _impl_._oneof_case_[0] = kFooMessage;
}
inline void TestRequiredOneof::clear_foo_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.foo_.foo_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.foo_.foo_message_);
    }
    clear_has_foo();
  }
}
inline ::edition_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::release_foo_message() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestRequiredOneof.foo_message)
  if (foo_case() == kFooMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_message_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.foo_.foo_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestRequiredOneof_NestedMessage& TestRequiredOneof::_internal_foo_message() const {
  return foo_case() == kFooMessage ? *_impl_.foo_.foo_message_ : reinterpret_cast<::edition_unittest::TestRequiredOneof_NestedMessage&>(::edition_unittest::_TestRequiredOneof_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestRequiredOneof_NestedMessage& TestRequiredOneof::foo_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredOneof.foo_message)
  return _internal_foo_message();
}
inline ::edition_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::unsafe_arena_release_foo_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestRequiredOneof.foo_message)
  if (foo_case() == kFooMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_message_;
    _impl_.foo_.foo_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestRequiredOneof::unsafe_arena_set_allocated_foo_message(::edition_unittest::TestRequiredOneof_NestedMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_foo();
  if (value) {
    set_has_foo_message();
    _impl_.foo_.foo_message_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestRequiredOneof.foo_message)
}
inline ::edition_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::_internal_mutable_foo_message() {
  if (foo_case() != kFooMessage) {
    clear_foo();
    set_has_foo_message();
    _impl_.foo_.foo_message_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequiredOneof_NestedMessage>(GetArena());
  }
  return _impl_.foo_.foo_message_;
}
inline ::edition_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::mutable_foo_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestRequiredOneof_NestedMessage* _msg = _internal_mutable_foo_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequiredOneof.foo_message)
  return _msg;
}

// .edition_unittest.TestRequiredOneof.NestedMessage foo_lazy_message = 4 [lazy = true];
inline bool TestRequiredOneof::has_foo_lazy_message() const {
  return foo_case() == kFooLazyMessage;
}
inline bool TestRequiredOneof::_internal_has_foo_lazy_message() const {
  return foo_case() == kFooLazyMessage;
}
inline void TestRequiredOneof::set_has_foo_lazy_message() {
  _impl_._oneof_case_[0] = kFooLazyMessage;
}
inline void TestRequiredOneof::clear_foo_lazy_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (foo_case() == kFooLazyMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.foo_.foo_lazy_message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.foo_.foo_lazy_message_);
    }
    clear_has_foo();
  }
}
inline ::edition_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::release_foo_lazy_message() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestRequiredOneof.foo_lazy_message)
  if (foo_case() == kFooLazyMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_lazy_message_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.foo_.foo_lazy_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestRequiredOneof_NestedMessage& TestRequiredOneof::_internal_foo_lazy_message() const {
  return foo_case() == kFooLazyMessage ? *_impl_.foo_.foo_lazy_message_ : reinterpret_cast<::edition_unittest::TestRequiredOneof_NestedMessage&>(::edition_unittest::_TestRequiredOneof_NestedMessage_default_instance_);
}
inline const ::edition_unittest::TestRequiredOneof_NestedMessage& TestRequiredOneof::foo_lazy_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRequiredOneof.foo_lazy_message)
  return _internal_foo_lazy_message();
}
inline ::edition_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::unsafe_arena_release_foo_lazy_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestRequiredOneof.foo_lazy_message)
  if (foo_case() == kFooLazyMessage) {
    clear_has_foo();
    auto* temp = _impl_.foo_.foo_lazy_message_;
    _impl_.foo_.foo_lazy_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestRequiredOneof::unsafe_arena_set_allocated_foo_lazy_message(::edition_unittest::TestRequiredOneof_NestedMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_foo();
  if (value) {
    set_has_foo_lazy_message();
    _impl_.foo_.foo_lazy_message_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestRequiredOneof.foo_lazy_message)
}
inline ::edition_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::_internal_mutable_foo_lazy_message() {
  if (foo_case() != kFooLazyMessage) {
    clear_foo();
    set_has_foo_lazy_message();
    _impl_.foo_.foo_lazy_message_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestRequiredOneof_NestedMessage>(GetArena());
  }
  return _impl_.foo_.foo_lazy_message_;
}
inline ::edition_unittest::TestRequiredOneof_NestedMessage* TestRequiredOneof::mutable_foo_lazy_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestRequiredOneof_NestedMessage* _msg = _internal_mutable_foo_lazy_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestRequiredOneof.foo_lazy_message)
  return _msg;
}

inline bool TestRequiredOneof::has_foo() const {
  return foo_case() != FOO_NOT_SET;
}
inline void TestRequiredOneof::clear_has_foo() {
  _impl_._oneof_case_[0] = FOO_NOT_SET;
}
inline TestRequiredOneof::FooCase TestRequiredOneof::foo_case() const {
  return TestRequiredOneof::FooCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TestPackedTypes

// repeated int32 packed_int32 = 90 [features = {
inline int TestPackedTypes::_internal_packed_int32_size() const {
  return _internal_packed_int32().size();
}
inline int TestPackedTypes::packed_int32_size() const {
  return _internal_packed_int32_size();
}
inline void TestPackedTypes::clear_packed_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int32_.Clear();
}
inline ::int32_t TestPackedTypes::packed_int32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_int32)
  return _internal_packed_int32().Get(index);
}
inline void TestPackedTypes::set_packed_int32(int index, ::int32_t value) {
  _internal_mutable_packed_int32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_int32)
}
inline void TestPackedTypes::add_packed_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_int32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestPackedTypes::packed_int32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_int32)
  return _internal_packed_int32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestPackedTypes::mutable_packed_int32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_int32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestPackedTypes::_internal_packed_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestPackedTypes::_internal_mutable_packed_int32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int32_;
}

// repeated int64 packed_int64 = 91 [features = {
inline int TestPackedTypes::_internal_packed_int64_size() const {
  return _internal_packed_int64().size();
}
inline int TestPackedTypes::packed_int64_size() const {
  return _internal_packed_int64_size();
}
inline void TestPackedTypes::clear_packed_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int64_.Clear();
}
inline ::int64_t TestPackedTypes::packed_int64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_int64)
  return _internal_packed_int64().Get(index);
}
inline void TestPackedTypes::set_packed_int64(int index, ::int64_t value) {
  _internal_mutable_packed_int64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_int64)
}
inline void TestPackedTypes::add_packed_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_int64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestPackedTypes::packed_int64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_int64)
  return _internal_packed_int64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestPackedTypes::mutable_packed_int64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_int64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestPackedTypes::_internal_packed_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestPackedTypes::_internal_mutable_packed_int64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int64_;
}

// repeated uint32 packed_uint32 = 92 [features = {
inline int TestPackedTypes::_internal_packed_uint32_size() const {
  return _internal_packed_uint32().size();
}
inline int TestPackedTypes::packed_uint32_size() const {
  return _internal_packed_uint32_size();
}
inline void TestPackedTypes::clear_packed_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_uint32_.Clear();
}
inline ::uint32_t TestPackedTypes::packed_uint32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_uint32)
  return _internal_packed_uint32().Get(index);
}
inline void TestPackedTypes::set_packed_uint32(int index, ::uint32_t value) {
  _internal_mutable_packed_uint32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_uint32)
}
inline void TestPackedTypes::add_packed_uint32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_uint32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_uint32)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestPackedTypes::packed_uint32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_uint32)
  return _internal_packed_uint32();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestPackedTypes::mutable_packed_uint32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_uint32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_uint32();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestPackedTypes::_internal_packed_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_uint32_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestPackedTypes::_internal_mutable_packed_uint32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_uint32_;
}

// repeated uint64 packed_uint64 = 93 [features = {
inline int TestPackedTypes::_internal_packed_uint64_size() const {
  return _internal_packed_uint64().size();
}
inline int TestPackedTypes::packed_uint64_size() const {
  return _internal_packed_uint64_size();
}
inline void TestPackedTypes::clear_packed_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_uint64_.Clear();
}
inline ::uint64_t TestPackedTypes::packed_uint64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_uint64)
  return _internal_packed_uint64().Get(index);
}
inline void TestPackedTypes::set_packed_uint64(int index, ::uint64_t value) {
  _internal_mutable_packed_uint64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_uint64)
}
inline void TestPackedTypes::add_packed_uint64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_uint64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_uint64)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& TestPackedTypes::packed_uint64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_uint64)
  return _internal_packed_uint64();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestPackedTypes::mutable_packed_uint64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_uint64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_uint64();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
TestPackedTypes::_internal_packed_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_uint64_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestPackedTypes::_internal_mutable_packed_uint64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_uint64_;
}

// repeated sint32 packed_sint32 = 94 [features = {
inline int TestPackedTypes::_internal_packed_sint32_size() const {
  return _internal_packed_sint32().size();
}
inline int TestPackedTypes::packed_sint32_size() const {
  return _internal_packed_sint32_size();
}
inline void TestPackedTypes::clear_packed_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_sint32_.Clear();
}
inline ::int32_t TestPackedTypes::packed_sint32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_sint32)
  return _internal_packed_sint32().Get(index);
}
inline void TestPackedTypes::set_packed_sint32(int index, ::int32_t value) {
  _internal_mutable_packed_sint32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_sint32)
}
inline void TestPackedTypes::add_packed_sint32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_sint32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_sint32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestPackedTypes::packed_sint32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_sint32)
  return _internal_packed_sint32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestPackedTypes::mutable_packed_sint32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_sint32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_sint32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestPackedTypes::_internal_packed_sint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_sint32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestPackedTypes::_internal_mutable_packed_sint32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_sint32_;
}

// repeated sint64 packed_sint64 = 95 [features = {
inline int TestPackedTypes::_internal_packed_sint64_size() const {
  return _internal_packed_sint64().size();
}
inline int TestPackedTypes::packed_sint64_size() const {
  return _internal_packed_sint64_size();
}
inline void TestPackedTypes::clear_packed_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_sint64_.Clear();
}
inline ::int64_t TestPackedTypes::packed_sint64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_sint64)
  return _internal_packed_sint64().Get(index);
}
inline void TestPackedTypes::set_packed_sint64(int index, ::int64_t value) {
  _internal_mutable_packed_sint64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_sint64)
}
inline void TestPackedTypes::add_packed_sint64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_sint64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_sint64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestPackedTypes::packed_sint64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_sint64)
  return _internal_packed_sint64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestPackedTypes::mutable_packed_sint64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_sint64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_sint64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestPackedTypes::_internal_packed_sint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_sint64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestPackedTypes::_internal_mutable_packed_sint64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_sint64_;
}

// repeated fixed32 packed_fixed32 = 96 [features = {
inline int TestPackedTypes::_internal_packed_fixed32_size() const {
  return _internal_packed_fixed32().size();
}
inline int TestPackedTypes::packed_fixed32_size() const {
  return _internal_packed_fixed32_size();
}
inline void TestPackedTypes::clear_packed_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_fixed32_.Clear();
}
inline ::uint32_t TestPackedTypes::packed_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_fixed32)
  return _internal_packed_fixed32().Get(index);
}
inline void TestPackedTypes::set_packed_fixed32(int index, ::uint32_t value) {
  _internal_mutable_packed_fixed32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_fixed32)
}
inline void TestPackedTypes::add_packed_fixed32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_fixed32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_fixed32)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestPackedTypes::packed_fixed32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_fixed32)
  return _internal_packed_fixed32();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestPackedTypes::mutable_packed_fixed32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_fixed32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_fixed32();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestPackedTypes::_internal_packed_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_fixed32_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestPackedTypes::_internal_mutable_packed_fixed32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_fixed32_;
}

// repeated fixed64 packed_fixed64 = 97 [features = {
inline int TestPackedTypes::_internal_packed_fixed64_size() const {
  return _internal_packed_fixed64().size();
}
inline int TestPackedTypes::packed_fixed64_size() const {
  return _internal_packed_fixed64_size();
}
inline void TestPackedTypes::clear_packed_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_fixed64_.Clear();
}
inline ::uint64_t TestPackedTypes::packed_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_fixed64)
  return _internal_packed_fixed64().Get(index);
}
inline void TestPackedTypes::set_packed_fixed64(int index, ::uint64_t value) {
  _internal_mutable_packed_fixed64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_fixed64)
}
inline void TestPackedTypes::add_packed_fixed64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_fixed64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_fixed64)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& TestPackedTypes::packed_fixed64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_fixed64)
  return _internal_packed_fixed64();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestPackedTypes::mutable_packed_fixed64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_fixed64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_fixed64();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
TestPackedTypes::_internal_packed_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_fixed64_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestPackedTypes::_internal_mutable_packed_fixed64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_fixed64_;
}

// repeated sfixed32 packed_sfixed32 = 98 [features = {
inline int TestPackedTypes::_internal_packed_sfixed32_size() const {
  return _internal_packed_sfixed32().size();
}
inline int TestPackedTypes::packed_sfixed32_size() const {
  return _internal_packed_sfixed32_size();
}
inline void TestPackedTypes::clear_packed_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_sfixed32_.Clear();
}
inline ::int32_t TestPackedTypes::packed_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_sfixed32)
  return _internal_packed_sfixed32().Get(index);
}
inline void TestPackedTypes::set_packed_sfixed32(int index, ::int32_t value) {
  _internal_mutable_packed_sfixed32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_sfixed32)
}
inline void TestPackedTypes::add_packed_sfixed32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_sfixed32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_sfixed32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestPackedTypes::packed_sfixed32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_sfixed32)
  return _internal_packed_sfixed32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestPackedTypes::mutable_packed_sfixed32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_sfixed32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_sfixed32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestPackedTypes::_internal_packed_sfixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_sfixed32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestPackedTypes::_internal_mutable_packed_sfixed32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_sfixed32_;
}

// repeated sfixed64 packed_sfixed64 = 99 [features = {
inline int TestPackedTypes::_internal_packed_sfixed64_size() const {
  return _internal_packed_sfixed64().size();
}
inline int TestPackedTypes::packed_sfixed64_size() const {
  return _internal_packed_sfixed64_size();
}
inline void TestPackedTypes::clear_packed_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_sfixed64_.Clear();
}
inline ::int64_t TestPackedTypes::packed_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_sfixed64)
  return _internal_packed_sfixed64().Get(index);
}
inline void TestPackedTypes::set_packed_sfixed64(int index, ::int64_t value) {
  _internal_mutable_packed_sfixed64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_sfixed64)
}
inline void TestPackedTypes::add_packed_sfixed64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_sfixed64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_sfixed64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestPackedTypes::packed_sfixed64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_sfixed64)
  return _internal_packed_sfixed64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestPackedTypes::mutable_packed_sfixed64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_sfixed64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_sfixed64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestPackedTypes::_internal_packed_sfixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_sfixed64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestPackedTypes::_internal_mutable_packed_sfixed64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_sfixed64_;
}

// repeated float packed_float = 100 [features = {
inline int TestPackedTypes::_internal_packed_float_size() const {
  return _internal_packed_float().size();
}
inline int TestPackedTypes::packed_float_size() const {
  return _internal_packed_float_size();
}
inline void TestPackedTypes::clear_packed_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_float_.Clear();
}
inline float TestPackedTypes::packed_float(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_float)
  return _internal_packed_float().Get(index);
}
inline void TestPackedTypes::set_packed_float(int index, float value) {
  _internal_mutable_packed_float()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_float)
}
inline void TestPackedTypes::add_packed_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_float()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_float)
}
inline const ::google::protobuf::RepeatedField<float>& TestPackedTypes::packed_float() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_float)
  return _internal_packed_float();
}
inline ::google::protobuf::RepeatedField<float>* TestPackedTypes::mutable_packed_float()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_float)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_float();
}
inline const ::google::protobuf::RepeatedField<float>&
TestPackedTypes::_internal_packed_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_float_;
}
inline ::google::protobuf::RepeatedField<float>* TestPackedTypes::_internal_mutable_packed_float() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_float_;
}

// repeated double packed_double = 101 [features = {
inline int TestPackedTypes::_internal_packed_double_size() const {
  return _internal_packed_double().size();
}
inline int TestPackedTypes::packed_double_size() const {
  return _internal_packed_double_size();
}
inline void TestPackedTypes::clear_packed_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_double_.Clear();
}
inline double TestPackedTypes::packed_double(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_double)
  return _internal_packed_double().Get(index);
}
inline void TestPackedTypes::set_packed_double(int index, double value) {
  _internal_mutable_packed_double()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_double)
}
inline void TestPackedTypes::add_packed_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_double()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_double)
}
inline const ::google::protobuf::RepeatedField<double>& TestPackedTypes::packed_double() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_double)
  return _internal_packed_double();
}
inline ::google::protobuf::RepeatedField<double>* TestPackedTypes::mutable_packed_double()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_double)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_double();
}
inline const ::google::protobuf::RepeatedField<double>&
TestPackedTypes::_internal_packed_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_double_;
}
inline ::google::protobuf::RepeatedField<double>* TestPackedTypes::_internal_mutable_packed_double() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_double_;
}

// repeated bool packed_bool = 102 [features = {
inline int TestPackedTypes::_internal_packed_bool_size() const {
  return _internal_packed_bool().size();
}
inline int TestPackedTypes::packed_bool_size() const {
  return _internal_packed_bool_size();
}
inline void TestPackedTypes::clear_packed_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_bool_.Clear();
}
inline bool TestPackedTypes::packed_bool(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_bool)
  return _internal_packed_bool().Get(index);
}
inline void TestPackedTypes::set_packed_bool(int index, bool value) {
  _internal_mutable_packed_bool()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_bool)
}
inline void TestPackedTypes::add_packed_bool(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_bool()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_bool)
}
inline const ::google::protobuf::RepeatedField<bool>& TestPackedTypes::packed_bool() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_bool)
  return _internal_packed_bool();
}
inline ::google::protobuf::RepeatedField<bool>* TestPackedTypes::mutable_packed_bool()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_bool)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_bool();
}
inline const ::google::protobuf::RepeatedField<bool>&
TestPackedTypes::_internal_packed_bool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_bool_;
}
inline ::google::protobuf::RepeatedField<bool>* TestPackedTypes::_internal_mutable_packed_bool() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_bool_;
}

// repeated .edition_unittest.ForeignEnum packed_enum = 103 [features = {
inline int TestPackedTypes::_internal_packed_enum_size() const {
  return _internal_packed_enum().size();
}
inline int TestPackedTypes::packed_enum_size() const {
  return _internal_packed_enum_size();
}
inline void TestPackedTypes::clear_packed_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_enum_.Clear();
}
inline ::edition_unittest::ForeignEnum TestPackedTypes::packed_enum(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedTypes.packed_enum)
  return static_cast<::edition_unittest::ForeignEnum>(_internal_packed_enum().Get(index));
}
inline void TestPackedTypes::set_packed_enum(int index, ::edition_unittest::ForeignEnum value) {
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _internal_mutable_packed_enum()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedTypes.packed_enum)
}
inline void TestPackedTypes::add_packed_enum(::edition_unittest::ForeignEnum value) {
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_enum()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedTypes.packed_enum)
}
inline const ::google::protobuf::RepeatedField<int>& TestPackedTypes::packed_enum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedTypes.packed_enum)
  return _internal_packed_enum();
}
inline ::google::protobuf::RepeatedField<int>* TestPackedTypes::mutable_packed_enum()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedTypes.packed_enum)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_enum();
}
inline const ::google::protobuf::RepeatedField<int>& TestPackedTypes::_internal_packed_enum()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_enum_;
}
inline ::google::protobuf::RepeatedField<int>* TestPackedTypes::_internal_mutable_packed_enum() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_enum_;
}

// -------------------------------------------------------------------

// TestUnpackedTypes

// repeated int32 unpacked_int32 = 90 [features = {
inline int TestUnpackedTypes::_internal_unpacked_int32_size() const {
  return _internal_unpacked_int32().size();
}
inline int TestUnpackedTypes::unpacked_int32_size() const {
  return _internal_unpacked_int32_size();
}
inline void TestUnpackedTypes::clear_unpacked_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_int32_.Clear();
}
inline ::int32_t TestUnpackedTypes::unpacked_int32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_int32)
  return _internal_unpacked_int32().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_int32(int index, ::int32_t value) {
  _internal_mutable_unpacked_int32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_int32)
}
inline void TestUnpackedTypes::add_unpacked_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_int32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_int32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestUnpackedTypes::unpacked_int32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_int32)
  return _internal_unpacked_int32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestUnpackedTypes::mutable_unpacked_int32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_int32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_int32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestUnpackedTypes::_internal_unpacked_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_int32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestUnpackedTypes::_internal_mutable_unpacked_int32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_int32_;
}

// repeated int64 unpacked_int64 = 91 [features = {
inline int TestUnpackedTypes::_internal_unpacked_int64_size() const {
  return _internal_unpacked_int64().size();
}
inline int TestUnpackedTypes::unpacked_int64_size() const {
  return _internal_unpacked_int64_size();
}
inline void TestUnpackedTypes::clear_unpacked_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_int64_.Clear();
}
inline ::int64_t TestUnpackedTypes::unpacked_int64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_int64)
  return _internal_unpacked_int64().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_int64(int index, ::int64_t value) {
  _internal_mutable_unpacked_int64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_int64)
}
inline void TestUnpackedTypes::add_unpacked_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_int64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_int64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestUnpackedTypes::unpacked_int64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_int64)
  return _internal_unpacked_int64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestUnpackedTypes::mutable_unpacked_int64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_int64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_int64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestUnpackedTypes::_internal_unpacked_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_int64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestUnpackedTypes::_internal_mutable_unpacked_int64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_int64_;
}

// repeated uint32 unpacked_uint32 = 92 [features = {
inline int TestUnpackedTypes::_internal_unpacked_uint32_size() const {
  return _internal_unpacked_uint32().size();
}
inline int TestUnpackedTypes::unpacked_uint32_size() const {
  return _internal_unpacked_uint32_size();
}
inline void TestUnpackedTypes::clear_unpacked_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_uint32_.Clear();
}
inline ::uint32_t TestUnpackedTypes::unpacked_uint32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_uint32)
  return _internal_unpacked_uint32().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_uint32(int index, ::uint32_t value) {
  _internal_mutable_unpacked_uint32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_uint32)
}
inline void TestUnpackedTypes::add_unpacked_uint32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_uint32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_uint32)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestUnpackedTypes::unpacked_uint32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_uint32)
  return _internal_unpacked_uint32();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestUnpackedTypes::mutable_unpacked_uint32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_uint32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_uint32();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestUnpackedTypes::_internal_unpacked_uint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_uint32_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestUnpackedTypes::_internal_mutable_unpacked_uint32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_uint32_;
}

// repeated uint64 unpacked_uint64 = 93 [features = {
inline int TestUnpackedTypes::_internal_unpacked_uint64_size() const {
  return _internal_unpacked_uint64().size();
}
inline int TestUnpackedTypes::unpacked_uint64_size() const {
  return _internal_unpacked_uint64_size();
}
inline void TestUnpackedTypes::clear_unpacked_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_uint64_.Clear();
}
inline ::uint64_t TestUnpackedTypes::unpacked_uint64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_uint64)
  return _internal_unpacked_uint64().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_uint64(int index, ::uint64_t value) {
  _internal_mutable_unpacked_uint64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_uint64)
}
inline void TestUnpackedTypes::add_unpacked_uint64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_uint64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_uint64)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& TestUnpackedTypes::unpacked_uint64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_uint64)
  return _internal_unpacked_uint64();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestUnpackedTypes::mutable_unpacked_uint64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_uint64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_uint64();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
TestUnpackedTypes::_internal_unpacked_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_uint64_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestUnpackedTypes::_internal_mutable_unpacked_uint64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_uint64_;
}

// repeated sint32 unpacked_sint32 = 94 [features = {
inline int TestUnpackedTypes::_internal_unpacked_sint32_size() const {
  return _internal_unpacked_sint32().size();
}
inline int TestUnpackedTypes::unpacked_sint32_size() const {
  return _internal_unpacked_sint32_size();
}
inline void TestUnpackedTypes::clear_unpacked_sint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_sint32_.Clear();
}
inline ::int32_t TestUnpackedTypes::unpacked_sint32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_sint32)
  return _internal_unpacked_sint32().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_sint32(int index, ::int32_t value) {
  _internal_mutable_unpacked_sint32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_sint32)
}
inline void TestUnpackedTypes::add_unpacked_sint32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_sint32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_sint32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestUnpackedTypes::unpacked_sint32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_sint32)
  return _internal_unpacked_sint32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestUnpackedTypes::mutable_unpacked_sint32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_sint32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_sint32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestUnpackedTypes::_internal_unpacked_sint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_sint32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestUnpackedTypes::_internal_mutable_unpacked_sint32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_sint32_;
}

// repeated sint64 unpacked_sint64 = 95 [features = {
inline int TestUnpackedTypes::_internal_unpacked_sint64_size() const {
  return _internal_unpacked_sint64().size();
}
inline int TestUnpackedTypes::unpacked_sint64_size() const {
  return _internal_unpacked_sint64_size();
}
inline void TestUnpackedTypes::clear_unpacked_sint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_sint64_.Clear();
}
inline ::int64_t TestUnpackedTypes::unpacked_sint64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_sint64)
  return _internal_unpacked_sint64().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_sint64(int index, ::int64_t value) {
  _internal_mutable_unpacked_sint64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_sint64)
}
inline void TestUnpackedTypes::add_unpacked_sint64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_sint64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_sint64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestUnpackedTypes::unpacked_sint64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_sint64)
  return _internal_unpacked_sint64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestUnpackedTypes::mutable_unpacked_sint64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_sint64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_sint64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestUnpackedTypes::_internal_unpacked_sint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_sint64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestUnpackedTypes::_internal_mutable_unpacked_sint64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_sint64_;
}

// repeated fixed32 unpacked_fixed32 = 96 [features = {
inline int TestUnpackedTypes::_internal_unpacked_fixed32_size() const {
  return _internal_unpacked_fixed32().size();
}
inline int TestUnpackedTypes::unpacked_fixed32_size() const {
  return _internal_unpacked_fixed32_size();
}
inline void TestUnpackedTypes::clear_unpacked_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_fixed32_.Clear();
}
inline ::uint32_t TestUnpackedTypes::unpacked_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_fixed32)
  return _internal_unpacked_fixed32().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_fixed32(int index, ::uint32_t value) {
  _internal_mutable_unpacked_fixed32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_fixed32)
}
inline void TestUnpackedTypes::add_unpacked_fixed32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_fixed32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_fixed32)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestUnpackedTypes::unpacked_fixed32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_fixed32)
  return _internal_unpacked_fixed32();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestUnpackedTypes::mutable_unpacked_fixed32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_fixed32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_fixed32();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestUnpackedTypes::_internal_unpacked_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_fixed32_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestUnpackedTypes::_internal_mutable_unpacked_fixed32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_fixed32_;
}

// repeated fixed64 unpacked_fixed64 = 97 [features = {
inline int TestUnpackedTypes::_internal_unpacked_fixed64_size() const {
  return _internal_unpacked_fixed64().size();
}
inline int TestUnpackedTypes::unpacked_fixed64_size() const {
  return _internal_unpacked_fixed64_size();
}
inline void TestUnpackedTypes::clear_unpacked_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_fixed64_.Clear();
}
inline ::uint64_t TestUnpackedTypes::unpacked_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_fixed64)
  return _internal_unpacked_fixed64().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_fixed64(int index, ::uint64_t value) {
  _internal_mutable_unpacked_fixed64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_fixed64)
}
inline void TestUnpackedTypes::add_unpacked_fixed64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_fixed64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_fixed64)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& TestUnpackedTypes::unpacked_fixed64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_fixed64)
  return _internal_unpacked_fixed64();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestUnpackedTypes::mutable_unpacked_fixed64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_fixed64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_fixed64();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
TestUnpackedTypes::_internal_unpacked_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_fixed64_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestUnpackedTypes::_internal_mutable_unpacked_fixed64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_fixed64_;
}

// repeated sfixed32 unpacked_sfixed32 = 98 [features = {
inline int TestUnpackedTypes::_internal_unpacked_sfixed32_size() const {
  return _internal_unpacked_sfixed32().size();
}
inline int TestUnpackedTypes::unpacked_sfixed32_size() const {
  return _internal_unpacked_sfixed32_size();
}
inline void TestUnpackedTypes::clear_unpacked_sfixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_sfixed32_.Clear();
}
inline ::int32_t TestUnpackedTypes::unpacked_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_sfixed32)
  return _internal_unpacked_sfixed32().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_sfixed32(int index, ::int32_t value) {
  _internal_mutable_unpacked_sfixed32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_sfixed32)
}
inline void TestUnpackedTypes::add_unpacked_sfixed32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_sfixed32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_sfixed32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestUnpackedTypes::unpacked_sfixed32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_sfixed32)
  return _internal_unpacked_sfixed32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestUnpackedTypes::mutable_unpacked_sfixed32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_sfixed32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_sfixed32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestUnpackedTypes::_internal_unpacked_sfixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_sfixed32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestUnpackedTypes::_internal_mutable_unpacked_sfixed32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_sfixed32_;
}

// repeated sfixed64 unpacked_sfixed64 = 99 [features = {
inline int TestUnpackedTypes::_internal_unpacked_sfixed64_size() const {
  return _internal_unpacked_sfixed64().size();
}
inline int TestUnpackedTypes::unpacked_sfixed64_size() const {
  return _internal_unpacked_sfixed64_size();
}
inline void TestUnpackedTypes::clear_unpacked_sfixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_sfixed64_.Clear();
}
inline ::int64_t TestUnpackedTypes::unpacked_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_sfixed64)
  return _internal_unpacked_sfixed64().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_sfixed64(int index, ::int64_t value) {
  _internal_mutable_unpacked_sfixed64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_sfixed64)
}
inline void TestUnpackedTypes::add_unpacked_sfixed64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_sfixed64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_sfixed64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestUnpackedTypes::unpacked_sfixed64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_sfixed64)
  return _internal_unpacked_sfixed64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestUnpackedTypes::mutable_unpacked_sfixed64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_sfixed64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_sfixed64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestUnpackedTypes::_internal_unpacked_sfixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_sfixed64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestUnpackedTypes::_internal_mutable_unpacked_sfixed64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_sfixed64_;
}

// repeated float unpacked_float = 100 [features = {
inline int TestUnpackedTypes::_internal_unpacked_float_size() const {
  return _internal_unpacked_float().size();
}
inline int TestUnpackedTypes::unpacked_float_size() const {
  return _internal_unpacked_float_size();
}
inline void TestUnpackedTypes::clear_unpacked_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_float_.Clear();
}
inline float TestUnpackedTypes::unpacked_float(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_float)
  return _internal_unpacked_float().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_float(int index, float value) {
  _internal_mutable_unpacked_float()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_float)
}
inline void TestUnpackedTypes::add_unpacked_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_float()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_float)
}
inline const ::google::protobuf::RepeatedField<float>& TestUnpackedTypes::unpacked_float() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_float)
  return _internal_unpacked_float();
}
inline ::google::protobuf::RepeatedField<float>* TestUnpackedTypes::mutable_unpacked_float()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_float)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_float();
}
inline const ::google::protobuf::RepeatedField<float>&
TestUnpackedTypes::_internal_unpacked_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_float_;
}
inline ::google::protobuf::RepeatedField<float>* TestUnpackedTypes::_internal_mutable_unpacked_float() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_float_;
}

// repeated double unpacked_double = 101 [features = {
inline int TestUnpackedTypes::_internal_unpacked_double_size() const {
  return _internal_unpacked_double().size();
}
inline int TestUnpackedTypes::unpacked_double_size() const {
  return _internal_unpacked_double_size();
}
inline void TestUnpackedTypes::clear_unpacked_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_double_.Clear();
}
inline double TestUnpackedTypes::unpacked_double(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_double)
  return _internal_unpacked_double().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_double(int index, double value) {
  _internal_mutable_unpacked_double()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_double)
}
inline void TestUnpackedTypes::add_unpacked_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_double()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_double)
}
inline const ::google::protobuf::RepeatedField<double>& TestUnpackedTypes::unpacked_double() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_double)
  return _internal_unpacked_double();
}
inline ::google::protobuf::RepeatedField<double>* TestUnpackedTypes::mutable_unpacked_double()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_double)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_double();
}
inline const ::google::protobuf::RepeatedField<double>&
TestUnpackedTypes::_internal_unpacked_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_double_;
}
inline ::google::protobuf::RepeatedField<double>* TestUnpackedTypes::_internal_mutable_unpacked_double() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_double_;
}

// repeated bool unpacked_bool = 102 [features = {
inline int TestUnpackedTypes::_internal_unpacked_bool_size() const {
  return _internal_unpacked_bool().size();
}
inline int TestUnpackedTypes::unpacked_bool_size() const {
  return _internal_unpacked_bool_size();
}
inline void TestUnpackedTypes::clear_unpacked_bool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_bool_.Clear();
}
inline bool TestUnpackedTypes::unpacked_bool(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_bool)
  return _internal_unpacked_bool().Get(index);
}
inline void TestUnpackedTypes::set_unpacked_bool(int index, bool value) {
  _internal_mutable_unpacked_bool()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_bool)
}
inline void TestUnpackedTypes::add_unpacked_bool(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_bool()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_bool)
}
inline const ::google::protobuf::RepeatedField<bool>& TestUnpackedTypes::unpacked_bool() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_bool)
  return _internal_unpacked_bool();
}
inline ::google::protobuf::RepeatedField<bool>* TestUnpackedTypes::mutable_unpacked_bool()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_bool)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_bool();
}
inline const ::google::protobuf::RepeatedField<bool>&
TestUnpackedTypes::_internal_unpacked_bool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_bool_;
}
inline ::google::protobuf::RepeatedField<bool>* TestUnpackedTypes::_internal_mutable_unpacked_bool() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_bool_;
}

// repeated .edition_unittest.ForeignEnum unpacked_enum = 103 [features = {
inline int TestUnpackedTypes::_internal_unpacked_enum_size() const {
  return _internal_unpacked_enum().size();
}
inline int TestUnpackedTypes::unpacked_enum_size() const {
  return _internal_unpacked_enum_size();
}
inline void TestUnpackedTypes::clear_unpacked_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpacked_enum_.Clear();
}
inline ::edition_unittest::ForeignEnum TestUnpackedTypes::unpacked_enum(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestUnpackedTypes.unpacked_enum)
  return static_cast<::edition_unittest::ForeignEnum>(_internal_unpacked_enum().Get(index));
}
inline void TestUnpackedTypes::set_unpacked_enum(int index, ::edition_unittest::ForeignEnum value) {
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _internal_mutable_unpacked_enum()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestUnpackedTypes.unpacked_enum)
}
inline void TestUnpackedTypes::add_unpacked_enum(::edition_unittest::ForeignEnum value) {
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unpacked_enum()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestUnpackedTypes.unpacked_enum)
}
inline const ::google::protobuf::RepeatedField<int>& TestUnpackedTypes::unpacked_enum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestUnpackedTypes.unpacked_enum)
  return _internal_unpacked_enum();
}
inline ::google::protobuf::RepeatedField<int>* TestUnpackedTypes::mutable_unpacked_enum()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestUnpackedTypes.unpacked_enum)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unpacked_enum();
}
inline const ::google::protobuf::RepeatedField<int>& TestUnpackedTypes::_internal_unpacked_enum()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpacked_enum_;
}
inline ::google::protobuf::RepeatedField<int>* TestUnpackedTypes::_internal_mutable_unpacked_enum() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unpacked_enum_;
}

// -------------------------------------------------------------------

// TestPackedExtensions

// -------------------------------------------------------------------

// TestUnpackedExtensions

// -------------------------------------------------------------------

// TestDynamicExtensions_DynamicMessageType

// int32 dynamic_field = 2100;
inline bool TestDynamicExtensions_DynamicMessageType::has_dynamic_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestDynamicExtensions_DynamicMessageType::clear_dynamic_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dynamic_field_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestDynamicExtensions_DynamicMessageType::dynamic_field() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDynamicExtensions.DynamicMessageType.dynamic_field)
  return _internal_dynamic_field();
}
inline void TestDynamicExtensions_DynamicMessageType::set_dynamic_field(::int32_t value) {
  _internal_set_dynamic_field(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDynamicExtensions.DynamicMessageType.dynamic_field)
}
inline ::int32_t TestDynamicExtensions_DynamicMessageType::_internal_dynamic_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dynamic_field_;
}
inline void TestDynamicExtensions_DynamicMessageType::_internal_set_dynamic_field(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dynamic_field_ = value;
}

// -------------------------------------------------------------------

// TestDynamicExtensions

// fixed32 scalar_extension = 2000;
inline bool TestDynamicExtensions::has_scalar_extension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestDynamicExtensions::clear_scalar_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalar_extension_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t TestDynamicExtensions::scalar_extension() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDynamicExtensions.scalar_extension)
  return _internal_scalar_extension();
}
inline void TestDynamicExtensions::set_scalar_extension(::uint32_t value) {
  _internal_set_scalar_extension(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDynamicExtensions.scalar_extension)
}
inline ::uint32_t TestDynamicExtensions::_internal_scalar_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scalar_extension_;
}
inline void TestDynamicExtensions::_internal_set_scalar_extension(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalar_extension_ = value;
}

// .edition_unittest.ForeignEnum enum_extension = 2001;
inline bool TestDynamicExtensions::has_enum_extension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestDynamicExtensions::clear_enum_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_extension_ = 4;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::edition_unittest::ForeignEnum TestDynamicExtensions::enum_extension() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDynamicExtensions.enum_extension)
  return _internal_enum_extension();
}
inline void TestDynamicExtensions::set_enum_extension(::edition_unittest::ForeignEnum value) {
  _internal_set_enum_extension(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDynamicExtensions.enum_extension)
}
inline ::edition_unittest::ForeignEnum TestDynamicExtensions::_internal_enum_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.enum_extension_);
}
inline void TestDynamicExtensions::_internal_set_enum_extension(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.enum_extension_ = value;
}

// .edition_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
inline bool TestDynamicExtensions::has_dynamic_enum_extension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestDynamicExtensions::clear_dynamic_enum_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dynamic_enum_extension_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::edition_unittest::TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::dynamic_enum_extension() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDynamicExtensions.dynamic_enum_extension)
  return _internal_dynamic_enum_extension();
}
inline void TestDynamicExtensions::set_dynamic_enum_extension(::edition_unittest::TestDynamicExtensions_DynamicEnumType value) {
  _internal_set_dynamic_enum_extension(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestDynamicExtensions.dynamic_enum_extension)
}
inline ::edition_unittest::TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::_internal_dynamic_enum_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::TestDynamicExtensions_DynamicEnumType>(_impl_.dynamic_enum_extension_);
}
inline void TestDynamicExtensions::_internal_set_dynamic_enum_extension(::edition_unittest::TestDynamicExtensions_DynamicEnumType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::TestDynamicExtensions_DynamicEnumType_IsValid(value));
  _impl_.dynamic_enum_extension_ = value;
}

// .edition_unittest.ForeignMessage message_extension = 2003;
inline bool TestDynamicExtensions::has_message_extension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_extension_ != nullptr);
  return value;
}
inline void TestDynamicExtensions::clear_message_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_extension_ != nullptr) _impl_.message_extension_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::ForeignMessage& TestDynamicExtensions::_internal_message_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::ForeignMessage* p = _impl_.message_extension_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::ForeignMessage&>(::edition_unittest::_ForeignMessage_default_instance_);
}
inline const ::edition_unittest::ForeignMessage& TestDynamicExtensions::message_extension() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDynamicExtensions.message_extension)
  return _internal_message_extension();
}
inline void TestDynamicExtensions::unsafe_arena_set_allocated_message_extension(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_extension_);
  }
  _impl_.message_extension_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestDynamicExtensions.message_extension)
}
inline ::edition_unittest::ForeignMessage* TestDynamicExtensions::release_message_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::ForeignMessage* released = _impl_.message_extension_;
  _impl_.message_extension_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::ForeignMessage* TestDynamicExtensions::unsafe_arena_release_message_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestDynamicExtensions.message_extension)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::ForeignMessage* temp = _impl_.message_extension_;
  _impl_.message_extension_ = nullptr;
  return temp;
}
inline ::edition_unittest::ForeignMessage* TestDynamicExtensions::_internal_mutable_message_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_extension_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::ForeignMessage>(GetArena());
    _impl_.message_extension_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(p);
  }
  return _impl_.message_extension_;
}
inline ::edition_unittest::ForeignMessage* TestDynamicExtensions::mutable_message_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::ForeignMessage* _msg = _internal_mutable_message_extension();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestDynamicExtensions.message_extension)
  return _msg;
}
inline void TestDynamicExtensions::set_allocated_message_extension(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.message_extension_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_extension_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestDynamicExtensions.message_extension)
}

// .edition_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
inline bool TestDynamicExtensions::has_dynamic_message_extension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dynamic_message_extension_ != nullptr);
  return value;
}
inline void TestDynamicExtensions::clear_dynamic_message_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamic_message_extension_ != nullptr) _impl_.dynamic_message_extension_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestDynamicExtensions_DynamicMessageType& TestDynamicExtensions::_internal_dynamic_message_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestDynamicExtensions_DynamicMessageType* p = _impl_.dynamic_message_extension_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestDynamicExtensions_DynamicMessageType&>(::edition_unittest::_TestDynamicExtensions_DynamicMessageType_default_instance_);
}
inline const ::edition_unittest::TestDynamicExtensions_DynamicMessageType& TestDynamicExtensions::dynamic_message_extension() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDynamicExtensions.dynamic_message_extension)
  return _internal_dynamic_message_extension();
}
inline void TestDynamicExtensions::unsafe_arena_set_allocated_dynamic_message_extension(::edition_unittest::TestDynamicExtensions_DynamicMessageType* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamic_message_extension_);
  }
  _impl_.dynamic_message_extension_ = reinterpret_cast<::edition_unittest::TestDynamicExtensions_DynamicMessageType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestDynamicExtensions.dynamic_message_extension)
}
inline ::edition_unittest::TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions::release_dynamic_message_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestDynamicExtensions_DynamicMessageType* released = _impl_.dynamic_message_extension_;
  _impl_.dynamic_message_extension_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions::unsafe_arena_release_dynamic_message_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestDynamicExtensions.dynamic_message_extension)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestDynamicExtensions_DynamicMessageType* temp = _impl_.dynamic_message_extension_;
  _impl_.dynamic_message_extension_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions::_internal_mutable_dynamic_message_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamic_message_extension_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestDynamicExtensions_DynamicMessageType>(GetArena());
    _impl_.dynamic_message_extension_ = reinterpret_cast<::edition_unittest::TestDynamicExtensions_DynamicMessageType*>(p);
  }
  return _impl_.dynamic_message_extension_;
}
inline ::edition_unittest::TestDynamicExtensions_DynamicMessageType* TestDynamicExtensions::mutable_dynamic_message_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestDynamicExtensions_DynamicMessageType* _msg = _internal_mutable_dynamic_message_extension();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestDynamicExtensions.dynamic_message_extension)
  return _msg;
}
inline void TestDynamicExtensions::set_allocated_dynamic_message_extension(::edition_unittest::TestDynamicExtensions_DynamicMessageType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dynamic_message_extension_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dynamic_message_extension_ = reinterpret_cast<::edition_unittest::TestDynamicExtensions_DynamicMessageType*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestDynamicExtensions.dynamic_message_extension)
}

// repeated string repeated_extension = 2005;
inline int TestDynamicExtensions::_internal_repeated_extension_size() const {
  return _internal_repeated_extension().size();
}
inline int TestDynamicExtensions::repeated_extension_size() const {
  return _internal_repeated_extension_size();
}
inline void TestDynamicExtensions::clear_repeated_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_extension_.Clear();
}
inline absl::string_view TestDynamicExtensions::repeated_extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDynamicExtensions.repeated_extension)
  return _internal_repeated_extension().Get(index);
}
inline void TestDynamicExtensions::set_repeated_extension(int index, const std::string& value) {
  _internal_mutable_repeated_extension()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestDynamicExtensions.repeated_extension)
}
inline void TestDynamicExtensions::set_repeated_extension(int index, std::string&& value) {
  _internal_mutable_repeated_extension()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestDynamicExtensions.repeated_extension)
}
inline void TestDynamicExtensions::set_repeated_extension(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_extension()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestDynamicExtensions.repeated_extension)
}
inline void TestDynamicExtensions::set_repeated_extension(int index, absl::string_view value) {
  _internal_mutable_repeated_extension()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestDynamicExtensions.repeated_extension)
}
inline void TestDynamicExtensions::add_repeated_extension(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_extension()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestDynamicExtensions.repeated_extension)
}
inline void TestDynamicExtensions::add_repeated_extension(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_extension()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestDynamicExtensions.repeated_extension)
}
inline void TestDynamicExtensions::add_repeated_extension(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_extension()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestDynamicExtensions.repeated_extension)
}
inline void TestDynamicExtensions::add_repeated_extension(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_extension()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestDynamicExtensions.repeated_extension)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestDynamicExtensions::repeated_extension() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestDynamicExtensions.repeated_extension)
  return _internal_repeated_extension();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestDynamicExtensions::mutable_repeated_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestDynamicExtensions.repeated_extension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_extension();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestDynamicExtensions::_internal_repeated_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_extension_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestDynamicExtensions::_internal_mutable_repeated_extension() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_extension_;
}

// repeated sint32 packed_extension = 2006 [features = {
inline int TestDynamicExtensions::_internal_packed_extension_size() const {
  return _internal_packed_extension().size();
}
inline int TestDynamicExtensions::packed_extension_size() const {
  return _internal_packed_extension_size();
}
inline void TestDynamicExtensions::clear_packed_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_extension_.Clear();
}
inline ::int32_t TestDynamicExtensions::packed_extension(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestDynamicExtensions.packed_extension)
  return _internal_packed_extension().Get(index);
}
inline void TestDynamicExtensions::set_packed_extension(int index, ::int32_t value) {
  _internal_mutable_packed_extension()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestDynamicExtensions.packed_extension)
}
inline void TestDynamicExtensions::add_packed_extension(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_extension()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestDynamicExtensions.packed_extension)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestDynamicExtensions::packed_extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestDynamicExtensions.packed_extension)
  return _internal_packed_extension();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestDynamicExtensions::mutable_packed_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestDynamicExtensions.packed_extension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_extension();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestDynamicExtensions::_internal_packed_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_extension_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestDynamicExtensions::_internal_mutable_packed_extension() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_extension_;
}

// -------------------------------------------------------------------

// TestRepeatedString

// repeated string repeated_string1 = 1;
inline int TestRepeatedString::_internal_repeated_string1_size() const {
  return _internal_repeated_string1().size();
}
inline int TestRepeatedString::repeated_string1_size() const {
  return _internal_repeated_string1_size();
}
inline void TestRepeatedString::clear_repeated_string1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string1_.Clear();
}
inline absl::string_view TestRepeatedString::repeated_string1(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedString.repeated_string1)
  return _internal_repeated_string1().Get(index);
}
inline void TestRepeatedString::set_repeated_string1(int index, const std::string& value) {
  _internal_mutable_repeated_string1()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedString.repeated_string1)
}
inline void TestRepeatedString::set_repeated_string1(int index, std::string&& value) {
  _internal_mutable_repeated_string1()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedString.repeated_string1)
}
inline void TestRepeatedString::set_repeated_string1(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string1()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestRepeatedString.repeated_string1)
}
inline void TestRepeatedString::set_repeated_string1(int index, absl::string_view value) {
  _internal_mutable_repeated_string1()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestRepeatedString.repeated_string1)
}
inline void TestRepeatedString::add_repeated_string1(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string1()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedString.repeated_string1)
}
inline void TestRepeatedString::add_repeated_string1(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string1()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedString.repeated_string1)
}
inline void TestRepeatedString::add_repeated_string1(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string1()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestRepeatedString.repeated_string1)
}
inline void TestRepeatedString::add_repeated_string1(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string1()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestRepeatedString.repeated_string1)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestRepeatedString::repeated_string1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedString.repeated_string1)
  return _internal_repeated_string1();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestRepeatedString::mutable_repeated_string1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedString.repeated_string1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string1();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestRepeatedString::_internal_repeated_string1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string1_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestRepeatedString::_internal_mutable_repeated_string1() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string1_;
}

// repeated string repeated_string2 = 2;
inline int TestRepeatedString::_internal_repeated_string2_size() const {
  return _internal_repeated_string2().size();
}
inline int TestRepeatedString::repeated_string2_size() const {
  return _internal_repeated_string2_size();
}
inline void TestRepeatedString::clear_repeated_string2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string2_.Clear();
}
inline absl::string_view TestRepeatedString::repeated_string2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedString.repeated_string2)
  return _internal_repeated_string2().Get(index);
}
inline void TestRepeatedString::set_repeated_string2(int index, const std::string& value) {
  _internal_mutable_repeated_string2()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedString.repeated_string2)
}
inline void TestRepeatedString::set_repeated_string2(int index, std::string&& value) {
  _internal_mutable_repeated_string2()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedString.repeated_string2)
}
inline void TestRepeatedString::set_repeated_string2(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string2()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestRepeatedString.repeated_string2)
}
inline void TestRepeatedString::set_repeated_string2(int index, absl::string_view value) {
  _internal_mutable_repeated_string2()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestRepeatedString.repeated_string2)
}
inline void TestRepeatedString::add_repeated_string2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string2()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedString.repeated_string2)
}
inline void TestRepeatedString::add_repeated_string2(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string2()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedString.repeated_string2)
}
inline void TestRepeatedString::add_repeated_string2(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string2()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestRepeatedString.repeated_string2)
}
inline void TestRepeatedString::add_repeated_string2(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string2()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestRepeatedString.repeated_string2)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestRepeatedString::repeated_string2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedString.repeated_string2)
  return _internal_repeated_string2();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestRepeatedString::mutable_repeated_string2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedString.repeated_string2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string2();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestRepeatedString::_internal_repeated_string2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string2_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestRepeatedString::_internal_mutable_repeated_string2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string2_;
}

// repeated bytes repeated_bytes11 = 11;
inline int TestRepeatedString::_internal_repeated_bytes11_size() const {
  return _internal_repeated_bytes11().size();
}
inline int TestRepeatedString::repeated_bytes11_size() const {
  return _internal_repeated_bytes11_size();
}
inline void TestRepeatedString::clear_repeated_bytes11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_bytes11_.Clear();
}
inline absl::string_view TestRepeatedString::repeated_bytes11(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedString.repeated_bytes11)
  return _internal_repeated_bytes11().Get(index);
}
inline void TestRepeatedString::set_repeated_bytes11(int index, const std::string& value) {
  _internal_mutable_repeated_bytes11()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedString.repeated_bytes11)
}
inline void TestRepeatedString::set_repeated_bytes11(int index, std::string&& value) {
  _internal_mutable_repeated_bytes11()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedString.repeated_bytes11)
}
inline void TestRepeatedString::set_repeated_bytes11(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_bytes11()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestRepeatedString.repeated_bytes11)
}
inline void TestRepeatedString::set_repeated_bytes11(int index, absl::string_view value) {
  _internal_mutable_repeated_bytes11()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestRepeatedString.repeated_bytes11)
}
inline void TestRepeatedString::add_repeated_bytes11(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes11()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedString.repeated_bytes11)
}
inline void TestRepeatedString::add_repeated_bytes11(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes11()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedString.repeated_bytes11)
}
inline void TestRepeatedString::add_repeated_bytes11(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes11()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestRepeatedString.repeated_bytes11)
}
inline void TestRepeatedString::add_repeated_bytes11(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes11()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestRepeatedString.repeated_bytes11)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestRepeatedString::repeated_bytes11() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedString.repeated_bytes11)
  return _internal_repeated_bytes11();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestRepeatedString::mutable_repeated_bytes11() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedString.repeated_bytes11)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_bytes11();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestRepeatedString::_internal_repeated_bytes11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_bytes11_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestRepeatedString::_internal_mutable_repeated_bytes11() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_bytes11_;
}

// repeated bytes repeated_bytes12 = 12;
inline int TestRepeatedString::_internal_repeated_bytes12_size() const {
  return _internal_repeated_bytes12().size();
}
inline int TestRepeatedString::repeated_bytes12_size() const {
  return _internal_repeated_bytes12_size();
}
inline void TestRepeatedString::clear_repeated_bytes12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_bytes12_.Clear();
}
inline absl::string_view TestRepeatedString::repeated_bytes12(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedString.repeated_bytes12)
  return _internal_repeated_bytes12().Get(index);
}
inline void TestRepeatedString::set_repeated_bytes12(int index, const std::string& value) {
  _internal_mutable_repeated_bytes12()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedString.repeated_bytes12)
}
inline void TestRepeatedString::set_repeated_bytes12(int index, std::string&& value) {
  _internal_mutable_repeated_bytes12()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedString.repeated_bytes12)
}
inline void TestRepeatedString::set_repeated_bytes12(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_bytes12()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestRepeatedString.repeated_bytes12)
}
inline void TestRepeatedString::set_repeated_bytes12(int index, absl::string_view value) {
  _internal_mutable_repeated_bytes12()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestRepeatedString.repeated_bytes12)
}
inline void TestRepeatedString::add_repeated_bytes12(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes12()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedString.repeated_bytes12)
}
inline void TestRepeatedString::add_repeated_bytes12(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes12()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedString.repeated_bytes12)
}
inline void TestRepeatedString::add_repeated_bytes12(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes12()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestRepeatedString.repeated_bytes12)
}
inline void TestRepeatedString::add_repeated_bytes12(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bytes12()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestRepeatedString.repeated_bytes12)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestRepeatedString::repeated_bytes12() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedString.repeated_bytes12)
  return _internal_repeated_bytes12();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestRepeatedString::mutable_repeated_bytes12() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedString.repeated_bytes12)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_bytes12();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestRepeatedString::_internal_repeated_bytes12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_bytes12_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestRepeatedString::_internal_mutable_repeated_bytes12() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_bytes12_;
}

// -------------------------------------------------------------------

// TestRepeatedScalarDifferentTagSizes

// repeated fixed32 repeated_fixed32 = 12;
inline int TestRepeatedScalarDifferentTagSizes::_internal_repeated_fixed32_size() const {
  return _internal_repeated_fixed32().size();
}
inline int TestRepeatedScalarDifferentTagSizes::repeated_fixed32_size() const {
  return _internal_repeated_fixed32_size();
}
inline void TestRepeatedScalarDifferentTagSizes::clear_repeated_fixed32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_fixed32_.Clear();
}
inline ::uint32_t TestRepeatedScalarDifferentTagSizes::repeated_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
  return _internal_repeated_fixed32().Get(index);
}
inline void TestRepeatedScalarDifferentTagSizes::set_repeated_fixed32(int index, ::uint32_t value) {
  _internal_mutable_repeated_fixed32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
}
inline void TestRepeatedScalarDifferentTagSizes::add_repeated_fixed32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_fixed32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestRepeatedScalarDifferentTagSizes::repeated_fixed32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
  return _internal_repeated_fixed32();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestRepeatedScalarDifferentTagSizes::mutable_repeated_fixed32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_fixed32();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestRepeatedScalarDifferentTagSizes::_internal_repeated_fixed32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_fixed32_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* TestRepeatedScalarDifferentTagSizes::_internal_mutable_repeated_fixed32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_fixed32_;
}

// repeated int32 repeated_int32 = 13;
inline int TestRepeatedScalarDifferentTagSizes::_internal_repeated_int32_size() const {
  return _internal_repeated_int32().size();
}
inline int TestRepeatedScalarDifferentTagSizes::repeated_int32_size() const {
  return _internal_repeated_int32_size();
}
inline void TestRepeatedScalarDifferentTagSizes::clear_repeated_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int32_.Clear();
}
inline ::int32_t TestRepeatedScalarDifferentTagSizes::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
  return _internal_repeated_int32().Get(index);
}
inline void TestRepeatedScalarDifferentTagSizes::set_repeated_int32(int index, ::int32_t value) {
  _internal_mutable_repeated_int32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
}
inline void TestRepeatedScalarDifferentTagSizes::add_repeated_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestRepeatedScalarDifferentTagSizes::repeated_int32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
  return _internal_repeated_int32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestRepeatedScalarDifferentTagSizes::mutable_repeated_int32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestRepeatedScalarDifferentTagSizes::_internal_repeated_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestRepeatedScalarDifferentTagSizes::_internal_mutable_repeated_int32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int32_;
}

// repeated fixed64 repeated_fixed64 = 2046;
inline int TestRepeatedScalarDifferentTagSizes::_internal_repeated_fixed64_size() const {
  return _internal_repeated_fixed64().size();
}
inline int TestRepeatedScalarDifferentTagSizes::repeated_fixed64_size() const {
  return _internal_repeated_fixed64_size();
}
inline void TestRepeatedScalarDifferentTagSizes::clear_repeated_fixed64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_fixed64_.Clear();
}
inline ::uint64_t TestRepeatedScalarDifferentTagSizes::repeated_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
  return _internal_repeated_fixed64().Get(index);
}
inline void TestRepeatedScalarDifferentTagSizes::set_repeated_fixed64(int index, ::uint64_t value) {
  _internal_mutable_repeated_fixed64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
}
inline void TestRepeatedScalarDifferentTagSizes::add_repeated_fixed64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_fixed64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& TestRepeatedScalarDifferentTagSizes::repeated_fixed64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
  return _internal_repeated_fixed64();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestRepeatedScalarDifferentTagSizes::mutable_repeated_fixed64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_fixed64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_fixed64();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
TestRepeatedScalarDifferentTagSizes::_internal_repeated_fixed64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_fixed64_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestRepeatedScalarDifferentTagSizes::_internal_mutable_repeated_fixed64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_fixed64_;
}

// repeated int64 repeated_int64 = 2047;
inline int TestRepeatedScalarDifferentTagSizes::_internal_repeated_int64_size() const {
  return _internal_repeated_int64().size();
}
inline int TestRepeatedScalarDifferentTagSizes::repeated_int64_size() const {
  return _internal_repeated_int64_size();
}
inline void TestRepeatedScalarDifferentTagSizes::clear_repeated_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int64_.Clear();
}
inline ::int64_t TestRepeatedScalarDifferentTagSizes::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
  return _internal_repeated_int64().Get(index);
}
inline void TestRepeatedScalarDifferentTagSizes::set_repeated_int64(int index, ::int64_t value) {
  _internal_mutable_repeated_int64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
}
inline void TestRepeatedScalarDifferentTagSizes::add_repeated_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TestRepeatedScalarDifferentTagSizes::repeated_int64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
  return _internal_repeated_int64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestRepeatedScalarDifferentTagSizes::mutable_repeated_int64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_int64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TestRepeatedScalarDifferentTagSizes::_internal_repeated_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TestRepeatedScalarDifferentTagSizes::_internal_mutable_repeated_int64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int64_;
}

// repeated float repeated_float = 262142;
inline int TestRepeatedScalarDifferentTagSizes::_internal_repeated_float_size() const {
  return _internal_repeated_float().size();
}
inline int TestRepeatedScalarDifferentTagSizes::repeated_float_size() const {
  return _internal_repeated_float_size();
}
inline void TestRepeatedScalarDifferentTagSizes::clear_repeated_float() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_float_.Clear();
}
inline float TestRepeatedScalarDifferentTagSizes::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
  return _internal_repeated_float().Get(index);
}
inline void TestRepeatedScalarDifferentTagSizes::set_repeated_float(int index, float value) {
  _internal_mutable_repeated_float()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
}
inline void TestRepeatedScalarDifferentTagSizes::add_repeated_float(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_float()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
}
inline const ::google::protobuf::RepeatedField<float>& TestRepeatedScalarDifferentTagSizes::repeated_float() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
  return _internal_repeated_float();
}
inline ::google::protobuf::RepeatedField<float>* TestRepeatedScalarDifferentTagSizes::mutable_repeated_float()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_float)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_float();
}
inline const ::google::protobuf::RepeatedField<float>&
TestRepeatedScalarDifferentTagSizes::_internal_repeated_float() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_float_;
}
inline ::google::protobuf::RepeatedField<float>* TestRepeatedScalarDifferentTagSizes::_internal_mutable_repeated_float() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_float_;
}

// repeated uint64 repeated_uint64 = 262143;
inline int TestRepeatedScalarDifferentTagSizes::_internal_repeated_uint64_size() const {
  return _internal_repeated_uint64().size();
}
inline int TestRepeatedScalarDifferentTagSizes::repeated_uint64_size() const {
  return _internal_repeated_uint64_size();
}
inline void TestRepeatedScalarDifferentTagSizes::clear_repeated_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_uint64_.Clear();
}
inline ::uint64_t TestRepeatedScalarDifferentTagSizes::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
  return _internal_repeated_uint64().Get(index);
}
inline void TestRepeatedScalarDifferentTagSizes::set_repeated_uint64(int index, ::uint64_t value) {
  _internal_mutable_repeated_uint64()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
}
inline void TestRepeatedScalarDifferentTagSizes::add_repeated_uint64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_uint64()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& TestRepeatedScalarDifferentTagSizes::repeated_uint64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
  return _internal_repeated_uint64();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestRepeatedScalarDifferentTagSizes::mutable_repeated_uint64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestRepeatedScalarDifferentTagSizes.repeated_uint64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_uint64();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
TestRepeatedScalarDifferentTagSizes::_internal_repeated_uint64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_uint64_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* TestRepeatedScalarDifferentTagSizes::_internal_mutable_repeated_uint64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_uint64_;
}

// -------------------------------------------------------------------

// TestParsingMerge_RepeatedFieldsGenerator_Group1

// .edition_unittest.TestAllTypes field1 = 11;
inline bool TestParsingMerge_RepeatedFieldsGenerator_Group1::has_field1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.field1_ != nullptr);
  return value;
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group1::clear_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.field1_ != nullptr) _impl_.field1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator_Group1::_internal_field1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.field1_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator_Group1::field1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
  return _internal_field1();
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group1::unsafe_arena_set_allocated_field1(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.field1_);
  }
  _impl_.field1_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group1::release_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.field1_;
  _impl_.field1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group1::unsafe_arena_release_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.field1_;
  _impl_.field1_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group1::_internal_mutable_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.field1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.field1_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.field1_;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group1::mutable_field1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_field1();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
  return _msg;
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group1::set_allocated_field1(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.field1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.field1_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.field1)
}

// -------------------------------------------------------------------

// TestParsingMerge_RepeatedFieldsGenerator_Group2

// .edition_unittest.TestAllTypes field1 = 21;
inline bool TestParsingMerge_RepeatedFieldsGenerator_Group2::has_field1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.field1_ != nullptr);
  return value;
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group2::clear_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.field1_ != nullptr) _impl_.field1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator_Group2::_internal_field1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.field1_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator_Group2::field1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
  return _internal_field1();
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group2::unsafe_arena_set_allocated_field1(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.field1_);
  }
  _impl_.field1_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group2::release_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.field1_;
  _impl_.field1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group2::unsafe_arena_release_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.field1_;
  _impl_.field1_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group2::_internal_mutable_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.field1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.field1_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.field1_;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator_Group2::mutable_field1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_field1();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
  return _msg;
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group2::set_allocated_field1(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.field1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.field1_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.field1)
}

// -------------------------------------------------------------------

// TestParsingMerge_RepeatedFieldsGenerator

// repeated .edition_unittest.TestAllTypes field1 = 1;
inline int TestParsingMerge_RepeatedFieldsGenerator::_internal_field1_size() const {
  return _internal_field1().size();
}
inline int TestParsingMerge_RepeatedFieldsGenerator::field1_size() const {
  return _internal_field1_size();
}
inline void TestParsingMerge_RepeatedFieldsGenerator::clear_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field1_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_field1(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return _internal_mutable_field1()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestParsingMerge_RepeatedFieldsGenerator::mutable_field1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_field1();
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::field1(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return _internal_field1().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_field1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_field1()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestParsingMerge_RepeatedFieldsGenerator::field1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field1)
  return _internal_field1();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestParsingMerge_RepeatedFieldsGenerator::_internal_field1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field1_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestParsingMerge_RepeatedFieldsGenerator::_internal_mutable_field1() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.field1_;
}

// repeated .edition_unittest.TestAllTypes field2 = 2;
inline int TestParsingMerge_RepeatedFieldsGenerator::_internal_field2_size() const {
  return _internal_field2().size();
}
inline int TestParsingMerge_RepeatedFieldsGenerator::field2_size() const {
  return _internal_field2_size();
}
inline void TestParsingMerge_RepeatedFieldsGenerator::clear_field2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field2_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_field2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return _internal_mutable_field2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestParsingMerge_RepeatedFieldsGenerator::mutable_field2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_field2();
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::field2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return _internal_field2().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_field2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_field2()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestParsingMerge_RepeatedFieldsGenerator::field2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field2)
  return _internal_field2();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestParsingMerge_RepeatedFieldsGenerator::_internal_field2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field2_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestParsingMerge_RepeatedFieldsGenerator::_internal_mutable_field2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.field2_;
}

// repeated .edition_unittest.TestAllTypes field3 = 3;
inline int TestParsingMerge_RepeatedFieldsGenerator::_internal_field3_size() const {
  return _internal_field3().size();
}
inline int TestParsingMerge_RepeatedFieldsGenerator::field3_size() const {
  return _internal_field3_size();
}
inline void TestParsingMerge_RepeatedFieldsGenerator::clear_field3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field3_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_field3(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return _internal_mutable_field3()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestParsingMerge_RepeatedFieldsGenerator::mutable_field3()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_field3();
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::field3(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return _internal_field3().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_field3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_field3()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestParsingMerge_RepeatedFieldsGenerator::field3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.field3)
  return _internal_field3();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestParsingMerge_RepeatedFieldsGenerator::_internal_field3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field3_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestParsingMerge_RepeatedFieldsGenerator::_internal_mutable_field3() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.field3_;
}

// repeated .edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1 group1 = 10 [features = {
inline int TestParsingMerge_RepeatedFieldsGenerator::_internal_group1_size() const {
  return _internal_group1().size();
}
inline int TestParsingMerge_RepeatedFieldsGenerator::group1_size() const {
  return _internal_group1_size();
}
inline void TestParsingMerge_RepeatedFieldsGenerator::clear_group1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group1_.Clear();
}
inline ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1* TestParsingMerge_RepeatedFieldsGenerator::mutable_group1(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return _internal_mutable_group1()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>* TestParsingMerge_RepeatedFieldsGenerator::mutable_group1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_group1();
}
inline const ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1& TestParsingMerge_RepeatedFieldsGenerator::group1(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return _internal_group1().Get(index);
}
inline ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1* TestParsingMerge_RepeatedFieldsGenerator::add_group1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1* _add = _internal_mutable_group1()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>& TestParsingMerge_RepeatedFieldsGenerator::group1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group1)
  return _internal_group1();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>&
TestParsingMerge_RepeatedFieldsGenerator::_internal_group1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group1_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>*
TestParsingMerge_RepeatedFieldsGenerator::_internal_mutable_group1() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.group1_;
}

// repeated .edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2 group2 = 20 [features = {
inline int TestParsingMerge_RepeatedFieldsGenerator::_internal_group2_size() const {
  return _internal_group2().size();
}
inline int TestParsingMerge_RepeatedFieldsGenerator::group2_size() const {
  return _internal_group2_size();
}
inline void TestParsingMerge_RepeatedFieldsGenerator::clear_group2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group2_.Clear();
}
inline ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2* TestParsingMerge_RepeatedFieldsGenerator::mutable_group2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return _internal_mutable_group2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>* TestParsingMerge_RepeatedFieldsGenerator::mutable_group2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_group2();
}
inline const ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2& TestParsingMerge_RepeatedFieldsGenerator::group2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return _internal_group2().Get(index);
}
inline ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2* TestParsingMerge_RepeatedFieldsGenerator::add_group2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2* _add = _internal_mutable_group2()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>& TestParsingMerge_RepeatedFieldsGenerator::group2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.group2)
  return _internal_group2();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>&
TestParsingMerge_RepeatedFieldsGenerator::_internal_group2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group2_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>*
TestParsingMerge_RepeatedFieldsGenerator::_internal_mutable_group2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.group2_;
}

// repeated .edition_unittest.TestAllTypes ext1 = 1000;
inline int TestParsingMerge_RepeatedFieldsGenerator::_internal_ext1_size() const {
  return _internal_ext1().size();
}
inline int TestParsingMerge_RepeatedFieldsGenerator::ext1_size() const {
  return _internal_ext1_size();
}
inline void TestParsingMerge_RepeatedFieldsGenerator::clear_ext1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ext1_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_ext1(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return _internal_mutable_ext1()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestParsingMerge_RepeatedFieldsGenerator::mutable_ext1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ext1();
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::ext1(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return _internal_ext1().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_ext1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_ext1()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestParsingMerge_RepeatedFieldsGenerator::ext1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext1)
  return _internal_ext1();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestParsingMerge_RepeatedFieldsGenerator::_internal_ext1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ext1_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestParsingMerge_RepeatedFieldsGenerator::_internal_mutable_ext1() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ext1_;
}

// repeated .edition_unittest.TestAllTypes ext2 = 1001;
inline int TestParsingMerge_RepeatedFieldsGenerator::_internal_ext2_size() const {
  return _internal_ext2().size();
}
inline int TestParsingMerge_RepeatedFieldsGenerator::ext2_size() const {
  return _internal_ext2_size();
}
inline void TestParsingMerge_RepeatedFieldsGenerator::clear_ext2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ext2_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::mutable_ext2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return _internal_mutable_ext2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestParsingMerge_RepeatedFieldsGenerator::mutable_ext2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ext2();
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator::ext2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return _internal_ext2().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedFieldsGenerator::add_ext2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_ext2()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestParsingMerge_RepeatedFieldsGenerator::ext2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.RepeatedFieldsGenerator.ext2)
  return _internal_ext2();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestParsingMerge_RepeatedFieldsGenerator::_internal_ext2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ext2_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestParsingMerge_RepeatedFieldsGenerator::_internal_mutable_ext2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ext2_;
}

// -------------------------------------------------------------------

// TestParsingMerge_OptionalGroup

// .edition_unittest.TestAllTypes optional_group_all_types = 11;
inline bool TestParsingMerge_OptionalGroup::has_optional_group_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_group_all_types_ != nullptr);
  return value;
}
inline void TestParsingMerge_OptionalGroup::clear_optional_group_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_group_all_types_ != nullptr) _impl_.optional_group_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_OptionalGroup::_internal_optional_group_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_group_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_OptionalGroup::optional_group_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
  return _internal_optional_group_all_types();
}
inline void TestParsingMerge_OptionalGroup::unsafe_arena_set_allocated_optional_group_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_group_all_types_);
  }
  _impl_.optional_group_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_OptionalGroup::release_optional_group_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_group_all_types_;
  _impl_.optional_group_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_OptionalGroup::unsafe_arena_release_optional_group_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_group_all_types_;
  _impl_.optional_group_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_OptionalGroup::_internal_mutable_optional_group_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_group_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_group_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_group_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_OptionalGroup::mutable_optional_group_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_group_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
  return _msg;
}
inline void TestParsingMerge_OptionalGroup::set_allocated_optional_group_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_group_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_group_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestParsingMerge.OptionalGroup.optional_group_all_types)
}

// -------------------------------------------------------------------

// TestParsingMerge_RepeatedGroup

// .edition_unittest.TestAllTypes repeated_group_all_types = 21;
inline bool TestParsingMerge_RepeatedGroup::has_repeated_group_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.repeated_group_all_types_ != nullptr);
  return value;
}
inline void TestParsingMerge_RepeatedGroup::clear_repeated_group_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.repeated_group_all_types_ != nullptr) _impl_.repeated_group_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedGroup::_internal_repeated_group_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.repeated_group_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge_RepeatedGroup::repeated_group_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
  return _internal_repeated_group_all_types();
}
inline void TestParsingMerge_RepeatedGroup::unsafe_arena_set_allocated_repeated_group_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.repeated_group_all_types_);
  }
  _impl_.repeated_group_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedGroup::release_repeated_group_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.repeated_group_all_types_;
  _impl_.repeated_group_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedGroup::unsafe_arena_release_repeated_group_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.repeated_group_all_types_;
  _impl_.repeated_group_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedGroup::_internal_mutable_repeated_group_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.repeated_group_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.repeated_group_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.repeated_group_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge_RepeatedGroup::mutable_repeated_group_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_repeated_group_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
  return _msg;
}
inline void TestParsingMerge_RepeatedGroup::set_allocated_repeated_group_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.repeated_group_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.repeated_group_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestParsingMerge.RepeatedGroup.repeated_group_all_types)
}

// -------------------------------------------------------------------

// TestParsingMerge

// .edition_unittest.TestAllTypes required_all_types = 1 [features = {
inline bool TestParsingMerge::has_required_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.required_all_types_ != nullptr);
  return value;
}
inline void TestParsingMerge::clear_required_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_all_types_ != nullptr) _impl_.required_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge::_internal_required_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.required_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge::required_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.required_all_types)
  return _internal_required_all_types();
}
inline void TestParsingMerge::unsafe_arena_set_allocated_required_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.required_all_types_);
  }
  _impl_.required_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestParsingMerge.required_all_types)
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::release_required_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.required_all_types_;
  _impl_.required_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::unsafe_arena_release_required_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestParsingMerge.required_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.required_all_types_;
  _impl_.required_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::_internal_mutable_required_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.required_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.required_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.required_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::mutable_required_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_required_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.required_all_types)
  return _msg;
}
inline void TestParsingMerge::set_allocated_required_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.required_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.required_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestParsingMerge.required_all_types)
}

// .edition_unittest.TestAllTypes optional_all_types = 2;
inline bool TestParsingMerge::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestParsingMerge::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestParsingMerge::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestParsingMerge.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestParsingMerge.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.optional_all_types)
  return _msg;
}
inline void TestParsingMerge::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestParsingMerge.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 3;
inline int TestParsingMerge::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestParsingMerge::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestParsingMerge::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestParsingMerge::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestParsingMerge::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestParsingMerge::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestParsingMerge::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestParsingMerge::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestParsingMerge::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// .edition_unittest.TestParsingMerge.OptionalGroup optionalgroup = 10 [features = {
inline bool TestParsingMerge::has_optionalgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optionalgroup_ != nullptr);
  return value;
}
inline void TestParsingMerge::clear_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optionalgroup_ != nullptr) _impl_.optionalgroup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::TestParsingMerge_OptionalGroup& TestParsingMerge::_internal_optionalgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestParsingMerge_OptionalGroup* p = _impl_.optionalgroup_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestParsingMerge_OptionalGroup&>(::edition_unittest::_TestParsingMerge_OptionalGroup_default_instance_);
}
inline const ::edition_unittest::TestParsingMerge_OptionalGroup& TestParsingMerge::optionalgroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.optionalgroup)
  return _internal_optionalgroup();
}
inline void TestParsingMerge::unsafe_arena_set_allocated_optionalgroup(::edition_unittest::TestParsingMerge_OptionalGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optionalgroup_);
  }
  _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestParsingMerge_OptionalGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestParsingMerge.optionalgroup)
}
inline ::edition_unittest::TestParsingMerge_OptionalGroup* TestParsingMerge::release_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestParsingMerge_OptionalGroup* released = _impl_.optionalgroup_;
  _impl_.optionalgroup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestParsingMerge_OptionalGroup* TestParsingMerge::unsafe_arena_release_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestParsingMerge.optionalgroup)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestParsingMerge_OptionalGroup* temp = _impl_.optionalgroup_;
  _impl_.optionalgroup_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestParsingMerge_OptionalGroup* TestParsingMerge::_internal_mutable_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optionalgroup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestParsingMerge_OptionalGroup>(GetArena());
    _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestParsingMerge_OptionalGroup*>(p);
  }
  return _impl_.optionalgroup_;
}
inline ::edition_unittest::TestParsingMerge_OptionalGroup* TestParsingMerge::mutable_optionalgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::TestParsingMerge_OptionalGroup* _msg = _internal_mutable_optionalgroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.optionalgroup)
  return _msg;
}
inline void TestParsingMerge::set_allocated_optionalgroup(::edition_unittest::TestParsingMerge_OptionalGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optionalgroup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestParsingMerge_OptionalGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestParsingMerge.optionalgroup)
}

// repeated .edition_unittest.TestParsingMerge.RepeatedGroup repeatedgroup = 20 [features = {
inline int TestParsingMerge::_internal_repeatedgroup_size() const {
  return _internal_repeatedgroup().size();
}
inline int TestParsingMerge::repeatedgroup_size() const {
  return _internal_repeatedgroup_size();
}
inline void TestParsingMerge::clear_repeatedgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeatedgroup_.Clear();
}
inline ::edition_unittest::TestParsingMerge_RepeatedGroup* TestParsingMerge::mutable_repeatedgroup(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestParsingMerge.repeatedgroup)
  return _internal_mutable_repeatedgroup()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedGroup>* TestParsingMerge::mutable_repeatedgroup()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestParsingMerge.repeatedgroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeatedgroup();
}
inline const ::edition_unittest::TestParsingMerge_RepeatedGroup& TestParsingMerge::repeatedgroup(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestParsingMerge.repeatedgroup)
  return _internal_repeatedgroup().Get(index);
}
inline ::edition_unittest::TestParsingMerge_RepeatedGroup* TestParsingMerge::add_repeatedgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestParsingMerge_RepeatedGroup* _add = _internal_mutable_repeatedgroup()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestParsingMerge.repeatedgroup)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedGroup>& TestParsingMerge::repeatedgroup() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestParsingMerge.repeatedgroup)
  return _internal_repeatedgroup();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedGroup>&
TestParsingMerge::_internal_repeatedgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeatedgroup_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestParsingMerge_RepeatedGroup>*
TestParsingMerge::_internal_mutable_repeatedgroup() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeatedgroup_;
}

// -------------------------------------------------------------------

// TestMergeException

// .edition_unittest.TestAllExtensions all_extensions = 1;
inline bool TestMergeException::has_all_extensions() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.all_extensions_ != nullptr);
  return value;
}
inline void TestMergeException::clear_all_extensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.all_extensions_ != nullptr) _impl_.all_extensions_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllExtensions& TestMergeException::_internal_all_extensions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllExtensions* p = _impl_.all_extensions_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllExtensions&>(::edition_unittest::_TestAllExtensions_default_instance_);
}
inline const ::edition_unittest::TestAllExtensions& TestMergeException::all_extensions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMergeException.all_extensions)
  return _internal_all_extensions();
}
inline void TestMergeException::unsafe_arena_set_allocated_all_extensions(::edition_unittest::TestAllExtensions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.all_extensions_);
  }
  _impl_.all_extensions_ = reinterpret_cast<::edition_unittest::TestAllExtensions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestMergeException.all_extensions)
}
inline ::edition_unittest::TestAllExtensions* TestMergeException::release_all_extensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllExtensions* released = _impl_.all_extensions_;
  _impl_.all_extensions_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllExtensions* TestMergeException::unsafe_arena_release_all_extensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestMergeException.all_extensions)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllExtensions* temp = _impl_.all_extensions_;
  _impl_.all_extensions_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllExtensions* TestMergeException::_internal_mutable_all_extensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.all_extensions_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllExtensions>(GetArena());
    _impl_.all_extensions_ = reinterpret_cast<::edition_unittest::TestAllExtensions*>(p);
  }
  return _impl_.all_extensions_;
}
inline ::edition_unittest::TestAllExtensions* TestMergeException::mutable_all_extensions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllExtensions* _msg = _internal_mutable_all_extensions();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestMergeException.all_extensions)
  return _msg;
}
inline void TestMergeException::set_allocated_all_extensions(::edition_unittest::TestAllExtensions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.all_extensions_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.all_extensions_ = reinterpret_cast<::edition_unittest::TestAllExtensions*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestMergeException.all_extensions)
}

// -------------------------------------------------------------------

// TestCommentInjectionMessage

// string a = 1 [default = "*/ <- Neither should this."];
inline bool TestCommentInjectionMessage::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestCommentInjectionMessage::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_.ClearToDefault(::edition_unittest::TestCommentInjectionMessage::Impl_::_i_give_permission_to_break_this_code_default_a_, GetArena());
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestCommentInjectionMessage::a() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCommentInjectionMessage.a)
  if (_impl_.a_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_a_.get();
  }
  return _internal_a();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestCommentInjectionMessage::set_a(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestCommentInjectionMessage.a)
}
inline const std::string& TestCommentInjectionMessage::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_.Get();
}
inline void TestCommentInjectionMessage::_internal_set_a(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestMessageSize

// bool m1 = 1;
inline bool TestMessageSize::has_m1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestMessageSize::clear_m1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m1_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool TestMessageSize::m1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageSize.m1)
  return _internal_m1();
}
inline void TestMessageSize::set_m1(bool value) {
  _internal_set_m1(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageSize.m1)
}
inline bool TestMessageSize::_internal_m1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m1_;
}
inline void TestMessageSize::_internal_set_m1(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m1_ = value;
}

// int64 m2 = 2;
inline bool TestMessageSize::has_m2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestMessageSize::clear_m2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m2_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t TestMessageSize::m2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageSize.m2)
  return _internal_m2();
}
inline void TestMessageSize::set_m2(::int64_t value) {
  _internal_set_m2(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageSize.m2)
}
inline ::int64_t TestMessageSize::_internal_m2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m2_;
}
inline void TestMessageSize::_internal_set_m2(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m2_ = value;
}

// bool m3 = 3;
inline bool TestMessageSize::has_m3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestMessageSize::clear_m3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m3_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool TestMessageSize::m3() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageSize.m3)
  return _internal_m3();
}
inline void TestMessageSize::set_m3(bool value) {
  _internal_set_m3(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageSize.m3)
}
inline bool TestMessageSize::_internal_m3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m3_;
}
inline void TestMessageSize::_internal_set_m3(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m3_ = value;
}

// string m4 = 4;
inline bool TestMessageSize::has_m4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestMessageSize::clear_m4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m4_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestMessageSize::m4() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageSize.m4)
  return _internal_m4();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestMessageSize::set_m4(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.m4_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageSize.m4)
}
inline const std::string& TestMessageSize::_internal_m4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m4_.Get();
}
inline void TestMessageSize::_internal_set_m4(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.m4_.Set(value, GetArena());
}

// int32 m5 = 5;
inline bool TestMessageSize::has_m5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestMessageSize::clear_m5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m5_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestMessageSize::m5() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageSize.m5)
  return _internal_m5();
}
inline void TestMessageSize::set_m5(::int32_t value) {
  _internal_set_m5(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageSize.m5)
}
inline ::int32_t TestMessageSize::_internal_m5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m5_;
}
inline void TestMessageSize::_internal_set_m5(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m5_ = value;
}

// int64 m6 = 6;
inline bool TestMessageSize::has_m6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestMessageSize::clear_m6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m6_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t TestMessageSize::m6() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageSize.m6)
  return _internal_m6();
}
inline void TestMessageSize::set_m6(::int64_t value) {
  _internal_set_m6(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageSize.m6)
}
inline ::int64_t TestMessageSize::_internal_m6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m6_;
}
inline void TestMessageSize::_internal_set_m6(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m6_ = value;
}

// -------------------------------------------------------------------

// FooRequest

// -------------------------------------------------------------------

// FooResponse

// -------------------------------------------------------------------

// FooClientMessage

// -------------------------------------------------------------------

// FooServerMessage

// -------------------------------------------------------------------

// BarRequest

// -------------------------------------------------------------------

// BarResponse

// -------------------------------------------------------------------

// TestJsonName

// int32 field_name1 = 1;
inline bool TestJsonName::has_field_name1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestJsonName::clear_field_name1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_name1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestJsonName::field_name1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestJsonName.field_name1)
  return _internal_field_name1();
}
inline void TestJsonName::set_field_name1(::int32_t value) {
  _internal_set_field_name1(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestJsonName.field_name1)
}
inline ::int32_t TestJsonName::_internal_field_name1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_name1_;
}
inline void TestJsonName::_internal_set_field_name1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_name1_ = value;
}

// int32 fieldName2 = 2;
inline bool TestJsonName::has_fieldname2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestJsonName::clear_fieldname2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fieldname2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestJsonName::fieldname2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestJsonName.fieldName2)
  return _internal_fieldname2();
}
inline void TestJsonName::set_fieldname2(::int32_t value) {
  _internal_set_fieldname2(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestJsonName.fieldName2)
}
inline ::int32_t TestJsonName::_internal_fieldname2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fieldname2_;
}
inline void TestJsonName::_internal_set_fieldname2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fieldname2_ = value;
}

// int32 FieldName3 = 3;
inline bool TestJsonName::has_fieldname3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestJsonName::clear_fieldname3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fieldname3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestJsonName::fieldname3() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestJsonName.FieldName3)
  return _internal_fieldname3();
}
inline void TestJsonName::set_fieldname3(::int32_t value) {
  _internal_set_fieldname3(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestJsonName.FieldName3)
}
inline ::int32_t TestJsonName::_internal_fieldname3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fieldname3_;
}
inline void TestJsonName::_internal_set_fieldname3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fieldname3_ = value;
}

// int32 _field_name4 = 4;
inline bool TestJsonName::has__field_name4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestJsonName::clear__field_name4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._field_name4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestJsonName::_field_name4() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestJsonName._field_name4)
  return _internal__field_name4();
}
inline void TestJsonName::set__field_name4(::int32_t value) {
  _internal_set__field_name4(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestJsonName._field_name4)
}
inline ::int32_t TestJsonName::_internal__field_name4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._field_name4_;
}
inline void TestJsonName::_internal_set__field_name4(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._field_name4_ = value;
}

// int32 FIELD_NAME5 = 5;
inline bool TestJsonName::has_field_name5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestJsonName::clear_field_name5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_name5_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestJsonName::field_name5() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestJsonName.FIELD_NAME5)
  return _internal_field_name5();
}
inline void TestJsonName::set_field_name5(::int32_t value) {
  _internal_set_field_name5(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestJsonName.FIELD_NAME5)
}
inline ::int32_t TestJsonName::_internal_field_name5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_name5_;
}
inline void TestJsonName::_internal_set_field_name5(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_name5_ = value;
}

// int32 field_name6 = 6 [json_name = "@type"];
inline bool TestJsonName::has_field_name6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestJsonName::clear_field_name6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_name6_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t TestJsonName::field_name6() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestJsonName.field_name6)
  return _internal_field_name6();
}
inline void TestJsonName::set_field_name6(::int32_t value) {
  _internal_set_field_name6(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestJsonName.field_name6)
}
inline ::int32_t TestJsonName::_internal_field_name6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_name6_;
}
inline void TestJsonName::_internal_set_field_name6(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_name6_ = value;
}

// int32 fieldname7 = 7;
inline bool TestJsonName::has_fieldname7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestJsonName::clear_fieldname7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fieldname7_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t TestJsonName::fieldname7() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestJsonName.fieldname7)
  return _internal_fieldname7();
}
inline void TestJsonName::set_fieldname7(::int32_t value) {
  _internal_set_fieldname7(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestJsonName.fieldname7)
}
inline ::int32_t TestJsonName::_internal_fieldname7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fieldname7_;
}
inline void TestJsonName::_internal_set_fieldname7(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fieldname7_ = value;
}

// -------------------------------------------------------------------

// TestHugeFieldNumbers_OptionalGroup

// int32 group_a = 536870009;
inline bool TestHugeFieldNumbers_OptionalGroup::has_group_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestHugeFieldNumbers_OptionalGroup::clear_group_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestHugeFieldNumbers_OptionalGroup::group_a() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.OptionalGroup.group_a)
  return _internal_group_a();
}
inline void TestHugeFieldNumbers_OptionalGroup::set_group_a(::int32_t value) {
  _internal_set_group_a(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.OptionalGroup.group_a)
}
inline ::int32_t TestHugeFieldNumbers_OptionalGroup::_internal_group_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_a_;
}
inline void TestHugeFieldNumbers_OptionalGroup::_internal_set_group_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_a_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestHugeFieldNumbers

// int32 optional_int32 = 536870000;
inline bool TestHugeFieldNumbers::has_optional_int32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestHugeFieldNumbers::clear_optional_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestHugeFieldNumbers::optional_int32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.optional_int32)
  return _internal_optional_int32();
}
inline void TestHugeFieldNumbers::set_optional_int32(::int32_t value) {
  _internal_set_optional_int32(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.optional_int32)
}
inline ::int32_t TestHugeFieldNumbers::_internal_optional_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_;
}
inline void TestHugeFieldNumbers::_internal_set_optional_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_ = value;
}

// int32 fixed_32 = 536870001;
inline bool TestHugeFieldNumbers::has_fixed_32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestHugeFieldNumbers::clear_fixed_32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixed_32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t TestHugeFieldNumbers::fixed_32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.fixed_32)
  return _internal_fixed_32();
}
inline void TestHugeFieldNumbers::set_fixed_32(::int32_t value) {
  _internal_set_fixed_32(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.fixed_32)
}
inline ::int32_t TestHugeFieldNumbers::_internal_fixed_32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fixed_32_;
}
inline void TestHugeFieldNumbers::_internal_set_fixed_32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixed_32_ = value;
}

// repeated int32 repeated_int32 = 536870002 [features = {
inline int TestHugeFieldNumbers::_internal_repeated_int32_size() const {
  return _internal_repeated_int32().size();
}
inline int TestHugeFieldNumbers::repeated_int32_size() const {
  return _internal_repeated_int32_size();
}
inline void TestHugeFieldNumbers::clear_repeated_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int32_.Clear();
}
inline ::int32_t TestHugeFieldNumbers::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.repeated_int32)
  return _internal_repeated_int32().Get(index);
}
inline void TestHugeFieldNumbers::set_repeated_int32(int index, ::int32_t value) {
  _internal_mutable_repeated_int32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.repeated_int32)
}
inline void TestHugeFieldNumbers::add_repeated_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestHugeFieldNumbers.repeated_int32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestHugeFieldNumbers::repeated_int32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestHugeFieldNumbers.repeated_int32)
  return _internal_repeated_int32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestHugeFieldNumbers::mutable_repeated_int32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestHugeFieldNumbers.repeated_int32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestHugeFieldNumbers::_internal_repeated_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestHugeFieldNumbers::_internal_mutable_repeated_int32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int32_;
}

// repeated int32 packed_int32 = 536870003 [features = {
inline int TestHugeFieldNumbers::_internal_packed_int32_size() const {
  return _internal_packed_int32().size();
}
inline int TestHugeFieldNumbers::packed_int32_size() const {
  return _internal_packed_int32_size();
}
inline void TestHugeFieldNumbers::clear_packed_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int32_.Clear();
}
inline ::int32_t TestHugeFieldNumbers::packed_int32(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.packed_int32)
  return _internal_packed_int32().Get(index);
}
inline void TestHugeFieldNumbers::set_packed_int32(int index, ::int32_t value) {
  _internal_mutable_packed_int32()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.packed_int32)
}
inline void TestHugeFieldNumbers::add_packed_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int32()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestHugeFieldNumbers.packed_int32)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestHugeFieldNumbers::packed_int32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestHugeFieldNumbers.packed_int32)
  return _internal_packed_int32();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestHugeFieldNumbers::mutable_packed_int32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestHugeFieldNumbers.packed_int32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int32();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestHugeFieldNumbers::_internal_packed_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int32_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestHugeFieldNumbers::_internal_mutable_packed_int32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int32_;
}

// .edition_unittest.ForeignEnum optional_enum = 536870004;
inline bool TestHugeFieldNumbers::has_optional_enum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestHugeFieldNumbers::clear_optional_enum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_enum_ = 4;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::edition_unittest::ForeignEnum TestHugeFieldNumbers::optional_enum() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.optional_enum)
  return _internal_optional_enum();
}
inline void TestHugeFieldNumbers::set_optional_enum(::edition_unittest::ForeignEnum value) {
  _internal_set_optional_enum(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.optional_enum)
}
inline ::edition_unittest::ForeignEnum TestHugeFieldNumbers::_internal_optional_enum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::ForeignEnum>(_impl_.optional_enum_);
}
inline void TestHugeFieldNumbers::_internal_set_optional_enum(::edition_unittest::ForeignEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::ForeignEnum_IsValid(value));
  _impl_.optional_enum_ = value;
}

// string optional_string = 536870005;
inline bool TestHugeFieldNumbers::has_optional_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestHugeFieldNumbers::clear_optional_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestHugeFieldNumbers::optional_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.optional_string)
  return _internal_optional_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestHugeFieldNumbers::set_optional_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.optional_string)
}
inline const std::string& TestHugeFieldNumbers::_internal_optional_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_string_.Get();
}
inline void TestHugeFieldNumbers::_internal_set_optional_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_string_.Set(value, GetArena());
}

// bytes optional_bytes = 536870006;
inline bool TestHugeFieldNumbers::has_optional_bytes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestHugeFieldNumbers::clear_optional_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bytes_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view TestHugeFieldNumbers::optional_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.optional_bytes)
  return _internal_optional_bytes();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestHugeFieldNumbers::set_optional_bytes(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_bytes_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.optional_bytes)
}
inline const std::string& TestHugeFieldNumbers::_internal_optional_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_bytes_.Get();
}
inline void TestHugeFieldNumbers::_internal_set_optional_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_bytes_.Set(value, GetArena());
}

// .edition_unittest.ForeignMessage optional_message = 536870007;
inline bool TestHugeFieldNumbers::has_optional_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_message_ != nullptr);
  return value;
}
inline void TestHugeFieldNumbers::clear_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_message_ != nullptr) _impl_.optional_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::ForeignMessage& TestHugeFieldNumbers::_internal_optional_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::ForeignMessage* p = _impl_.optional_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::ForeignMessage&>(::edition_unittest::_ForeignMessage_default_instance_);
}
inline const ::edition_unittest::ForeignMessage& TestHugeFieldNumbers::optional_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.optional_message)
  return _internal_optional_message();
}
inline void TestHugeFieldNumbers::unsafe_arena_set_allocated_optional_message(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_message_);
  }
  _impl_.optional_message_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestHugeFieldNumbers.optional_message)
}
inline ::edition_unittest::ForeignMessage* TestHugeFieldNumbers::release_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::ForeignMessage* released = _impl_.optional_message_;
  _impl_.optional_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::ForeignMessage* TestHugeFieldNumbers::unsafe_arena_release_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestHugeFieldNumbers.optional_message)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::ForeignMessage* temp = _impl_.optional_message_;
  _impl_.optional_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::ForeignMessage* TestHugeFieldNumbers::_internal_mutable_optional_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::ForeignMessage>(GetArena());
    _impl_.optional_message_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(p);
  }
  return _impl_.optional_message_;
}
inline ::edition_unittest::ForeignMessage* TestHugeFieldNumbers::mutable_optional_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::ForeignMessage* _msg = _internal_mutable_optional_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestHugeFieldNumbers.optional_message)
  return _msg;
}
inline void TestHugeFieldNumbers::set_allocated_optional_message(::edition_unittest::ForeignMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.optional_message_ = reinterpret_cast<::edition_unittest::ForeignMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestHugeFieldNumbers.optional_message)
}

// .edition_unittest.TestHugeFieldNumbers.OptionalGroup optionalgroup = 536870008 [features = {
inline bool TestHugeFieldNumbers::has_optionalgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optionalgroup_ != nullptr);
  return value;
}
inline void TestHugeFieldNumbers::clear_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optionalgroup_ != nullptr) _impl_.optionalgroup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::edition_unittest::TestHugeFieldNumbers_OptionalGroup& TestHugeFieldNumbers::_internal_optionalgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* p = _impl_.optionalgroup_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestHugeFieldNumbers_OptionalGroup&>(::edition_unittest::_TestHugeFieldNumbers_OptionalGroup_default_instance_);
}
inline const ::edition_unittest::TestHugeFieldNumbers_OptionalGroup& TestHugeFieldNumbers::optionalgroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.optionalgroup)
  return _internal_optionalgroup();
}
inline void TestHugeFieldNumbers::unsafe_arena_set_allocated_optionalgroup(::edition_unittest::TestHugeFieldNumbers_OptionalGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optionalgroup_);
  }
  _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestHugeFieldNumbers_OptionalGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestHugeFieldNumbers.optionalgroup)
}
inline ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* TestHugeFieldNumbers::release_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* released = _impl_.optionalgroup_;
  _impl_.optionalgroup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* TestHugeFieldNumbers::unsafe_arena_release_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestHugeFieldNumbers.optionalgroup)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* temp = _impl_.optionalgroup_;
  _impl_.optionalgroup_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* TestHugeFieldNumbers::_internal_mutable_optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optionalgroup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestHugeFieldNumbers_OptionalGroup>(GetArena());
    _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestHugeFieldNumbers_OptionalGroup*>(p);
  }
  return _impl_.optionalgroup_;
}
inline ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* TestHugeFieldNumbers::mutable_optionalgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::edition_unittest::TestHugeFieldNumbers_OptionalGroup* _msg = _internal_mutable_optionalgroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestHugeFieldNumbers.optionalgroup)
  return _msg;
}
inline void TestHugeFieldNumbers::set_allocated_optionalgroup(::edition_unittest::TestHugeFieldNumbers_OptionalGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optionalgroup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.optionalgroup_ = reinterpret_cast<::edition_unittest::TestHugeFieldNumbers_OptionalGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestHugeFieldNumbers.optionalgroup)
}

// map<string, string> string_string_map = 536870010;
inline int TestHugeFieldNumbers::_internal_string_string_map_size() const {
  return _internal_string_string_map().size();
}
inline int TestHugeFieldNumbers::string_string_map_size() const {
  return _internal_string_string_map_size();
}
inline void TestHugeFieldNumbers::clear_string_string_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_string_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestHugeFieldNumbers::_internal_string_string_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_string_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestHugeFieldNumbers::string_string_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:edition_unittest.TestHugeFieldNumbers.string_string_map)
  return _internal_string_string_map();
}
inline ::google::protobuf::Map<std::string, std::string>* TestHugeFieldNumbers::_internal_mutable_string_string_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.string_string_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TestHugeFieldNumbers::mutable_string_string_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:edition_unittest.TestHugeFieldNumbers.string_string_map)
  return _internal_mutable_string_string_map();
}

// uint32 oneof_uint32 = 536870011;
inline bool TestHugeFieldNumbers::has_oneof_uint32() const {
  return oneof_field_case() == kOneofUint32;
}
inline void TestHugeFieldNumbers::set_has_oneof_uint32() {
  _impl_._oneof_case_[0] = kOneofUint32;
}
inline void TestHugeFieldNumbers::clear_oneof_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofUint32) {
    _impl_.oneof_field_.oneof_uint32_ = 0u;
    clear_has_oneof_field();
  }
}
inline ::uint32_t TestHugeFieldNumbers::oneof_uint32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.oneof_uint32)
  return _internal_oneof_uint32();
}
inline void TestHugeFieldNumbers::set_oneof_uint32(::uint32_t value) {
  if (oneof_field_case() != kOneofUint32) {
    clear_oneof_field();
    set_has_oneof_uint32();
  }
  _impl_.oneof_field_.oneof_uint32_ = value;
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.oneof_uint32)
}
inline ::uint32_t TestHugeFieldNumbers::_internal_oneof_uint32() const {
  if (oneof_field_case() == kOneofUint32) {
    return _impl_.oneof_field_.oneof_uint32_;
  }
  return 0u;
}

// .edition_unittest.TestAllTypes oneof_test_all_types = 536870012;
inline bool TestHugeFieldNumbers::has_oneof_test_all_types() const {
  return oneof_field_case() == kOneofTestAllTypes;
}
inline bool TestHugeFieldNumbers::_internal_has_oneof_test_all_types() const {
  return oneof_field_case() == kOneofTestAllTypes;
}
inline void TestHugeFieldNumbers::set_has_oneof_test_all_types() {
  _impl_._oneof_case_[0] = kOneofTestAllTypes;
}
inline void TestHugeFieldNumbers::clear_oneof_test_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofTestAllTypes) {
    if (GetArena() == nullptr) {
      delete _impl_.oneof_field_.oneof_test_all_types_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.oneof_field_.oneof_test_all_types_);
    }
    clear_has_oneof_field();
  }
}
inline ::edition_unittest::TestAllTypes* TestHugeFieldNumbers::release_oneof_test_all_types() {
  // @@protoc_insertion_point(field_release:edition_unittest.TestHugeFieldNumbers.oneof_test_all_types)
  if (oneof_field_case() == kOneofTestAllTypes) {
    clear_has_oneof_field();
    auto* temp = _impl_.oneof_field_.oneof_test_all_types_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.oneof_field_.oneof_test_all_types_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::edition_unittest::TestAllTypes& TestHugeFieldNumbers::_internal_oneof_test_all_types() const {
  return oneof_field_case() == kOneofTestAllTypes ? *_impl_.oneof_field_.oneof_test_all_types_ : reinterpret_cast<::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestHugeFieldNumbers::oneof_test_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.oneof_test_all_types)
  return _internal_oneof_test_all_types();
}
inline ::edition_unittest::TestAllTypes* TestHugeFieldNumbers::unsafe_arena_release_oneof_test_all_types() {
  // @@protoc_insertion_point(field_unsafe_arena_release:edition_unittest.TestHugeFieldNumbers.oneof_test_all_types)
  if (oneof_field_case() == kOneofTestAllTypes) {
    clear_has_oneof_field();
    auto* temp = _impl_.oneof_field_.oneof_test_all_types_;
    _impl_.oneof_field_.oneof_test_all_types_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestHugeFieldNumbers::unsafe_arena_set_allocated_oneof_test_all_types(::edition_unittest::TestAllTypes* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_oneof_field();
  if (value) {
    set_has_oneof_test_all_types();
    _impl_.oneof_field_.oneof_test_all_types_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestHugeFieldNumbers.oneof_test_all_types)
}
inline ::edition_unittest::TestAllTypes* TestHugeFieldNumbers::_internal_mutable_oneof_test_all_types() {
  if (oneof_field_case() != kOneofTestAllTypes) {
    clear_oneof_field();
    set_has_oneof_test_all_types();
    _impl_.oneof_field_.oneof_test_all_types_ =
        ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
  }
  return _impl_.oneof_field_.oneof_test_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestHugeFieldNumbers::mutable_oneof_test_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_oneof_test_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestHugeFieldNumbers.oneof_test_all_types)
  return _msg;
}

// string oneof_string = 536870013;
inline bool TestHugeFieldNumbers::has_oneof_string() const {
  return oneof_field_case() == kOneofString;
}
inline void TestHugeFieldNumbers::set_has_oneof_string() {
  _impl_._oneof_case_[0] = kOneofString;
}
inline void TestHugeFieldNumbers::clear_oneof_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofString) {
    _impl_.oneof_field_.oneof_string_.Destroy();
    clear_has_oneof_field();
  }
}
inline absl::string_view TestHugeFieldNumbers::oneof_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.oneof_string)
  return _internal_oneof_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestHugeFieldNumbers::set_oneof_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofString) {
    clear_oneof_field();

    set_has_oneof_string();
    _impl_.oneof_field_.oneof_string_.InitDefault();
  }
  _impl_.oneof_field_.oneof_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.oneof_string)
}
inline const std::string& TestHugeFieldNumbers::_internal_oneof_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (oneof_field_case() != kOneofString) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.oneof_field_.oneof_string_.Get();
}
inline void TestHugeFieldNumbers::_internal_set_oneof_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofString) {
    clear_oneof_field();

    set_has_oneof_string();
    _impl_.oneof_field_.oneof_string_.InitDefault();
  }
  _impl_.oneof_field_.oneof_string_.Set(value, GetArena());
}

// bytes oneof_bytes = 536870014;
inline bool TestHugeFieldNumbers::has_oneof_bytes() const {
  return oneof_field_case() == kOneofBytes;
}
inline void TestHugeFieldNumbers::set_has_oneof_bytes() {
  _impl_._oneof_case_[0] = kOneofBytes;
}
inline void TestHugeFieldNumbers::clear_oneof_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() == kOneofBytes) {
    _impl_.oneof_field_.oneof_bytes_.Destroy();
    clear_has_oneof_field();
  }
}
inline absl::string_view TestHugeFieldNumbers::oneof_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestHugeFieldNumbers.oneof_bytes)
  return _internal_oneof_bytes();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestHugeFieldNumbers::set_oneof_bytes(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofBytes) {
    clear_oneof_field();

    set_has_oneof_bytes();
    _impl_.oneof_field_.oneof_bytes_.InitDefault();
  }
  _impl_.oneof_field_.oneof_bytes_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestHugeFieldNumbers.oneof_bytes)
}
inline const std::string& TestHugeFieldNumbers::_internal_oneof_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (oneof_field_case() != kOneofBytes) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.oneof_field_.oneof_bytes_.Get();
}
inline void TestHugeFieldNumbers::_internal_set_oneof_bytes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (oneof_field_case() != kOneofBytes) {
    clear_oneof_field();

    set_has_oneof_bytes();
    _impl_.oneof_field_.oneof_bytes_.InitDefault();
  }
  _impl_.oneof_field_.oneof_bytes_.Set(value, GetArena());
}

inline bool TestHugeFieldNumbers::has_oneof_field() const {
  return oneof_field_case() != ONEOF_FIELD_NOT_SET;
}
inline void TestHugeFieldNumbers::clear_has_oneof_field() {
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}
inline TestHugeFieldNumbers::OneofFieldCase TestHugeFieldNumbers::oneof_field_case() const {
  return TestHugeFieldNumbers::OneofFieldCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TestExtensionInsideTable

// int32 field1 = 1;
inline bool TestExtensionInsideTable::has_field1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestExtensionInsideTable::field1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field1)
  return _internal_field1();
}
inline void TestExtensionInsideTable::set_field1(::int32_t value) {
  _internal_set_field1(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field1)
}
inline ::int32_t TestExtensionInsideTable::_internal_field1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field1_;
}
inline void TestExtensionInsideTable::_internal_set_field1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field1_ = value;
}

// int32 field2 = 2;
inline bool TestExtensionInsideTable::has_field2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestExtensionInsideTable::field2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field2)
  return _internal_field2();
}
inline void TestExtensionInsideTable::set_field2(::int32_t value) {
  _internal_set_field2(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field2)
}
inline ::int32_t TestExtensionInsideTable::_internal_field2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field2_;
}
inline void TestExtensionInsideTable::_internal_set_field2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field2_ = value;
}

// int32 field3 = 3;
inline bool TestExtensionInsideTable::has_field3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestExtensionInsideTable::field3() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field3)
  return _internal_field3();
}
inline void TestExtensionInsideTable::set_field3(::int32_t value) {
  _internal_set_field3(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field3)
}
inline ::int32_t TestExtensionInsideTable::_internal_field3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field3_;
}
inline void TestExtensionInsideTable::_internal_set_field3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field3_ = value;
}

// int32 field4 = 4;
inline bool TestExtensionInsideTable::has_field4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestExtensionInsideTable::field4() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field4)
  return _internal_field4();
}
inline void TestExtensionInsideTable::set_field4(::int32_t value) {
  _internal_set_field4(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field4)
}
inline ::int32_t TestExtensionInsideTable::_internal_field4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field4_;
}
inline void TestExtensionInsideTable::_internal_set_field4(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field4_ = value;
}

// int32 field6 = 6;
inline bool TestExtensionInsideTable::has_field6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field6_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestExtensionInsideTable::field6() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field6)
  return _internal_field6();
}
inline void TestExtensionInsideTable::set_field6(::int32_t value) {
  _internal_set_field6(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field6)
}
inline ::int32_t TestExtensionInsideTable::_internal_field6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field6_;
}
inline void TestExtensionInsideTable::_internal_set_field6(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field6_ = value;
}

// int32 field7 = 7;
inline bool TestExtensionInsideTable::has_field7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field7_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t TestExtensionInsideTable::field7() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field7)
  return _internal_field7();
}
inline void TestExtensionInsideTable::set_field7(::int32_t value) {
  _internal_set_field7(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field7)
}
inline ::int32_t TestExtensionInsideTable::_internal_field7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field7_;
}
inline void TestExtensionInsideTable::_internal_set_field7(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field7_ = value;
}

// int32 field8 = 8;
inline bool TestExtensionInsideTable::has_field8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field8_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t TestExtensionInsideTable::field8() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field8)
  return _internal_field8();
}
inline void TestExtensionInsideTable::set_field8(::int32_t value) {
  _internal_set_field8(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field8)
}
inline ::int32_t TestExtensionInsideTable::_internal_field8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field8_;
}
inline void TestExtensionInsideTable::_internal_set_field8(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field8_ = value;
}

// int32 field9 = 9;
inline bool TestExtensionInsideTable::has_field9() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field9_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t TestExtensionInsideTable::field9() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field9)
  return _internal_field9();
}
inline void TestExtensionInsideTable::set_field9(::int32_t value) {
  _internal_set_field9(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field9)
}
inline ::int32_t TestExtensionInsideTable::_internal_field9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field9_;
}
inline void TestExtensionInsideTable::_internal_set_field9(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field9_ = value;
}

// int32 field10 = 10;
inline bool TestExtensionInsideTable::has_field10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void TestExtensionInsideTable::clear_field10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field10_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t TestExtensionInsideTable::field10() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionInsideTable.field10)
  return _internal_field10();
}
inline void TestExtensionInsideTable::set_field10(::int32_t value) {
  _internal_set_field10(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionInsideTable.field10)
}
inline ::int32_t TestExtensionInsideTable::_internal_field10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field10_;
}
inline void TestExtensionInsideTable::_internal_set_field10(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field10_ = value;
}

// -------------------------------------------------------------------

// TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup

// string another_field = 6;
inline bool TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::has_another_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::clear_another_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.another_field_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::another_field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.another_field)
  return _internal_another_field();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::set_another_field(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.another_field_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.another_field)
}
inline const std::string& TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::_internal_another_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.another_field_.Get();
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::_internal_set_another_field(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.another_field_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup

// string but_why_tho = 5;
inline bool TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::has_but_why_tho() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::clear_but_why_tho() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.but_why_tho_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::but_why_tho() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.but_why_tho)
  return _internal_but_why_tho();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::set_but_why_tho(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.but_why_tho_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.but_why_tho)
}
inline const std::string& TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::_internal_but_why_tho() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.but_why_tho_.Get();
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::_internal_set_but_why_tho(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.but_why_tho_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestNestedGroupExtensionOuter_Layer1OptionalGroup

// repeated .edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup layer2repeatedgroup = 2 [features = {
inline int TestNestedGroupExtensionOuter_Layer1OptionalGroup::_internal_layer2repeatedgroup_size() const {
  return _internal_layer2repeatedgroup().size();
}
inline int TestNestedGroupExtensionOuter_Layer1OptionalGroup::layer2repeatedgroup_size() const {
  return _internal_layer2repeatedgroup_size();
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup::clear_layer2repeatedgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer2repeatedgroup_.Clear();
}
inline ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* TestNestedGroupExtensionOuter_Layer1OptionalGroup::mutable_layer2repeatedgroup(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2repeatedgroup)
  return _internal_mutable_layer2repeatedgroup()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>* TestNestedGroupExtensionOuter_Layer1OptionalGroup::mutable_layer2repeatedgroup()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2repeatedgroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_layer2repeatedgroup();
}
inline const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& TestNestedGroupExtensionOuter_Layer1OptionalGroup::layer2repeatedgroup(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2repeatedgroup)
  return _internal_layer2repeatedgroup().Get(index);
}
inline ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* TestNestedGroupExtensionOuter_Layer1OptionalGroup::add_layer2repeatedgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* _add = _internal_mutable_layer2repeatedgroup()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2repeatedgroup)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>& TestNestedGroupExtensionOuter_Layer1OptionalGroup::layer2repeatedgroup() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2repeatedgroup)
  return _internal_layer2repeatedgroup();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>&
TestNestedGroupExtensionOuter_Layer1OptionalGroup::_internal_layer2repeatedgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layer2repeatedgroup_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>*
TestNestedGroupExtensionOuter_Layer1OptionalGroup::_internal_mutable_layer2repeatedgroup() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.layer2repeatedgroup_;
}

// repeated .edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup layer2anotheroptionalrepeatedgroup = 4 [features = {
inline int TestNestedGroupExtensionOuter_Layer1OptionalGroup::_internal_layer2anotheroptionalrepeatedgroup_size() const {
  return _internal_layer2anotheroptionalrepeatedgroup().size();
}
inline int TestNestedGroupExtensionOuter_Layer1OptionalGroup::layer2anotheroptionalrepeatedgroup_size() const {
  return _internal_layer2anotheroptionalrepeatedgroup_size();
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup::clear_layer2anotheroptionalrepeatedgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer2anotheroptionalrepeatedgroup_.Clear();
}
inline ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* TestNestedGroupExtensionOuter_Layer1OptionalGroup::mutable_layer2anotheroptionalrepeatedgroup(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2anotheroptionalrepeatedgroup)
  return _internal_mutable_layer2anotheroptionalrepeatedgroup()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>* TestNestedGroupExtensionOuter_Layer1OptionalGroup::mutable_layer2anotheroptionalrepeatedgroup()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2anotheroptionalrepeatedgroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_layer2anotheroptionalrepeatedgroup();
}
inline const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& TestNestedGroupExtensionOuter_Layer1OptionalGroup::layer2anotheroptionalrepeatedgroup(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2anotheroptionalrepeatedgroup)
  return _internal_layer2anotheroptionalrepeatedgroup().Get(index);
}
inline ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* TestNestedGroupExtensionOuter_Layer1OptionalGroup::add_layer2anotheroptionalrepeatedgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* _add = _internal_mutable_layer2anotheroptionalrepeatedgroup()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2anotheroptionalrepeatedgroup)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>& TestNestedGroupExtensionOuter_Layer1OptionalGroup::layer2anotheroptionalrepeatedgroup() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.layer2anotheroptionalrepeatedgroup)
  return _internal_layer2anotheroptionalrepeatedgroup();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>&
TestNestedGroupExtensionOuter_Layer1OptionalGroup::_internal_layer2anotheroptionalrepeatedgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layer2anotheroptionalrepeatedgroup_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>*
TestNestedGroupExtensionOuter_Layer1OptionalGroup::_internal_mutable_layer2anotheroptionalrepeatedgroup() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.layer2anotheroptionalrepeatedgroup_;
}

// -------------------------------------------------------------------

// TestNestedGroupExtensionOuter

// .edition_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup lay1optionalgroup = 1 [features = {
inline bool TestNestedGroupExtensionOuter::has_lay1optionalgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lay1optionalgroup_ != nullptr);
  return value;
}
inline void TestNestedGroupExtensionOuter::clear_lay1optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lay1optionalgroup_ != nullptr) _impl_.lay1optionalgroup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup& TestNestedGroupExtensionOuter::_internal_lay1optionalgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* p = _impl_.lay1optionalgroup_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup&>(::edition_unittest::_TestNestedGroupExtensionOuter_Layer1OptionalGroup_default_instance_);
}
inline const ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup& TestNestedGroupExtensionOuter::lay1optionalgroup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedGroupExtensionOuter.lay1optionalgroup)
  return _internal_lay1optionalgroup();
}
inline void TestNestedGroupExtensionOuter::unsafe_arena_set_allocated_lay1optionalgroup(::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lay1optionalgroup_);
  }
  _impl_.lay1optionalgroup_ = reinterpret_cast<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestNestedGroupExtensionOuter.lay1optionalgroup)
}
inline ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* TestNestedGroupExtensionOuter::release_lay1optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* released = _impl_.lay1optionalgroup_;
  _impl_.lay1optionalgroup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* TestNestedGroupExtensionOuter::unsafe_arena_release_lay1optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestNestedGroupExtensionOuter.lay1optionalgroup)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* temp = _impl_.lay1optionalgroup_;
  _impl_.lay1optionalgroup_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* TestNestedGroupExtensionOuter::_internal_mutable_lay1optionalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lay1optionalgroup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup>(GetArena());
    _impl_.lay1optionalgroup_ = reinterpret_cast<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup*>(p);
  }
  return _impl_.lay1optionalgroup_;
}
inline ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* TestNestedGroupExtensionOuter::mutable_lay1optionalgroup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* _msg = _internal_mutable_lay1optionalgroup();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestNestedGroupExtensionOuter.lay1optionalgroup)
  return _msg;
}
inline void TestNestedGroupExtensionOuter::set_allocated_lay1optionalgroup(::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lay1optionalgroup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lay1optionalgroup_ = reinterpret_cast<::edition_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestNestedGroupExtensionOuter.lay1optionalgroup)
}

// -------------------------------------------------------------------

// TestNestedGroupExtensionInnerExtension

// string inner_name = 1;
inline bool TestNestedGroupExtensionInnerExtension::has_inner_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestNestedGroupExtensionInnerExtension::clear_inner_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inner_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestNestedGroupExtensionInnerExtension::inner_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedGroupExtensionInnerExtension.inner_name)
  return _internal_inner_name();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestNestedGroupExtensionInnerExtension::set_inner_name(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.inner_name_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedGroupExtensionInnerExtension.inner_name)
}
inline const std::string& TestNestedGroupExtensionInnerExtension::_internal_inner_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inner_name_.Get();
}
inline void TestNestedGroupExtensionInnerExtension::_internal_set_inner_name(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.inner_name_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// TestExtensionRangeSerialize

// int32 foo_one = 1;
inline bool TestExtensionRangeSerialize::has_foo_one() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestExtensionRangeSerialize::clear_foo_one() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_one_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestExtensionRangeSerialize::foo_one() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionRangeSerialize.foo_one)
  return _internal_foo_one();
}
inline void TestExtensionRangeSerialize::set_foo_one(::int32_t value) {
  _internal_set_foo_one(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionRangeSerialize.foo_one)
}
inline ::int32_t TestExtensionRangeSerialize::_internal_foo_one() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.foo_one_;
}
inline void TestExtensionRangeSerialize::_internal_set_foo_one(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_one_ = value;
}

// int32 foo_two = 6;
inline bool TestExtensionRangeSerialize::has_foo_two() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestExtensionRangeSerialize::clear_foo_two() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_two_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestExtensionRangeSerialize::foo_two() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionRangeSerialize.foo_two)
  return _internal_foo_two();
}
inline void TestExtensionRangeSerialize::set_foo_two(::int32_t value) {
  _internal_set_foo_two(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionRangeSerialize.foo_two)
}
inline ::int32_t TestExtensionRangeSerialize::_internal_foo_two() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.foo_two_;
}
inline void TestExtensionRangeSerialize::_internal_set_foo_two(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_two_ = value;
}

// int32 foo_three = 7;
inline bool TestExtensionRangeSerialize::has_foo_three() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestExtensionRangeSerialize::clear_foo_three() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_three_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestExtensionRangeSerialize::foo_three() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionRangeSerialize.foo_three)
  return _internal_foo_three();
}
inline void TestExtensionRangeSerialize::set_foo_three(::int32_t value) {
  _internal_set_foo_three(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionRangeSerialize.foo_three)
}
inline ::int32_t TestExtensionRangeSerialize::_internal_foo_three() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.foo_three_;
}
inline void TestExtensionRangeSerialize::_internal_set_foo_three(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_three_ = value;
}

// int32 foo_four = 13;
inline bool TestExtensionRangeSerialize::has_foo_four() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestExtensionRangeSerialize::clear_foo_four() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_four_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestExtensionRangeSerialize::foo_four() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestExtensionRangeSerialize.foo_four)
  return _internal_foo_four();
}
inline void TestExtensionRangeSerialize::set_foo_four(::int32_t value) {
  _internal_set_foo_four(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestExtensionRangeSerialize.foo_four)
}
inline ::int32_t TestExtensionRangeSerialize::_internal_foo_four() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.foo_four_;
}
inline void TestExtensionRangeSerialize::_internal_set_foo_four(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_four_ = value;
}

// -------------------------------------------------------------------

// TestVerifyInt32Simple

// int32 optional_int32_1 = 1;
inline bool TestVerifyInt32Simple::has_optional_int32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestVerifyInt32Simple::clear_optional_int32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestVerifyInt32Simple::optional_int32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32Simple.optional_int32_1)
  return _internal_optional_int32_1();
}
inline void TestVerifyInt32Simple::set_optional_int32_1(::int32_t value) {
  _internal_set_optional_int32_1(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32Simple.optional_int32_1)
}
inline ::int32_t TestVerifyInt32Simple::_internal_optional_int32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_1_;
}
inline void TestVerifyInt32Simple::_internal_set_optional_int32_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = value;
}

// int32 optional_int32_2 = 2;
inline bool TestVerifyInt32Simple::has_optional_int32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyInt32Simple::clear_optional_int32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestVerifyInt32Simple::optional_int32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32Simple.optional_int32_2)
  return _internal_optional_int32_2();
}
inline void TestVerifyInt32Simple::set_optional_int32_2(::int32_t value) {
  _internal_set_optional_int32_2(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32Simple.optional_int32_2)
}
inline ::int32_t TestVerifyInt32Simple::_internal_optional_int32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_2_;
}
inline void TestVerifyInt32Simple::_internal_set_optional_int32_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = value;
}

// int32 optional_int32_63 = 63;
inline bool TestVerifyInt32Simple::has_optional_int32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyInt32Simple::clear_optional_int32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestVerifyInt32Simple::optional_int32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32Simple.optional_int32_63)
  return _internal_optional_int32_63();
}
inline void TestVerifyInt32Simple::set_optional_int32_63(::int32_t value) {
  _internal_set_optional_int32_63(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32Simple.optional_int32_63)
}
inline ::int32_t TestVerifyInt32Simple::_internal_optional_int32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_63_;
}
inline void TestVerifyInt32Simple::_internal_set_optional_int32_63(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = value;
}

// int32 optional_int32_64 = 64;
inline bool TestVerifyInt32Simple::has_optional_int32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyInt32Simple::clear_optional_int32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestVerifyInt32Simple::optional_int32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32Simple.optional_int32_64)
  return _internal_optional_int32_64();
}
inline void TestVerifyInt32Simple::set_optional_int32_64(::int32_t value) {
  _internal_set_optional_int32_64(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32Simple.optional_int32_64)
}
inline ::int32_t TestVerifyInt32Simple::_internal_optional_int32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_64_;
}
inline void TestVerifyInt32Simple::_internal_set_optional_int32_64(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = value;
}

// -------------------------------------------------------------------

// TestVerifyInt32

// int32 optional_int32_1 = 1;
inline bool TestVerifyInt32::has_optional_int32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyInt32::clear_optional_int32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestVerifyInt32::optional_int32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32.optional_int32_1)
  return _internal_optional_int32_1();
}
inline void TestVerifyInt32::set_optional_int32_1(::int32_t value) {
  _internal_set_optional_int32_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32.optional_int32_1)
}
inline ::int32_t TestVerifyInt32::_internal_optional_int32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_1_;
}
inline void TestVerifyInt32::_internal_set_optional_int32_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = value;
}

// int32 optional_int32_2 = 2;
inline bool TestVerifyInt32::has_optional_int32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyInt32::clear_optional_int32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestVerifyInt32::optional_int32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32.optional_int32_2)
  return _internal_optional_int32_2();
}
inline void TestVerifyInt32::set_optional_int32_2(::int32_t value) {
  _internal_set_optional_int32_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32.optional_int32_2)
}
inline ::int32_t TestVerifyInt32::_internal_optional_int32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_2_;
}
inline void TestVerifyInt32::_internal_set_optional_int32_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = value;
}

// int32 optional_int32_63 = 63;
inline bool TestVerifyInt32::has_optional_int32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyInt32::clear_optional_int32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestVerifyInt32::optional_int32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32.optional_int32_63)
  return _internal_optional_int32_63();
}
inline void TestVerifyInt32::set_optional_int32_63(::int32_t value) {
  _internal_set_optional_int32_63(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32.optional_int32_63)
}
inline ::int32_t TestVerifyInt32::_internal_optional_int32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_63_;
}
inline void TestVerifyInt32::_internal_set_optional_int32_63(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = value;
}

// int32 optional_int32_64 = 64;
inline bool TestVerifyInt32::has_optional_int32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyInt32::clear_optional_int32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestVerifyInt32::optional_int32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32.optional_int32_64)
  return _internal_optional_int32_64();
}
inline void TestVerifyInt32::set_optional_int32_64(::int32_t value) {
  _internal_set_optional_int32_64(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32.optional_int32_64)
}
inline ::int32_t TestVerifyInt32::_internal_optional_int32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_64_;
}
inline void TestVerifyInt32::_internal_set_optional_int32_64(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = value;
}

// .edition_unittest.TestAllTypes optional_all_types = 9;
inline bool TestVerifyInt32::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestVerifyInt32::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestVerifyInt32::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestVerifyInt32::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestVerifyInt32::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyInt32.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyInt32.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyInt32.optional_all_types)
  return _msg;
}
inline void TestVerifyInt32::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyInt32.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
inline int TestVerifyInt32::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestVerifyInt32::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestVerifyInt32::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyInt32.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestVerifyInt32::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyInt32.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestVerifyInt32::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyInt32.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestVerifyInt32::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyInt32.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestVerifyInt32::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestVerifyInt32::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// -------------------------------------------------------------------

// TestVerifyMostlyInt32

// int64 optional_int64_30 = 30;
inline bool TestVerifyMostlyInt32::has_optional_int64_30() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32::clear_optional_int64_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_30_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t TestVerifyMostlyInt32::optional_int64_30() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.optional_int64_30)
  return _internal_optional_int64_30();
}
inline void TestVerifyMostlyInt32::set_optional_int64_30(::int64_t value) {
  _internal_set_optional_int64_30(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32.optional_int64_30)
}
inline ::int64_t TestVerifyMostlyInt32::_internal_optional_int64_30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_30_;
}
inline void TestVerifyMostlyInt32::_internal_set_optional_int64_30(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_30_ = value;
}

// int32 optional_int32_1 = 1;
inline bool TestVerifyMostlyInt32::has_optional_int32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32::clear_optional_int32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestVerifyMostlyInt32::optional_int32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.optional_int32_1)
  return _internal_optional_int32_1();
}
inline void TestVerifyMostlyInt32::set_optional_int32_1(::int32_t value) {
  _internal_set_optional_int32_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32.optional_int32_1)
}
inline ::int32_t TestVerifyMostlyInt32::_internal_optional_int32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_1_;
}
inline void TestVerifyMostlyInt32::_internal_set_optional_int32_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = value;
}

// int32 optional_int32_2 = 2;
inline bool TestVerifyMostlyInt32::has_optional_int32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32::clear_optional_int32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestVerifyMostlyInt32::optional_int32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.optional_int32_2)
  return _internal_optional_int32_2();
}
inline void TestVerifyMostlyInt32::set_optional_int32_2(::int32_t value) {
  _internal_set_optional_int32_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32.optional_int32_2)
}
inline ::int32_t TestVerifyMostlyInt32::_internal_optional_int32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_2_;
}
inline void TestVerifyMostlyInt32::_internal_set_optional_int32_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = value;
}

// int32 optional_int32_3 = 3;
inline bool TestVerifyMostlyInt32::has_optional_int32_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32::clear_optional_int32_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestVerifyMostlyInt32::optional_int32_3() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.optional_int32_3)
  return _internal_optional_int32_3();
}
inline void TestVerifyMostlyInt32::set_optional_int32_3(::int32_t value) {
  _internal_set_optional_int32_3(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32.optional_int32_3)
}
inline ::int32_t TestVerifyMostlyInt32::_internal_optional_int32_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_3_;
}
inline void TestVerifyMostlyInt32::_internal_set_optional_int32_3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_3_ = value;
}

// int32 optional_int32_4 = 4;
inline bool TestVerifyMostlyInt32::has_optional_int32_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32::clear_optional_int32_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestVerifyMostlyInt32::optional_int32_4() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.optional_int32_4)
  return _internal_optional_int32_4();
}
inline void TestVerifyMostlyInt32::set_optional_int32_4(::int32_t value) {
  _internal_set_optional_int32_4(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32.optional_int32_4)
}
inline ::int32_t TestVerifyMostlyInt32::_internal_optional_int32_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_4_;
}
inline void TestVerifyMostlyInt32::_internal_set_optional_int32_4(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_4_ = value;
}

// int32 optional_int32_63 = 63;
inline bool TestVerifyMostlyInt32::has_optional_int32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32::clear_optional_int32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t TestVerifyMostlyInt32::optional_int32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.optional_int32_63)
  return _internal_optional_int32_63();
}
inline void TestVerifyMostlyInt32::set_optional_int32_63(::int32_t value) {
  _internal_set_optional_int32_63(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32.optional_int32_63)
}
inline ::int32_t TestVerifyMostlyInt32::_internal_optional_int32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_63_;
}
inline void TestVerifyMostlyInt32::_internal_set_optional_int32_63(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = value;
}

// int32 optional_int32_64 = 64;
inline bool TestVerifyMostlyInt32::has_optional_int32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32::clear_optional_int32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t TestVerifyMostlyInt32::optional_int32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.optional_int32_64)
  return _internal_optional_int32_64();
}
inline void TestVerifyMostlyInt32::set_optional_int32_64(::int32_t value) {
  _internal_set_optional_int32_64(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32.optional_int32_64)
}
inline ::int32_t TestVerifyMostlyInt32::_internal_optional_int32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_64_;
}
inline void TestVerifyMostlyInt32::_internal_set_optional_int32_64(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = value;
}

// .edition_unittest.TestAllTypes optional_all_types = 9;
inline bool TestVerifyMostlyInt32::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestVerifyMostlyInt32::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestVerifyMostlyInt32::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestVerifyMostlyInt32::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestVerifyMostlyInt32::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyMostlyInt32.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyMostlyInt32.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyMostlyInt32.optional_all_types)
  return _msg;
}
inline void TestVerifyMostlyInt32::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyMostlyInt32.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
inline int TestVerifyMostlyInt32::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestVerifyMostlyInt32::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestVerifyMostlyInt32::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyMostlyInt32.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestVerifyMostlyInt32::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyMostlyInt32.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestVerifyMostlyInt32::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyMostlyInt32.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestVerifyMostlyInt32::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyMostlyInt32.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestVerifyMostlyInt32::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestVerifyMostlyInt32::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// -------------------------------------------------------------------

// TestVerifyMostlyInt32BigFieldNumber

// int64 optional_int64_30 = 30;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_int64_30() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_int64_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_30_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t TestVerifyMostlyInt32BigFieldNumber::optional_int64_30() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int64_30)
  return _internal_optional_int64_30();
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_optional_int64_30(::int64_t value) {
  _internal_set_optional_int64_30(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int64_30)
}
inline ::int64_t TestVerifyMostlyInt32BigFieldNumber::_internal_optional_int64_30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_30_;
}
inline void TestVerifyMostlyInt32BigFieldNumber::_internal_set_optional_int64_30(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_30_ = value;
}

// int32 optional_int32_300 = 300;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_int32_300() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_int32_300() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_300_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::optional_int32_300() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_300)
  return _internal_optional_int32_300();
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_optional_int32_300(::int32_t value) {
  _internal_set_optional_int32_300(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_300)
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::_internal_optional_int32_300() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_300_;
}
inline void TestVerifyMostlyInt32BigFieldNumber::_internal_set_optional_int32_300(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_300_ = value;
}

// int32 optional_int32_1 = 1;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_int32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_int32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::optional_int32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_1)
  return _internal_optional_int32_1();
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_optional_int32_1(::int32_t value) {
  _internal_set_optional_int32_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_1)
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::_internal_optional_int32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_1_;
}
inline void TestVerifyMostlyInt32BigFieldNumber::_internal_set_optional_int32_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = value;
}

// int32 optional_int32_2 = 2;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_int32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_int32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::optional_int32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_2)
  return _internal_optional_int32_2();
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_optional_int32_2(::int32_t value) {
  _internal_set_optional_int32_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_2)
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::_internal_optional_int32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_2_;
}
inline void TestVerifyMostlyInt32BigFieldNumber::_internal_set_optional_int32_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = value;
}

// int32 optional_int32_3 = 3;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_int32_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_int32_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::optional_int32_3() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_3)
  return _internal_optional_int32_3();
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_optional_int32_3(::int32_t value) {
  _internal_set_optional_int32_3(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_3)
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::_internal_optional_int32_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_3_;
}
inline void TestVerifyMostlyInt32BigFieldNumber::_internal_set_optional_int32_3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_3_ = value;
}

// int32 optional_int32_4 = 4;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_int32_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_int32_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::optional_int32_4() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_4)
  return _internal_optional_int32_4();
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_optional_int32_4(::int32_t value) {
  _internal_set_optional_int32_4(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_4)
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::_internal_optional_int32_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_4_;
}
inline void TestVerifyMostlyInt32BigFieldNumber::_internal_set_optional_int32_4(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_4_ = value;
}

// int32 optional_int32_63 = 63;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_int32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_int32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::optional_int32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_63)
  return _internal_optional_int32_63();
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_optional_int32_63(::int32_t value) {
  _internal_set_optional_int32_63(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_63)
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::_internal_optional_int32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_63_;
}
inline void TestVerifyMostlyInt32BigFieldNumber::_internal_set_optional_int32_63(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = value;
}

// int32 optional_int32_64 = 64;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_int32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_int32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::optional_int32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_64)
  return _internal_optional_int32_64();
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_optional_int32_64(::int32_t value) {
  _internal_set_optional_int32_64(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_int32_64)
}
inline ::int32_t TestVerifyMostlyInt32BigFieldNumber::_internal_optional_int32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_64_;
}
inline void TestVerifyMostlyInt32BigFieldNumber::_internal_set_optional_int32_64(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = value;
}

// .edition_unittest.TestAllTypes optional_all_types = 9;
inline bool TestVerifyMostlyInt32BigFieldNumber::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestVerifyMostlyInt32BigFieldNumber::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestVerifyMostlyInt32BigFieldNumber::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestVerifyMostlyInt32BigFieldNumber::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32BigFieldNumber::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32BigFieldNumber::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32BigFieldNumber::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32BigFieldNumber::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_all_types)
  return _msg;
}
inline void TestVerifyMostlyInt32BigFieldNumber::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
inline int TestVerifyMostlyInt32BigFieldNumber::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestVerifyMostlyInt32BigFieldNumber::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestVerifyMostlyInt32BigFieldNumber::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32BigFieldNumber::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestVerifyMostlyInt32BigFieldNumber::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestVerifyMostlyInt32BigFieldNumber::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestVerifyMostlyInt32BigFieldNumber::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestVerifyMostlyInt32BigFieldNumber::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyMostlyInt32BigFieldNumber.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestVerifyMostlyInt32BigFieldNumber::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestVerifyMostlyInt32BigFieldNumber::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// -------------------------------------------------------------------

// TestVerifyUint32Simple

// uint32 optional_uint32_1 = 1;
inline bool TestVerifyUint32Simple::has_optional_uint32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestVerifyUint32Simple::clear_optional_uint32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t TestVerifyUint32Simple::optional_uint32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32Simple.optional_uint32_1)
  return _internal_optional_uint32_1();
}
inline void TestVerifyUint32Simple::set_optional_uint32_1(::uint32_t value) {
  _internal_set_optional_uint32_1(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32Simple.optional_uint32_1)
}
inline ::uint32_t TestVerifyUint32Simple::_internal_optional_uint32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_1_;
}
inline void TestVerifyUint32Simple::_internal_set_optional_uint32_1(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = value;
}

// uint32 optional_uint32_2 = 2;
inline bool TestVerifyUint32Simple::has_optional_uint32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyUint32Simple::clear_optional_uint32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t TestVerifyUint32Simple::optional_uint32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32Simple.optional_uint32_2)
  return _internal_optional_uint32_2();
}
inline void TestVerifyUint32Simple::set_optional_uint32_2(::uint32_t value) {
  _internal_set_optional_uint32_2(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32Simple.optional_uint32_2)
}
inline ::uint32_t TestVerifyUint32Simple::_internal_optional_uint32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_2_;
}
inline void TestVerifyUint32Simple::_internal_set_optional_uint32_2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_2_ = value;
}

// uint32 optional_uint32_63 = 63;
inline bool TestVerifyUint32Simple::has_optional_uint32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyUint32Simple::clear_optional_uint32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_63_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t TestVerifyUint32Simple::optional_uint32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32Simple.optional_uint32_63)
  return _internal_optional_uint32_63();
}
inline void TestVerifyUint32Simple::set_optional_uint32_63(::uint32_t value) {
  _internal_set_optional_uint32_63(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32Simple.optional_uint32_63)
}
inline ::uint32_t TestVerifyUint32Simple::_internal_optional_uint32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_63_;
}
inline void TestVerifyUint32Simple::_internal_set_optional_uint32_63(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_63_ = value;
}

// uint32 optional_uint32_64 = 64;
inline bool TestVerifyUint32Simple::has_optional_uint32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyUint32Simple::clear_optional_uint32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_64_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t TestVerifyUint32Simple::optional_uint32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32Simple.optional_uint32_64)
  return _internal_optional_uint32_64();
}
inline void TestVerifyUint32Simple::set_optional_uint32_64(::uint32_t value) {
  _internal_set_optional_uint32_64(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32Simple.optional_uint32_64)
}
inline ::uint32_t TestVerifyUint32Simple::_internal_optional_uint32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_64_;
}
inline void TestVerifyUint32Simple::_internal_set_optional_uint32_64(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_64_ = value;
}

// -------------------------------------------------------------------

// TestVerifyUint32

// uint32 optional_uint32_1 = 1;
inline bool TestVerifyUint32::has_optional_uint32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyUint32::clear_optional_uint32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t TestVerifyUint32::optional_uint32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32.optional_uint32_1)
  return _internal_optional_uint32_1();
}
inline void TestVerifyUint32::set_optional_uint32_1(::uint32_t value) {
  _internal_set_optional_uint32_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32.optional_uint32_1)
}
inline ::uint32_t TestVerifyUint32::_internal_optional_uint32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_1_;
}
inline void TestVerifyUint32::_internal_set_optional_uint32_1(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = value;
}

// uint32 optional_uint32_2 = 2;
inline bool TestVerifyUint32::has_optional_uint32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyUint32::clear_optional_uint32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t TestVerifyUint32::optional_uint32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32.optional_uint32_2)
  return _internal_optional_uint32_2();
}
inline void TestVerifyUint32::set_optional_uint32_2(::uint32_t value) {
  _internal_set_optional_uint32_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32.optional_uint32_2)
}
inline ::uint32_t TestVerifyUint32::_internal_optional_uint32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_2_;
}
inline void TestVerifyUint32::_internal_set_optional_uint32_2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_2_ = value;
}

// uint32 optional_uint32_63 = 63;
inline bool TestVerifyUint32::has_optional_uint32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyUint32::clear_optional_uint32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_63_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t TestVerifyUint32::optional_uint32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32.optional_uint32_63)
  return _internal_optional_uint32_63();
}
inline void TestVerifyUint32::set_optional_uint32_63(::uint32_t value) {
  _internal_set_optional_uint32_63(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32.optional_uint32_63)
}
inline ::uint32_t TestVerifyUint32::_internal_optional_uint32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_63_;
}
inline void TestVerifyUint32::_internal_set_optional_uint32_63(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_63_ = value;
}

// uint32 optional_uint32_64 = 64;
inline bool TestVerifyUint32::has_optional_uint32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyUint32::clear_optional_uint32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_64_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t TestVerifyUint32::optional_uint32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32.optional_uint32_64)
  return _internal_optional_uint32_64();
}
inline void TestVerifyUint32::set_optional_uint32_64(::uint32_t value) {
  _internal_set_optional_uint32_64(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32.optional_uint32_64)
}
inline ::uint32_t TestVerifyUint32::_internal_optional_uint32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_64_;
}
inline void TestVerifyUint32::_internal_set_optional_uint32_64(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_64_ = value;
}

// .edition_unittest.TestAllTypes optional_all_types = 9;
inline bool TestVerifyUint32::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestVerifyUint32::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestVerifyUint32::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestVerifyUint32::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestVerifyUint32::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyUint32.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyUint32.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyUint32.optional_all_types)
  return _msg;
}
inline void TestVerifyUint32::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyUint32.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
inline int TestVerifyUint32::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestVerifyUint32::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestVerifyUint32::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyUint32.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestVerifyUint32::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyUint32.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestVerifyUint32::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyUint32.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestVerifyUint32::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyUint32.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestVerifyUint32::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestVerifyUint32::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// -------------------------------------------------------------------

// TestVerifyOneUint32

// uint32 optional_uint32_1 = 1;
inline bool TestVerifyOneUint32::has_optional_uint32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyOneUint32::clear_optional_uint32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t TestVerifyOneUint32::optional_uint32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneUint32.optional_uint32_1)
  return _internal_optional_uint32_1();
}
inline void TestVerifyOneUint32::set_optional_uint32_1(::uint32_t value) {
  _internal_set_optional_uint32_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneUint32.optional_uint32_1)
}
inline ::uint32_t TestVerifyOneUint32::_internal_optional_uint32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_1_;
}
inline void TestVerifyOneUint32::_internal_set_optional_uint32_1(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = value;
}

// int32 optional_int32_2 = 2;
inline bool TestVerifyOneUint32::has_optional_int32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyOneUint32::clear_optional_int32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestVerifyOneUint32::optional_int32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneUint32.optional_int32_2)
  return _internal_optional_int32_2();
}
inline void TestVerifyOneUint32::set_optional_int32_2(::int32_t value) {
  _internal_set_optional_int32_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneUint32.optional_int32_2)
}
inline ::int32_t TestVerifyOneUint32::_internal_optional_int32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_2_;
}
inline void TestVerifyOneUint32::_internal_set_optional_int32_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = value;
}

// int32 optional_int32_63 = 63;
inline bool TestVerifyOneUint32::has_optional_int32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyOneUint32::clear_optional_int32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestVerifyOneUint32::optional_int32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneUint32.optional_int32_63)
  return _internal_optional_int32_63();
}
inline void TestVerifyOneUint32::set_optional_int32_63(::int32_t value) {
  _internal_set_optional_int32_63(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneUint32.optional_int32_63)
}
inline ::int32_t TestVerifyOneUint32::_internal_optional_int32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_63_;
}
inline void TestVerifyOneUint32::_internal_set_optional_int32_63(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = value;
}

// int32 optional_int32_64 = 64;
inline bool TestVerifyOneUint32::has_optional_int32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyOneUint32::clear_optional_int32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestVerifyOneUint32::optional_int32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneUint32.optional_int32_64)
  return _internal_optional_int32_64();
}
inline void TestVerifyOneUint32::set_optional_int32_64(::int32_t value) {
  _internal_set_optional_int32_64(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneUint32.optional_int32_64)
}
inline ::int32_t TestVerifyOneUint32::_internal_optional_int32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_64_;
}
inline void TestVerifyOneUint32::_internal_set_optional_int32_64(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = value;
}

// .edition_unittest.TestAllTypes optional_all_types = 9;
inline bool TestVerifyOneUint32::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestVerifyOneUint32::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestVerifyOneUint32::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestVerifyOneUint32::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneUint32.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestVerifyOneUint32::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyOneUint32.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneUint32::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneUint32::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyOneUint32.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneUint32::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneUint32::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyOneUint32.optional_all_types)
  return _msg;
}
inline void TestVerifyOneUint32::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyOneUint32.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
inline int TestVerifyOneUint32::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestVerifyOneUint32::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestVerifyOneUint32::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneUint32::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyOneUint32.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestVerifyOneUint32::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyOneUint32.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestVerifyOneUint32::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneUint32.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneUint32::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyOneUint32.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestVerifyOneUint32::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyOneUint32.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestVerifyOneUint32::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestVerifyOneUint32::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// -------------------------------------------------------------------

// TestVerifyOneInt32BigFieldNumber

// int32 optional_int32_65 = 65;
inline bool TestVerifyOneInt32BigFieldNumber::has_optional_int32_65() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestVerifyOneInt32BigFieldNumber::clear_optional_int32_65() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_65_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t TestVerifyOneInt32BigFieldNumber::optional_int32_65() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int32_65)
  return _internal_optional_int32_65();
}
inline void TestVerifyOneInt32BigFieldNumber::set_optional_int32_65(::int32_t value) {
  _internal_set_optional_int32_65(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int32_65)
}
inline ::int32_t TestVerifyOneInt32BigFieldNumber::_internal_optional_int32_65() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_65_;
}
inline void TestVerifyOneInt32BigFieldNumber::_internal_set_optional_int32_65(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_65_ = value;
}

// int64 optional_int64_1 = 1;
inline bool TestVerifyOneInt32BigFieldNumber::has_optional_int64_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyOneInt32BigFieldNumber::clear_optional_int64_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_1_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t TestVerifyOneInt32BigFieldNumber::optional_int64_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int64_1)
  return _internal_optional_int64_1();
}
inline void TestVerifyOneInt32BigFieldNumber::set_optional_int64_1(::int64_t value) {
  _internal_set_optional_int64_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int64_1)
}
inline ::int64_t TestVerifyOneInt32BigFieldNumber::_internal_optional_int64_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_1_;
}
inline void TestVerifyOneInt32BigFieldNumber::_internal_set_optional_int64_1(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_1_ = value;
}

// int64 optional_int64_2 = 2;
inline bool TestVerifyOneInt32BigFieldNumber::has_optional_int64_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyOneInt32BigFieldNumber::clear_optional_int64_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_2_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t TestVerifyOneInt32BigFieldNumber::optional_int64_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int64_2)
  return _internal_optional_int64_2();
}
inline void TestVerifyOneInt32BigFieldNumber::set_optional_int64_2(::int64_t value) {
  _internal_set_optional_int64_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int64_2)
}
inline ::int64_t TestVerifyOneInt32BigFieldNumber::_internal_optional_int64_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_2_;
}
inline void TestVerifyOneInt32BigFieldNumber::_internal_set_optional_int64_2(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_2_ = value;
}

// int64 optional_int64_63 = 63;
inline bool TestVerifyOneInt32BigFieldNumber::has_optional_int64_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyOneInt32BigFieldNumber::clear_optional_int64_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_63_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t TestVerifyOneInt32BigFieldNumber::optional_int64_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int64_63)
  return _internal_optional_int64_63();
}
inline void TestVerifyOneInt32BigFieldNumber::set_optional_int64_63(::int64_t value) {
  _internal_set_optional_int64_63(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int64_63)
}
inline ::int64_t TestVerifyOneInt32BigFieldNumber::_internal_optional_int64_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_63_;
}
inline void TestVerifyOneInt32BigFieldNumber::_internal_set_optional_int64_63(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_63_ = value;
}

// int64 optional_int64_64 = 64;
inline bool TestVerifyOneInt32BigFieldNumber::has_optional_int64_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyOneInt32BigFieldNumber::clear_optional_int64_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_64_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t TestVerifyOneInt32BigFieldNumber::optional_int64_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int64_64)
  return _internal_optional_int64_64();
}
inline void TestVerifyOneInt32BigFieldNumber::set_optional_int64_64(::int64_t value) {
  _internal_set_optional_int64_64(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_int64_64)
}
inline ::int64_t TestVerifyOneInt32BigFieldNumber::_internal_optional_int64_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_64_;
}
inline void TestVerifyOneInt32BigFieldNumber::_internal_set_optional_int64_64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_64_ = value;
}

// .edition_unittest.TestAllTypes optional_all_types = 9;
inline bool TestVerifyOneInt32BigFieldNumber::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestVerifyOneInt32BigFieldNumber::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestVerifyOneInt32BigFieldNumber::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestVerifyOneInt32BigFieldNumber::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestVerifyOneInt32BigFieldNumber::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneInt32BigFieldNumber::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneInt32BigFieldNumber::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneInt32BigFieldNumber::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneInt32BigFieldNumber::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_all_types)
  return _msg;
}
inline void TestVerifyOneInt32BigFieldNumber::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyOneInt32BigFieldNumber.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
inline int TestVerifyOneInt32BigFieldNumber::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestVerifyOneInt32BigFieldNumber::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestVerifyOneInt32BigFieldNumber::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneInt32BigFieldNumber::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyOneInt32BigFieldNumber.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestVerifyOneInt32BigFieldNumber::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyOneInt32BigFieldNumber.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestVerifyOneInt32BigFieldNumber::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyOneInt32BigFieldNumber.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestVerifyOneInt32BigFieldNumber::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyOneInt32BigFieldNumber.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestVerifyOneInt32BigFieldNumber::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyOneInt32BigFieldNumber.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestVerifyOneInt32BigFieldNumber::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestVerifyOneInt32BigFieldNumber::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// -------------------------------------------------------------------

// TestVerifyInt32BigFieldNumber

// int32 optional_int32_1000 = 1000;
inline bool TestVerifyInt32BigFieldNumber::has_optional_int32_1000() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestVerifyInt32BigFieldNumber::clear_optional_int32_1000() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1000_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t TestVerifyInt32BigFieldNumber::optional_int32_1000() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_1000)
  return _internal_optional_int32_1000();
}
inline void TestVerifyInt32BigFieldNumber::set_optional_int32_1000(::int32_t value) {
  _internal_set_optional_int32_1000(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_1000)
}
inline ::int32_t TestVerifyInt32BigFieldNumber::_internal_optional_int32_1000() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_1000_;
}
inline void TestVerifyInt32BigFieldNumber::_internal_set_optional_int32_1000(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1000_ = value;
}

// int32 optional_int32_65 = 65;
inline bool TestVerifyInt32BigFieldNumber::has_optional_int32_65() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestVerifyInt32BigFieldNumber::clear_optional_int32_65() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_65_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t TestVerifyInt32BigFieldNumber::optional_int32_65() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_65)
  return _internal_optional_int32_65();
}
inline void TestVerifyInt32BigFieldNumber::set_optional_int32_65(::int32_t value) {
  _internal_set_optional_int32_65(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_65)
}
inline ::int32_t TestVerifyInt32BigFieldNumber::_internal_optional_int32_65() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_65_;
}
inline void TestVerifyInt32BigFieldNumber::_internal_set_optional_int32_65(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_65_ = value;
}

// int32 optional_int32_1 = 1;
inline bool TestVerifyInt32BigFieldNumber::has_optional_int32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyInt32BigFieldNumber::clear_optional_int32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestVerifyInt32BigFieldNumber::optional_int32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_1)
  return _internal_optional_int32_1();
}
inline void TestVerifyInt32BigFieldNumber::set_optional_int32_1(::int32_t value) {
  _internal_set_optional_int32_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_1)
}
inline ::int32_t TestVerifyInt32BigFieldNumber::_internal_optional_int32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_1_;
}
inline void TestVerifyInt32BigFieldNumber::_internal_set_optional_int32_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_1_ = value;
}

// int32 optional_int32_2 = 2;
inline bool TestVerifyInt32BigFieldNumber::has_optional_int32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyInt32BigFieldNumber::clear_optional_int32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestVerifyInt32BigFieldNumber::optional_int32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_2)
  return _internal_optional_int32_2();
}
inline void TestVerifyInt32BigFieldNumber::set_optional_int32_2(::int32_t value) {
  _internal_set_optional_int32_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_2)
}
inline ::int32_t TestVerifyInt32BigFieldNumber::_internal_optional_int32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_2_;
}
inline void TestVerifyInt32BigFieldNumber::_internal_set_optional_int32_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_2_ = value;
}

// int32 optional_int32_63 = 63;
inline bool TestVerifyInt32BigFieldNumber::has_optional_int32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyInt32BigFieldNumber::clear_optional_int32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestVerifyInt32BigFieldNumber::optional_int32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_63)
  return _internal_optional_int32_63();
}
inline void TestVerifyInt32BigFieldNumber::set_optional_int32_63(::int32_t value) {
  _internal_set_optional_int32_63(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_63)
}
inline ::int32_t TestVerifyInt32BigFieldNumber::_internal_optional_int32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_63_;
}
inline void TestVerifyInt32BigFieldNumber::_internal_set_optional_int32_63(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_63_ = value;
}

// int32 optional_int32_64 = 64;
inline bool TestVerifyInt32BigFieldNumber::has_optional_int32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyInt32BigFieldNumber::clear_optional_int32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TestVerifyInt32BigFieldNumber::optional_int32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_64)
  return _internal_optional_int32_64();
}
inline void TestVerifyInt32BigFieldNumber::set_optional_int32_64(::int32_t value) {
  _internal_set_optional_int32_64(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyInt32BigFieldNumber.optional_int32_64)
}
inline ::int32_t TestVerifyInt32BigFieldNumber::_internal_optional_int32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_64_;
}
inline void TestVerifyInt32BigFieldNumber::_internal_set_optional_int32_64(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_64_ = value;
}

// .edition_unittest.TestAllTypes optional_all_types = 9;
inline bool TestVerifyInt32BigFieldNumber::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestVerifyInt32BigFieldNumber::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestVerifyInt32BigFieldNumber::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestVerifyInt32BigFieldNumber::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32BigFieldNumber.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestVerifyInt32BigFieldNumber::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyInt32BigFieldNumber.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32BigFieldNumber::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32BigFieldNumber::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyInt32BigFieldNumber.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32BigFieldNumber::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32BigFieldNumber::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyInt32BigFieldNumber.optional_all_types)
  return _msg;
}
inline void TestVerifyInt32BigFieldNumber::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyInt32BigFieldNumber.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
inline int TestVerifyInt32BigFieldNumber::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestVerifyInt32BigFieldNumber::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestVerifyInt32BigFieldNumber::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32BigFieldNumber::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyInt32BigFieldNumber.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestVerifyInt32BigFieldNumber::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyInt32BigFieldNumber.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestVerifyInt32BigFieldNumber::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyInt32BigFieldNumber.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestVerifyInt32BigFieldNumber::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyInt32BigFieldNumber.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestVerifyInt32BigFieldNumber::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyInt32BigFieldNumber.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestVerifyInt32BigFieldNumber::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestVerifyInt32BigFieldNumber::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// -------------------------------------------------------------------

// TestVerifyUint32BigFieldNumber

// uint32 optional_uint32_1000 = 1000;
inline bool TestVerifyUint32BigFieldNumber::has_optional_uint32_1000() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestVerifyUint32BigFieldNumber::clear_optional_uint32_1000() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1000_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::optional_uint32_1000() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_1000)
  return _internal_optional_uint32_1000();
}
inline void TestVerifyUint32BigFieldNumber::set_optional_uint32_1000(::uint32_t value) {
  _internal_set_optional_uint32_1000(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_1000)
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::_internal_optional_uint32_1000() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_1000_;
}
inline void TestVerifyUint32BigFieldNumber::_internal_set_optional_uint32_1000(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1000_ = value;
}

// uint32 optional_uint32_65 = 65;
inline bool TestVerifyUint32BigFieldNumber::has_optional_uint32_65() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestVerifyUint32BigFieldNumber::clear_optional_uint32_65() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_65_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::optional_uint32_65() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_65)
  return _internal_optional_uint32_65();
}
inline void TestVerifyUint32BigFieldNumber::set_optional_uint32_65(::uint32_t value) {
  _internal_set_optional_uint32_65(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_65)
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::_internal_optional_uint32_65() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_65_;
}
inline void TestVerifyUint32BigFieldNumber::_internal_set_optional_uint32_65(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_65_ = value;
}

// uint32 optional_uint32_1 = 1;
inline bool TestVerifyUint32BigFieldNumber::has_optional_uint32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyUint32BigFieldNumber::clear_optional_uint32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::optional_uint32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_1)
  return _internal_optional_uint32_1();
}
inline void TestVerifyUint32BigFieldNumber::set_optional_uint32_1(::uint32_t value) {
  _internal_set_optional_uint32_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_1)
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::_internal_optional_uint32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_1_;
}
inline void TestVerifyUint32BigFieldNumber::_internal_set_optional_uint32_1(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = value;
}

// uint32 optional_uint32_2 = 2;
inline bool TestVerifyUint32BigFieldNumber::has_optional_uint32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyUint32BigFieldNumber::clear_optional_uint32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::optional_uint32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_2)
  return _internal_optional_uint32_2();
}
inline void TestVerifyUint32BigFieldNumber::set_optional_uint32_2(::uint32_t value) {
  _internal_set_optional_uint32_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_2)
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::_internal_optional_uint32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_2_;
}
inline void TestVerifyUint32BigFieldNumber::_internal_set_optional_uint32_2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_2_ = value;
}

// uint32 optional_uint32_63 = 63;
inline bool TestVerifyUint32BigFieldNumber::has_optional_uint32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyUint32BigFieldNumber::clear_optional_uint32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_63_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::optional_uint32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_63)
  return _internal_optional_uint32_63();
}
inline void TestVerifyUint32BigFieldNumber::set_optional_uint32_63(::uint32_t value) {
  _internal_set_optional_uint32_63(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_63)
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::_internal_optional_uint32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_63_;
}
inline void TestVerifyUint32BigFieldNumber::_internal_set_optional_uint32_63(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_63_ = value;
}

// uint32 optional_uint32_64 = 64;
inline bool TestVerifyUint32BigFieldNumber::has_optional_uint32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyUint32BigFieldNumber::clear_optional_uint32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_64_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::optional_uint32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_64)
  return _internal_optional_uint32_64();
}
inline void TestVerifyUint32BigFieldNumber::set_optional_uint32_64(::uint32_t value) {
  _internal_set_optional_uint32_64(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyUint32BigFieldNumber.optional_uint32_64)
}
inline ::uint32_t TestVerifyUint32BigFieldNumber::_internal_optional_uint32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_64_;
}
inline void TestVerifyUint32BigFieldNumber::_internal_set_optional_uint32_64(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_64_ = value;
}

// .edition_unittest.TestAllTypes optional_all_types = 9;
inline bool TestVerifyUint32BigFieldNumber::has_optional_all_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_all_types_ != nullptr);
  return value;
}
inline void TestVerifyUint32BigFieldNumber::clear_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ != nullptr) _impl_.optional_all_types_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestAllTypes& TestVerifyUint32BigFieldNumber::_internal_optional_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestAllTypes* p = _impl_.optional_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestAllTypes&>(::edition_unittest::_TestAllTypes_default_instance_);
}
inline const ::edition_unittest::TestAllTypes& TestVerifyUint32BigFieldNumber::optional_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32BigFieldNumber.optional_all_types)
  return _internal_optional_all_types();
}
inline void TestVerifyUint32BigFieldNumber::unsafe_arena_set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_all_types_);
  }
  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyUint32BigFieldNumber.optional_all_types)
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32BigFieldNumber::release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* released = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32BigFieldNumber::unsafe_arena_release_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyUint32BigFieldNumber.optional_all_types)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestAllTypes* temp = _impl_.optional_all_types_;
  _impl_.optional_all_types_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32BigFieldNumber::_internal_mutable_optional_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_all_types_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestAllTypes>(GetArena());
    _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(p);
  }
  return _impl_.optional_all_types_;
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32BigFieldNumber::mutable_optional_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestAllTypes* _msg = _internal_mutable_optional_all_types();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyUint32BigFieldNumber.optional_all_types)
  return _msg;
}
inline void TestVerifyUint32BigFieldNumber::set_allocated_optional_all_types(::edition_unittest::TestAllTypes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_all_types_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_all_types_ = reinterpret_cast<::edition_unittest::TestAllTypes*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyUint32BigFieldNumber.optional_all_types)
}

// repeated .edition_unittest.TestAllTypes repeated_all_types = 10;
inline int TestVerifyUint32BigFieldNumber::_internal_repeated_all_types_size() const {
  return _internal_repeated_all_types().size();
}
inline int TestVerifyUint32BigFieldNumber::repeated_all_types_size() const {
  return _internal_repeated_all_types_size();
}
inline void TestVerifyUint32BigFieldNumber::clear_repeated_all_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_all_types_.Clear();
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32BigFieldNumber::mutable_repeated_all_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyUint32BigFieldNumber.repeated_all_types)
  return _internal_mutable_repeated_all_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>* TestVerifyUint32BigFieldNumber::mutable_repeated_all_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyUint32BigFieldNumber.repeated_all_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_all_types();
}
inline const ::edition_unittest::TestAllTypes& TestVerifyUint32BigFieldNumber::repeated_all_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyUint32BigFieldNumber.repeated_all_types)
  return _internal_repeated_all_types().Get(index);
}
inline ::edition_unittest::TestAllTypes* TestVerifyUint32BigFieldNumber::add_repeated_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestAllTypes* _add = _internal_mutable_repeated_all_types()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyUint32BigFieldNumber.repeated_all_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>& TestVerifyUint32BigFieldNumber::repeated_all_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyUint32BigFieldNumber.repeated_all_types)
  return _internal_repeated_all_types();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>&
TestVerifyUint32BigFieldNumber::_internal_repeated_all_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_all_types_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestAllTypes>*
TestVerifyUint32BigFieldNumber::_internal_mutable_repeated_all_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_all_types_;
}

// -------------------------------------------------------------------

// TestVerifyBigFieldNumberUint32_Nested

// uint32 optional_uint32_5000 = 5000;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_uint32_5000() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_uint32_5000() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_5000_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::optional_uint32_5000() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_5000)
  return _internal_optional_uint32_5000();
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_optional_uint32_5000(::uint32_t value) {
  _internal_set_optional_uint32_5000(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_5000)
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::_internal_optional_uint32_5000() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_5000_;
}
inline void TestVerifyBigFieldNumberUint32_Nested::_internal_set_optional_uint32_5000(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_5000_ = value;
}

// uint32 optional_uint32_1000 = 1000;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_uint32_1000() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_uint32_1000() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1000_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::optional_uint32_1000() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_1000)
  return _internal_optional_uint32_1000();
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_optional_uint32_1000(::uint32_t value) {
  _internal_set_optional_uint32_1000(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_1000)
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::_internal_optional_uint32_1000() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_1000_;
}
inline void TestVerifyBigFieldNumberUint32_Nested::_internal_set_optional_uint32_1000(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1000_ = value;
}

// uint32 optional_uint32_66 = 66;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_uint32_66() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_uint32_66() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_66_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::optional_uint32_66() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_66)
  return _internal_optional_uint32_66();
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_optional_uint32_66(::uint32_t value) {
  _internal_set_optional_uint32_66(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_66)
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::_internal_optional_uint32_66() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_66_;
}
inline void TestVerifyBigFieldNumberUint32_Nested::_internal_set_optional_uint32_66(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_66_ = value;
}

// uint32 optional_uint32_65 = 65;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_uint32_65() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_uint32_65() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_65_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::optional_uint32_65() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_65)
  return _internal_optional_uint32_65();
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_optional_uint32_65(::uint32_t value) {
  _internal_set_optional_uint32_65(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_65)
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::_internal_optional_uint32_65() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_65_;
}
inline void TestVerifyBigFieldNumberUint32_Nested::_internal_set_optional_uint32_65(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_65_ = value;
}

// uint32 optional_uint32_1 = 1;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_uint32_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_uint32_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::optional_uint32_1() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_1)
  return _internal_optional_uint32_1();
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_optional_uint32_1(::uint32_t value) {
  _internal_set_optional_uint32_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_1)
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::_internal_optional_uint32_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_1_;
}
inline void TestVerifyBigFieldNumberUint32_Nested::_internal_set_optional_uint32_1(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_1_ = value;
}

// uint32 optional_uint32_2 = 2;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_uint32_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_uint32_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::optional_uint32_2() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_2)
  return _internal_optional_uint32_2();
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_optional_uint32_2(::uint32_t value) {
  _internal_set_optional_uint32_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_2)
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::_internal_optional_uint32_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_2_;
}
inline void TestVerifyBigFieldNumberUint32_Nested::_internal_set_optional_uint32_2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_2_ = value;
}

// uint32 optional_uint32_63 = 63;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_uint32_63() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_uint32_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_63_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::optional_uint32_63() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_63)
  return _internal_optional_uint32_63();
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_optional_uint32_63(::uint32_t value) {
  _internal_set_optional_uint32_63(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_63)
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::_internal_optional_uint32_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_63_;
}
inline void TestVerifyBigFieldNumberUint32_Nested::_internal_set_optional_uint32_63(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_63_ = value;
}

// uint32 optional_uint32_64 = 64;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_uint32_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_uint32_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_64_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::optional_uint32_64() const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_64)
  return _internal_optional_uint32_64();
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_optional_uint32_64(::uint32_t value) {
  _internal_set_optional_uint32_64(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_uint32_64)
}
inline ::uint32_t TestVerifyBigFieldNumberUint32_Nested::_internal_optional_uint32_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_uint32_64_;
}
inline void TestVerifyBigFieldNumberUint32_Nested::_internal_set_optional_uint32_64(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_uint32_64_ = value;
}

// .edition_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
inline bool TestVerifyBigFieldNumberUint32_Nested::has_optional_nested() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_nested_ != nullptr);
  return value;
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_optional_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_ != nullptr) _impl_.optional_nested_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& TestVerifyBigFieldNumberUint32_Nested::_internal_optional_nested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* p = _impl_.optional_nested_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested&>(::edition_unittest::_TestVerifyBigFieldNumberUint32_Nested_default_instance_);
}
inline const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& TestVerifyBigFieldNumberUint32_Nested::optional_nested() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_nested)
  return _internal_optional_nested();
}
inline void TestVerifyBigFieldNumberUint32_Nested::unsafe_arena_set_allocated_optional_nested(::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_nested_);
  }
  _impl_.optional_nested_ = reinterpret_cast<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_nested)
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32_Nested::release_optional_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* released = _impl_.optional_nested_;
  _impl_.optional_nested_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32_Nested::unsafe_arena_release_optional_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_nested)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* temp = _impl_.optional_nested_;
  _impl_.optional_nested_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32_Nested::_internal_mutable_optional_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>(GetArena());
    _impl_.optional_nested_ = reinterpret_cast<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested*>(p);
  }
  return _impl_.optional_nested_;
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32_Nested::mutable_optional_nested() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* _msg = _internal_mutable_optional_nested();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_nested)
  return _msg;
}
inline void TestVerifyBigFieldNumberUint32_Nested::set_allocated_optional_nested(::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_nested_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_nested_ = reinterpret_cast<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.optional_nested)
}

// repeated .edition_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
inline int TestVerifyBigFieldNumberUint32_Nested::_internal_repeated_nested_size() const {
  return _internal_repeated_nested().size();
}
inline int TestVerifyBigFieldNumberUint32_Nested::repeated_nested_size() const {
  return _internal_repeated_nested_size();
}
inline void TestVerifyBigFieldNumberUint32_Nested::clear_repeated_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_nested_.Clear();
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32_Nested::mutable_repeated_nested(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.repeated_nested)
  return _internal_mutable_repeated_nested()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>* TestVerifyBigFieldNumberUint32_Nested::mutable_repeated_nested()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.repeated_nested)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_nested();
}
inline const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& TestVerifyBigFieldNumberUint32_Nested::repeated_nested(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.repeated_nested)
  return _internal_repeated_nested().Get(index);
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32_Nested::add_repeated_nested() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* _add = _internal_mutable_repeated_nested()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.repeated_nested)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>& TestVerifyBigFieldNumberUint32_Nested::repeated_nested() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestVerifyBigFieldNumberUint32.Nested.repeated_nested)
  return _internal_repeated_nested();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>&
TestVerifyBigFieldNumberUint32_Nested::_internal_repeated_nested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_nested_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>*
TestVerifyBigFieldNumberUint32_Nested::_internal_mutable_repeated_nested() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_nested_;
}

// -------------------------------------------------------------------

// TestVerifyBigFieldNumberUint32

// .edition_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
inline bool TestVerifyBigFieldNumberUint32::has_optional_nested() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_nested_ != nullptr);
  return value;
}
inline void TestVerifyBigFieldNumberUint32::clear_optional_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_ != nullptr) _impl_.optional_nested_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& TestVerifyBigFieldNumberUint32::_internal_optional_nested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* p = _impl_.optional_nested_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested&>(::edition_unittest::_TestVerifyBigFieldNumberUint32_Nested_default_instance_);
}
inline const ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested& TestVerifyBigFieldNumberUint32::optional_nested() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestVerifyBigFieldNumberUint32.optional_nested)
  return _internal_optional_nested();
}
inline void TestVerifyBigFieldNumberUint32::unsafe_arena_set_allocated_optional_nested(::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_nested_);
  }
  _impl_.optional_nested_ = reinterpret_cast<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.TestVerifyBigFieldNumberUint32.optional_nested)
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32::release_optional_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* released = _impl_.optional_nested_;
  _impl_.optional_nested_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32::unsafe_arena_release_optional_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.TestVerifyBigFieldNumberUint32.optional_nested)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* temp = _impl_.optional_nested_;
  _impl_.optional_nested_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32::_internal_mutable_optional_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_nested_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested>(GetArena());
    _impl_.optional_nested_ = reinterpret_cast<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested*>(p);
  }
  return _impl_.optional_nested_;
}
inline ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* TestVerifyBigFieldNumberUint32::mutable_optional_nested() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* _msg = _internal_mutable_optional_nested();
  // @@protoc_insertion_point(field_mutable:edition_unittest.TestVerifyBigFieldNumberUint32.optional_nested)
  return _msg;
}
inline void TestVerifyBigFieldNumberUint32::set_allocated_optional_nested(::edition_unittest::TestVerifyBigFieldNumberUint32_Nested* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_nested_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_nested_ = reinterpret_cast<::edition_unittest::TestVerifyBigFieldNumberUint32_Nested*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.TestVerifyBigFieldNumberUint32.optional_nested)
}

// -------------------------------------------------------------------

// EnumParseTester

// .edition_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_lowfield = 1;
inline bool EnumParseTester::has_optional_seq_small_0_lowfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_small_0_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_small_0_lowfield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::optional_seq_small_0_lowfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_small_0_lowfield)
  return _internal_optional_seq_small_0_lowfield();
}
inline void EnumParseTester::set_optional_seq_small_0_lowfield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  _internal_set_optional_seq_small_0_lowfield(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_small_0_lowfield)
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::_internal_optional_seq_small_0_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_impl_.optional_seq_small_0_lowfield_);
}
inline void EnumParseTester::_internal_set_optional_seq_small_0_lowfield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _impl_.optional_seq_small_0_lowfield_ = value;
}

// .edition_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_midfield = 1001;
inline bool EnumParseTester::has_optional_seq_small_0_midfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_small_0_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_small_0_midfield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::optional_seq_small_0_midfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_small_0_midfield)
  return _internal_optional_seq_small_0_midfield();
}
inline void EnumParseTester::set_optional_seq_small_0_midfield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  _internal_set_optional_seq_small_0_midfield(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_small_0_midfield)
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::_internal_optional_seq_small_0_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_impl_.optional_seq_small_0_midfield_);
}
inline void EnumParseTester::_internal_set_optional_seq_small_0_midfield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _impl_.optional_seq_small_0_midfield_ = value;
}

// .edition_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_hifield = 1000001;
inline bool EnumParseTester::has_optional_seq_small_0_hifield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_small_0_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_small_0_hifield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::optional_seq_small_0_hifield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_small_0_hifield)
  return _internal_optional_seq_small_0_hifield();
}
inline void EnumParseTester::set_optional_seq_small_0_hifield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  _internal_set_optional_seq_small_0_hifield(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_small_0_hifield)
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::_internal_optional_seq_small_0_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_impl_.optional_seq_small_0_hifield_);
}
inline void EnumParseTester::_internal_set_optional_seq_small_0_hifield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _impl_.optional_seq_small_0_hifield_ = value;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_lowfield = 2;
inline int EnumParseTester::_internal_repeated_seq_small_0_lowfield_size() const {
  return _internal_repeated_seq_small_0_lowfield().size();
}
inline int EnumParseTester::repeated_seq_small_0_lowfield_size() const {
  return _internal_repeated_seq_small_0_lowfield_size();
}
inline void EnumParseTester::clear_repeated_seq_small_0_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_small_0_lowfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::repeated_seq_small_0_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_small_0_lowfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_internal_repeated_seq_small_0_lowfield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_small_0_lowfield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _internal_mutable_repeated_seq_small_0_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_small_0_lowfield)
}
inline void EnumParseTester::add_repeated_seq_small_0_lowfield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_small_0_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_small_0_lowfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_small_0_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_small_0_lowfield)
  return _internal_repeated_seq_small_0_lowfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_small_0_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_small_0_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_small_0_lowfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_small_0_lowfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_small_0_lowfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_small_0_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_small_0_lowfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_midfield = 1002;
inline int EnumParseTester::_internal_repeated_seq_small_0_midfield_size() const {
  return _internal_repeated_seq_small_0_midfield().size();
}
inline int EnumParseTester::repeated_seq_small_0_midfield_size() const {
  return _internal_repeated_seq_small_0_midfield_size();
}
inline void EnumParseTester::clear_repeated_seq_small_0_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_small_0_midfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::repeated_seq_small_0_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_small_0_midfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_internal_repeated_seq_small_0_midfield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_small_0_midfield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _internal_mutable_repeated_seq_small_0_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_small_0_midfield)
}
inline void EnumParseTester::add_repeated_seq_small_0_midfield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_small_0_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_small_0_midfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_small_0_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_small_0_midfield)
  return _internal_repeated_seq_small_0_midfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_small_0_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_small_0_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_small_0_midfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_small_0_midfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_small_0_midfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_small_0_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_small_0_midfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_hifield = 1000002;
inline int EnumParseTester::_internal_repeated_seq_small_0_hifield_size() const {
  return _internal_repeated_seq_small_0_hifield().size();
}
inline int EnumParseTester::repeated_seq_small_0_hifield_size() const {
  return _internal_repeated_seq_small_0_hifield_size();
}
inline void EnumParseTester::clear_repeated_seq_small_0_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_small_0_hifield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::repeated_seq_small_0_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_small_0_hifield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_internal_repeated_seq_small_0_hifield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_small_0_hifield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _internal_mutable_repeated_seq_small_0_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_small_0_hifield)
}
inline void EnumParseTester::add_repeated_seq_small_0_hifield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_small_0_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_small_0_hifield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_small_0_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_small_0_hifield)
  return _internal_repeated_seq_small_0_hifield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_small_0_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_small_0_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_small_0_hifield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_small_0_hifield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_small_0_hifield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_small_0_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_small_0_hifield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_lowfield = 3 [features = {
inline int EnumParseTester::_internal_packed_seq_small_0_lowfield_size() const {
  return _internal_packed_seq_small_0_lowfield().size();
}
inline int EnumParseTester::packed_seq_small_0_lowfield_size() const {
  return _internal_packed_seq_small_0_lowfield_size();
}
inline void EnumParseTester::clear_packed_seq_small_0_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_small_0_lowfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::packed_seq_small_0_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_small_0_lowfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_internal_packed_seq_small_0_lowfield().Get(index));
}
inline void EnumParseTester::set_packed_seq_small_0_lowfield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _internal_mutable_packed_seq_small_0_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_small_0_lowfield)
}
inline void EnumParseTester::add_packed_seq_small_0_lowfield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_small_0_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_small_0_lowfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_small_0_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_small_0_lowfield)
  return _internal_packed_seq_small_0_lowfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_small_0_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_small_0_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_small_0_lowfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_small_0_lowfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_small_0_lowfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_small_0_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_small_0_lowfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_midfield = 1003 [features = {
inline int EnumParseTester::_internal_packed_seq_small_0_midfield_size() const {
  return _internal_packed_seq_small_0_midfield().size();
}
inline int EnumParseTester::packed_seq_small_0_midfield_size() const {
  return _internal_packed_seq_small_0_midfield_size();
}
inline void EnumParseTester::clear_packed_seq_small_0_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_small_0_midfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::packed_seq_small_0_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_small_0_midfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_internal_packed_seq_small_0_midfield().Get(index));
}
inline void EnumParseTester::set_packed_seq_small_0_midfield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _internal_mutable_packed_seq_small_0_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_small_0_midfield)
}
inline void EnumParseTester::add_packed_seq_small_0_midfield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_small_0_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_small_0_midfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_small_0_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_small_0_midfield)
  return _internal_packed_seq_small_0_midfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_small_0_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_small_0_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_small_0_midfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_small_0_midfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_small_0_midfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_small_0_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_small_0_midfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_hifield = 1000003 [features = {
inline int EnumParseTester::_internal_packed_seq_small_0_hifield_size() const {
  return _internal_packed_seq_small_0_hifield().size();
}
inline int EnumParseTester::packed_seq_small_0_hifield_size() const {
  return _internal_packed_seq_small_0_hifield_size();
}
inline void EnumParseTester::clear_packed_seq_small_0_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_small_0_hifield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall0 EnumParseTester::packed_seq_small_0_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_small_0_hifield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall0>(_internal_packed_seq_small_0_hifield().Get(index));
}
inline void EnumParseTester::set_packed_seq_small_0_hifield(int index, ::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  _internal_mutable_packed_seq_small_0_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_small_0_hifield)
}
inline void EnumParseTester::add_packed_seq_small_0_hifield(::edition_unittest::EnumParseTester_SeqSmall0 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall0_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_small_0_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_small_0_hifield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_small_0_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_small_0_hifield)
  return _internal_packed_seq_small_0_hifield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_small_0_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_small_0_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_small_0_hifield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_small_0_hifield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_small_0_hifield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_small_0_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_small_0_hifield_;
}

// .edition_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_lowfield = 4;
inline bool EnumParseTester::has_optional_seq_small_1_lowfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_small_1_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_small_1_lowfield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::optional_seq_small_1_lowfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_small_1_lowfield)
  return _internal_optional_seq_small_1_lowfield();
}
inline void EnumParseTester::set_optional_seq_small_1_lowfield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  _internal_set_optional_seq_small_1_lowfield(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_small_1_lowfield)
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::_internal_optional_seq_small_1_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_impl_.optional_seq_small_1_lowfield_);
}
inline void EnumParseTester::_internal_set_optional_seq_small_1_lowfield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _impl_.optional_seq_small_1_lowfield_ = value;
}

// .edition_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_midfield = 1004;
inline bool EnumParseTester::has_optional_seq_small_1_midfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_small_1_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_small_1_midfield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::optional_seq_small_1_midfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_small_1_midfield)
  return _internal_optional_seq_small_1_midfield();
}
inline void EnumParseTester::set_optional_seq_small_1_midfield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  _internal_set_optional_seq_small_1_midfield(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_small_1_midfield)
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::_internal_optional_seq_small_1_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_impl_.optional_seq_small_1_midfield_);
}
inline void EnumParseTester::_internal_set_optional_seq_small_1_midfield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _impl_.optional_seq_small_1_midfield_ = value;
}

// .edition_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_hifield = 1000004;
inline bool EnumParseTester::has_optional_seq_small_1_hifield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_small_1_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_small_1_hifield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::optional_seq_small_1_hifield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_small_1_hifield)
  return _internal_optional_seq_small_1_hifield();
}
inline void EnumParseTester::set_optional_seq_small_1_hifield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  _internal_set_optional_seq_small_1_hifield(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_small_1_hifield)
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::_internal_optional_seq_small_1_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_impl_.optional_seq_small_1_hifield_);
}
inline void EnumParseTester::_internal_set_optional_seq_small_1_hifield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _impl_.optional_seq_small_1_hifield_ = value;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_lowfield = 5;
inline int EnumParseTester::_internal_repeated_seq_small_1_lowfield_size() const {
  return _internal_repeated_seq_small_1_lowfield().size();
}
inline int EnumParseTester::repeated_seq_small_1_lowfield_size() const {
  return _internal_repeated_seq_small_1_lowfield_size();
}
inline void EnumParseTester::clear_repeated_seq_small_1_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_small_1_lowfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::repeated_seq_small_1_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_small_1_lowfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_internal_repeated_seq_small_1_lowfield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_small_1_lowfield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _internal_mutable_repeated_seq_small_1_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_small_1_lowfield)
}
inline void EnumParseTester::add_repeated_seq_small_1_lowfield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_small_1_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_small_1_lowfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_small_1_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_small_1_lowfield)
  return _internal_repeated_seq_small_1_lowfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_small_1_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_small_1_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_small_1_lowfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_small_1_lowfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_small_1_lowfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_small_1_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_small_1_lowfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_midfield = 1005;
inline int EnumParseTester::_internal_repeated_seq_small_1_midfield_size() const {
  return _internal_repeated_seq_small_1_midfield().size();
}
inline int EnumParseTester::repeated_seq_small_1_midfield_size() const {
  return _internal_repeated_seq_small_1_midfield_size();
}
inline void EnumParseTester::clear_repeated_seq_small_1_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_small_1_midfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::repeated_seq_small_1_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_small_1_midfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_internal_repeated_seq_small_1_midfield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_small_1_midfield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _internal_mutable_repeated_seq_small_1_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_small_1_midfield)
}
inline void EnumParseTester::add_repeated_seq_small_1_midfield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_small_1_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_small_1_midfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_small_1_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_small_1_midfield)
  return _internal_repeated_seq_small_1_midfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_small_1_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_small_1_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_small_1_midfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_small_1_midfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_small_1_midfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_small_1_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_small_1_midfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_hifield = 1000005;
inline int EnumParseTester::_internal_repeated_seq_small_1_hifield_size() const {
  return _internal_repeated_seq_small_1_hifield().size();
}
inline int EnumParseTester::repeated_seq_small_1_hifield_size() const {
  return _internal_repeated_seq_small_1_hifield_size();
}
inline void EnumParseTester::clear_repeated_seq_small_1_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_small_1_hifield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::repeated_seq_small_1_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_small_1_hifield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_internal_repeated_seq_small_1_hifield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_small_1_hifield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _internal_mutable_repeated_seq_small_1_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_small_1_hifield)
}
inline void EnumParseTester::add_repeated_seq_small_1_hifield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_small_1_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_small_1_hifield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_small_1_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_small_1_hifield)
  return _internal_repeated_seq_small_1_hifield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_small_1_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_small_1_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_small_1_hifield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_small_1_hifield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_small_1_hifield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_small_1_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_small_1_hifield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_lowfield = 6 [features = {
inline int EnumParseTester::_internal_packed_seq_small_1_lowfield_size() const {
  return _internal_packed_seq_small_1_lowfield().size();
}
inline int EnumParseTester::packed_seq_small_1_lowfield_size() const {
  return _internal_packed_seq_small_1_lowfield_size();
}
inline void EnumParseTester::clear_packed_seq_small_1_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_small_1_lowfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::packed_seq_small_1_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_small_1_lowfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_internal_packed_seq_small_1_lowfield().Get(index));
}
inline void EnumParseTester::set_packed_seq_small_1_lowfield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _internal_mutable_packed_seq_small_1_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_small_1_lowfield)
}
inline void EnumParseTester::add_packed_seq_small_1_lowfield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_small_1_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_small_1_lowfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_small_1_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_small_1_lowfield)
  return _internal_packed_seq_small_1_lowfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_small_1_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_small_1_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_small_1_lowfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_small_1_lowfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_small_1_lowfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_small_1_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_small_1_lowfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_midfield = 1006 [features = {
inline int EnumParseTester::_internal_packed_seq_small_1_midfield_size() const {
  return _internal_packed_seq_small_1_midfield().size();
}
inline int EnumParseTester::packed_seq_small_1_midfield_size() const {
  return _internal_packed_seq_small_1_midfield_size();
}
inline void EnumParseTester::clear_packed_seq_small_1_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_small_1_midfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::packed_seq_small_1_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_small_1_midfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_internal_packed_seq_small_1_midfield().Get(index));
}
inline void EnumParseTester::set_packed_seq_small_1_midfield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _internal_mutable_packed_seq_small_1_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_small_1_midfield)
}
inline void EnumParseTester::add_packed_seq_small_1_midfield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_small_1_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_small_1_midfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_small_1_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_small_1_midfield)
  return _internal_packed_seq_small_1_midfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_small_1_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_small_1_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_small_1_midfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_small_1_midfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_small_1_midfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_small_1_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_small_1_midfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_hifield = 1000006 [features = {
inline int EnumParseTester::_internal_packed_seq_small_1_hifield_size() const {
  return _internal_packed_seq_small_1_hifield().size();
}
inline int EnumParseTester::packed_seq_small_1_hifield_size() const {
  return _internal_packed_seq_small_1_hifield_size();
}
inline void EnumParseTester::clear_packed_seq_small_1_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_small_1_hifield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqSmall1 EnumParseTester::packed_seq_small_1_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_small_1_hifield)
  return static_cast<::edition_unittest::EnumParseTester_SeqSmall1>(_internal_packed_seq_small_1_hifield().Get(index));
}
inline void EnumParseTester::set_packed_seq_small_1_hifield(int index, ::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  _internal_mutable_packed_seq_small_1_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_small_1_hifield)
}
inline void EnumParseTester::add_packed_seq_small_1_hifield(::edition_unittest::EnumParseTester_SeqSmall1 value) {
  assert(::edition_unittest::EnumParseTester_SeqSmall1_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_small_1_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_small_1_hifield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_small_1_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_small_1_hifield)
  return _internal_packed_seq_small_1_hifield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_small_1_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_small_1_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_small_1_hifield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_small_1_hifield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_small_1_hifield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_small_1_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_small_1_hifield_;
}

// .edition_unittest.EnumParseTester.SeqLarge optional_seq_large_lowfield = 7;
inline bool EnumParseTester::has_optional_seq_large_lowfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_large_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_large_lowfield_ = -1;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::optional_seq_large_lowfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_large_lowfield)
  return _internal_optional_seq_large_lowfield();
}
inline void EnumParseTester::set_optional_seq_large_lowfield(::edition_unittest::EnumParseTester_SeqLarge value) {
  _internal_set_optional_seq_large_lowfield(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_large_lowfield)
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::_internal_optional_seq_large_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_impl_.optional_seq_large_lowfield_);
}
inline void EnumParseTester::_internal_set_optional_seq_large_lowfield(::edition_unittest::EnumParseTester_SeqLarge value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _impl_.optional_seq_large_lowfield_ = value;
}

// .edition_unittest.EnumParseTester.SeqLarge optional_seq_large_midfield = 1007;
inline bool EnumParseTester::has_optional_seq_large_midfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_large_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_large_midfield_ = -1;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::optional_seq_large_midfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_large_midfield)
  return _internal_optional_seq_large_midfield();
}
inline void EnumParseTester::set_optional_seq_large_midfield(::edition_unittest::EnumParseTester_SeqLarge value) {
  _internal_set_optional_seq_large_midfield(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_large_midfield)
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::_internal_optional_seq_large_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_impl_.optional_seq_large_midfield_);
}
inline void EnumParseTester::_internal_set_optional_seq_large_midfield(::edition_unittest::EnumParseTester_SeqLarge value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _impl_.optional_seq_large_midfield_ = value;
}

// .edition_unittest.EnumParseTester.SeqLarge optional_seq_large_hifield = 1000007;
inline bool EnumParseTester::has_optional_seq_large_hifield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_seq_large_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_seq_large_hifield_ = -1;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::optional_seq_large_hifield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_seq_large_hifield)
  return _internal_optional_seq_large_hifield();
}
inline void EnumParseTester::set_optional_seq_large_hifield(::edition_unittest::EnumParseTester_SeqLarge value) {
  _internal_set_optional_seq_large_hifield(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_seq_large_hifield)
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::_internal_optional_seq_large_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_impl_.optional_seq_large_hifield_);
}
inline void EnumParseTester::_internal_set_optional_seq_large_hifield(::edition_unittest::EnumParseTester_SeqLarge value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _impl_.optional_seq_large_hifield_ = value;
}

// repeated .edition_unittest.EnumParseTester.SeqLarge repeated_seq_large_lowfield = 8;
inline int EnumParseTester::_internal_repeated_seq_large_lowfield_size() const {
  return _internal_repeated_seq_large_lowfield().size();
}
inline int EnumParseTester::repeated_seq_large_lowfield_size() const {
  return _internal_repeated_seq_large_lowfield_size();
}
inline void EnumParseTester::clear_repeated_seq_large_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_large_lowfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::repeated_seq_large_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_large_lowfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_internal_repeated_seq_large_lowfield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_large_lowfield(int index, ::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _internal_mutable_repeated_seq_large_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_large_lowfield)
}
inline void EnumParseTester::add_repeated_seq_large_lowfield(::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_large_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_large_lowfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_large_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_large_lowfield)
  return _internal_repeated_seq_large_lowfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_large_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_large_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_large_lowfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_large_lowfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_large_lowfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_large_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_large_lowfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqLarge repeated_seq_large_midfield = 1008;
inline int EnumParseTester::_internal_repeated_seq_large_midfield_size() const {
  return _internal_repeated_seq_large_midfield().size();
}
inline int EnumParseTester::repeated_seq_large_midfield_size() const {
  return _internal_repeated_seq_large_midfield_size();
}
inline void EnumParseTester::clear_repeated_seq_large_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_large_midfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::repeated_seq_large_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_large_midfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_internal_repeated_seq_large_midfield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_large_midfield(int index, ::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _internal_mutable_repeated_seq_large_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_large_midfield)
}
inline void EnumParseTester::add_repeated_seq_large_midfield(::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_large_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_large_midfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_large_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_large_midfield)
  return _internal_repeated_seq_large_midfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_large_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_large_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_large_midfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_large_midfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_large_midfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_large_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_large_midfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqLarge repeated_seq_large_hifield = 1000008;
inline int EnumParseTester::_internal_repeated_seq_large_hifield_size() const {
  return _internal_repeated_seq_large_hifield().size();
}
inline int EnumParseTester::repeated_seq_large_hifield_size() const {
  return _internal_repeated_seq_large_hifield_size();
}
inline void EnumParseTester::clear_repeated_seq_large_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_seq_large_hifield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::repeated_seq_large_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_seq_large_hifield)
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_internal_repeated_seq_large_hifield().Get(index));
}
inline void EnumParseTester::set_repeated_seq_large_hifield(int index, ::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _internal_mutable_repeated_seq_large_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_seq_large_hifield)
}
inline void EnumParseTester::add_repeated_seq_large_hifield(::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_seq_large_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_seq_large_hifield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_seq_large_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_seq_large_hifield)
  return _internal_repeated_seq_large_hifield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_seq_large_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_seq_large_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_seq_large_hifield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_seq_large_hifield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_seq_large_hifield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_seq_large_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_seq_large_hifield_;
}

// repeated .edition_unittest.EnumParseTester.SeqLarge packed_seq_large_lowfield = 9 [features = {
inline int EnumParseTester::_internal_packed_seq_large_lowfield_size() const {
  return _internal_packed_seq_large_lowfield().size();
}
inline int EnumParseTester::packed_seq_large_lowfield_size() const {
  return _internal_packed_seq_large_lowfield_size();
}
inline void EnumParseTester::clear_packed_seq_large_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_large_lowfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::packed_seq_large_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_large_lowfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_internal_packed_seq_large_lowfield().Get(index));
}
inline void EnumParseTester::set_packed_seq_large_lowfield(int index, ::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _internal_mutable_packed_seq_large_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_large_lowfield)
}
inline void EnumParseTester::add_packed_seq_large_lowfield(::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_large_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_large_lowfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_large_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_large_lowfield)
  return _internal_packed_seq_large_lowfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_large_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_large_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_large_lowfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_large_lowfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_large_lowfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_large_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_large_lowfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqLarge packed_seq_large_midfield = 1009 [features = {
inline int EnumParseTester::_internal_packed_seq_large_midfield_size() const {
  return _internal_packed_seq_large_midfield().size();
}
inline int EnumParseTester::packed_seq_large_midfield_size() const {
  return _internal_packed_seq_large_midfield_size();
}
inline void EnumParseTester::clear_packed_seq_large_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_large_midfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::packed_seq_large_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_large_midfield)
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_internal_packed_seq_large_midfield().Get(index));
}
inline void EnumParseTester::set_packed_seq_large_midfield(int index, ::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _internal_mutable_packed_seq_large_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_large_midfield)
}
inline void EnumParseTester::add_packed_seq_large_midfield(::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_large_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_large_midfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_large_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_large_midfield)
  return _internal_packed_seq_large_midfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_large_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_large_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_large_midfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_large_midfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_large_midfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_large_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_large_midfield_;
}

// repeated .edition_unittest.EnumParseTester.SeqLarge packed_seq_large_hifield = 1000009 [features = {
inline int EnumParseTester::_internal_packed_seq_large_hifield_size() const {
  return _internal_packed_seq_large_hifield().size();
}
inline int EnumParseTester::packed_seq_large_hifield_size() const {
  return _internal_packed_seq_large_hifield_size();
}
inline void EnumParseTester::clear_packed_seq_large_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_seq_large_hifield_.Clear();
}
inline ::edition_unittest::EnumParseTester_SeqLarge EnumParseTester::packed_seq_large_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_seq_large_hifield)
  return static_cast<::edition_unittest::EnumParseTester_SeqLarge>(_internal_packed_seq_large_hifield().Get(index));
}
inline void EnumParseTester::set_packed_seq_large_hifield(int index, ::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  _internal_mutable_packed_seq_large_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_seq_large_hifield)
}
inline void EnumParseTester::add_packed_seq_large_hifield(::edition_unittest::EnumParseTester_SeqLarge value) {
  assert(::edition_unittest::EnumParseTester_SeqLarge_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_seq_large_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_seq_large_hifield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_seq_large_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_seq_large_hifield)
  return _internal_packed_seq_large_hifield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_seq_large_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_seq_large_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_seq_large_hifield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_seq_large_hifield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_seq_large_hifield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_seq_large_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_seq_large_hifield_;
}

// .edition_unittest.EnumParseTester.Arbitrary optional_arbitrary_lowfield = 10;
inline bool EnumParseTester::has_optional_arbitrary_lowfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_arbitrary_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_arbitrary_lowfield_ = -123123;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::optional_arbitrary_lowfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_arbitrary_lowfield)
  return _internal_optional_arbitrary_lowfield();
}
inline void EnumParseTester::set_optional_arbitrary_lowfield(::edition_unittest::EnumParseTester_Arbitrary value) {
  _internal_set_optional_arbitrary_lowfield(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_arbitrary_lowfield)
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::_internal_optional_arbitrary_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_impl_.optional_arbitrary_lowfield_);
}
inline void EnumParseTester::_internal_set_optional_arbitrary_lowfield(::edition_unittest::EnumParseTester_Arbitrary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _impl_.optional_arbitrary_lowfield_ = value;
}

// .edition_unittest.EnumParseTester.Arbitrary optional_arbitrary_midfield = 1010;
inline bool EnumParseTester::has_optional_arbitrary_midfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_arbitrary_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_arbitrary_midfield_ = -123123;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::optional_arbitrary_midfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_arbitrary_midfield)
  return _internal_optional_arbitrary_midfield();
}
inline void EnumParseTester::set_optional_arbitrary_midfield(::edition_unittest::EnumParseTester_Arbitrary value) {
  _internal_set_optional_arbitrary_midfield(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_arbitrary_midfield)
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::_internal_optional_arbitrary_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_impl_.optional_arbitrary_midfield_);
}
inline void EnumParseTester::_internal_set_optional_arbitrary_midfield(::edition_unittest::EnumParseTester_Arbitrary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _impl_.optional_arbitrary_midfield_ = value;
}

// .edition_unittest.EnumParseTester.Arbitrary optional_arbitrary_hifield = 1000010;
inline bool EnumParseTester::has_optional_arbitrary_hifield() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void EnumParseTester::clear_optional_arbitrary_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_arbitrary_hifield_ = -123123;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::optional_arbitrary_hifield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.optional_arbitrary_hifield)
  return _internal_optional_arbitrary_hifield();
}
inline void EnumParseTester::set_optional_arbitrary_hifield(::edition_unittest::EnumParseTester_Arbitrary value) {
  _internal_set_optional_arbitrary_hifield(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.optional_arbitrary_hifield)
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::_internal_optional_arbitrary_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_impl_.optional_arbitrary_hifield_);
}
inline void EnumParseTester::_internal_set_optional_arbitrary_hifield(::edition_unittest::EnumParseTester_Arbitrary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _impl_.optional_arbitrary_hifield_ = value;
}

// repeated .edition_unittest.EnumParseTester.Arbitrary repeated_arbitrary_lowfield = 11;
inline int EnumParseTester::_internal_repeated_arbitrary_lowfield_size() const {
  return _internal_repeated_arbitrary_lowfield().size();
}
inline int EnumParseTester::repeated_arbitrary_lowfield_size() const {
  return _internal_repeated_arbitrary_lowfield_size();
}
inline void EnumParseTester::clear_repeated_arbitrary_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_arbitrary_lowfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::repeated_arbitrary_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_arbitrary_lowfield)
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_internal_repeated_arbitrary_lowfield().Get(index));
}
inline void EnumParseTester::set_repeated_arbitrary_lowfield(int index, ::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _internal_mutable_repeated_arbitrary_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_arbitrary_lowfield)
}
inline void EnumParseTester::add_repeated_arbitrary_lowfield(::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_arbitrary_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_arbitrary_lowfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_arbitrary_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_arbitrary_lowfield)
  return _internal_repeated_arbitrary_lowfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_arbitrary_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_arbitrary_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_arbitrary_lowfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_arbitrary_lowfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_arbitrary_lowfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_arbitrary_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_arbitrary_lowfield_;
}

// repeated .edition_unittest.EnumParseTester.Arbitrary repeated_arbitrary_midfield = 1011;
inline int EnumParseTester::_internal_repeated_arbitrary_midfield_size() const {
  return _internal_repeated_arbitrary_midfield().size();
}
inline int EnumParseTester::repeated_arbitrary_midfield_size() const {
  return _internal_repeated_arbitrary_midfield_size();
}
inline void EnumParseTester::clear_repeated_arbitrary_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_arbitrary_midfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::repeated_arbitrary_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_arbitrary_midfield)
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_internal_repeated_arbitrary_midfield().Get(index));
}
inline void EnumParseTester::set_repeated_arbitrary_midfield(int index, ::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _internal_mutable_repeated_arbitrary_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_arbitrary_midfield)
}
inline void EnumParseTester::add_repeated_arbitrary_midfield(::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_arbitrary_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_arbitrary_midfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_arbitrary_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_arbitrary_midfield)
  return _internal_repeated_arbitrary_midfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_arbitrary_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_arbitrary_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_arbitrary_midfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_arbitrary_midfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_arbitrary_midfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_arbitrary_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_arbitrary_midfield_;
}

// repeated .edition_unittest.EnumParseTester.Arbitrary repeated_arbitrary_hifield = 1000011;
inline int EnumParseTester::_internal_repeated_arbitrary_hifield_size() const {
  return _internal_repeated_arbitrary_hifield().size();
}
inline int EnumParseTester::repeated_arbitrary_hifield_size() const {
  return _internal_repeated_arbitrary_hifield_size();
}
inline void EnumParseTester::clear_repeated_arbitrary_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_arbitrary_hifield_.Clear();
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::repeated_arbitrary_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.repeated_arbitrary_hifield)
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_internal_repeated_arbitrary_hifield().Get(index));
}
inline void EnumParseTester::set_repeated_arbitrary_hifield(int index, ::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _internal_mutable_repeated_arbitrary_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.repeated_arbitrary_hifield)
}
inline void EnumParseTester::add_repeated_arbitrary_hifield(::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_arbitrary_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.repeated_arbitrary_hifield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::repeated_arbitrary_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.repeated_arbitrary_hifield)
  return _internal_repeated_arbitrary_hifield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_repeated_arbitrary_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.repeated_arbitrary_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_arbitrary_hifield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_repeated_arbitrary_hifield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_arbitrary_hifield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_repeated_arbitrary_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_arbitrary_hifield_;
}

// repeated .edition_unittest.EnumParseTester.Arbitrary packed_arbitrary_lowfield = 12 [features = {
inline int EnumParseTester::_internal_packed_arbitrary_lowfield_size() const {
  return _internal_packed_arbitrary_lowfield().size();
}
inline int EnumParseTester::packed_arbitrary_lowfield_size() const {
  return _internal_packed_arbitrary_lowfield_size();
}
inline void EnumParseTester::clear_packed_arbitrary_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_arbitrary_lowfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::packed_arbitrary_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_arbitrary_lowfield)
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_internal_packed_arbitrary_lowfield().Get(index));
}
inline void EnumParseTester::set_packed_arbitrary_lowfield(int index, ::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _internal_mutable_packed_arbitrary_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_arbitrary_lowfield)
}
inline void EnumParseTester::add_packed_arbitrary_lowfield(::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_arbitrary_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_arbitrary_lowfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_arbitrary_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_arbitrary_lowfield)
  return _internal_packed_arbitrary_lowfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_arbitrary_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_arbitrary_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_arbitrary_lowfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_arbitrary_lowfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_arbitrary_lowfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_arbitrary_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_arbitrary_lowfield_;
}

// repeated .edition_unittest.EnumParseTester.Arbitrary packed_arbitrary_midfield = 1012 [features = {
inline int EnumParseTester::_internal_packed_arbitrary_midfield_size() const {
  return _internal_packed_arbitrary_midfield().size();
}
inline int EnumParseTester::packed_arbitrary_midfield_size() const {
  return _internal_packed_arbitrary_midfield_size();
}
inline void EnumParseTester::clear_packed_arbitrary_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_arbitrary_midfield_.Clear();
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::packed_arbitrary_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_arbitrary_midfield)
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_internal_packed_arbitrary_midfield().Get(index));
}
inline void EnumParseTester::set_packed_arbitrary_midfield(int index, ::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _internal_mutable_packed_arbitrary_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_arbitrary_midfield)
}
inline void EnumParseTester::add_packed_arbitrary_midfield(::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_arbitrary_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_arbitrary_midfield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_arbitrary_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_arbitrary_midfield)
  return _internal_packed_arbitrary_midfield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_arbitrary_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_arbitrary_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_arbitrary_midfield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_arbitrary_midfield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_arbitrary_midfield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_arbitrary_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_arbitrary_midfield_;
}

// repeated .edition_unittest.EnumParseTester.Arbitrary packed_arbitrary_hifield = 1000012 [features = {
inline int EnumParseTester::_internal_packed_arbitrary_hifield_size() const {
  return _internal_packed_arbitrary_hifield().size();
}
inline int EnumParseTester::packed_arbitrary_hifield_size() const {
  return _internal_packed_arbitrary_hifield_size();
}
inline void EnumParseTester::clear_packed_arbitrary_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_arbitrary_hifield_.Clear();
}
inline ::edition_unittest::EnumParseTester_Arbitrary EnumParseTester::packed_arbitrary_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.packed_arbitrary_hifield)
  return static_cast<::edition_unittest::EnumParseTester_Arbitrary>(_internal_packed_arbitrary_hifield().Get(index));
}
inline void EnumParseTester::set_packed_arbitrary_hifield(int index, ::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  _internal_mutable_packed_arbitrary_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.packed_arbitrary_hifield)
}
inline void EnumParseTester::add_packed_arbitrary_hifield(::edition_unittest::EnumParseTester_Arbitrary value) {
  assert(::edition_unittest::EnumParseTester_Arbitrary_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_arbitrary_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.EnumParseTester.packed_arbitrary_hifield)
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::packed_arbitrary_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.EnumParseTester.packed_arbitrary_hifield)
  return _internal_packed_arbitrary_hifield();
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::mutable_packed_arbitrary_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.EnumParseTester.packed_arbitrary_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_arbitrary_hifield();
}
inline const ::google::protobuf::RepeatedField<int>& EnumParseTester::_internal_packed_arbitrary_hifield()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_arbitrary_hifield_;
}
inline ::google::protobuf::RepeatedField<int>* EnumParseTester::_internal_mutable_packed_arbitrary_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_arbitrary_hifield_;
}

// int32 other_field = 99;
inline bool EnumParseTester::has_other_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EnumParseTester::clear_other_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_field_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t EnumParseTester::other_field() const {
  // @@protoc_insertion_point(field_get:edition_unittest.EnumParseTester.other_field)
  return _internal_other_field();
}
inline void EnumParseTester::set_other_field(::int32_t value) {
  _internal_set_other_field(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.EnumParseTester.other_field)
}
inline ::int32_t EnumParseTester::_internal_other_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_field_;
}
inline void EnumParseTester::_internal_set_other_field(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_field_ = value;
}

// -------------------------------------------------------------------

// BoolParseTester

// bool optional_bool_lowfield = 1;
inline bool BoolParseTester::has_optional_bool_lowfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BoolParseTester::clear_optional_bool_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bool_lowfield_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool BoolParseTester::optional_bool_lowfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.optional_bool_lowfield)
  return _internal_optional_bool_lowfield();
}
inline void BoolParseTester::set_optional_bool_lowfield(bool value) {
  _internal_set_optional_bool_lowfield(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.optional_bool_lowfield)
}
inline bool BoolParseTester::_internal_optional_bool_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_bool_lowfield_;
}
inline void BoolParseTester::_internal_set_optional_bool_lowfield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bool_lowfield_ = value;
}

// bool optional_bool_midfield = 1001;
inline bool BoolParseTester::has_optional_bool_midfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BoolParseTester::clear_optional_bool_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bool_midfield_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool BoolParseTester::optional_bool_midfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.optional_bool_midfield)
  return _internal_optional_bool_midfield();
}
inline void BoolParseTester::set_optional_bool_midfield(bool value) {
  _internal_set_optional_bool_midfield(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.optional_bool_midfield)
}
inline bool BoolParseTester::_internal_optional_bool_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_bool_midfield_;
}
inline void BoolParseTester::_internal_set_optional_bool_midfield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bool_midfield_ = value;
}

// bool optional_bool_hifield = 1000001;
inline bool BoolParseTester::has_optional_bool_hifield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void BoolParseTester::clear_optional_bool_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bool_hifield_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool BoolParseTester::optional_bool_hifield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.optional_bool_hifield)
  return _internal_optional_bool_hifield();
}
inline void BoolParseTester::set_optional_bool_hifield(bool value) {
  _internal_set_optional_bool_hifield(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.optional_bool_hifield)
}
inline bool BoolParseTester::_internal_optional_bool_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_bool_hifield_;
}
inline void BoolParseTester::_internal_set_optional_bool_hifield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bool_hifield_ = value;
}

// repeated bool repeated_bool_lowfield = 2;
inline int BoolParseTester::_internal_repeated_bool_lowfield_size() const {
  return _internal_repeated_bool_lowfield().size();
}
inline int BoolParseTester::repeated_bool_lowfield_size() const {
  return _internal_repeated_bool_lowfield_size();
}
inline void BoolParseTester::clear_repeated_bool_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_bool_lowfield_.Clear();
}
inline bool BoolParseTester::repeated_bool_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.repeated_bool_lowfield)
  return _internal_repeated_bool_lowfield().Get(index);
}
inline void BoolParseTester::set_repeated_bool_lowfield(int index, bool value) {
  _internal_mutable_repeated_bool_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.repeated_bool_lowfield)
}
inline void BoolParseTester::add_repeated_bool_lowfield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bool_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.BoolParseTester.repeated_bool_lowfield)
}
inline const ::google::protobuf::RepeatedField<bool>& BoolParseTester::repeated_bool_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.BoolParseTester.repeated_bool_lowfield)
  return _internal_repeated_bool_lowfield();
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::mutable_repeated_bool_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.BoolParseTester.repeated_bool_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_bool_lowfield();
}
inline const ::google::protobuf::RepeatedField<bool>&
BoolParseTester::_internal_repeated_bool_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_bool_lowfield_;
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::_internal_mutable_repeated_bool_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_bool_lowfield_;
}

// repeated bool repeated_bool_midfield = 1002;
inline int BoolParseTester::_internal_repeated_bool_midfield_size() const {
  return _internal_repeated_bool_midfield().size();
}
inline int BoolParseTester::repeated_bool_midfield_size() const {
  return _internal_repeated_bool_midfield_size();
}
inline void BoolParseTester::clear_repeated_bool_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_bool_midfield_.Clear();
}
inline bool BoolParseTester::repeated_bool_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.repeated_bool_midfield)
  return _internal_repeated_bool_midfield().Get(index);
}
inline void BoolParseTester::set_repeated_bool_midfield(int index, bool value) {
  _internal_mutable_repeated_bool_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.repeated_bool_midfield)
}
inline void BoolParseTester::add_repeated_bool_midfield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bool_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.BoolParseTester.repeated_bool_midfield)
}
inline const ::google::protobuf::RepeatedField<bool>& BoolParseTester::repeated_bool_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.BoolParseTester.repeated_bool_midfield)
  return _internal_repeated_bool_midfield();
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::mutable_repeated_bool_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.BoolParseTester.repeated_bool_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_bool_midfield();
}
inline const ::google::protobuf::RepeatedField<bool>&
BoolParseTester::_internal_repeated_bool_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_bool_midfield_;
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::_internal_mutable_repeated_bool_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_bool_midfield_;
}

// repeated bool repeated_bool_hifield = 1000002;
inline int BoolParseTester::_internal_repeated_bool_hifield_size() const {
  return _internal_repeated_bool_hifield().size();
}
inline int BoolParseTester::repeated_bool_hifield_size() const {
  return _internal_repeated_bool_hifield_size();
}
inline void BoolParseTester::clear_repeated_bool_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_bool_hifield_.Clear();
}
inline bool BoolParseTester::repeated_bool_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.repeated_bool_hifield)
  return _internal_repeated_bool_hifield().Get(index);
}
inline void BoolParseTester::set_repeated_bool_hifield(int index, bool value) {
  _internal_mutable_repeated_bool_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.repeated_bool_hifield)
}
inline void BoolParseTester::add_repeated_bool_hifield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_bool_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.BoolParseTester.repeated_bool_hifield)
}
inline const ::google::protobuf::RepeatedField<bool>& BoolParseTester::repeated_bool_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.BoolParseTester.repeated_bool_hifield)
  return _internal_repeated_bool_hifield();
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::mutable_repeated_bool_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.BoolParseTester.repeated_bool_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_bool_hifield();
}
inline const ::google::protobuf::RepeatedField<bool>&
BoolParseTester::_internal_repeated_bool_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_bool_hifield_;
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::_internal_mutable_repeated_bool_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_bool_hifield_;
}

// repeated bool packed_bool_lowfield = 3 [features = {
inline int BoolParseTester::_internal_packed_bool_lowfield_size() const {
  return _internal_packed_bool_lowfield().size();
}
inline int BoolParseTester::packed_bool_lowfield_size() const {
  return _internal_packed_bool_lowfield_size();
}
inline void BoolParseTester::clear_packed_bool_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_bool_lowfield_.Clear();
}
inline bool BoolParseTester::packed_bool_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.packed_bool_lowfield)
  return _internal_packed_bool_lowfield().Get(index);
}
inline void BoolParseTester::set_packed_bool_lowfield(int index, bool value) {
  _internal_mutable_packed_bool_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.packed_bool_lowfield)
}
inline void BoolParseTester::add_packed_bool_lowfield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_bool_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.BoolParseTester.packed_bool_lowfield)
}
inline const ::google::protobuf::RepeatedField<bool>& BoolParseTester::packed_bool_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.BoolParseTester.packed_bool_lowfield)
  return _internal_packed_bool_lowfield();
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::mutable_packed_bool_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.BoolParseTester.packed_bool_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_bool_lowfield();
}
inline const ::google::protobuf::RepeatedField<bool>&
BoolParseTester::_internal_packed_bool_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_bool_lowfield_;
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::_internal_mutable_packed_bool_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_bool_lowfield_;
}

// repeated bool packed_bool_midfield = 1003 [features = {
inline int BoolParseTester::_internal_packed_bool_midfield_size() const {
  return _internal_packed_bool_midfield().size();
}
inline int BoolParseTester::packed_bool_midfield_size() const {
  return _internal_packed_bool_midfield_size();
}
inline void BoolParseTester::clear_packed_bool_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_bool_midfield_.Clear();
}
inline bool BoolParseTester::packed_bool_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.packed_bool_midfield)
  return _internal_packed_bool_midfield().Get(index);
}
inline void BoolParseTester::set_packed_bool_midfield(int index, bool value) {
  _internal_mutable_packed_bool_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.packed_bool_midfield)
}
inline void BoolParseTester::add_packed_bool_midfield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_bool_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.BoolParseTester.packed_bool_midfield)
}
inline const ::google::protobuf::RepeatedField<bool>& BoolParseTester::packed_bool_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.BoolParseTester.packed_bool_midfield)
  return _internal_packed_bool_midfield();
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::mutable_packed_bool_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.BoolParseTester.packed_bool_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_bool_midfield();
}
inline const ::google::protobuf::RepeatedField<bool>&
BoolParseTester::_internal_packed_bool_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_bool_midfield_;
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::_internal_mutable_packed_bool_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_bool_midfield_;
}

// repeated bool packed_bool_hifield = 1000003 [features = {
inline int BoolParseTester::_internal_packed_bool_hifield_size() const {
  return _internal_packed_bool_hifield().size();
}
inline int BoolParseTester::packed_bool_hifield_size() const {
  return _internal_packed_bool_hifield_size();
}
inline void BoolParseTester::clear_packed_bool_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_bool_hifield_.Clear();
}
inline bool BoolParseTester::packed_bool_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.packed_bool_hifield)
  return _internal_packed_bool_hifield().Get(index);
}
inline void BoolParseTester::set_packed_bool_hifield(int index, bool value) {
  _internal_mutable_packed_bool_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.packed_bool_hifield)
}
inline void BoolParseTester::add_packed_bool_hifield(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_bool_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.BoolParseTester.packed_bool_hifield)
}
inline const ::google::protobuf::RepeatedField<bool>& BoolParseTester::packed_bool_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.BoolParseTester.packed_bool_hifield)
  return _internal_packed_bool_hifield();
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::mutable_packed_bool_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.BoolParseTester.packed_bool_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_bool_hifield();
}
inline const ::google::protobuf::RepeatedField<bool>&
BoolParseTester::_internal_packed_bool_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_bool_hifield_;
}
inline ::google::protobuf::RepeatedField<bool>* BoolParseTester::_internal_mutable_packed_bool_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_bool_hifield_;
}

// int32 other_field = 99;
inline bool BoolParseTester::has_other_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BoolParseTester::clear_other_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_field_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t BoolParseTester::other_field() const {
  // @@protoc_insertion_point(field_get:edition_unittest.BoolParseTester.other_field)
  return _internal_other_field();
}
inline void BoolParseTester::set_other_field(::int32_t value) {
  _internal_set_other_field(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.BoolParseTester.other_field)
}
inline ::int32_t BoolParseTester::_internal_other_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_field_;
}
inline void BoolParseTester::_internal_set_other_field(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_field_ = value;
}

// -------------------------------------------------------------------

// Int32ParseTester

// int32 optional_int32_lowfield = 1;
inline bool Int32ParseTester::has_optional_int32_lowfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Int32ParseTester::clear_optional_int32_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_lowfield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t Int32ParseTester::optional_int32_lowfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.optional_int32_lowfield)
  return _internal_optional_int32_lowfield();
}
inline void Int32ParseTester::set_optional_int32_lowfield(::int32_t value) {
  _internal_set_optional_int32_lowfield(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.optional_int32_lowfield)
}
inline ::int32_t Int32ParseTester::_internal_optional_int32_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_lowfield_;
}
inline void Int32ParseTester::_internal_set_optional_int32_lowfield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_lowfield_ = value;
}

// int32 optional_int32_midfield = 1001;
inline bool Int32ParseTester::has_optional_int32_midfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Int32ParseTester::clear_optional_int32_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_midfield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Int32ParseTester::optional_int32_midfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.optional_int32_midfield)
  return _internal_optional_int32_midfield();
}
inline void Int32ParseTester::set_optional_int32_midfield(::int32_t value) {
  _internal_set_optional_int32_midfield(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.optional_int32_midfield)
}
inline ::int32_t Int32ParseTester::_internal_optional_int32_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_midfield_;
}
inline void Int32ParseTester::_internal_set_optional_int32_midfield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_midfield_ = value;
}

// int32 optional_int32_hifield = 1000001;
inline bool Int32ParseTester::has_optional_int32_hifield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Int32ParseTester::clear_optional_int32_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_hifield_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t Int32ParseTester::optional_int32_hifield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.optional_int32_hifield)
  return _internal_optional_int32_hifield();
}
inline void Int32ParseTester::set_optional_int32_hifield(::int32_t value) {
  _internal_set_optional_int32_hifield(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.optional_int32_hifield)
}
inline ::int32_t Int32ParseTester::_internal_optional_int32_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int32_hifield_;
}
inline void Int32ParseTester::_internal_set_optional_int32_hifield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int32_hifield_ = value;
}

// repeated int32 repeated_int32_lowfield = 2;
inline int Int32ParseTester::_internal_repeated_int32_lowfield_size() const {
  return _internal_repeated_int32_lowfield().size();
}
inline int Int32ParseTester::repeated_int32_lowfield_size() const {
  return _internal_repeated_int32_lowfield_size();
}
inline void Int32ParseTester::clear_repeated_int32_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int32_lowfield_.Clear();
}
inline ::int32_t Int32ParseTester::repeated_int32_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.repeated_int32_lowfield)
  return _internal_repeated_int32_lowfield().Get(index);
}
inline void Int32ParseTester::set_repeated_int32_lowfield(int index, ::int32_t value) {
  _internal_mutable_repeated_int32_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.repeated_int32_lowfield)
}
inline void Int32ParseTester::add_repeated_int32_lowfield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int32_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int32ParseTester.repeated_int32_lowfield)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Int32ParseTester::repeated_int32_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int32ParseTester.repeated_int32_lowfield)
  return _internal_repeated_int32_lowfield();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::mutable_repeated_int32_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int32ParseTester.repeated_int32_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int32_lowfield();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Int32ParseTester::_internal_repeated_int32_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int32_lowfield_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::_internal_mutable_repeated_int32_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int32_lowfield_;
}

// repeated int32 repeated_int32_midfield = 1002;
inline int Int32ParseTester::_internal_repeated_int32_midfield_size() const {
  return _internal_repeated_int32_midfield().size();
}
inline int Int32ParseTester::repeated_int32_midfield_size() const {
  return _internal_repeated_int32_midfield_size();
}
inline void Int32ParseTester::clear_repeated_int32_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int32_midfield_.Clear();
}
inline ::int32_t Int32ParseTester::repeated_int32_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.repeated_int32_midfield)
  return _internal_repeated_int32_midfield().Get(index);
}
inline void Int32ParseTester::set_repeated_int32_midfield(int index, ::int32_t value) {
  _internal_mutable_repeated_int32_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.repeated_int32_midfield)
}
inline void Int32ParseTester::add_repeated_int32_midfield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int32_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int32ParseTester.repeated_int32_midfield)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Int32ParseTester::repeated_int32_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int32ParseTester.repeated_int32_midfield)
  return _internal_repeated_int32_midfield();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::mutable_repeated_int32_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int32ParseTester.repeated_int32_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int32_midfield();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Int32ParseTester::_internal_repeated_int32_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int32_midfield_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::_internal_mutable_repeated_int32_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int32_midfield_;
}

// repeated int32 repeated_int32_hifield = 1000002;
inline int Int32ParseTester::_internal_repeated_int32_hifield_size() const {
  return _internal_repeated_int32_hifield().size();
}
inline int Int32ParseTester::repeated_int32_hifield_size() const {
  return _internal_repeated_int32_hifield_size();
}
inline void Int32ParseTester::clear_repeated_int32_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int32_hifield_.Clear();
}
inline ::int32_t Int32ParseTester::repeated_int32_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.repeated_int32_hifield)
  return _internal_repeated_int32_hifield().Get(index);
}
inline void Int32ParseTester::set_repeated_int32_hifield(int index, ::int32_t value) {
  _internal_mutable_repeated_int32_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.repeated_int32_hifield)
}
inline void Int32ParseTester::add_repeated_int32_hifield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int32_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int32ParseTester.repeated_int32_hifield)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Int32ParseTester::repeated_int32_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int32ParseTester.repeated_int32_hifield)
  return _internal_repeated_int32_hifield();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::mutable_repeated_int32_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int32ParseTester.repeated_int32_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int32_hifield();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Int32ParseTester::_internal_repeated_int32_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int32_hifield_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::_internal_mutable_repeated_int32_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int32_hifield_;
}

// repeated int32 packed_int32_lowfield = 3 [features = {
inline int Int32ParseTester::_internal_packed_int32_lowfield_size() const {
  return _internal_packed_int32_lowfield().size();
}
inline int Int32ParseTester::packed_int32_lowfield_size() const {
  return _internal_packed_int32_lowfield_size();
}
inline void Int32ParseTester::clear_packed_int32_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int32_lowfield_.Clear();
}
inline ::int32_t Int32ParseTester::packed_int32_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.packed_int32_lowfield)
  return _internal_packed_int32_lowfield().Get(index);
}
inline void Int32ParseTester::set_packed_int32_lowfield(int index, ::int32_t value) {
  _internal_mutable_packed_int32_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.packed_int32_lowfield)
}
inline void Int32ParseTester::add_packed_int32_lowfield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int32_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int32ParseTester.packed_int32_lowfield)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Int32ParseTester::packed_int32_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int32ParseTester.packed_int32_lowfield)
  return _internal_packed_int32_lowfield();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::mutable_packed_int32_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int32ParseTester.packed_int32_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int32_lowfield();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Int32ParseTester::_internal_packed_int32_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int32_lowfield_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::_internal_mutable_packed_int32_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int32_lowfield_;
}

// repeated int32 packed_int32_midfield = 1003 [features = {
inline int Int32ParseTester::_internal_packed_int32_midfield_size() const {
  return _internal_packed_int32_midfield().size();
}
inline int Int32ParseTester::packed_int32_midfield_size() const {
  return _internal_packed_int32_midfield_size();
}
inline void Int32ParseTester::clear_packed_int32_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int32_midfield_.Clear();
}
inline ::int32_t Int32ParseTester::packed_int32_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.packed_int32_midfield)
  return _internal_packed_int32_midfield().Get(index);
}
inline void Int32ParseTester::set_packed_int32_midfield(int index, ::int32_t value) {
  _internal_mutable_packed_int32_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.packed_int32_midfield)
}
inline void Int32ParseTester::add_packed_int32_midfield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int32_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int32ParseTester.packed_int32_midfield)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Int32ParseTester::packed_int32_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int32ParseTester.packed_int32_midfield)
  return _internal_packed_int32_midfield();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::mutable_packed_int32_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int32ParseTester.packed_int32_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int32_midfield();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Int32ParseTester::_internal_packed_int32_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int32_midfield_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::_internal_mutable_packed_int32_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int32_midfield_;
}

// repeated int32 packed_int32_hifield = 1000003 [features = {
inline int Int32ParseTester::_internal_packed_int32_hifield_size() const {
  return _internal_packed_int32_hifield().size();
}
inline int Int32ParseTester::packed_int32_hifield_size() const {
  return _internal_packed_int32_hifield_size();
}
inline void Int32ParseTester::clear_packed_int32_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int32_hifield_.Clear();
}
inline ::int32_t Int32ParseTester::packed_int32_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.packed_int32_hifield)
  return _internal_packed_int32_hifield().Get(index);
}
inline void Int32ParseTester::set_packed_int32_hifield(int index, ::int32_t value) {
  _internal_mutable_packed_int32_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.packed_int32_hifield)
}
inline void Int32ParseTester::add_packed_int32_hifield(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int32_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int32ParseTester.packed_int32_hifield)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Int32ParseTester::packed_int32_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int32ParseTester.packed_int32_hifield)
  return _internal_packed_int32_hifield();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::mutable_packed_int32_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int32ParseTester.packed_int32_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int32_hifield();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Int32ParseTester::_internal_packed_int32_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int32_hifield_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Int32ParseTester::_internal_mutable_packed_int32_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int32_hifield_;
}

// int32 other_field = 99;
inline bool Int32ParseTester::has_other_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Int32ParseTester::clear_other_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_field_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t Int32ParseTester::other_field() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int32ParseTester.other_field)
  return _internal_other_field();
}
inline void Int32ParseTester::set_other_field(::int32_t value) {
  _internal_set_other_field(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int32ParseTester.other_field)
}
inline ::int32_t Int32ParseTester::_internal_other_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_field_;
}
inline void Int32ParseTester::_internal_set_other_field(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_field_ = value;
}

// -------------------------------------------------------------------

// Int64ParseTester

// int64 optional_int64_lowfield = 1;
inline bool Int64ParseTester::has_optional_int64_lowfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Int64ParseTester::clear_optional_int64_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_lowfield_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Int64ParseTester::optional_int64_lowfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.optional_int64_lowfield)
  return _internal_optional_int64_lowfield();
}
inline void Int64ParseTester::set_optional_int64_lowfield(::int64_t value) {
  _internal_set_optional_int64_lowfield(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.optional_int64_lowfield)
}
inline ::int64_t Int64ParseTester::_internal_optional_int64_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_lowfield_;
}
inline void Int64ParseTester::_internal_set_optional_int64_lowfield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_lowfield_ = value;
}

// int64 optional_int64_midfield = 1001;
inline bool Int64ParseTester::has_optional_int64_midfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Int64ParseTester::clear_optional_int64_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_midfield_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Int64ParseTester::optional_int64_midfield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.optional_int64_midfield)
  return _internal_optional_int64_midfield();
}
inline void Int64ParseTester::set_optional_int64_midfield(::int64_t value) {
  _internal_set_optional_int64_midfield(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.optional_int64_midfield)
}
inline ::int64_t Int64ParseTester::_internal_optional_int64_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_midfield_;
}
inline void Int64ParseTester::_internal_set_optional_int64_midfield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_midfield_ = value;
}

// int64 optional_int64_hifield = 1000001;
inline bool Int64ParseTester::has_optional_int64_hifield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Int64ParseTester::clear_optional_int64_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_hifield_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t Int64ParseTester::optional_int64_hifield() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.optional_int64_hifield)
  return _internal_optional_int64_hifield();
}
inline void Int64ParseTester::set_optional_int64_hifield(::int64_t value) {
  _internal_set_optional_int64_hifield(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.optional_int64_hifield)
}
inline ::int64_t Int64ParseTester::_internal_optional_int64_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_int64_hifield_;
}
inline void Int64ParseTester::_internal_set_optional_int64_hifield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_int64_hifield_ = value;
}

// repeated int64 repeated_int64_lowfield = 2;
inline int Int64ParseTester::_internal_repeated_int64_lowfield_size() const {
  return _internal_repeated_int64_lowfield().size();
}
inline int Int64ParseTester::repeated_int64_lowfield_size() const {
  return _internal_repeated_int64_lowfield_size();
}
inline void Int64ParseTester::clear_repeated_int64_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int64_lowfield_.Clear();
}
inline ::int64_t Int64ParseTester::repeated_int64_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.repeated_int64_lowfield)
  return _internal_repeated_int64_lowfield().Get(index);
}
inline void Int64ParseTester::set_repeated_int64_lowfield(int index, ::int64_t value) {
  _internal_mutable_repeated_int64_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.repeated_int64_lowfield)
}
inline void Int64ParseTester::add_repeated_int64_lowfield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int64_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int64ParseTester.repeated_int64_lowfield)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Int64ParseTester::repeated_int64_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int64ParseTester.repeated_int64_lowfield)
  return _internal_repeated_int64_lowfield();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::mutable_repeated_int64_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int64ParseTester.repeated_int64_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int64_lowfield();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Int64ParseTester::_internal_repeated_int64_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int64_lowfield_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::_internal_mutable_repeated_int64_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int64_lowfield_;
}

// repeated int64 repeated_int64_midfield = 1002;
inline int Int64ParseTester::_internal_repeated_int64_midfield_size() const {
  return _internal_repeated_int64_midfield().size();
}
inline int Int64ParseTester::repeated_int64_midfield_size() const {
  return _internal_repeated_int64_midfield_size();
}
inline void Int64ParseTester::clear_repeated_int64_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int64_midfield_.Clear();
}
inline ::int64_t Int64ParseTester::repeated_int64_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.repeated_int64_midfield)
  return _internal_repeated_int64_midfield().Get(index);
}
inline void Int64ParseTester::set_repeated_int64_midfield(int index, ::int64_t value) {
  _internal_mutable_repeated_int64_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.repeated_int64_midfield)
}
inline void Int64ParseTester::add_repeated_int64_midfield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int64_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int64ParseTester.repeated_int64_midfield)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Int64ParseTester::repeated_int64_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int64ParseTester.repeated_int64_midfield)
  return _internal_repeated_int64_midfield();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::mutable_repeated_int64_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int64ParseTester.repeated_int64_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int64_midfield();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Int64ParseTester::_internal_repeated_int64_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int64_midfield_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::_internal_mutable_repeated_int64_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int64_midfield_;
}

// repeated int64 repeated_int64_hifield = 1000002;
inline int Int64ParseTester::_internal_repeated_int64_hifield_size() const {
  return _internal_repeated_int64_hifield().size();
}
inline int Int64ParseTester::repeated_int64_hifield_size() const {
  return _internal_repeated_int64_hifield_size();
}
inline void Int64ParseTester::clear_repeated_int64_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_int64_hifield_.Clear();
}
inline ::int64_t Int64ParseTester::repeated_int64_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.repeated_int64_hifield)
  return _internal_repeated_int64_hifield().Get(index);
}
inline void Int64ParseTester::set_repeated_int64_hifield(int index, ::int64_t value) {
  _internal_mutable_repeated_int64_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.repeated_int64_hifield)
}
inline void Int64ParseTester::add_repeated_int64_hifield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_int64_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int64ParseTester.repeated_int64_hifield)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Int64ParseTester::repeated_int64_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int64ParseTester.repeated_int64_hifield)
  return _internal_repeated_int64_hifield();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::mutable_repeated_int64_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int64ParseTester.repeated_int64_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_int64_hifield();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Int64ParseTester::_internal_repeated_int64_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_int64_hifield_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::_internal_mutable_repeated_int64_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_int64_hifield_;
}

// repeated int64 packed_int64_lowfield = 3 [features = {
inline int Int64ParseTester::_internal_packed_int64_lowfield_size() const {
  return _internal_packed_int64_lowfield().size();
}
inline int Int64ParseTester::packed_int64_lowfield_size() const {
  return _internal_packed_int64_lowfield_size();
}
inline void Int64ParseTester::clear_packed_int64_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int64_lowfield_.Clear();
}
inline ::int64_t Int64ParseTester::packed_int64_lowfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.packed_int64_lowfield)
  return _internal_packed_int64_lowfield().Get(index);
}
inline void Int64ParseTester::set_packed_int64_lowfield(int index, ::int64_t value) {
  _internal_mutable_packed_int64_lowfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.packed_int64_lowfield)
}
inline void Int64ParseTester::add_packed_int64_lowfield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int64_lowfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int64ParseTester.packed_int64_lowfield)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Int64ParseTester::packed_int64_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int64ParseTester.packed_int64_lowfield)
  return _internal_packed_int64_lowfield();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::mutable_packed_int64_lowfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int64ParseTester.packed_int64_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int64_lowfield();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Int64ParseTester::_internal_packed_int64_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int64_lowfield_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::_internal_mutable_packed_int64_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int64_lowfield_;
}

// repeated int64 packed_int64_midfield = 1003 [features = {
inline int Int64ParseTester::_internal_packed_int64_midfield_size() const {
  return _internal_packed_int64_midfield().size();
}
inline int Int64ParseTester::packed_int64_midfield_size() const {
  return _internal_packed_int64_midfield_size();
}
inline void Int64ParseTester::clear_packed_int64_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int64_midfield_.Clear();
}
inline ::int64_t Int64ParseTester::packed_int64_midfield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.packed_int64_midfield)
  return _internal_packed_int64_midfield().Get(index);
}
inline void Int64ParseTester::set_packed_int64_midfield(int index, ::int64_t value) {
  _internal_mutable_packed_int64_midfield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.packed_int64_midfield)
}
inline void Int64ParseTester::add_packed_int64_midfield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int64_midfield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int64ParseTester.packed_int64_midfield)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Int64ParseTester::packed_int64_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int64ParseTester.packed_int64_midfield)
  return _internal_packed_int64_midfield();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::mutable_packed_int64_midfield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int64ParseTester.packed_int64_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int64_midfield();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Int64ParseTester::_internal_packed_int64_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int64_midfield_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::_internal_mutable_packed_int64_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int64_midfield_;
}

// repeated int64 packed_int64_hifield = 1000003 [features = {
inline int Int64ParseTester::_internal_packed_int64_hifield_size() const {
  return _internal_packed_int64_hifield().size();
}
inline int Int64ParseTester::packed_int64_hifield_size() const {
  return _internal_packed_int64_hifield_size();
}
inline void Int64ParseTester::clear_packed_int64_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packed_int64_hifield_.Clear();
}
inline ::int64_t Int64ParseTester::packed_int64_hifield(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.packed_int64_hifield)
  return _internal_packed_int64_hifield().Get(index);
}
inline void Int64ParseTester::set_packed_int64_hifield(int index, ::int64_t value) {
  _internal_mutable_packed_int64_hifield()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.packed_int64_hifield)
}
inline void Int64ParseTester::add_packed_int64_hifield(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_packed_int64_hifield()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.Int64ParseTester.packed_int64_hifield)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Int64ParseTester::packed_int64_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.Int64ParseTester.packed_int64_hifield)
  return _internal_packed_int64_hifield();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::mutable_packed_int64_hifield()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.Int64ParseTester.packed_int64_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packed_int64_hifield();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Int64ParseTester::_internal_packed_int64_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packed_int64_hifield_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64ParseTester::_internal_mutable_packed_int64_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packed_int64_hifield_;
}

// int32 other_field = 99;
inline bool Int64ParseTester::has_other_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Int64ParseTester::clear_other_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_field_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t Int64ParseTester::other_field() const {
  // @@protoc_insertion_point(field_get:edition_unittest.Int64ParseTester.other_field)
  return _internal_other_field();
}
inline void Int64ParseTester::set_other_field(::int32_t value) {
  _internal_set_other_field(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:edition_unittest.Int64ParseTester.other_field)
}
inline ::int32_t Int64ParseTester::_internal_other_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_field_;
}
inline void Int64ParseTester::_internal_set_other_field(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_field_ = value;
}

// -------------------------------------------------------------------

// InlinedStringIdxRegressionProto

// string str1 = 1;
inline bool InlinedStringIdxRegressionProto::has_str1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void InlinedStringIdxRegressionProto::clear_str1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str1_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view InlinedStringIdxRegressionProto::str1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.InlinedStringIdxRegressionProto.str1)
  return _internal_str1();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void InlinedStringIdxRegressionProto::set_str1(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str1_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.InlinedStringIdxRegressionProto.str1)
}
inline const std::string& InlinedStringIdxRegressionProto::_internal_str1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str1_.Get();
}
inline void InlinedStringIdxRegressionProto::_internal_set_str1(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str1_.Set(value, GetArena());
}

// .edition_unittest.InlinedStringIdxRegressionProto sub = 2;
inline bool InlinedStringIdxRegressionProto::has_sub() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sub_ != nullptr);
  return value;
}
inline void InlinedStringIdxRegressionProto::clear_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_ != nullptr) _impl_.sub_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::edition_unittest::InlinedStringIdxRegressionProto& InlinedStringIdxRegressionProto::_internal_sub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::InlinedStringIdxRegressionProto* p = _impl_.sub_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::InlinedStringIdxRegressionProto&>(::edition_unittest::_InlinedStringIdxRegressionProto_default_instance_);
}
inline const ::edition_unittest::InlinedStringIdxRegressionProto& InlinedStringIdxRegressionProto::sub() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.InlinedStringIdxRegressionProto.sub)
  return _internal_sub();
}
inline void InlinedStringIdxRegressionProto::unsafe_arena_set_allocated_sub(::edition_unittest::InlinedStringIdxRegressionProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sub_);
  }
  _impl_.sub_ = reinterpret_cast<::edition_unittest::InlinedStringIdxRegressionProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.InlinedStringIdxRegressionProto.sub)
}
inline ::edition_unittest::InlinedStringIdxRegressionProto* InlinedStringIdxRegressionProto::release_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::InlinedStringIdxRegressionProto* released = _impl_.sub_;
  _impl_.sub_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::InlinedStringIdxRegressionProto* InlinedStringIdxRegressionProto::unsafe_arena_release_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.InlinedStringIdxRegressionProto.sub)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::InlinedStringIdxRegressionProto* temp = _impl_.sub_;
  _impl_.sub_ = nullptr;
  return temp;
}
inline ::edition_unittest::InlinedStringIdxRegressionProto* InlinedStringIdxRegressionProto::_internal_mutable_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::InlinedStringIdxRegressionProto>(GetArena());
    _impl_.sub_ = reinterpret_cast<::edition_unittest::InlinedStringIdxRegressionProto*>(p);
  }
  return _impl_.sub_;
}
inline ::edition_unittest::InlinedStringIdxRegressionProto* InlinedStringIdxRegressionProto::mutable_sub() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::edition_unittest::InlinedStringIdxRegressionProto* _msg = _internal_mutable_sub();
  // @@protoc_insertion_point(field_mutable:edition_unittest.InlinedStringIdxRegressionProto.sub)
  return _msg;
}
inline void InlinedStringIdxRegressionProto::set_allocated_sub(::edition_unittest::InlinedStringIdxRegressionProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sub_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.sub_ = reinterpret_cast<::edition_unittest::InlinedStringIdxRegressionProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.InlinedStringIdxRegressionProto.sub)
}

// string str2 = 3;
inline bool InlinedStringIdxRegressionProto::has_str2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void InlinedStringIdxRegressionProto::clear_str2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str2_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view InlinedStringIdxRegressionProto::str2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.InlinedStringIdxRegressionProto.str2)
  return _internal_str2();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void InlinedStringIdxRegressionProto::set_str2(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.str2_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.InlinedStringIdxRegressionProto.str2)
}
inline const std::string& InlinedStringIdxRegressionProto::_internal_str2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str2_.Get();
}
inline void InlinedStringIdxRegressionProto::_internal_set_str2(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.str2_.Set(value, GetArena());
}

// bytes str3 = 4;
inline bool InlinedStringIdxRegressionProto::has_str3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void InlinedStringIdxRegressionProto::clear_str3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str3_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline absl::string_view InlinedStringIdxRegressionProto::str3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.InlinedStringIdxRegressionProto.str3)
  return _internal_str3();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void InlinedStringIdxRegressionProto::set_str3(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.str3_.SetBytes(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.InlinedStringIdxRegressionProto.str3)
}
inline const std::string& InlinedStringIdxRegressionProto::_internal_str3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str3_.Get();
}
inline void InlinedStringIdxRegressionProto::_internal_set_str3(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.str3_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// StringParseTester

// string optional_string_lowfield = 1;
inline bool StringParseTester::has_optional_string_lowfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void StringParseTester::clear_optional_string_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_string_lowfield_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view StringParseTester::optional_string_lowfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.StringParseTester.optional_string_lowfield)
  return _internal_optional_string_lowfield();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void StringParseTester::set_optional_string_lowfield(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_string_lowfield_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.optional_string_lowfield)
}
inline const std::string& StringParseTester::_internal_optional_string_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_string_lowfield_.Get();
}
inline void StringParseTester::_internal_set_optional_string_lowfield(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_string_lowfield_.Set(value, GetArena());
}

// string optional_string_midfield = 1001;
inline bool StringParseTester::has_optional_string_midfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void StringParseTester::clear_optional_string_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_string_midfield_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view StringParseTester::optional_string_midfield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.StringParseTester.optional_string_midfield)
  return _internal_optional_string_midfield();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void StringParseTester::set_optional_string_midfield(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_string_midfield_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.optional_string_midfield)
}
inline const std::string& StringParseTester::_internal_optional_string_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_string_midfield_.Get();
}
inline void StringParseTester::_internal_set_optional_string_midfield(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_string_midfield_.Set(value, GetArena());
}

// string optional_string_hifield = 1000001;
inline bool StringParseTester::has_optional_string_hifield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void StringParseTester::clear_optional_string_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_string_hifield_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline absl::string_view StringParseTester::optional_string_hifield() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.StringParseTester.optional_string_hifield)
  return _internal_optional_string_hifield();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void StringParseTester::set_optional_string_hifield(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.optional_string_hifield_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.optional_string_hifield)
}
inline const std::string& StringParseTester::_internal_optional_string_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_string_hifield_.Get();
}
inline void StringParseTester::_internal_set_optional_string_hifield(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.optional_string_hifield_.Set(value, GetArena());
}

// repeated string repeated_string_lowfield = 2;
inline int StringParseTester::_internal_repeated_string_lowfield_size() const {
  return _internal_repeated_string_lowfield().size();
}
inline int StringParseTester::repeated_string_lowfield_size() const {
  return _internal_repeated_string_lowfield_size();
}
inline void StringParseTester::clear_repeated_string_lowfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_lowfield_.Clear();
}
inline absl::string_view StringParseTester::repeated_string_lowfield(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.StringParseTester.repeated_string_lowfield)
  return _internal_repeated_string_lowfield().Get(index);
}
inline void StringParseTester::set_repeated_string_lowfield(int index, const std::string& value) {
  _internal_mutable_repeated_string_lowfield()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.repeated_string_lowfield)
}
inline void StringParseTester::set_repeated_string_lowfield(int index, std::string&& value) {
  _internal_mutable_repeated_string_lowfield()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.repeated_string_lowfield)
}
inline void StringParseTester::set_repeated_string_lowfield(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_lowfield()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.StringParseTester.repeated_string_lowfield)
}
inline void StringParseTester::set_repeated_string_lowfield(int index, absl::string_view value) {
  _internal_mutable_repeated_string_lowfield()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.StringParseTester.repeated_string_lowfield)
}
inline void StringParseTester::add_repeated_string_lowfield(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_lowfield()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.StringParseTester.repeated_string_lowfield)
}
inline void StringParseTester::add_repeated_string_lowfield(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_lowfield()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.StringParseTester.repeated_string_lowfield)
}
inline void StringParseTester::add_repeated_string_lowfield(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_lowfield()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.StringParseTester.repeated_string_lowfield)
}
inline void StringParseTester::add_repeated_string_lowfield(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_lowfield()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.StringParseTester.repeated_string_lowfield)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringParseTester::repeated_string_lowfield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.StringParseTester.repeated_string_lowfield)
  return _internal_repeated_string_lowfield();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringParseTester::mutable_repeated_string_lowfield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.StringParseTester.repeated_string_lowfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_lowfield();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringParseTester::_internal_repeated_string_lowfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_lowfield_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringParseTester::_internal_mutable_repeated_string_lowfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_lowfield_;
}

// repeated string repeated_string_midfield = 1002;
inline int StringParseTester::_internal_repeated_string_midfield_size() const {
  return _internal_repeated_string_midfield().size();
}
inline int StringParseTester::repeated_string_midfield_size() const {
  return _internal_repeated_string_midfield_size();
}
inline void StringParseTester::clear_repeated_string_midfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_midfield_.Clear();
}
inline absl::string_view StringParseTester::repeated_string_midfield(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.StringParseTester.repeated_string_midfield)
  return _internal_repeated_string_midfield().Get(index);
}
inline void StringParseTester::set_repeated_string_midfield(int index, const std::string& value) {
  _internal_mutable_repeated_string_midfield()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.repeated_string_midfield)
}
inline void StringParseTester::set_repeated_string_midfield(int index, std::string&& value) {
  _internal_mutable_repeated_string_midfield()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.repeated_string_midfield)
}
inline void StringParseTester::set_repeated_string_midfield(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_midfield()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.StringParseTester.repeated_string_midfield)
}
inline void StringParseTester::set_repeated_string_midfield(int index, absl::string_view value) {
  _internal_mutable_repeated_string_midfield()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.StringParseTester.repeated_string_midfield)
}
inline void StringParseTester::add_repeated_string_midfield(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_midfield()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.StringParseTester.repeated_string_midfield)
}
inline void StringParseTester::add_repeated_string_midfield(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_midfield()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.StringParseTester.repeated_string_midfield)
}
inline void StringParseTester::add_repeated_string_midfield(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_midfield()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.StringParseTester.repeated_string_midfield)
}
inline void StringParseTester::add_repeated_string_midfield(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_midfield()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.StringParseTester.repeated_string_midfield)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringParseTester::repeated_string_midfield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.StringParseTester.repeated_string_midfield)
  return _internal_repeated_string_midfield();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringParseTester::mutable_repeated_string_midfield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.StringParseTester.repeated_string_midfield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_midfield();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringParseTester::_internal_repeated_string_midfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_midfield_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringParseTester::_internal_mutable_repeated_string_midfield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_midfield_;
}

// repeated string repeated_string_hifield = 1000002;
inline int StringParseTester::_internal_repeated_string_hifield_size() const {
  return _internal_repeated_string_hifield().size();
}
inline int StringParseTester::repeated_string_hifield_size() const {
  return _internal_repeated_string_hifield_size();
}
inline void StringParseTester::clear_repeated_string_hifield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_hifield_.Clear();
}
inline absl::string_view StringParseTester::repeated_string_hifield(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.StringParseTester.repeated_string_hifield)
  return _internal_repeated_string_hifield().Get(index);
}
inline void StringParseTester::set_repeated_string_hifield(int index, const std::string& value) {
  _internal_mutable_repeated_string_hifield()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.repeated_string_hifield)
}
inline void StringParseTester::set_repeated_string_hifield(int index, std::string&& value) {
  _internal_mutable_repeated_string_hifield()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.StringParseTester.repeated_string_hifield)
}
inline void StringParseTester::set_repeated_string_hifield(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_hifield()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.StringParseTester.repeated_string_hifield)
}
inline void StringParseTester::set_repeated_string_hifield(int index, absl::string_view value) {
  _internal_mutable_repeated_string_hifield()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.StringParseTester.repeated_string_hifield)
}
inline void StringParseTester::add_repeated_string_hifield(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_hifield()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.StringParseTester.repeated_string_hifield)
}
inline void StringParseTester::add_repeated_string_hifield(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_hifield()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.StringParseTester.repeated_string_hifield)
}
inline void StringParseTester::add_repeated_string_hifield(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_hifield()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.StringParseTester.repeated_string_hifield)
}
inline void StringParseTester::add_repeated_string_hifield(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_hifield()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.StringParseTester.repeated_string_hifield)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringParseTester::repeated_string_hifield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.StringParseTester.repeated_string_hifield)
  return _internal_repeated_string_hifield();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringParseTester::mutable_repeated_string_hifield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.StringParseTester.repeated_string_hifield)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_hifield();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringParseTester::_internal_repeated_string_hifield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_hifield_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringParseTester::_internal_mutable_repeated_string_hifield() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_hifield_;
}

// -------------------------------------------------------------------

// BadFieldNames

// int32 OptionalInt32 = 1;
inline bool BadFieldNames::has_optionalint32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BadFieldNames::clear_optionalint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optionalint32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t BadFieldNames::optionalint32() const {
  // @@protoc_insertion_point(field_get:edition_unittest.BadFieldNames.OptionalInt32)
  return _internal_optionalint32();
}
inline void BadFieldNames::set_optionalint32(::int32_t value) {
  _internal_set_optionalint32(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:edition_unittest.BadFieldNames.OptionalInt32)
}
inline ::int32_t BadFieldNames::_internal_optionalint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optionalint32_;
}
inline void BadFieldNames::_internal_set_optionalint32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optionalint32_ = value;
}

// int32 for = 2;
inline bool BadFieldNames::has_for_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BadFieldNames::clear_for_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.for__ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t BadFieldNames::for_() const {
  // @@protoc_insertion_point(field_get:edition_unittest.BadFieldNames.for)
  return _internal_for_();
}
inline void BadFieldNames::set_for_(::int32_t value) {
  _internal_set_for_(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:edition_unittest.BadFieldNames.for)
}
inline ::int32_t BadFieldNames::_internal_for_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.for__;
}
inline void BadFieldNames::_internal_set_for_(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.for__ = value;
}

// -------------------------------------------------------------------

// TestNestedMessageRedaction

// string optional_unredacted_nested_string = 1;
inline bool TestNestedMessageRedaction::has_optional_unredacted_nested_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestNestedMessageRedaction::clear_optional_unredacted_nested_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_unredacted_nested_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view TestNestedMessageRedaction::optional_unredacted_nested_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedMessageRedaction.optional_unredacted_nested_string)
  return _internal_optional_unredacted_nested_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestNestedMessageRedaction::set_optional_unredacted_nested_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_unredacted_nested_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedMessageRedaction.optional_unredacted_nested_string)
}
inline const std::string& TestNestedMessageRedaction::_internal_optional_unredacted_nested_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_unredacted_nested_string_.Get();
}
inline void TestNestedMessageRedaction::_internal_set_optional_unredacted_nested_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_unredacted_nested_string_.Set(value, GetArena());
}

// string optional_redacted_nested_string = 2 [debug_redact = true];
inline bool TestNestedMessageRedaction::has_optional_redacted_nested_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestNestedMessageRedaction::clear_optional_redacted_nested_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_redacted_nested_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view TestNestedMessageRedaction::optional_redacted_nested_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestNestedMessageRedaction.optional_redacted_nested_string)
  return _internal_optional_redacted_nested_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void TestNestedMessageRedaction::set_optional_redacted_nested_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_redacted_nested_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.TestNestedMessageRedaction.optional_redacted_nested_string)
}
inline const std::string& TestNestedMessageRedaction::_internal_optional_redacted_nested_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_redacted_nested_string_.Get();
}
inline void TestNestedMessageRedaction::_internal_set_optional_redacted_nested_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_redacted_nested_string_.Set(value, GetArena());
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RedactedFields

// string optional_redacted_string = 1 [debug_redact = true];
inline bool RedactedFields::has_optional_redacted_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void RedactedFields::clear_optional_redacted_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_redacted_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline absl::string_view RedactedFields::optional_redacted_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.RedactedFields.optional_redacted_string)
  return _internal_optional_redacted_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void RedactedFields::set_optional_redacted_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_redacted_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.RedactedFields.optional_redacted_string)
}
inline const std::string& RedactedFields::_internal_optional_redacted_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_redacted_string_.Get();
}
inline void RedactedFields::_internal_set_optional_redacted_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_redacted_string_.Set(value, GetArena());
}

// string optional_unredacted_string = 2;
inline bool RedactedFields::has_optional_unredacted_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void RedactedFields::clear_optional_unredacted_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_unredacted_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline absl::string_view RedactedFields::optional_unredacted_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.RedactedFields.optional_unredacted_string)
  return _internal_optional_unredacted_string();
}
template <typename Arg_>
inline PROTOBUF_ALWAYS_INLINE void RedactedFields::set_optional_unredacted_string(Arg_&& arg) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_unredacted_string_.Set(static_cast<Arg_&&>(arg), GetArena());
  // @@protoc_insertion_point(field_set:edition_unittest.RedactedFields.optional_unredacted_string)
}
inline const std::string& RedactedFields::_internal_optional_unredacted_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optional_unredacted_string_.Get();
}
inline void RedactedFields::_internal_set_optional_unredacted_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_unredacted_string_.Set(value, GetArena());
}

// repeated string repeated_redacted_string = 3 [debug_redact = true];
inline int RedactedFields::_internal_repeated_redacted_string_size() const {
  return _internal_repeated_redacted_string().size();
}
inline int RedactedFields::repeated_redacted_string_size() const {
  return _internal_repeated_redacted_string_size();
}
inline void RedactedFields::clear_repeated_redacted_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_redacted_string_.Clear();
}
inline absl::string_view RedactedFields::repeated_redacted_string(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.RedactedFields.repeated_redacted_string)
  return _internal_repeated_redacted_string().Get(index);
}
inline void RedactedFields::set_repeated_redacted_string(int index, const std::string& value) {
  _internal_mutable_repeated_redacted_string()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.RedactedFields.repeated_redacted_string)
}
inline void RedactedFields::set_repeated_redacted_string(int index, std::string&& value) {
  _internal_mutable_repeated_redacted_string()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.RedactedFields.repeated_redacted_string)
}
inline void RedactedFields::set_repeated_redacted_string(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_redacted_string()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.RedactedFields.repeated_redacted_string)
}
inline void RedactedFields::set_repeated_redacted_string(int index, absl::string_view value) {
  _internal_mutable_repeated_redacted_string()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.RedactedFields.repeated_redacted_string)
}
inline void RedactedFields::add_repeated_redacted_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_redacted_string()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.RedactedFields.repeated_redacted_string)
}
inline void RedactedFields::add_repeated_redacted_string(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_redacted_string()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.RedactedFields.repeated_redacted_string)
}
inline void RedactedFields::add_repeated_redacted_string(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_redacted_string()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.RedactedFields.repeated_redacted_string)
}
inline void RedactedFields::add_repeated_redacted_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_redacted_string()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.RedactedFields.repeated_redacted_string)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RedactedFields::repeated_redacted_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.RedactedFields.repeated_redacted_string)
  return _internal_repeated_redacted_string();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RedactedFields::mutable_repeated_redacted_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.RedactedFields.repeated_redacted_string)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_redacted_string();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RedactedFields::_internal_repeated_redacted_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_redacted_string_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RedactedFields::_internal_mutable_repeated_redacted_string() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_redacted_string_;
}

// repeated string repeated_unredacted_string = 4;
inline int RedactedFields::_internal_repeated_unredacted_string_size() const {
  return _internal_repeated_unredacted_string().size();
}
inline int RedactedFields::repeated_unredacted_string_size() const {
  return _internal_repeated_unredacted_string_size();
}
inline void RedactedFields::clear_repeated_unredacted_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_unredacted_string_.Clear();
}
inline absl::string_view RedactedFields::repeated_unredacted_string(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.RedactedFields.repeated_unredacted_string)
  return _internal_repeated_unredacted_string().Get(index);
}
inline void RedactedFields::set_repeated_unredacted_string(int index, const std::string& value) {
  _internal_mutable_repeated_unredacted_string()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.RedactedFields.repeated_unredacted_string)
}
inline void RedactedFields::set_repeated_unredacted_string(int index, std::string&& value) {
  _internal_mutable_repeated_unredacted_string()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.RedactedFields.repeated_unredacted_string)
}
inline void RedactedFields::set_repeated_unredacted_string(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_unredacted_string()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.RedactedFields.repeated_unredacted_string)
}
inline void RedactedFields::set_repeated_unredacted_string(int index, absl::string_view value) {
  _internal_mutable_repeated_unredacted_string()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.RedactedFields.repeated_unredacted_string)
}
inline void RedactedFields::add_repeated_unredacted_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_unredacted_string()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.RedactedFields.repeated_unredacted_string)
}
inline void RedactedFields::add_repeated_unredacted_string(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_unredacted_string()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.RedactedFields.repeated_unredacted_string)
}
inline void RedactedFields::add_repeated_unredacted_string(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_unredacted_string()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.RedactedFields.repeated_unredacted_string)
}
inline void RedactedFields::add_repeated_unredacted_string(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_unredacted_string()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.RedactedFields.repeated_unredacted_string)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RedactedFields::repeated_unredacted_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.RedactedFields.repeated_unredacted_string)
  return _internal_repeated_unredacted_string();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RedactedFields::mutable_repeated_unredacted_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.RedactedFields.repeated_unredacted_string)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_unredacted_string();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RedactedFields::_internal_repeated_unredacted_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_unredacted_string_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RedactedFields::_internal_mutable_repeated_unredacted_string() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_unredacted_string_;
}

// .edition_unittest.TestNestedMessageRedaction optional_redacted_message = 5 [debug_redact = true];
inline bool RedactedFields::has_optional_redacted_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_redacted_message_ != nullptr);
  return value;
}
inline void RedactedFields::clear_optional_redacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_redacted_message_ != nullptr) _impl_.optional_redacted_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::edition_unittest::TestNestedMessageRedaction& RedactedFields::_internal_optional_redacted_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestNestedMessageRedaction* p = _impl_.optional_redacted_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestNestedMessageRedaction&>(::edition_unittest::_TestNestedMessageRedaction_default_instance_);
}
inline const ::edition_unittest::TestNestedMessageRedaction& RedactedFields::optional_redacted_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.RedactedFields.optional_redacted_message)
  return _internal_optional_redacted_message();
}
inline void RedactedFields::unsafe_arena_set_allocated_optional_redacted_message(::edition_unittest::TestNestedMessageRedaction* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_redacted_message_);
  }
  _impl_.optional_redacted_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageRedaction*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.RedactedFields.optional_redacted_message)
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::release_optional_redacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestNestedMessageRedaction* released = _impl_.optional_redacted_message_;
  _impl_.optional_redacted_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::unsafe_arena_release_optional_redacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.RedactedFields.optional_redacted_message)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::edition_unittest::TestNestedMessageRedaction* temp = _impl_.optional_redacted_message_;
  _impl_.optional_redacted_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::_internal_mutable_optional_redacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_redacted_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestNestedMessageRedaction>(GetArena());
    _impl_.optional_redacted_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageRedaction*>(p);
  }
  return _impl_.optional_redacted_message_;
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::mutable_optional_redacted_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::edition_unittest::TestNestedMessageRedaction* _msg = _internal_mutable_optional_redacted_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.RedactedFields.optional_redacted_message)
  return _msg;
}
inline void RedactedFields::set_allocated_optional_redacted_message(::edition_unittest::TestNestedMessageRedaction* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_redacted_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.optional_redacted_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageRedaction*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.RedactedFields.optional_redacted_message)
}

// .edition_unittest.TestNestedMessageRedaction optional_unredacted_message = 6;
inline bool RedactedFields::has_optional_unredacted_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_unredacted_message_ != nullptr);
  return value;
}
inline void RedactedFields::clear_optional_unredacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_unredacted_message_ != nullptr) _impl_.optional_unredacted_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::edition_unittest::TestNestedMessageRedaction& RedactedFields::_internal_optional_unredacted_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::edition_unittest::TestNestedMessageRedaction* p = _impl_.optional_unredacted_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::edition_unittest::TestNestedMessageRedaction&>(::edition_unittest::_TestNestedMessageRedaction_default_instance_);
}
inline const ::edition_unittest::TestNestedMessageRedaction& RedactedFields::optional_unredacted_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.RedactedFields.optional_unredacted_message)
  return _internal_optional_unredacted_message();
}
inline void RedactedFields::unsafe_arena_set_allocated_optional_unredacted_message(::edition_unittest::TestNestedMessageRedaction* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_unredacted_message_);
  }
  _impl_.optional_unredacted_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageRedaction*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:edition_unittest.RedactedFields.optional_unredacted_message)
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::release_optional_unredacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::TestNestedMessageRedaction* released = _impl_.optional_unredacted_message_;
  _impl_.optional_unredacted_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::unsafe_arena_release_optional_unredacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edition_unittest.RedactedFields.optional_unredacted_message)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::edition_unittest::TestNestedMessageRedaction* temp = _impl_.optional_unredacted_message_;
  _impl_.optional_unredacted_message_ = nullptr;
  return temp;
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::_internal_mutable_optional_unredacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optional_unredacted_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::edition_unittest::TestNestedMessageRedaction>(GetArena());
    _impl_.optional_unredacted_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageRedaction*>(p);
  }
  return _impl_.optional_unredacted_message_;
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::mutable_optional_unredacted_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::edition_unittest::TestNestedMessageRedaction* _msg = _internal_mutable_optional_unredacted_message();
  // @@protoc_insertion_point(field_mutable:edition_unittest.RedactedFields.optional_unredacted_message)
  return _msg;
}
inline void RedactedFields::set_allocated_optional_unredacted_message(::edition_unittest::TestNestedMessageRedaction* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optional_unredacted_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.optional_unredacted_message_ = reinterpret_cast<::edition_unittest::TestNestedMessageRedaction*>(value);
  // @@protoc_insertion_point(field_set_allocated:edition_unittest.RedactedFields.optional_unredacted_message)
}

// repeated .edition_unittest.TestNestedMessageRedaction repeated_redacted_message = 7 [debug_redact = true];
inline int RedactedFields::_internal_repeated_redacted_message_size() const {
  return _internal_repeated_redacted_message().size();
}
inline int RedactedFields::repeated_redacted_message_size() const {
  return _internal_repeated_redacted_message_size();
}
inline void RedactedFields::clear_repeated_redacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_redacted_message_.Clear();
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::mutable_repeated_redacted_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.RedactedFields.repeated_redacted_message)
  return _internal_mutable_repeated_redacted_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>* RedactedFields::mutable_repeated_redacted_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.RedactedFields.repeated_redacted_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_redacted_message();
}
inline const ::edition_unittest::TestNestedMessageRedaction& RedactedFields::repeated_redacted_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.RedactedFields.repeated_redacted_message)
  return _internal_repeated_redacted_message().Get(index);
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::add_repeated_redacted_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestNestedMessageRedaction* _add = _internal_mutable_repeated_redacted_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.RedactedFields.repeated_redacted_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>& RedactedFields::repeated_redacted_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.RedactedFields.repeated_redacted_message)
  return _internal_repeated_redacted_message();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>&
RedactedFields::_internal_repeated_redacted_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_redacted_message_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>*
RedactedFields::_internal_mutable_repeated_redacted_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_redacted_message_;
}

// repeated .edition_unittest.TestNestedMessageRedaction repeated_unredacted_message = 8;
inline int RedactedFields::_internal_repeated_unredacted_message_size() const {
  return _internal_repeated_unredacted_message().size();
}
inline int RedactedFields::repeated_unredacted_message_size() const {
  return _internal_repeated_unredacted_message_size();
}
inline void RedactedFields::clear_repeated_unredacted_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_unredacted_message_.Clear();
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::mutable_repeated_unredacted_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edition_unittest.RedactedFields.repeated_unredacted_message)
  return _internal_mutable_repeated_unredacted_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>* RedactedFields::mutable_repeated_unredacted_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.RedactedFields.repeated_unredacted_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_unredacted_message();
}
inline const ::edition_unittest::TestNestedMessageRedaction& RedactedFields::repeated_unredacted_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.RedactedFields.repeated_unredacted_message)
  return _internal_repeated_unredacted_message().Get(index);
}
inline ::edition_unittest::TestNestedMessageRedaction* RedactedFields::add_repeated_unredacted_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edition_unittest::TestNestedMessageRedaction* _add = _internal_mutable_repeated_unredacted_message()->Add();
  // @@protoc_insertion_point(field_add:edition_unittest.RedactedFields.repeated_unredacted_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>& RedactedFields::repeated_unredacted_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.RedactedFields.repeated_unredacted_message)
  return _internal_repeated_unredacted_message();
}
inline const ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>&
RedactedFields::_internal_repeated_unredacted_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_unredacted_message_;
}
inline ::google::protobuf::RepeatedPtrField<::edition_unittest::TestNestedMessageRedaction>*
RedactedFields::_internal_mutable_repeated_unredacted_message() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_unredacted_message_;
}

// map<string, string> map_redacted_string = 9 [debug_redact = true];
inline int RedactedFields::_internal_map_redacted_string_size() const {
  return _internal_map_redacted_string().size();
}
inline int RedactedFields::map_redacted_string_size() const {
  return _internal_map_redacted_string_size();
}
inline void RedactedFields::clear_map_redacted_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_redacted_string_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& RedactedFields::_internal_map_redacted_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_redacted_string_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& RedactedFields::map_redacted_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:edition_unittest.RedactedFields.map_redacted_string)
  return _internal_map_redacted_string();
}
inline ::google::protobuf::Map<std::string, std::string>* RedactedFields::_internal_mutable_map_redacted_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_redacted_string_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* RedactedFields::mutable_map_redacted_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:edition_unittest.RedactedFields.map_redacted_string)
  return _internal_mutable_map_redacted_string();
}

// map<string, string> map_unredacted_string = 10;
inline int RedactedFields::_internal_map_unredacted_string_size() const {
  return _internal_map_unredacted_string().size();
}
inline int RedactedFields::map_unredacted_string_size() const {
  return _internal_map_unredacted_string_size();
}
inline void RedactedFields::clear_map_unredacted_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_unredacted_string_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& RedactedFields::_internal_map_unredacted_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_unredacted_string_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& RedactedFields::map_unredacted_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:edition_unittest.RedactedFields.map_unredacted_string)
  return _internal_map_unredacted_string();
}
inline ::google::protobuf::Map<std::string, std::string>* RedactedFields::_internal_mutable_map_unredacted_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.map_unredacted_string_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* RedactedFields::mutable_map_unredacted_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:edition_unittest.RedactedFields.map_unredacted_string)
  return _internal_mutable_map_unredacted_string();
}

// -------------------------------------------------------------------

// TestCord

// bytes optional_bytes_cord = 1 [ctype = CORD];
inline bool TestCord::has_optional_bytes_cord() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestCord::clear_optional_bytes_cord() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bytes_cord_.Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::absl::Cord& TestCord::_internal_optional_bytes_cord() const {
  return _impl_.optional_bytes_cord_;
}
inline const ::absl::Cord& TestCord::optional_bytes_cord() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCord.optional_bytes_cord)
  return _internal_optional_bytes_cord();
}
inline void TestCord::_internal_set_optional_bytes_cord(
    const ::absl::Cord& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_bytes_cord_ = value;
}
inline void TestCord::set_optional_bytes_cord(const ::absl::Cord& value) {
  _internal_set_optional_bytes_cord(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestCord.optional_bytes_cord)
}
inline void TestCord::set_optional_bytes_cord(::absl::string_view value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.optional_bytes_cord_ = value;
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestCord.optional_bytes_cord)
}
inline ::absl::Cord* TestCord::_internal_mutable_optional_bytes_cord() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return &_impl_.optional_bytes_cord_;
}

// bytes optional_bytes_cord_default = 2 [default = "hello", ctype = CORD];
inline bool TestCord::has_optional_bytes_cord_default() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestCord::clear_optional_bytes_cord_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optional_bytes_cord_default_ = ::absl::string_view("hello", 5);
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::absl::Cord& TestCord::_internal_optional_bytes_cord_default() const {
  return _impl_.optional_bytes_cord_default_;
}
inline const ::absl::Cord& TestCord::optional_bytes_cord_default() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestCord.optional_bytes_cord_default)
  return _internal_optional_bytes_cord_default();
}
inline void TestCord::_internal_set_optional_bytes_cord_default(
    const ::absl::Cord& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_bytes_cord_default_ = value;
}
inline void TestCord::set_optional_bytes_cord_default(const ::absl::Cord& value) {
  _internal_set_optional_bytes_cord_default(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestCord.optional_bytes_cord_default)
}
inline void TestCord::set_optional_bytes_cord_default(::absl::string_view value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.optional_bytes_cord_default_ = value;
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestCord.optional_bytes_cord_default)
}
inline ::absl::Cord* TestCord::_internal_mutable_optional_bytes_cord_default() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return &_impl_.optional_bytes_cord_default_;
}

// -------------------------------------------------------------------

// TestPackedEnumSmallRange

// repeated .edition_unittest.TestPackedEnumSmallRange.NestedEnum vals = 1 [features = {
inline int TestPackedEnumSmallRange::_internal_vals_size() const {
  return _internal_vals().size();
}
inline int TestPackedEnumSmallRange::vals_size() const {
  return _internal_vals_size();
}
inline void TestPackedEnumSmallRange::clear_vals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vals_.Clear();
}
inline ::edition_unittest::TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange::vals(int index) const {
  // @@protoc_insertion_point(field_get:edition_unittest.TestPackedEnumSmallRange.vals)
  return static_cast<::edition_unittest::TestPackedEnumSmallRange_NestedEnum>(_internal_vals().Get(index));
}
inline void TestPackedEnumSmallRange::set_vals(int index, ::edition_unittest::TestPackedEnumSmallRange_NestedEnum value) {
  assert(::edition_unittest::TestPackedEnumSmallRange_NestedEnum_IsValid(value));
  _internal_mutable_vals()->Set(index, value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestPackedEnumSmallRange.vals)
}
inline void TestPackedEnumSmallRange::add_vals(::edition_unittest::TestPackedEnumSmallRange_NestedEnum value) {
  assert(::edition_unittest::TestPackedEnumSmallRange_NestedEnum_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_vals()->Add(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestPackedEnumSmallRange.vals)
}
inline const ::google::protobuf::RepeatedField<int>& TestPackedEnumSmallRange::vals() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestPackedEnumSmallRange.vals)
  return _internal_vals();
}
inline ::google::protobuf::RepeatedField<int>* TestPackedEnumSmallRange::mutable_vals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestPackedEnumSmallRange.vals)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vals();
}
inline const ::google::protobuf::RepeatedField<int>& TestPackedEnumSmallRange::_internal_vals()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vals_;
}
inline ::google::protobuf::RepeatedField<int>* TestPackedEnumSmallRange::_internal_mutable_vals() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vals_;
}

// -------------------------------------------------------------------

// EnumsForBenchmark

// -------------------------------------------------------------------

// TestMessageWithManyRepeatedPtrFields

// repeated string repeated_string_1 = 1;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_1_size() const {
  return _internal_repeated_string_1().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_1_size() const {
  return _internal_repeated_string_1_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_1_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_1(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
  return _internal_repeated_string_1().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_1(int index, const std::string& value) {
  _internal_mutable_repeated_string_1()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_1(int index, std::string&& value) {
  _internal_mutable_repeated_string_1()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_1(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_1()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_1(int index, absl::string_view value) {
  _internal_mutable_repeated_string_1()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_1(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_1()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_1(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_1()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_1(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_1()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_1(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_1()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
  return _internal_repeated_string_1();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_1();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_1_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_1() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_1_;
}

// repeated string repeated_string_2 = 2;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_2_size() const {
  return _internal_repeated_string_2().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_2_size() const {
  return _internal_repeated_string_2_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_2_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
  return _internal_repeated_string_2().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_2(int index, const std::string& value) {
  _internal_mutable_repeated_string_2()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_2(int index, std::string&& value) {
  _internal_mutable_repeated_string_2()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_2(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_2()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_2(int index, absl::string_view value) {
  _internal_mutable_repeated_string_2()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_2()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_2(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_2()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_2(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_2()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_2(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_2()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
  return _internal_repeated_string_2();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_2();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_2_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_2_;
}

// repeated string repeated_string_3 = 3;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_3_size() const {
  return _internal_repeated_string_3().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_3_size() const {
  return _internal_repeated_string_3_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_3_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_3(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
  return _internal_repeated_string_3().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_3(int index, const std::string& value) {
  _internal_mutable_repeated_string_3()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_3(int index, std::string&& value) {
  _internal_mutable_repeated_string_3()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_3(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_3()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_3(int index, absl::string_view value) {
  _internal_mutable_repeated_string_3()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_3(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_3()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_3(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_3()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_3(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_3()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_3(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_3()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
  return _internal_repeated_string_3();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_3();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_3_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_3() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_3_;
}

// repeated string repeated_string_4 = 4;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_4_size() const {
  return _internal_repeated_string_4().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_4_size() const {
  return _internal_repeated_string_4_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_4_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_4(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
  return _internal_repeated_string_4().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_4(int index, const std::string& value) {
  _internal_mutable_repeated_string_4()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_4(int index, std::string&& value) {
  _internal_mutable_repeated_string_4()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_4(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_4()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_4(int index, absl::string_view value) {
  _internal_mutable_repeated_string_4()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_4(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_4()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_4(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_4()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_4(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_4()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_4(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_4()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_4() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
  return _internal_repeated_string_4();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_4() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_4)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_4();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_4_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_4() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_4_;
}

// repeated string repeated_string_5 = 5;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_5_size() const {
  return _internal_repeated_string_5().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_5_size() const {
  return _internal_repeated_string_5_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_5_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_5(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
  return _internal_repeated_string_5().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_5(int index, const std::string& value) {
  _internal_mutable_repeated_string_5()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_5(int index, std::string&& value) {
  _internal_mutable_repeated_string_5()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_5(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_5()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_5(int index, absl::string_view value) {
  _internal_mutable_repeated_string_5()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_5()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_5(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_5()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_5(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_5()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_5(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_5()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_5() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
  return _internal_repeated_string_5();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_5)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_5();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_5_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_5() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_5_;
}

// repeated string repeated_string_6 = 6;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_6_size() const {
  return _internal_repeated_string_6().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_6_size() const {
  return _internal_repeated_string_6_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_6_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_6(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
  return _internal_repeated_string_6().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_6(int index, const std::string& value) {
  _internal_mutable_repeated_string_6()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_6(int index, std::string&& value) {
  _internal_mutable_repeated_string_6()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_6(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_6()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_6(int index, absl::string_view value) {
  _internal_mutable_repeated_string_6()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_6(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_6()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_6(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_6()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_6(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_6()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_6(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_6()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_6() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
  return _internal_repeated_string_6();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_6)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_6();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_6_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_6() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_6_;
}

// repeated string repeated_string_7 = 7;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_7_size() const {
  return _internal_repeated_string_7().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_7_size() const {
  return _internal_repeated_string_7_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_7_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_7(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
  return _internal_repeated_string_7().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_7(int index, const std::string& value) {
  _internal_mutable_repeated_string_7()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_7(int index, std::string&& value) {
  _internal_mutable_repeated_string_7()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_7(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_7()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_7(int index, absl::string_view value) {
  _internal_mutable_repeated_string_7()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_7(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_7()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_7(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_7()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_7(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_7()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_7(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_7()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_7() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
  return _internal_repeated_string_7();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_7() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_7)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_7();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_7_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_7() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_7_;
}

// repeated string repeated_string_8 = 8;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_8_size() const {
  return _internal_repeated_string_8().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_8_size() const {
  return _internal_repeated_string_8_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_8_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_8(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
  return _internal_repeated_string_8().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_8(int index, const std::string& value) {
  _internal_mutable_repeated_string_8()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_8(int index, std::string&& value) {
  _internal_mutable_repeated_string_8()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_8(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_8()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_8(int index, absl::string_view value) {
  _internal_mutable_repeated_string_8()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_8(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_8()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_8(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_8()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_8(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_8()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_8(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_8()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_8() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
  return _internal_repeated_string_8();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_8() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_8)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_8();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_8_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_8() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_8_;
}

// repeated string repeated_string_9 = 9;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_9_size() const {
  return _internal_repeated_string_9().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_9_size() const {
  return _internal_repeated_string_9_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_9_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_9(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
  return _internal_repeated_string_9().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_9(int index, const std::string& value) {
  _internal_mutable_repeated_string_9()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_9(int index, std::string&& value) {
  _internal_mutable_repeated_string_9()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_9(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_9()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_9(int index, absl::string_view value) {
  _internal_mutable_repeated_string_9()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_9(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_9()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_9(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_9()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_9(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_9()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_9(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_9()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_9() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
  return _internal_repeated_string_9();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_9() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_9)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_9();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_9_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_9() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_9_;
}

// repeated string repeated_string_10 = 10;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_10_size() const {
  return _internal_repeated_string_10().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_10_size() const {
  return _internal_repeated_string_10_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_10_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_10(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
  return _internal_repeated_string_10().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_10(int index, const std::string& value) {
  _internal_mutable_repeated_string_10()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_10(int index, std::string&& value) {
  _internal_mutable_repeated_string_10()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_10(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_10()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_10(int index, absl::string_view value) {
  _internal_mutable_repeated_string_10()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_10(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_10()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_10(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_10()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_10(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_10()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_10(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_10()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_10() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
  return _internal_repeated_string_10();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_10() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_10)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_10();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_10_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_10() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_10_;
}

// repeated string repeated_string_11 = 11;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_11_size() const {
  return _internal_repeated_string_11().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_11_size() const {
  return _internal_repeated_string_11_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_11_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_11(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
  return _internal_repeated_string_11().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_11(int index, const std::string& value) {
  _internal_mutable_repeated_string_11()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_11(int index, std::string&& value) {
  _internal_mutable_repeated_string_11()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_11(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_11()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_11(int index, absl::string_view value) {
  _internal_mutable_repeated_string_11()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_11(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_11()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_11(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_11()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_11(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_11()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_11(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_11()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_11() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
  return _internal_repeated_string_11();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_11() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_11)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_11();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_11_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_11() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_11_;
}

// repeated string repeated_string_12 = 12;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_12_size() const {
  return _internal_repeated_string_12().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_12_size() const {
  return _internal_repeated_string_12_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_12_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_12(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
  return _internal_repeated_string_12().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_12(int index, const std::string& value) {
  _internal_mutable_repeated_string_12()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_12(int index, std::string&& value) {
  _internal_mutable_repeated_string_12()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_12(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_12()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_12(int index, absl::string_view value) {
  _internal_mutable_repeated_string_12()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_12(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_12()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_12(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_12()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_12(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_12()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_12(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_12()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_12() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
  return _internal_repeated_string_12();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_12() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_12)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_12();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_12_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_12() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_12_;
}

// repeated string repeated_string_13 = 13;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_13_size() const {
  return _internal_repeated_string_13().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_13_size() const {
  return _internal_repeated_string_13_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_13_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_13(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
  return _internal_repeated_string_13().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_13(int index, const std::string& value) {
  _internal_mutable_repeated_string_13()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_13(int index, std::string&& value) {
  _internal_mutable_repeated_string_13()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_13(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_13()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_13(int index, absl::string_view value) {
  _internal_mutable_repeated_string_13()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_13(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_13()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_13(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_13()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_13(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_13()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_13(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_13()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_13() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
  return _internal_repeated_string_13();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_13() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_13)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_13();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_13_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_13() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_13_;
}

// repeated string repeated_string_14 = 14;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_14_size() const {
  return _internal_repeated_string_14().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_14_size() const {
  return _internal_repeated_string_14_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_14_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_14(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
  return _internal_repeated_string_14().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_14(int index, const std::string& value) {
  _internal_mutable_repeated_string_14()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_14(int index, std::string&& value) {
  _internal_mutable_repeated_string_14()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_14(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_14()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_14(int index, absl::string_view value) {
  _internal_mutable_repeated_string_14()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_14(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_14()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_14(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_14()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_14(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_14()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_14(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_14()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_14() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
  return _internal_repeated_string_14();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_14() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_14)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_14();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_14_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_14() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_14_;
}

// repeated string repeated_string_15 = 15;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_15_size() const {
  return _internal_repeated_string_15().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_15_size() const {
  return _internal_repeated_string_15_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_15_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_15(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
  return _internal_repeated_string_15().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_15(int index, const std::string& value) {
  _internal_mutable_repeated_string_15()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_15(int index, std::string&& value) {
  _internal_mutable_repeated_string_15()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_15(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_15()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_15(int index, absl::string_view value) {
  _internal_mutable_repeated_string_15()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_15(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_15()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_15(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_15()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_15(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_15()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_15(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_15()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_15() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
  return _internal_repeated_string_15();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_15() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_15)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_15();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_15_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_15() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_15_;
}

// repeated string repeated_string_16 = 16;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_16_size() const {
  return _internal_repeated_string_16().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_16_size() const {
  return _internal_repeated_string_16_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_16_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_16(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
  return _internal_repeated_string_16().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_16(int index, const std::string& value) {
  _internal_mutable_repeated_string_16()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_16(int index, std::string&& value) {
  _internal_mutable_repeated_string_16()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_16(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_16()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_16(int index, absl::string_view value) {
  _internal_mutable_repeated_string_16()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_16(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_16()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_16(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_16()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_16(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_16()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_16(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_16()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_16() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
  return _internal_repeated_string_16();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_16() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_16)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_16();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_16_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_16() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_16_;
}

// repeated string repeated_string_17 = 17;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_17_size() const {
  return _internal_repeated_string_17().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_17_size() const {
  return _internal_repeated_string_17_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_17_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_17(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
  return _internal_repeated_string_17().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_17(int index, const std::string& value) {
  _internal_mutable_repeated_string_17()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_17(int index, std::string&& value) {
  _internal_mutable_repeated_string_17()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_17(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_17()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_17(int index, absl::string_view value) {
  _internal_mutable_repeated_string_17()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_17(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_17()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_17(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_17()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_17(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_17()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_17(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_17()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_17() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
  return _internal_repeated_string_17();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_17() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_17)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_17();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_17_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_17() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_17_;
}

// repeated string repeated_string_18 = 18;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_18_size() const {
  return _internal_repeated_string_18().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_18_size() const {
  return _internal_repeated_string_18_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_18_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_18(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
  return _internal_repeated_string_18().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_18(int index, const std::string& value) {
  _internal_mutable_repeated_string_18()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_18(int index, std::string&& value) {
  _internal_mutable_repeated_string_18()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_18(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_18()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_18(int index, absl::string_view value) {
  _internal_mutable_repeated_string_18()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_18(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_18()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_18(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_18()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_18(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_18()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_18(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_18()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_18() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
  return _internal_repeated_string_18();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_18() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_18)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_18();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_18_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_18() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_18_;
}

// repeated string repeated_string_19 = 19;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_19_size() const {
  return _internal_repeated_string_19().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_19_size() const {
  return _internal_repeated_string_19_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_19_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_19(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
  return _internal_repeated_string_19().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_19(int index, const std::string& value) {
  _internal_mutable_repeated_string_19()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_19(int index, std::string&& value) {
  _internal_mutable_repeated_string_19()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_19(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_19()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_19(int index, absl::string_view value) {
  _internal_mutable_repeated_string_19()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_19(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_19()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_19(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_19()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_19(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_19()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_19(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_19()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_19() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
  return _internal_repeated_string_19();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_19() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_19)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_19();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_19_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_19() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_19_;
}

// repeated string repeated_string_20 = 20;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_20_size() const {
  return _internal_repeated_string_20().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_20_size() const {
  return _internal_repeated_string_20_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_20_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_20(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
  return _internal_repeated_string_20().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_20(int index, const std::string& value) {
  _internal_mutable_repeated_string_20()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_20(int index, std::string&& value) {
  _internal_mutable_repeated_string_20()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_20(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_20()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_20(int index, absl::string_view value) {
  _internal_mutable_repeated_string_20()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_20(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_20()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_20(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_20()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_20(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_20()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_20(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_20()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_20() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
  return _internal_repeated_string_20();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_20() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_20)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_20();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_20_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_20() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_20_;
}

// repeated string repeated_string_21 = 21;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_21_size() const {
  return _internal_repeated_string_21().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_21_size() const {
  return _internal_repeated_string_21_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_21_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_21(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
  return _internal_repeated_string_21().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_21(int index, const std::string& value) {
  _internal_mutable_repeated_string_21()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_21(int index, std::string&& value) {
  _internal_mutable_repeated_string_21()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_21(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_21()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_21(int index, absl::string_view value) {
  _internal_mutable_repeated_string_21()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_21(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_21()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_21(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_21()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_21(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_21()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_21(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_21()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_21() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
  return _internal_repeated_string_21();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_21() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_21)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_21();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_21_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_21() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_21_;
}

// repeated string repeated_string_22 = 22;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_22_size() const {
  return _internal_repeated_string_22().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_22_size() const {
  return _internal_repeated_string_22_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_22_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_22(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
  return _internal_repeated_string_22().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_22(int index, const std::string& value) {
  _internal_mutable_repeated_string_22()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_22(int index, std::string&& value) {
  _internal_mutable_repeated_string_22()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_22(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_22()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_22(int index, absl::string_view value) {
  _internal_mutable_repeated_string_22()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_22(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_22()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_22(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_22()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_22(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_22()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_22(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_22()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_22() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
  return _internal_repeated_string_22();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_22() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_22)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_22();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_22_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_22() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_22_;
}

// repeated string repeated_string_23 = 23;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_23_size() const {
  return _internal_repeated_string_23().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_23_size() const {
  return _internal_repeated_string_23_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_23_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_23(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
  return _internal_repeated_string_23().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_23(int index, const std::string& value) {
  _internal_mutable_repeated_string_23()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_23(int index, std::string&& value) {
  _internal_mutable_repeated_string_23()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_23(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_23()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_23(int index, absl::string_view value) {
  _internal_mutable_repeated_string_23()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_23(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_23()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_23(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_23()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_23(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_23()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_23(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_23()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_23() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
  return _internal_repeated_string_23();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_23() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_23)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_23();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_23_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_23() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_23_;
}

// repeated string repeated_string_24 = 24;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_24_size() const {
  return _internal_repeated_string_24().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_24_size() const {
  return _internal_repeated_string_24_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_24_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_24(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
  return _internal_repeated_string_24().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_24(int index, const std::string& value) {
  _internal_mutable_repeated_string_24()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_24(int index, std::string&& value) {
  _internal_mutable_repeated_string_24()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_24(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_24()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_24(int index, absl::string_view value) {
  _internal_mutable_repeated_string_24()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_24(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_24()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_24(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_24()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_24(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_24()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_24(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_24()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_24() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
  return _internal_repeated_string_24();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_24() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_24)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_24();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_24_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_24() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_24_;
}

// repeated string repeated_string_25 = 25;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_25_size() const {
  return _internal_repeated_string_25().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_25_size() const {
  return _internal_repeated_string_25_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_25_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_25(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
  return _internal_repeated_string_25().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_25(int index, const std::string& value) {
  _internal_mutable_repeated_string_25()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_25(int index, std::string&& value) {
  _internal_mutable_repeated_string_25()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_25(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_25()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_25(int index, absl::string_view value) {
  _internal_mutable_repeated_string_25()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_25(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_25()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_25(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_25()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_25(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_25()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_25(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_25()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_25() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
  return _internal_repeated_string_25();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_25() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_25)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_25();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_25_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_25() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_25_;
}

// repeated string repeated_string_26 = 26;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_26_size() const {
  return _internal_repeated_string_26().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_26_size() const {
  return _internal_repeated_string_26_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_26_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_26(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
  return _internal_repeated_string_26().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_26(int index, const std::string& value) {
  _internal_mutable_repeated_string_26()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_26(int index, std::string&& value) {
  _internal_mutable_repeated_string_26()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_26(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_26()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_26(int index, absl::string_view value) {
  _internal_mutable_repeated_string_26()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_26(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_26()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_26(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_26()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_26(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_26()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_26(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_26()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_26() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
  return _internal_repeated_string_26();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_26() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_26)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_26();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_26_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_26() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_26_;
}

// repeated string repeated_string_27 = 27;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_27_size() const {
  return _internal_repeated_string_27().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_27_size() const {
  return _internal_repeated_string_27_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_27_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_27(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
  return _internal_repeated_string_27().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_27(int index, const std::string& value) {
  _internal_mutable_repeated_string_27()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_27(int index, std::string&& value) {
  _internal_mutable_repeated_string_27()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_27(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_27()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_27(int index, absl::string_view value) {
  _internal_mutable_repeated_string_27()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_27(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_27()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_27(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_27()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_27(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_27()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_27(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_27()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_27() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
  return _internal_repeated_string_27();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_27() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_27)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_27();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_27_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_27() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_27_;
}

// repeated string repeated_string_28 = 28;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_28_size() const {
  return _internal_repeated_string_28().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_28_size() const {
  return _internal_repeated_string_28_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_28_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_28(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
  return _internal_repeated_string_28().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_28(int index, const std::string& value) {
  _internal_mutable_repeated_string_28()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_28(int index, std::string&& value) {
  _internal_mutable_repeated_string_28()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_28(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_28()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_28(int index, absl::string_view value) {
  _internal_mutable_repeated_string_28()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_28(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_28()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_28(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_28()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_28(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_28()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_28(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_28()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_28() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
  return _internal_repeated_string_28();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_28() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_28)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_28();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_28_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_28() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_28_;
}

// repeated string repeated_string_29 = 29;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_29_size() const {
  return _internal_repeated_string_29().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_29_size() const {
  return _internal_repeated_string_29_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_29_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_29(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
  return _internal_repeated_string_29().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_29(int index, const std::string& value) {
  _internal_mutable_repeated_string_29()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_29(int index, std::string&& value) {
  _internal_mutable_repeated_string_29()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_29(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_29()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_29(int index, absl::string_view value) {
  _internal_mutable_repeated_string_29()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_29(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_29()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_29(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_29()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_29(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_29()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_29(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_29()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_29() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
  return _internal_repeated_string_29();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_29() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_29)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_29();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_29() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_29_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_29() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_29_;
}

// repeated string repeated_string_30 = 30;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_30_size() const {
  return _internal_repeated_string_30().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_30_size() const {
  return _internal_repeated_string_30_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_30_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_30(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
  return _internal_repeated_string_30().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_30(int index, const std::string& value) {
  _internal_mutable_repeated_string_30()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_30(int index, std::string&& value) {
  _internal_mutable_repeated_string_30()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_30(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_30()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_30(int index, absl::string_view value) {
  _internal_mutable_repeated_string_30()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_30(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_30()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_30(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_30()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_30(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_30()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_30(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_30()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_30() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
  return _internal_repeated_string_30();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_30() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_30)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_30();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_30_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_30() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_30_;
}

// repeated string repeated_string_31 = 31;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_31_size() const {
  return _internal_repeated_string_31().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_31_size() const {
  return _internal_repeated_string_31_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_31_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_31(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
  return _internal_repeated_string_31().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_31(int index, const std::string& value) {
  _internal_mutable_repeated_string_31()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_31(int index, std::string&& value) {
  _internal_mutable_repeated_string_31()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_31(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_31()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_31(int index, absl::string_view value) {
  _internal_mutable_repeated_string_31()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_31(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_31()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_31(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_31()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_31(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_31()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_31(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_31()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_31() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
  return _internal_repeated_string_31();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_31() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_31)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_31();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_31() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_31_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_31() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_31_;
}

// repeated string repeated_string_32 = 32;
inline int TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_32_size() const {
  return _internal_repeated_string_32().size();
}
inline int TestMessageWithManyRepeatedPtrFields::repeated_string_32_size() const {
  return _internal_repeated_string_32_size();
}
inline void TestMessageWithManyRepeatedPtrFields::clear_repeated_string_32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repeated_string_32_.Clear();
}
inline absl::string_view TestMessageWithManyRepeatedPtrFields::repeated_string_32(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
  return _internal_repeated_string_32().Get(index);
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_32(int index, const std::string& value) {
  _internal_mutable_repeated_string_32()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_32(int index, std::string&& value) {
  _internal_mutable_repeated_string_32()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_32(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated_string_32()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
}
inline void TestMessageWithManyRepeatedPtrFields::set_repeated_string_32(int index, absl::string_view value) {
  _internal_mutable_repeated_string_32()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_32(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_32()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_32(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_32()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_32(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_32()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
}
inline void TestMessageWithManyRepeatedPtrFields::add_repeated_string_32(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_repeated_string_32()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::repeated_string_32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
  return _internal_repeated_string_32();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::mutable_repeated_string_32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edition_unittest.TestMessageWithManyRepeatedPtrFields.repeated_string_32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_repeated_string_32();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestMessageWithManyRepeatedPtrFields::_internal_repeated_string_32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repeated_string_32_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestMessageWithManyRepeatedPtrFields::_internal_mutable_repeated_string_32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.repeated_string_32_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace edition_unittest


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::edition_unittest::TestAllTypes_NestedEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestAllTypes_NestedEnum>() {
  return ::edition_unittest::TestAllTypes_NestedEnum_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestRequiredEnumNoMask_NestedEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestRequiredEnumNoMask_NestedEnum>() {
  return ::edition_unittest::TestRequiredEnumNoMask_NestedEnum_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestRequiredEnumMulti_NestedEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestRequiredEnumMulti_NestedEnum>() {
  return ::edition_unittest::TestRequiredEnumMulti_NestedEnum_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestRequiredNoMaskMulti_NestedEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestRequiredNoMaskMulti_NestedEnum>() {
  return ::edition_unittest::TestRequiredNoMaskMulti_NestedEnum_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestOneof2_NestedEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestOneof2_NestedEnum>() {
  return ::edition_unittest::TestOneof2_NestedEnum_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestDynamicExtensions_DynamicEnumType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestDynamicExtensions_DynamicEnumType>() {
  return ::edition_unittest::TestDynamicExtensions_DynamicEnumType_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::EnumParseTester_SeqSmall0> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::EnumParseTester_SeqSmall0>() {
  return ::edition_unittest::EnumParseTester_SeqSmall0_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::EnumParseTester_SeqSmall1> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::EnumParseTester_SeqSmall1>() {
  return ::edition_unittest::EnumParseTester_SeqSmall1_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::EnumParseTester_SeqLarge> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::EnumParseTester_SeqLarge>() {
  return ::edition_unittest::EnumParseTester_SeqLarge_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::EnumParseTester_Arbitrary> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::EnumParseTester_Arbitrary>() {
  return ::edition_unittest::EnumParseTester_Arbitrary_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestPackedEnumSmallRange_NestedEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestPackedEnumSmallRange_NestedEnum>() {
  return ::edition_unittest::TestPackedEnumSmallRange_NestedEnum_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::EnumsForBenchmark_Flat> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::EnumsForBenchmark_Flat>() {
  return ::edition_unittest::EnumsForBenchmark_Flat_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::EnumsForBenchmark_AlmostFlat> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::EnumsForBenchmark_AlmostFlat>() {
  return ::edition_unittest::EnumsForBenchmark_AlmostFlat_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::EnumsForBenchmark_Sparse> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::EnumsForBenchmark_Sparse>() {
  return ::edition_unittest::EnumsForBenchmark_Sparse_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::ForeignEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::ForeignEnum>() {
  return ::edition_unittest::ForeignEnum_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestReservedEnumFields> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestReservedEnumFields>() {
  return ::edition_unittest::TestReservedEnumFields_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestEnumWithDupValue> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestEnumWithDupValue>() {
  return ::edition_unittest::TestEnumWithDupValue_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::TestSparseEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::TestSparseEnum>() {
  return ::edition_unittest::TestSparseEnum_descriptor();
}
template <>
struct is_proto_enum<::edition_unittest::VeryLargeEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::edition_unittest::VeryLargeEnum>() {
  return ::edition_unittest::VeryLargeEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fedition_5funittest_2eproto_2epb_2eh
