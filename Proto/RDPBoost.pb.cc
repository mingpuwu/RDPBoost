// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: RDPBoost.proto
// Protobuf C++ Version: 5.29.0-dev

#include "RDPBoost.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr VideoMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        width_{0u},
        height_{0u},
        frame_rate_{0u},
        bit_rate_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VideoMessage::VideoMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VideoMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoMessageDefaultTypeInternal() {}
  union {
    VideoMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoMessageDefaultTypeInternal _VideoMessage_default_instance_;

inline constexpr MouseMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0u},
        y_{0u},
        button_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MouseMessage::MouseMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MouseMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MouseMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MouseMessageDefaultTypeInternal() {}
  union {
    MouseMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MouseMessageDefaultTypeInternal _MouseMessage_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::Message_DataType >(0)},
        data_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_RDPBoost_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_RDPBoost_2eproto = nullptr;
const ::uint32_t
    TableStruct_RDPBoost_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::VideoMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::VideoMessage, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::VideoMessage, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::VideoMessage, _impl_.frame_rate_),
        PROTOBUF_FIELD_OFFSET(::VideoMessage, _impl_.bit_rate_),
        PROTOBUF_FIELD_OFFSET(::VideoMessage, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MouseMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MouseMessage, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::MouseMessage, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::MouseMessage, _impl_.button_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Message, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::Message, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Message, _impl_.type_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::Message, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::VideoMessage)},
        {13, -1, -1, sizeof(::MouseMessage)},
        {24, -1, -1, sizeof(::Message)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_VideoMessage_default_instance_._instance,
    &::_MouseMessage_default_instance_._instance,
    &::_Message_default_instance_._instance,
};
const char descriptor_table_protodef_RDPBoost_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016RDPBoost.proto\"a\n\014VideoMessage\022\r\n\005widt"
    "h\030\001 \001(\r\022\016\n\006height\030\002 \001(\r\022\022\n\nframe_rate\030\003 "
    "\001(\r\022\020\n\010bit_rate\030\004 \001(\r\022\014\n\004data\030\005 \001(\014\"4\n\014M"
    "ouseMessage\022\t\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\r\022\016\n\006but"
    "ton\030\003 \001(\r\"\263\001\n\007Message\022\037\n\004type\030\001 \001(\0162\021.Me"
    "ssage.DataType\022%\n\014VideMessageI\030\002 \001(\0132\r.V"
    "ideoMessageH\000\022&\n\rMouseMessageI\030\003 \001(\0132\r.M"
    "ouseMessageH\000\"0\n\010DataType\022\021\n\rVIDEO_MESSA"
    "GE\020\000\022\021\n\rMOUSE_MESSAGE\020\001B\006\n\004datab\006proto3"
};
static ::absl::once_flag descriptor_table_RDPBoost_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_RDPBoost_2eproto = {
    false,
    false,
    359,
    descriptor_table_protodef_RDPBoost_2eproto,
    "RDPBoost.proto",
    &descriptor_table_RDPBoost_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_RDPBoost_2eproto::offsets,
    file_level_enum_descriptors_RDPBoost_2eproto,
    file_level_service_descriptors_RDPBoost_2eproto,
};
const ::google::protobuf::EnumDescriptor* Message_DataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_RDPBoost_2eproto);
  return file_level_enum_descriptors_RDPBoost_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Message_DataType_internal_data_[] = {
    131072u, 0u, };
bool Message_DataType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message_DataType Message::VIDEO_MESSAGE;
constexpr Message_DataType Message::MOUSE_MESSAGE;
constexpr Message_DataType Message::DataType_MIN;
constexpr Message_DataType Message::DataType_MAX;
constexpr int Message::DataType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class VideoMessage::_Internal {
 public:
};

VideoMessage::VideoMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:VideoMessage)
}
inline PROTOBUF_NDEBUG_INLINE VideoMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::VideoMessage& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

VideoMessage::VideoMessage(
    ::google::protobuf::Arena* arena,
    const VideoMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VideoMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, bit_rate_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::bit_rate_));

  // @@protoc_insertion_point(copy_constructor:VideoMessage)
}
inline PROTOBUF_NDEBUG_INLINE VideoMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void VideoMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, bit_rate_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::bit_rate_));
}
VideoMessage::~VideoMessage() {
  // @@protoc_insertion_point(destructor:VideoMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    VideoMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_VideoMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &VideoMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<VideoMessage>(),
            ::google::protobuf::Message::GetNewImpl<VideoMessage>(),
            ::google::protobuf::Message::GetClearImpl<VideoMessage>(), &VideoMessage::ByteSizeLong,
                &VideoMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_._cached_size_),
            false,
        },
        &VideoMessage::kDescriptorMethods,
        &descriptor_table_RDPBoost_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* VideoMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> VideoMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::VideoMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoMessage, _impl_.width_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.width_)}},
    // uint32 height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoMessage, _impl_.height_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.height_)}},
    // uint32 frame_rate = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoMessage, _impl_.frame_rate_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.frame_rate_)}},
    // uint32 bit_rate = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoMessage, _impl_.bit_rate_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.bit_rate_)}},
    // bytes data = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 width = 1;
    {PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 height = 2;
    {PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 frame_rate = 3;
    {PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.frame_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 bit_rate = 4;
    {PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.bit_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes data = 5;
    {PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void VideoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:VideoMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bit_rate_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.bit_rate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VideoMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VideoMessage& this_ = static_cast<const VideoMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VideoMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VideoMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:VideoMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 width = 1;
          if (this_._internal_width() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_width(), target);
          }

          // uint32 height = 2;
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_height(), target);
          }

          // uint32 frame_rate = 3;
          if (this_._internal_frame_rate() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_frame_rate(), target);
          }

          // uint32 bit_rate = 4;
          if (this_._internal_bit_rate() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_bit_rate(), target);
          }

          // bytes data = 5;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:VideoMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VideoMessage::ByteSizeLong(const MessageLite& base) {
          const VideoMessage& this_ = static_cast<const VideoMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VideoMessage::ByteSizeLong() const {
          const VideoMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:VideoMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes data = 5;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // uint32 width = 1;
            if (this_._internal_width() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_width());
            }
            // uint32 height = 2;
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_height());
            }
            // uint32 frame_rate = 3;
            if (this_._internal_frame_rate() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_frame_rate());
            }
            // uint32 bit_rate = 4;
            if (this_._internal_bit_rate() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bit_rate());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VideoMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VideoMessage*>(&to_msg);
  auto& from = static_cast<const VideoMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:VideoMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_width() != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_frame_rate() != 0) {
    _this->_impl_.frame_rate_ = from._impl_.frame_rate_;
  }
  if (from._internal_bit_rate() != 0) {
    _this->_impl_.bit_rate_ = from._impl_.bit_rate_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoMessage::CopyFrom(const VideoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VideoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VideoMessage::InternalSwap(VideoMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.bit_rate_)
      + sizeof(VideoMessage::_impl_.bit_rate_)
      - PROTOBUF_FIELD_OFFSET(VideoMessage, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata VideoMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MouseMessage::_Internal {
 public:
};

MouseMessage::MouseMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MouseMessage)
}
MouseMessage::MouseMessage(
    ::google::protobuf::Arena* arena, const MouseMessage& from)
    : MouseMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MouseMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MouseMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, button_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::button_));
}
MouseMessage::~MouseMessage() {
  // @@protoc_insertion_point(destructor:MouseMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MouseMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MouseMessage::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MouseMessage_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MouseMessage::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MouseMessage>(),
            ::google::protobuf::Message::GetNewImpl<MouseMessage>(),
            ::google::protobuf::Message::GetClearImpl<MouseMessage>(), &MouseMessage::ByteSizeLong,
                &MouseMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_._cached_size_),
            false,
        },
        &MouseMessage::kDescriptorMethods,
        &descriptor_table_RDPBoost_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MouseMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MouseMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MouseMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseMessage, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_.x_)}},
    // uint32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseMessage, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_.y_)}},
    // uint32 button = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseMessage, _impl_.button_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_.button_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 button = 3;
    {PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_.button_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MouseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MouseMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.button_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.button_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MouseMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MouseMessage& this_ = static_cast<const MouseMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MouseMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MouseMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MouseMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 x = 1;
          if (this_._internal_x() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_x(), target);
          }

          // uint32 y = 2;
          if (this_._internal_y() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_y(), target);
          }

          // uint32 button = 3;
          if (this_._internal_button() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_button(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MouseMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MouseMessage::ByteSizeLong(const MessageLite& base) {
          const MouseMessage& this_ = static_cast<const MouseMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MouseMessage::ByteSizeLong() const {
          const MouseMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MouseMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 x = 1;
            if (this_._internal_x() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_x());
            }
            // uint32 y = 2;
            if (this_._internal_y() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_y());
            }
            // uint32 button = 3;
            if (this_._internal_button() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_button());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MouseMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MouseMessage*>(&to_msg);
  auto& from = static_cast<const MouseMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MouseMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (from._internal_y() != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (from._internal_button() != 0) {
    _this->_impl_.button_ = from._impl_.button_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MouseMessage::CopyFrom(const MouseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MouseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MouseMessage::InternalSwap(MouseMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_.button_)
      + sizeof(MouseMessage::_impl_.button_)
      - PROTOBUF_FIELD_OFFSET(MouseMessage, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata MouseMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::Message, _impl_._oneof_case_);
};

void Message::set_allocated_videmessagei(::VideoMessage* videmessagei) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (videmessagei) {
    ::google::protobuf::Arena* submessage_arena = videmessagei->GetArena();
    if (message_arena != submessage_arena) {
      videmessagei = ::google::protobuf::internal::GetOwnedMessage(message_arena, videmessagei, submessage_arena);
    }
    set_has_videmessagei();
    _impl_.data_.videmessagei_ = videmessagei;
  }
  // @@protoc_insertion_point(field_set_allocated:Message.VideMessageI)
}
void Message::set_allocated_mousemessagei(::MouseMessage* mousemessagei) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (mousemessagei) {
    ::google::protobuf::Arena* submessage_arena = mousemessagei->GetArena();
    if (message_arena != submessage_arena) {
      mousemessagei = ::google::protobuf::internal::GetOwnedMessage(message_arena, mousemessagei, submessage_arena);
    }
    set_has_mousemessagei();
    _impl_.data_.mousemessagei_ = mousemessagei;
  }
  // @@protoc_insertion_point(field_set_allocated:Message.MouseMessageI)
}
Message::Message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Message& from_msg)
      : data_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kVideMessageI:
        _impl_.data_.videmessagei_ = ::google::protobuf::Message::CopyConstruct<::VideoMessage>(arena, *from._impl_.data_.videmessagei_);
        break;
      case kMouseMessageI:
        _impl_.data_.mousemessagei_ = ::google::protobuf::Message::CopyConstruct<::MouseMessage>(arena, *from._impl_.data_.mousemessagei_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
  _impl_.~Impl_();
}

void Message::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (data_case()) {
    case kVideMessageI: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.videmessagei_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.videmessagei_);
      }
      break;
    }
    case kMouseMessageI: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.mousemessagei_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.mousemessagei_);
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Message::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Message_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Message::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Message>(),
            ::google::protobuf::Message::GetNewImpl<Message>(),
            ::google::protobuf::Message::GetClearImpl<Message>(), &Message::ByteSizeLong,
                &Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
            false,
        },
        &Message::kDescriptorMethods,
        &descriptor_table_RDPBoost_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 0, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Message.DataType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Message.DataType type = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .VideoMessage VideMessageI = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.data_.videmessagei_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MouseMessage MouseMessageI = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.data_.mousemessagei_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::VideoMessage>()},
    {::_pbi::TcParser::GetTable<::MouseMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  clear_data();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .Message.DataType type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          switch (this_.data_case()) {
            case kVideMessageI: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.data_.videmessagei_, this_._impl_.data_.videmessagei_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMouseMessageI: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.data_.mousemessagei_, this_._impl_.data_.mousemessagei_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Message::ByteSizeLong(const MessageLite& base) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Message::ByteSizeLong() const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .Message.DataType type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          switch (this_.data_case()) {
            // .VideoMessage VideMessageI = 2;
            case kVideMessageI: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_.videmessagei_);
              break;
            }
            // .MouseMessage MouseMessageI = 3;
            case kMouseMessageI: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_.mousemessagei_);
              break;
            }
            case DATA_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kVideMessageI: {
        if (oneof_needs_init) {
          _this->_impl_.data_.videmessagei_ =
              ::google::protobuf::Message::CopyConstruct<::VideoMessage>(arena, *from._impl_.data_.videmessagei_);
        } else {
          _this->_impl_.data_.videmessagei_->MergeFrom(from._internal_videmessagei());
        }
        break;
      }
      case kMouseMessageI: {
        if (oneof_needs_init) {
          _this->_impl_.data_.mousemessagei_ =
              ::google::protobuf::Message::CopyConstruct<::MouseMessage>(arena, *from._impl_.data_.mousemessagei_);
        } else {
          _this->_impl_.data_.mousemessagei_->MergeFrom(from._internal_mousemessagei());
        }
        break;
      }
      case DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_RDPBoost_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
