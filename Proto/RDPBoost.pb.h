// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: RDPBoost.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_RDPBoost_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_RDPBoost_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_RDPBoost_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_RDPBoost_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_RDPBoost_2eproto;
class Message;
struct MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class MouseMessage;
struct MouseMessageDefaultTypeInternal;
extern MouseMessageDefaultTypeInternal _MouseMessage_default_instance_;
class VideoMessage;
struct VideoMessageDefaultTypeInternal;
extern VideoMessageDefaultTypeInternal _VideoMessage_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum Message_DataType : int {
  Message_DataType_VIDEO_MESSAGE = 0,
  Message_DataType_MOUSE_MESSAGE = 1,
  Message_DataType_Message_DataType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Message_DataType_Message_DataType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Message_DataType_IsValid(int value);
extern const uint32_t Message_DataType_internal_data_[];
constexpr Message_DataType Message_DataType_DataType_MIN = static_cast<Message_DataType>(0);
constexpr Message_DataType Message_DataType_DataType_MAX = static_cast<Message_DataType>(1);
constexpr int Message_DataType_DataType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Message_DataType_descriptor();
template <typename T>
const std::string& Message_DataType_Name(T value) {
  static_assert(std::is_same<T, Message_DataType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DataType_Name().");
  return Message_DataType_Name(static_cast<Message_DataType>(value));
}
template <>
inline const std::string& Message_DataType_Name(Message_DataType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Message_DataType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool Message_DataType_Parse(absl::string_view name, Message_DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_DataType>(
      Message_DataType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VideoMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:VideoMessage) */ {
 public:
  inline VideoMessage() : VideoMessage(nullptr) {}
  ~VideoMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VideoMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline VideoMessage(const VideoMessage& from) : VideoMessage(nullptr, from) {}
  inline VideoMessage(VideoMessage&& from) noexcept
      : VideoMessage(nullptr, std::move(from)) {}
  inline VideoMessage& operator=(const VideoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoMessage& operator=(VideoMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VideoMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const VideoMessage* internal_default_instance() {
    return reinterpret_cast<const VideoMessage*>(
        &_VideoMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(VideoMessage& a, VideoMessage& b) { a.Swap(&b); }
  inline void Swap(VideoMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VideoMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<VideoMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VideoMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VideoMessage& from) { VideoMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VideoMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "VideoMessage"; }

 protected:
  explicit VideoMessage(::google::protobuf::Arena* arena);
  VideoMessage(::google::protobuf::Arena* arena, const VideoMessage& from);
  VideoMessage(::google::protobuf::Arena* arena, VideoMessage&& from) noexcept
      : VideoMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 5,
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
    kFrameRateFieldNumber = 3,
    kBitRateFieldNumber = 4,
  };
  // bytes data = 5;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint32 width = 1;
  void clear_width() ;
  ::uint32_t width() const;
  void set_width(::uint32_t value);

  private:
  ::uint32_t _internal_width() const;
  void _internal_set_width(::uint32_t value);

  public:
  // uint32 height = 2;
  void clear_height() ;
  ::uint32_t height() const;
  void set_height(::uint32_t value);

  private:
  ::uint32_t _internal_height() const;
  void _internal_set_height(::uint32_t value);

  public:
  // uint32 frame_rate = 3;
  void clear_frame_rate() ;
  ::uint32_t frame_rate() const;
  void set_frame_rate(::uint32_t value);

  private:
  ::uint32_t _internal_frame_rate() const;
  void _internal_set_frame_rate(::uint32_t value);

  public:
  // uint32 bit_rate = 4;
  void clear_bit_rate() ;
  ::uint32_t bit_rate() const;
  void set_bit_rate(::uint32_t value);

  private:
  ::uint32_t _internal_bit_rate() const;
  void _internal_set_bit_rate(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:VideoMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VideoMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VideoMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint32_t width_;
    ::uint32_t height_;
    ::uint32_t frame_rate_;
    ::uint32_t bit_rate_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RDPBoost_2eproto;
};
// -------------------------------------------------------------------

class MouseMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MouseMessage) */ {
 public:
  inline MouseMessage() : MouseMessage(nullptr) {}
  ~MouseMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MouseMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline MouseMessage(const MouseMessage& from) : MouseMessage(nullptr, from) {}
  inline MouseMessage(MouseMessage&& from) noexcept
      : MouseMessage(nullptr, std::move(from)) {}
  inline MouseMessage& operator=(const MouseMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MouseMessage& operator=(MouseMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MouseMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const MouseMessage* internal_default_instance() {
    return reinterpret_cast<const MouseMessage*>(
        &_MouseMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MouseMessage& a, MouseMessage& b) { a.Swap(&b); }
  inline void Swap(MouseMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MouseMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MouseMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MouseMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MouseMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MouseMessage& from) { MouseMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MouseMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MouseMessage"; }

 protected:
  explicit MouseMessage(::google::protobuf::Arena* arena);
  MouseMessage(::google::protobuf::Arena* arena, const MouseMessage& from);
  MouseMessage(::google::protobuf::Arena* arena, MouseMessage&& from) noexcept
      : MouseMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kButtonFieldNumber = 3,
  };
  // uint32 x = 1;
  void clear_x() ;
  ::uint32_t x() const;
  void set_x(::uint32_t value);

  private:
  ::uint32_t _internal_x() const;
  void _internal_set_x(::uint32_t value);

  public:
  // uint32 y = 2;
  void clear_y() ;
  ::uint32_t y() const;
  void set_y(::uint32_t value);

  private:
  ::uint32_t _internal_y() const;
  void _internal_set_y(::uint32_t value);

  public:
  // uint32 button = 3;
  void clear_button() ;
  ::uint32_t button() const;
  void set_button(::uint32_t value);

  private:
  ::uint32_t _internal_button() const;
  void _internal_set_button(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MouseMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MouseMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MouseMessage& from_msg);
    ::uint32_t x_;
    ::uint32_t y_;
    ::uint32_t button_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RDPBoost_2eproto;
};
// -------------------------------------------------------------------

class Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Message) */ {
 public:
  inline Message() : Message(nullptr) {}
  ~Message() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message(const Message& from) : Message(nullptr, from) {}
  inline Message(Message&& from) noexcept
      : Message(nullptr, std::move(from)) {}
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message& operator=(Message&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message& default_instance() {
    return *internal_default_instance();
  }
  enum DataCase {
    kVideMessageI = 2,
    kMouseMessageI = 3,
    DATA_NOT_SET = 0,
  };
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
        &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Message& a, Message& b) { a.Swap(&b); }
  inline void Swap(Message* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message& from) { Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Message"; }

 protected:
  explicit Message(::google::protobuf::Arena* arena);
  Message(::google::protobuf::Arena* arena, const Message& from);
  Message(::google::protobuf::Arena* arena, Message&& from) noexcept
      : Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DataType = Message_DataType;
  static constexpr DataType VIDEO_MESSAGE = Message_DataType_VIDEO_MESSAGE;
  static constexpr DataType MOUSE_MESSAGE = Message_DataType_MOUSE_MESSAGE;
  static inline bool DataType_IsValid(int value) {
    return Message_DataType_IsValid(value);
  }
  static constexpr DataType DataType_MIN = Message_DataType_DataType_MIN;
  static constexpr DataType DataType_MAX = Message_DataType_DataType_MAX;
  static constexpr int DataType_ARRAYSIZE = Message_DataType_DataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
    return Message_DataType_descriptor();
  }
  template <typename T>
  static inline const std::string& DataType_Name(T value) {
    return Message_DataType_Name(value);
  }
  static inline bool DataType_Parse(absl::string_view name, DataType* value) {
    return Message_DataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kVideMessageIFieldNumber = 2,
    kMouseMessageIFieldNumber = 3,
  };
  // .Message.DataType type = 1;
  void clear_type() ;
  ::Message_DataType type() const;
  void set_type(::Message_DataType value);

  private:
  ::Message_DataType _internal_type() const;
  void _internal_set_type(::Message_DataType value);

  public:
  // .VideoMessage VideMessageI = 2;
  bool has_videmessagei() const;
  private:
  bool _internal_has_videmessagei() const;

  public:
  void clear_videmessagei() ;
  const ::VideoMessage& videmessagei() const;
  PROTOBUF_NODISCARD ::VideoMessage* release_videmessagei();
  ::VideoMessage* mutable_videmessagei();
  void set_allocated_videmessagei(::VideoMessage* value);
  void unsafe_arena_set_allocated_videmessagei(::VideoMessage* value);
  ::VideoMessage* unsafe_arena_release_videmessagei();

  private:
  const ::VideoMessage& _internal_videmessagei() const;
  ::VideoMessage* _internal_mutable_videmessagei();

  public:
  // .MouseMessage MouseMessageI = 3;
  bool has_mousemessagei() const;
  private:
  bool _internal_has_mousemessagei() const;

  public:
  void clear_mousemessagei() ;
  const ::MouseMessage& mousemessagei() const;
  PROTOBUF_NODISCARD ::MouseMessage* release_mousemessagei();
  ::MouseMessage* mutable_mousemessagei();
  void set_allocated_mousemessagei(::MouseMessage* value);
  void unsafe_arena_set_allocated_mousemessagei(::MouseMessage* value);
  ::MouseMessage* unsafe_arena_release_mousemessagei();

  private:
  const ::MouseMessage& _internal_mousemessagei() const;
  ::MouseMessage* _internal_mutable_mousemessagei();

  public:
  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:Message)
 private:
  class _Internal;
  void set_has_videmessagei();
  void set_has_mousemessagei();
  inline bool has_data() const;
  inline void clear_has_data();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Message& from_msg);
    int type_;
    union DataUnion {
      constexpr DataUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::VideoMessage* videmessagei_;
      ::MouseMessage* mousemessagei_;
    } data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RDPBoost_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VideoMessage

// uint32 width = 1;
inline void VideoMessage::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0u;
}
inline ::uint32_t VideoMessage::width() const {
  // @@protoc_insertion_point(field_get:VideoMessage.width)
  return _internal_width();
}
inline void VideoMessage::set_width(::uint32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:VideoMessage.width)
}
inline ::uint32_t VideoMessage::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void VideoMessage::_internal_set_width(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// uint32 height = 2;
inline void VideoMessage::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0u;
}
inline ::uint32_t VideoMessage::height() const {
  // @@protoc_insertion_point(field_get:VideoMessage.height)
  return _internal_height();
}
inline void VideoMessage::set_height(::uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:VideoMessage.height)
}
inline ::uint32_t VideoMessage::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void VideoMessage::_internal_set_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// uint32 frame_rate = 3;
inline void VideoMessage::clear_frame_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_rate_ = 0u;
}
inline ::uint32_t VideoMessage::frame_rate() const {
  // @@protoc_insertion_point(field_get:VideoMessage.frame_rate)
  return _internal_frame_rate();
}
inline void VideoMessage::set_frame_rate(::uint32_t value) {
  _internal_set_frame_rate(value);
  // @@protoc_insertion_point(field_set:VideoMessage.frame_rate)
}
inline ::uint32_t VideoMessage::_internal_frame_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_rate_;
}
inline void VideoMessage::_internal_set_frame_rate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_rate_ = value;
}

// uint32 bit_rate = 4;
inline void VideoMessage::clear_bit_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_rate_ = 0u;
}
inline ::uint32_t VideoMessage::bit_rate() const {
  // @@protoc_insertion_point(field_get:VideoMessage.bit_rate)
  return _internal_bit_rate();
}
inline void VideoMessage::set_bit_rate(::uint32_t value) {
  _internal_set_bit_rate(value);
  // @@protoc_insertion_point(field_set:VideoMessage.bit_rate)
}
inline ::uint32_t VideoMessage::_internal_bit_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bit_rate_;
}
inline void VideoMessage::_internal_set_bit_rate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_rate_ = value;
}

// bytes data = 5;
inline void VideoMessage::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& VideoMessage::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:VideoMessage.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VideoMessage::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:VideoMessage.data)
}
inline std::string* VideoMessage::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:VideoMessage.data)
  return _s;
}
inline const std::string& VideoMessage::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void VideoMessage::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* VideoMessage::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* VideoMessage::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:VideoMessage.data)
  return _impl_.data_.Release();
}
inline void VideoMessage::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:VideoMessage.data)
}

// -------------------------------------------------------------------

// MouseMessage

// uint32 x = 1;
inline void MouseMessage::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0u;
}
inline ::uint32_t MouseMessage::x() const {
  // @@protoc_insertion_point(field_get:MouseMessage.x)
  return _internal_x();
}
inline void MouseMessage::set_x(::uint32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:MouseMessage.x)
}
inline ::uint32_t MouseMessage::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void MouseMessage::_internal_set_x(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// uint32 y = 2;
inline void MouseMessage::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0u;
}
inline ::uint32_t MouseMessage::y() const {
  // @@protoc_insertion_point(field_get:MouseMessage.y)
  return _internal_y();
}
inline void MouseMessage::set_y(::uint32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:MouseMessage.y)
}
inline ::uint32_t MouseMessage::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void MouseMessage::_internal_set_y(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// uint32 button = 3;
inline void MouseMessage::clear_button() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.button_ = 0u;
}
inline ::uint32_t MouseMessage::button() const {
  // @@protoc_insertion_point(field_get:MouseMessage.button)
  return _internal_button();
}
inline void MouseMessage::set_button(::uint32_t value) {
  _internal_set_button(value);
  // @@protoc_insertion_point(field_set:MouseMessage.button)
}
inline ::uint32_t MouseMessage::_internal_button() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.button_;
}
inline void MouseMessage::_internal_set_button(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.button_ = value;
}

// -------------------------------------------------------------------

// Message

// .Message.DataType type = 1;
inline void Message::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::Message_DataType Message::type() const {
  // @@protoc_insertion_point(field_get:Message.type)
  return _internal_type();
}
inline void Message::set_type(::Message_DataType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Message.type)
}
inline ::Message_DataType Message::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Message_DataType>(_impl_.type_);
}
inline void Message::_internal_set_type(::Message_DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .VideoMessage VideMessageI = 2;
inline bool Message::has_videmessagei() const {
  return data_case() == kVideMessageI;
}
inline bool Message::_internal_has_videmessagei() const {
  return data_case() == kVideMessageI;
}
inline void Message::set_has_videmessagei() {
  _impl_._oneof_case_[0] = kVideMessageI;
}
inline void Message::clear_videmessagei() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() == kVideMessageI) {
    if (GetArena() == nullptr) {
      delete _impl_.data_.videmessagei_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.videmessagei_);
    }
    clear_has_data();
  }
}
inline ::VideoMessage* Message::release_videmessagei() {
  // @@protoc_insertion_point(field_release:Message.VideMessageI)
  if (data_case() == kVideMessageI) {
    clear_has_data();
    auto* temp = _impl_.data_.videmessagei_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.data_.videmessagei_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::VideoMessage& Message::_internal_videmessagei() const {
  return data_case() == kVideMessageI ? *_impl_.data_.videmessagei_ : reinterpret_cast<::VideoMessage&>(::_VideoMessage_default_instance_);
}
inline const ::VideoMessage& Message::videmessagei() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Message.VideMessageI)
  return _internal_videmessagei();
}
inline ::VideoMessage* Message::unsafe_arena_release_videmessagei() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Message.VideMessageI)
  if (data_case() == kVideMessageI) {
    clear_has_data();
    auto* temp = _impl_.data_.videmessagei_;
    _impl_.data_.videmessagei_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Message::unsafe_arena_set_allocated_videmessagei(::VideoMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_data();
  if (value) {
    set_has_videmessagei();
    _impl_.data_.videmessagei_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Message.VideMessageI)
}
inline ::VideoMessage* Message::_internal_mutable_videmessagei() {
  if (data_case() != kVideMessageI) {
    clear_data();
    set_has_videmessagei();
    _impl_.data_.videmessagei_ =
        ::google::protobuf::Message::DefaultConstruct<::VideoMessage>(GetArena());
  }
  return _impl_.data_.videmessagei_;
}
inline ::VideoMessage* Message::mutable_videmessagei() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::VideoMessage* _msg = _internal_mutable_videmessagei();
  // @@protoc_insertion_point(field_mutable:Message.VideMessageI)
  return _msg;
}

// .MouseMessage MouseMessageI = 3;
inline bool Message::has_mousemessagei() const {
  return data_case() == kMouseMessageI;
}
inline bool Message::_internal_has_mousemessagei() const {
  return data_case() == kMouseMessageI;
}
inline void Message::set_has_mousemessagei() {
  _impl_._oneof_case_[0] = kMouseMessageI;
}
inline void Message::clear_mousemessagei() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() == kMouseMessageI) {
    if (GetArena() == nullptr) {
      delete _impl_.data_.mousemessagei_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.mousemessagei_);
    }
    clear_has_data();
  }
}
inline ::MouseMessage* Message::release_mousemessagei() {
  // @@protoc_insertion_point(field_release:Message.MouseMessageI)
  if (data_case() == kMouseMessageI) {
    clear_has_data();
    auto* temp = _impl_.data_.mousemessagei_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.data_.mousemessagei_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::MouseMessage& Message::_internal_mousemessagei() const {
  return data_case() == kMouseMessageI ? *_impl_.data_.mousemessagei_ : reinterpret_cast<::MouseMessage&>(::_MouseMessage_default_instance_);
}
inline const ::MouseMessage& Message::mousemessagei() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Message.MouseMessageI)
  return _internal_mousemessagei();
}
inline ::MouseMessage* Message::unsafe_arena_release_mousemessagei() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Message.MouseMessageI)
  if (data_case() == kMouseMessageI) {
    clear_has_data();
    auto* temp = _impl_.data_.mousemessagei_;
    _impl_.data_.mousemessagei_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Message::unsafe_arena_set_allocated_mousemessagei(::MouseMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_data();
  if (value) {
    set_has_mousemessagei();
    _impl_.data_.mousemessagei_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Message.MouseMessageI)
}
inline ::MouseMessage* Message::_internal_mutable_mousemessagei() {
  if (data_case() != kMouseMessageI) {
    clear_data();
    set_has_mousemessagei();
    _impl_.data_.mousemessagei_ =
        ::google::protobuf::Message::DefaultConstruct<::MouseMessage>(GetArena());
  }
  return _impl_.data_.mousemessagei_;
}
inline ::MouseMessage* Message::mutable_mousemessagei() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::MouseMessage* _msg = _internal_mutable_mousemessagei();
  // @@protoc_insertion_point(field_mutable:Message.MouseMessageI)
  return _msg;
}

inline bool Message::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void Message::clear_has_data() {
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}
inline Message::DataCase Message::data_case() const {
  return Message::DataCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Message_DataType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Message_DataType>() {
  return ::Message_DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_RDPBoost_2eproto_2epb_2eh
